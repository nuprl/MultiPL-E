language: rs
name: HumanEval_51_remove_vowels
results:
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpkd389iy_.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' || c != 'A' || c != 'E' || c != 'I' || c\
    \ != 'O' || c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpaf7_bmd4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpuyoabw29.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8isnde83.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !is_vowel(*c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdd27t7ng.rs:13:57\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !is_vowel(*c)).collect()\n\
    \   |                                                         ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpkd389iy_.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8isnde83.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpeq5ywz0b.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            continue;\n        }\n        if c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' {\n            continue;\n        }\n        result.push(c);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n   \
    \ assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp873wydq8.rs:29:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8isnde83.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpcycrn8lh.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !is_vowel(c) {\n \
    \           result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp16vej4dv.rs:15:67\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !is_vowel(c)\
    \ {\n   |                                                                   ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if !is_vowel(c) {\n           \
    \ result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpd_1ksaql.rs:18:13\n\
    \   |\n18 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' || c != 'A' || c != 'E' || c != 'I' || c\
    \ != 'O' || c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpaf7_bmd4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpeq5ywz0b.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' &&\
    \ c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() {\n            continue;\n        }\n        if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"bcdfghjklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpmn3dds7c.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmph6_z9yva.rs:13:85\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                           ^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpkd389iy_.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() || !c.is_ascii_digit(10) || !c.is_ascii_alphanumeric()\
    \ || !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit(10)\
    \ || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit(10) || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() || !c.is_ascii_digit(10) || !c.is_ascii_alphanumeric()\
    \ || !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit(10)\
    \ || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit(10) || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() || !c.is_ascii_digit(10) || !c.is_ascii_alphanumeric()\
    \ || !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit(10)\
    \ || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit(10) || !c.is_as\n}\n\nfn main() {\n    let candidate =\
    \ remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmp3ban3mtf.rs:13:24\n\
    \   |\n12 | fn remove_vowels(text: String) -> String {\n   |                 \
    \                         - closing delimiter possibly meant for this\n13 |  \
    \   text.chars().filter(|c| !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() || !c.is_ascii_digit(10) || !c...\n   |         \
    \               ^ unclosed delimiter\n14 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \    --> /tmp/tmp3ban3mtf.rs:13:114\n     |\n13   | ...ii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit(10) || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase()\
    \ || !c.is_a...\n     |                                                    ^^^^^^^^^^^^^^\
    \ -- supplied 1 argument\n     |                                             \
    \       |\n     |                                                    expected\
    \ 0 arguments\n     |\nnote: associated function defined here\n\nerror[E0061]:\
    \ this function takes 0 arguments but 1 argument was supplied\n    --> /tmp/tmp3ban3mtf.rs:13:223\n\
    \     |\n13   | ...ii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit(10)\
    \ || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase() || !c.is_a...\n   \
    \  |                                                    ^^^^^^^^^^^^^^ -- supplied\
    \ 1 argument\n     |                                                    |\n  \
    \   |                                                    expected 0 arguments\n\
    \     |\nnote: associated function defined here\n\nerror[E0061]: this function\
    \ takes 0 arguments but 1 argument was supplied\n    --> /tmp/tmp3ban3mtf.rs:13:332\n\
    \     |\n13   | ...ii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit(10)\
    \ || !c.is_ascii_alphanumeric() || !c.is_ascii_lowercase() || !c.is_a...\n   \
    \  |                                                    ^^^^^^^^^^^^^^ -- supplied\
    \ 1 argument\n     |                                                    |\n  \
    \   |                                                    expected 0 arguments\n\
    \  "
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  match c {\n            'a' | 'e' | 'i' | 'o' | 'u' | 'A' | 'E' | 'I' | 'O'\
    \ | 'U' => {}\n            _ => result.push(c),\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8isnde83.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpeq5ywz0b.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' {\n            continue;\n        }\n        result.push(c);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"bcdfghjklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmphex2k6g4.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ {\n            continue;\n        }\n        match c {\n            'a' | 'e'\
    \ | 'i' | 'o' | 'u' | 'A' | 'E' | 'I' | 'O' | 'U' => continue,\n            _\
    \ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp669y5ivg.rs:29:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() {\n            continue;\n        }\n        if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"bcdfghjklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpmn3dds7c.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpuyoabw29.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpeq5ywz0b.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpeq5ywz0b.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpawwo87vi.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let\
    \ candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpnwjqr9nx.rs:13:107\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !is_vowel(*c)).collect()\n   |                   \
    \                                                                            \
    \            ^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpxo1qboh6.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8isnde83.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7oduaeml.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpj__xmyz9.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpi2ab578y.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppum20mvn.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptx5uptc4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmph76o7of3.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015749
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycg883i0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015749

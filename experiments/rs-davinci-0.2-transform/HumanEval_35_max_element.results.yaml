language: rs
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    l.iter().fold(l[0], |acc,\
    \ x| if *x > acc { *x } else { acc })\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l.iter() {\n        if *i > max {\n            max = *i;\n      \
    \  }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n   \
    \ assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2,\
    \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    /// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n \
    \   for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089

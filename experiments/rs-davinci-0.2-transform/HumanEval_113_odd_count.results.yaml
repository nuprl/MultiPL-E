language: rs
name: HumanEval_113_odd_count
results:
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut odd_count = 0;\n            for c in\
    \ s.chars() {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n       \
    \             odd_count += 1;\n                }\n            }\n            format!(\"\
    the number of odd elements {}n the str{}ng {} of the {}nput.\", odd_count, odd_count,\
    \ odd_count, odd_count)\n        })\n        .collect()\n}\n\nfn main() {\n  \
    \  let candidate = odd_count;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp179r1ubc.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp179r1ubc.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp179r1ubc.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp179r1ubc.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp179r1ubc.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp179r1ubc.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let count = s.chars().filter(|c| c.to_digit(10).unwrap()\
    \ % 2 == 1).count();\n            s.replace(\"i\", &count.to_string())\n     \
    \   })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmo6770s_.rs:20:17\n\
    \   |\n20 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmo6770s_.rs:20:25\n   |\n20 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmo6770s_.rs:21:17\n   |\n21 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmo6770s_.rs:21:25\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmo6770s_.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmo6770s_.rs:22:25\n   |\n22 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let count = s.chars().filter(|c| c.to_digit(10).unwrap()\
    \ % 2 == 1).count();\n            s.replace(\"i\", &count.to_string())\n     \
    \   })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmo6770s_.rs:20:17\n\
    \   |\n20 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmo6770s_.rs:20:25\n   |\n20 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmo6770s_.rs:21:17\n   |\n21 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmo6770s_.rs:21:25\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmo6770s_.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmo6770s_.rs:22:25\n   |\n22 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let count = s.chars().filter(|c| c.to_digit(10).unwrap()\
    \ % 2 == 1).count();\n            s.replace(\"i\", &count.to_string())\n     \
    \   })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmo6770s_.rs:20:17\n\
    \   |\n20 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmo6770s_.rs:20:25\n   |\n20 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmo6770s_.rs:21:17\n   |\n21 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmo6770s_.rs:21:25\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmo6770s_.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmo6770s_.rs:22:25\n   |\n22 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let n = s.chars().filter(|c| c.to_digit(10).unwrap()\
    \ % 2 == 1).count();\n            s.replace(\"i\", &n.to_string())\n        })\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw7lda8tq.rs:20:17\n\
    \   |\n20 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw7lda8tq.rs:20:25\n   |\n20 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw7lda8tq.rs:21:17\n   |\n21 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw7lda8tq.rs:21:25\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw7lda8tq.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw7lda8tq.rs:22:25\n   |\n22 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let n = s.chars().filter(|c| c.to_digit(10).unwrap()\
    \ % 2 == 1).count();\n            s.replace(\"i\", &n.to_string())\n        })\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw7lda8tq.rs:20:17\n\
    \   |\n20 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw7lda8tq.rs:20:25\n   |\n20 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw7lda8tq.rs:21:17\n   |\n21 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw7lda8tq.rs:21:25\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw7lda8tq.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw7lda8tq.rs:22:25\n   |\n22 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    let\
    \ mut res = Vec::new();\n    for (i, s) in lst.iter().enumerate() {\n        let\
    \ mut count = 0;\n        for c in s.chars() {\n            if c.to_digit(10).unwrap()\
    \ % 2 == 1 {\n                count += 1;\n            }\n        }\n        res.push(format!(\"\
    the number of odd elements {}n the str{}ng {} of the {}nput.\", count, i + 1,\
    \ i + 1, i + 1));\n    }\n    res\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm44gd7s_.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm44gd7s_.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm44gd7s_.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm44gd7s_.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm44gd7s_.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm44gd7s_.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    lst.iter()\n\
    \        .map(|s| {\n            let mut count = 0;\n            for c in s.chars()\
    \ {\n                if c.to_digit(10).unwrap() % 2 == 1 {\n                 \
    \   count += 1;\n                }\n            }\n            format!(\"the number\
    \ of odd elements {}n the str{}ng {} of the {}nput.\", count, count, count, count)\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb1ih_zhv.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb1ih_zhv.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb1ih_zhv.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847
- exit_code: 1
  program: "/// Given a list of strings, where each string consists of only digits,\
    \ return a list.\n/// Each element i of the output should be \"the number of odd\
    \ elements in the\n/// string i of the input.\" where all the i's should be replaced\
    \ by the number\n/// of odd digits in the i'th string of the input.\n/// >>> odd_count(vec![String::from(\"\
    1234567\")])\n/// vec![String::from(\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\")]\n/// >>> odd_count(vec![String::from(\"3\"), String::from(\"\
    11111111\")])\n/// vec![String::from(\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\"), String::from(\"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\")]\nfn odd_count(lst: Vec<String>) -> Vec<String> {\n    let\
    \ mut res = Vec::new();\n    for s in lst {\n        let mut count = 0;\n    \
    \    for c in s.chars() {\n            if c.to_digit(10).unwrap() % 2 == 1 {\n\
    \                count += 1;\n            }\n        }\n        res.push(format!(\"\
    the number of odd elements {}n the str{}ng {} of the {}nput.\", count, count,\
    \ count, count));\n    }\n    res\n}\n\nfn main() {\n    let candidate = odd_count;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvne_uin_.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvne_uin_.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvne_uin_.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvne_uin_.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvne_uin_.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvne_uin_.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747847

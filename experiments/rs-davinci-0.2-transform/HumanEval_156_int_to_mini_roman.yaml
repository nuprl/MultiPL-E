name: HumanEval_156_int_to_mini_roman
language: rs
prompt: "/// Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  /// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n/// Examples:\n\
  /// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>> int_to_mini_roman(152)\n\
  /// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n/// String::from(\"\
  cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        let roman_digit = match digit {\n            1\
    \ => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n           \
    \ 4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n          \
    \  7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n     \
    \       _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        result =\
    \ mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        i\
    \ += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        let mut digit_str = String::new();\n\
    \        match digit {\n            1 => digit_str.push('i'),\n            2 =>\
    \ digit_str.push_str(\"ii\"),\n            3 => digit_str.push_str(\"iii\"),\n\
    \            4 => digit_str.push_str(\"iv\"),\n            5 => digit_str.push('v'),\n\
    \            6 => digit_str.push_str(\"vi\"),\n            7 => digit_str.push_str(\"\
    vii\"),\n            8 => digit_str.push_str(\"viii\"),\n            9 => digit_str.push_str(\"\
    ix\"),\n            _ => (),\n        }\n        match i {\n            0 => (),\n\
    \            1 => digit_str = digit_str.replace(\"i\", \"x\"),\n            2\
    \ => digit_str = digit_str.replace(\"i\", \"c\"),\n            3 => digit_str\
    \ = digit_str.replace(\"i\", \"m\"),\n            _ => (),\n        }\n      \
    \  result = digit_str + &result;\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    while num > 0 {\n\
    \        if num >= 1000 {\n            result.push('m');\n            num -= 1000;\n\
    \        } else if num >= 900 {\n            result.push_str(\"cm\");\n      \
    \      num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', '?', '?'),\n      \
    \      _ => panic!(\"number too large\"),\n        };\n        match digit {\n\
    \            0 => (),\n            1 => result.push(ones),\n            2 => result.push_str(&[ones,\
    \ ones].iter().collect::<String>()),\n            3 => result.push_str(&[ones,\
    \ ones, ones].iter().collect::<String>()),\n            4 => result.push_str(&[ones,\
    \ fives].iter().collect::<String>()),\n            5 => result.push(fives),\n\
    \            6 => result.push_str(&[fives, ones].iter().collect::<String>()),\n\
    \            7 => result.push_str(&[fives, ones, ones].iter().collect::<String>()),\n\
    \            8 => result.push_str(&[fives, ones, ones, ones].iter().collect::<String>()),\n\
    \            9 => result.push_str(&[ones, tens].iter().collect::<String>()),\n\
    \            _ => panic!(\"number too large\"),\n        }\n        i += 1;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut number\
    \ = number;\n    while number > 0 {\n        if number >= 1000 {\n           \
    \ result.push('m');\n            number -= 1000;\n        } else if number >=\
    \ 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n  \
    \      } else if number >= 500 {\n            result.push('d');\n            number\
    \ -= 500;\n        } else if number >= 400 {\n            result.push_str(\"cd\"\
    );\n            number -= 400;\n        } else if number >= 100 {\n          \
    \  result.push('c');\n            number -= 100;\n        } else if number >=\
    \ 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n    \
    \    } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        result = format!(\"{}{}\", mini_roman_digit(digit,\
    \ i), result);\n        num /= 10;\n        i += 1;\n    }\n    result", "   \
    \ let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        if digit ==\
    \ 4 {\n            result.insert(0, ROMAN_DIGITS[i + 1]);\n            result.insert(0,\
    \ ROMAN_DIGITS[i]);\n        } else if digit == 9 {\n            result.insert(0,\
    \ ROMAN_DIGITS[i + 2]);\n            result.insert(0, ROMAN_DIGITS[i]);\n    \
    \    } else if digit >= 5 {\n            result.insert(0, ROMAN_DIGITS[i + 1]);\n\
    \            for _ in 0..digit - 5 {\n                result.insert(0, ROMAN_DIGITS[i]);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.insert(0, ROMAN_DIGITS[i]);\n            }\n        }\n        num\
    \ /= 10;\n        i += 2;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    while number > 0 {\n        if number\
    \ >= 1000 {\n            result.push('m');\n            number -= 1000;\n    \
    \    } else if number >= 900 {\n            result.push_str(\"cm\");\n       \
    \     number -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        num /= 10;\n        i +=\
    \ 1;\n    }\n    result", "    let mut result = String::new();\n    let mut num\
    \ = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit = num\
    \ % 10;\n        num /= 10;\n        let roman_digit = match digit {\n       \
    \     1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n     \
    \       4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n    \
    \        7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n\
    \            _ => \"\",\n        };\n        result = roman_digit.to_string()\
    \ + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    while num > 0 {\n        if num >= 1000\
    \ {\n            result.push('m');\n            num -= 1000;\n        } else if\
    \ num >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n\
    \        } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    while num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    while num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    while num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    while num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    while num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    while num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    while num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    while num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    while num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        if\
    \ num >= ROMAN_NUMERALS[i].0 {\n            result.push_str(ROMAN_NUMERALS[i].1);\n\
    \            num -= ROMAN_NUMERALS[i].0;\n        } else {\n            i += 1;\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n         \
    \   result.push('m');\n            num -= 1000;\n        } else if num >= 900\
    \ {\n            result.push_str(\"cm\");\n            num -= 900;\n        }\
    \ else if num >= 500 {\n            result.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            result.push_str(\"cd\");\n      \
    \      num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut roman_numerals = vec![\n        (\"m\"\
    , 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n\
    \        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"\
    xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n\
    \        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    while number > 0 {\n \
    \       for (numeral, value) in roman_numerals.iter() {\n            if number\
    \ >= *value {\n                result.push_str(numeral);\n                number\
    \ -= *value;\n                break;\n            }\n        }\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        result = match digit {\n            1 => format!(\"i{}\", result),\n\
    \            2 => format!(\"ii{}\", result),\n            3 => format!(\"iii{}\"\
    , result),\n            4 => format!(\"iv{}\", result),\n            5 => format!(\"\
    v{}\", result),\n            6 => format!(\"vi{}\", result),\n            7 =>\
    \ format!(\"vii{}\", result),\n            8 => format!(\"viii{}\", result),\n\
    \            9 => format!(\"ix{}\", result),\n            _ => result,\n     \
    \   };\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut num\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ num > 0 {\n        let digit = num % 10;\n        num /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut num = number;\n    let mut result = String::new();\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        i\
    \ += 1;\n    }\n    result", "    let mut result = String::from(\"\");\n    let\
    \ mut number = number;\n    let mut i = 0;\n    while number > 0 {\n        let\
    \ digit = number % 10;\n        number /= 10;\n        if digit == 0 {\n     \
    \       i += 1;\n            continue;\n        }\n        let mut roman = String::from(\"\
    \");\n        if digit == 4 {\n            roman.push(ROMAN_DIGITS[i][0]);\n \
    \           roman.push(ROMAN_DIGITS[i][1]);\n        } else if digit == 9 {\n\
    \            roman.push(ROMAN_DIGITS[i][0]);\n            roman.push(ROMAN_DIGITS[i\
    \ + 1][0]);\n        } else {\n            if digit >= 5 {\n                roman.push(ROMAN_DIGITS[i][1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                roman.push(ROMAN_DIGITS[i][0]);\n            }\n        }\n \
    \       result = roman + &result;\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut number = number;\n    let mut digits\
    \ = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        digits += 1;\n        result = match digit {\n            1\
    \ => format!(\"i{}\", result),\n            2 => format!(\"ii{}\", result),\n\
    \            3 => format!(\"iii{}\", result),\n            4 => format!(\"iv{}\"\
    , result),\n            5 => format!(\"v{}\", result),\n            6 => format!(\"\
    vi{}\", result),\n            7 => format!(\"vii{}\", result),\n            8\
    \ => format!(\"viii{}\", result),\n            9 => format!(\"ix{}\", result),\n\
    \            _ => result,\n        };\n        result = match digits {\n     \
    \       1 => result,\n            2 => format!(\"x{}\", result),\n           \
    \ 3 => format!(\"c{}\", result),\n            4 => format!(\"m{}\", result),\n\
    \            _ => result,\n        };\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        num /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let roman_numerals\
    \ = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (numeral, value) in roman_numerals {\n        while number >= *value\
    \ {\n            result.push_str(numeral);\n            number -= *value;\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit =\
    \ num % 10;\n        num /= 10;\n        let roman_digit = match digit {\n   \
    \         1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n \
    \           4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n\
    \            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\"\
    ,\n            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let roman_digit = match digit {\n            1 => \"\
    i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 => \"\
    iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 => \"\
    vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n            _ =>\
    \ \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut number = number;\n    let mut index = 0;\n    while number > 0 {\n\
    \        let digit = number % 10;\n        if digit > 0 {\n            result.insert_str(0,\
    \ &mini_roman_digit(digit, index));\n        }\n        number /= 10;\n      \
    \  index += 1;\n    }\n    result", "    let mut result = String::new();\n   \
    \ let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let roman_numerals = vec![\n        (1000,\
    \ \"m\"),\n        (900, \"cm\"),\n        (500, \"d\"),\n        (400, \"cd\"\
    ),\n        (100, \"c\"),\n        (90, \"xc\"),\n        (50, \"l\"),\n     \
    \   (40, \"xl\"),\n        (10, \"x\"),\n        (9, \"ix\"),\n        (5, \"\
    v\"),\n        (4, \"iv\"),\n        (1, \"i\"),\n    ];\n    for (arabic, roman)\
    \ in roman_numerals {\n        while number >= arabic {\n            result.push_str(roman);\n\
    \            number -= arabic;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        let mut roman_digit = String::new();\n\
    \        match digit {\n            1 => roman_digit.push('i'),\n            2\
    \ => roman_digit.push_str(\"ii\"),\n            3 => roman_digit.push_str(\"iii\"\
    ),\n            4 => roman_digit.push_str(\"iv\"),\n            5 => roman_digit.push('v'),\n\
    \            6 => roman_digit.push_str(\"vi\"),\n            7 => roman_digit.push_str(\"\
    vii\"),\n            8 => roman_digit.push_str(\"viii\"),\n            9 => roman_digit.push_str(\"\
    ix\"),\n            _ => (),\n        }\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        number /= 10;\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n\
    \    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut numerals = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n\
    \        (\"d\", 500),\n        (\"cd\", 400),\n        (\"c\", 100),\n      \
    \  (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\"\
    , 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n    \
    \    (\"i\", 1),\n    ];\n    while number > 0 {\n        for (numeral, value)\
    \ in numerals.iter() {\n            if number >= *value {\n                result.push_str(numeral);\n\
    \                number -= *value;\n                break;\n            }\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit =\
    \ num % 10;\n        num /= 10;\n        let (one, five, ten) = match i {\n  \
    \          0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n        \
    \    2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n            _ =>\
    \ panic!(\"Invalid number\"),\n        };\n        match digit {\n           \
    \ 1 => result.push(one),\n            2 => result.push_str(&format!(\"{}{}\",\
    \ one, one)),\n            3 => result.push_str(&format!(\"{}{}{}\", one, one,\
    \ one)),\n            4 => result.push_str(&format!(\"{}{}\", one, five)),\n \
    \           5 => result.push(five),\n            6 => result.push_str(&format!(\"\
    {}{}\", five, one)),\n            7 => result.push_str(&format!(\"{}{}{}\", five,\
    \ one, one)),\n            8 => result.push_str(&format!(\"{}{}{}{}\", five, one,\
    \ one, one)),\n            9 => result.push_str(&format!(\"{}{}\", one, ten)),\n\
    \            _ => (),\n        }\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    let mut roman = String::new();\n        if digit == 9 {\n            roman.push_str(&MINI_ROMAN_DIGITS[i\
    \ + 1]);\n            roman.push_str(&MINI_ROMAN_DIGITS[i]);\n        } else if\
    \ digit == 4 {\n            roman.push_str(&MINI_ROMAN_DIGITS[i]);\n         \
    \   roman.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n        } else {\n           \
    \ if digit >= 5 {\n                roman.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                roman.push_str(&MINI_ROMAN_DIGITS[i]);\n            }\n     \
    \   }\n        result = format!(\"{}{}\", roman, result);\n        i += 2;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let roman_digit = match digit {\n            1 => \"\
    i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 => \"\
    iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 => \"\
    vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n            _ =>\
    \ \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut index = 0;\n   \
    \ while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        let (roman_digit, roman_digit_len) = match digit {\n            1 =>\
    \ (\"i\", 1),\n            2 => (\"ii\", 2),\n            3 => (\"iii\", 3),\n\
    \            4 => (\"iv\", 2),\n            5 => (\"v\", 1),\n            6 =>\
    \ (\"vi\", 2),\n            7 => (\"vii\", 3),\n            8 => (\"viii\", 4),\n\
    \            9 => (\"ix\", 2),\n            _ => (\"\", 0),\n        };\n    \
    \    result.insert_str(index, roman_digit);\n        index += roman_digit_len;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let roman_digit = match digit {\n            1 => \"\
    i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 => \"\
    iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 => \"\
    vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n            _ =>\
    \ \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut index = 0;\n   \
    \ while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        index\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ remaining = number;\n    while remaining > 0 {\n        if remaining >= 1000\
    \ {\n            result.push('m');\n            remaining -= 1000;\n        }\
    \ else if remaining >= 900 {\n            result.push_str(\"cm\");\n         \
    \   remaining -= 900;\n        } else if remaining >= 500 {\n            result.push('d');\n\
    \            remaining -= 500;\n        } else if remaining >= 400 {\n       \
    \     result.push_str(\"cd\");\n            remaining -= 400;\n        } else\
    \ if remaining >= 100 {\n            result.push('c');\n            remaining\
    \ -= 100;\n        } else if remaining >= 90 {\n            result.push_str(\"\
    xc\");\n            remaining -= 90;\n        } else if remaining >= 50 {\n  \
    \          result.push('l');\n            remaining -= 50;\n        } else if\
    \ remaining >= 40 {\n            result.push_str(\"xl\");\n            remaining\
    \ -= 40;\n        } else if remaining >= 10 {\n            result.push('x');\n\
    \            remaining -= 10;\n        } else if remaining >= 9 {\n          \
    \  result.push_str(\"ix\");\n            remaining -= 9;\n        } else if remaining\
    \ >= 5 {\n            result.push('v');\n            remaining -= 5;\n       \
    \ } else if remaining >= 4 {\n            result.push_str(\"iv\");\n         \
    \   remaining -= 4;\n        } else if remaining >= 1 {\n            result.push('i');\n\
    \            remaining -= 1;\n        }\n    }\n    result", "    let mut num\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ num > 0 {\n        let digit = num % 10;\n        num /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut num = number;\n    let mut roman = String::new();\n    let mut i =\
    \ 0;\n    while num > 0 {\n        if num >= ROMAN_NUMERALS[i].0 {\n         \
    \   roman.push_str(ROMAN_NUMERALS[i].1);\n            num -= ROMAN_NUMERALS[i].0;\n\
    \        } else {\n            i += 1;\n        }\n    }\n    roman", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    let (ones, fives, tens) = match i {\n            0 => ('i', 'v', 'x'),\n\
    \            1 => ('x', 'l', 'c'),\n            2 => ('c', 'd', 'm'),\n      \
    \      3 => ('m', 'v', 'x'),\n            _ => (' ', ' ', ' '),\n        };\n\
    \        match digit {\n            1 => result.push(ones),\n            2 =>\
    \ result.push_str(&format!(\"{}{}\", ones, ones)),\n            3 => result.push_str(&format!(\"\
    {}{}{}\", ones, ones, ones)),\n            4 => result.push_str(&format!(\"{}{}\"\
    , ones, fives)),\n            5 => result.push(fives),\n            6 => result.push_str(&format!(\"\
    {}{}\", fives, ones)),\n            7 => result.push_str(&format!(\"{}{}{}\",\
    \ fives, ones, ones)),\n            8 => result.push_str(&format!(\"{}{}{}{}\"\
    , fives, ones, ones, ones)),\n            9 => result.push_str(&format!(\"{}{}\"\
    , ones, tens)),\n            _ => (),\n        }\n        i += 1;\n    }\n   \
    \ result.chars().rev().collect()", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut index = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        if digit != 0 {\n            result =\
    \ mini_roman_digit(digit, index) + &result;\n        }\n        number /= 10;\n\
    \        index += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result.insert_str(0, &mini_roman_digit(digit,\
    \ i));\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    while number > 0 {\n\
    \        let current_digit = number % 10;\n        number /= 10;\n        match\
    \ digit {\n            0 => result = mini_roman_ones(current_digit) + &result,\n\
    \            1 => result = mini_roman_tens(current_digit) + &result,\n       \
    \     2 => result = mini_roman_hundreds(current_digit) + &result,\n          \
    \  3 => result = mini_roman_thousands(current_digit) + &result,\n            _\
    \ => panic!(\"Number too large\"),\n        }\n        digit += 1;\n    }\n  \
    \  result", "    let mut num = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        match i {\n            0 => {\n                if digit\
    \ <= 3 {\n                    result.push_str(&\"i\".repeat(digit as usize));\n\
    \                } else if digit == 4 {\n                    result.push_str(\"\
    iv\");\n                } else if digit == 5 {\n                    result.push_str(\"\
    v\");\n                } else if digit <= 8 {\n                    result.push_str(\"\
    v\");\n                    result.push_str(&\"i\".repeat((digit - 5) as usize));\n\
    \                } else {\n                    result.push_str(\"ix\");\n    \
    \            }\n            }\n            1 => {\n                if digit <=\
    \ 3 {\n                    result.push_str(&\"x\".repeat(digit as usize));\n \
    \               } else if digit == 4 {\n                    result.push_str(\"\
    xl\");\n                } else if digit == 5 {\n                    result.push_str(\"\
    l\");\n                } else if digit <= 8 {\n                    result.push_str(\"\
    l\");\n                    result.push_str(&\"x\".repeat((digit - 5) as usize));\n\
    \                } else {\n                    result.push_str(\"xc\");\n    \
    \            }\n            }\n            2 => {\n                if digit <=\
    \ 3 {\n                    result.push_str(&\"c\".repeat(digit as usize));\n \
    \               } else if digit == 4 {\n                    result.push_str(\"\
    cd\");\n                } else if digit == 5 {\n                    result.push_str(\"\
    d\");\n                } else if digit <= 8 {\n                    result.push_str(\"\
    d\");\n                    result.push_str(&\"c\".repeat((digit - 5) as usize));\n\
    \                } else {\n                    result.push_str(\"cm\");\n    \
    \            }\n            }\n            3 => {\n                result.push_str(&\"\
    m\".repeat(digit as usize));\n            }\n            _ => {}\n        }\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    while number > 0 {\n\
    \        let digit_value = number % 10;\n        let digit_char = match digit\
    \ {\n            0 => match digit_value {\n                1 => 'i',\n       \
    \         2 => 'i',\n                3 => 'i',\n                4 => 'v',\n  \
    \              5 => 'v',\n                6 => 'v',\n                7 => 'v',\n\
    \                8 => 'v',\n                9 => 'x',\n                _ => '\
    \ ',\n            },\n            1 => match digit_value {\n                1\
    \ => 'x',\n                2 => 'x',\n                3 => 'x',\n            \
    \    4 => 'l',\n                5 => 'l',\n                6 => 'l',\n       \
    \         7 => 'l',\n                8 => 'l',\n                9 => 'c',\n  \
    \              _ => ' ',\n            },\n            2 => match digit_value {\n\
    \                1 => 'c',\n                2 => 'c',\n                3 => 'c',\n\
    \                4 => 'd',\n                5 => 'd',\n                6 => 'd',\n\
    \                7 => 'd',\n                8 => 'd',\n                9 => 'm',\n\
    \                _ => ' ',\n            },\n            _ => ' ',\n        };\n\
    \        result.push(digit_char);\n        number /= 10;\n        digit += 1;\n\
    \    }\n    result.chars().rev().collect()", "    let mut result = String::new();\n\
    \    let mut n = number;\n    while n >= 1000 {\n        result.push('m');\n \
    \       n -= 1000;\n    }\n    if n >= 900 {\n        result.push_str(\"cm\");\n\
    \        n -= 900;\n    }\n    if n >= 500 {\n        result.push('d');\n    \
    \    n -= 500;\n    }\n    if n >= 400 {\n        result.push_str(\"cd\");\n \
    \       n -= 400;\n    }\n    while n >= 100 {\n        result.push('c');\n  \
    \      n -= 100;\n    }\n    if n >= 90 {\n        result.push_str(\"xc\");\n\
    \        n -= 90;\n    }\n    if n >= 50 {\n        result.push('l');\n      \
    \  n -= 50;\n    }\n    if n >= 40 {\n        result.push_str(\"xl\");\n     \
    \   n -= 40;\n    }\n    while n >= 10 {\n        result.push('x');\n        n\
    \ -= 10;\n    }\n    if n >= 9 {\n        result.push_str(\"ix\");\n        n\
    \ -= 9;\n    }\n    if n >= 5 {\n        result.push('v');\n        n -= 5;\n\
    \    }\n    if n >= 4 {\n        result.push_str(\"iv\");\n        n -= 4;\n \
    \   }\n    while n >= 1 {\n        result.push('i');\n        n -= 1;\n    }\n\
    \    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n\
    \        i += 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let numerals\
    \ = [\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for &(numeral, value) in numerals.iter() {\n        while number >= value\
    \ {\n            result.push_str(numeral);\n            number -= value;\n   \
    \     }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        let mut digit_str = String::new();\n\
    \        match digit {\n            1 => digit_str.push('i'),\n            2 =>\
    \ digit_str.push_str(\"ii\"),\n            3 => digit_str.push_str(\"iii\"),\n\
    \            4 => digit_str.push_str(\"iv\"),\n            5 => digit_str.push('v'),\n\
    \            6 => digit_str.push_str(\"vi\"),\n            7 => digit_str.push_str(\"\
    vii\"),\n            8 => digit_str.push_str(\"viii\"),\n            9 => digit_str.push_str(\"\
    ix\"),\n            _ => (),\n        }\n        match i {\n            0 => result.push_str(&digit_str),\n\
    \            1 => result = digit_str + &result,\n            2 => result = digit_str.replace('i',\
    \ \"x\") + &result,\n            3 => result = digit_str.replace('i', \"c\") +\
    \ &result,\n            4 => result = digit_str.replace('i', \"m\") + &result,\n\
    \            _ => (),\n        }\n        i += 1;\n    }\n    result", "    let\
    \ mut num = number;\n    let mut result = String::new();\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    if digit == 0 {\n            i += 1;\n            continue;\n        }\n\
    \        let mut roman = String::new();\n        if digit <= 3 {\n           \
    \ for _ in 0..digit {\n                roman.push(ROMAN_DIGITS[i]);\n        \
    \    }\n        } else if digit == 4 {\n            roman.push(ROMAN_DIGITS[i]);\n\
    \            roman.push(ROMAN_DIGITS[i + 1]);\n        } else if digit == 5 {\n\
    \            roman.push(ROMAN_DIGITS[i + 1]);\n        } else if digit <= 8 {\n\
    \            roman.push(ROMAN_DIGITS[i + 1]);\n            for _ in 0..(digit\
    \ - 5) {\n                roman.push(ROMAN_DIGITS[i]);\n            }\n      \
    \  } else {\n            roman.push(ROMAN_DIGITS[i]);\n            roman.push(ROMAN_DIGITS[i\
    \ + 2]);\n        }\n        result = roman + &result;\n        i += 2;\n    }\n\
    \    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut symbols = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n\
    \        (\"d\", 500),\n        (\"cd\", 400),\n        (\"c\", 100),\n      \
    \  (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\"\
    , 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n    \
    \    (\"i\", 1),\n    ];\n    while number > 0 {\n        for (symbol, value)\
    \ in symbols.iter() {\n            if number >= *value {\n                result.push_str(symbol);\n\
    \                number -= *value;\n                break;\n            }\n  \
    \      }\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    while number > 0 {\n        if number >= 1000 {\n    \
    \        result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut index = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        index += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            0 => String::new(),\n  \
    \          1 => String::from(\"i\"),\n            2 => String::from(\"ii\"),\n\
    \            3 => String::from(\"iii\"),\n            4 => String::from(\"iv\"\
    ),\n            5 => String::from(\"v\"),\n            6 => String::from(\"vi\"\
    ),\n            7 => String::from(\"vii\"),\n            8 => String::from(\"\
    viii\"),\n            9 => String::from(\"ix\"),\n            _ => panic!(\"Invalid\
    \ digit\"),\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n   \
    \     let digit = number % 10;\n        number /= 10;\n        let (ones, fives,\
    \ tens) = match digit {\n            1 => (String::from(\"i\"), String::from(\"\
    v\"), String::from(\"x\")),\n            2 => (String::from(\"ii\"), String::from(\"\
    v\"), String::from(\"x\")),\n            3 => (String::from(\"iii\"), String::from(\"\
    v\"), String::from(\"x\")),\n            4 => (String::from(\"iv\"), String::from(\"\
    v\"), String::from(\"x\")),\n            5 => (String::from(\"v\"), String::from(\"\
    v\"), String::from(\"x\")),\n            6 => (String::from(\"vi\"), String::from(\"\
    v\"), String::from(\"x\")),\n            7 => (String::from(\"vii\"), String::from(\"\
    v\"), String::from(\"x\")),\n            8 => (String::from(\"viii\"), String::from(\"\
    v\"), String::from(\"x\")),\n            9 => (String::from(\"ix\"), String::from(\"\
    v\"), String::from(\"x\")),\n            _ => (String::from(\"\"), String::from(\"\
    \"), String::from(\"\")),\n        };\n        if i == 0 {\n            result\
    \ = format!(\"{}{}\", ones, result);\n        } else if i == 1 {\n           \
    \ result = format!(\"{}{}\", fives, result);\n        } else if i == 2 {\n   \
    \         result = format!(\"{}{}\", tens, result);\n        }\n        i += 1;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let roman_digit = match digit {\n            1 => \"\
    i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 => \"\
    iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 => \"\
    vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n            _ =>\
    \ \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n   \
    \         result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut index = 0;\n    while number\
    \ > 0 {\n        let digit = number % 10;\n        number /= 10;\n        let\
    \ roman_digit = match digit {\n            1 => \"i\",\n            2 => \"ii\"\
    ,\n            3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\"\
    ,\n            6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\"\
    ,\n            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        index += 1;\n    }\n    result",
  "    let mut num = number;\n    let mut result = String::new();\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n    \
    \    i += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let (letter, value) = match\
    \ i {\n            0 => (String::from(\"i\"), 1),\n            1 => (String::from(\"\
    x\"), 10),\n            2 => (String::from(\"c\"), 100),\n            3 => (String::from(\"\
    m\"), 1000),\n            _ => panic!(\"Invalid number\"),\n        };\n     \
    \   if digit < 4 {\n            for _ in 0..digit {\n                result.push_str(&letter);\n\
    \            }\n        } else if digit == 4 {\n            result.push_str(&letter);\n\
    \            result.push_str(&format!(\"{}\", letter));\n        } else if digit\
    \ < 9 {\n            result.push_str(&format!(\"{}\", letter));\n            for\
    \ _ in 0..(digit - 5) {\n                result.push_str(&letter);\n         \
    \   }\n        } else {\n            result.push_str(&format!(\"{}{}\", letter,\
    \ letter));\n            result.push_str(&letter);\n        }\n        i += 1;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push_str(\"m\");\n        num -= 1000;\n\
    \    }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -=\
    \ 900;\n    }\n    if num >= 500 {\n        result.push_str(\"d\");\n        num\
    \ -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n    \
    \    num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"c\"\
    );\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut index = 0;\n    while num > 0 {\n    \
    \    let digit = num % 10;\n        num /= 10;\n        let roman_digit = match\
    \ digit {\n            1 => \"i\",\n            2 => \"ii\",\n            3 =>\
    \ \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n            6 =>\
    \ \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n           \
    \ 9 => \"ix\",\n            _ => \"\",\n        };\n        result = format!(\"\
    {}{}\", roman_digit, result);\n        index += 1;\n    }\n    result", "    let\
    \ mut number = number;\n    let mut result = String::new();\n    let mut i = 0;\n\
    \    while number > 0 {\n        if number >= ROMAN_NUMERALS[i].1 {\n        \
    \    result.push_str(&ROMAN_NUMERALS[i].0);\n            number -= ROMAN_NUMERALS[i].1;\n\
    \        } else {\n            i += 1;\n        }\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    while num >= 1000\
    \ {\n        result.push_str(\"m\");\n        num -= 1000;\n    }\n    while num\
    \ >= 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n    }\n   \
    \ while num >= 500 {\n        result.push_str(\"d\");\n        num -= 500;\n \
    \   }\n    while num >= 400 {\n        result.push_str(\"cd\");\n        num -=\
    \ 400;\n    }\n    while num >= 100 {\n        result.push_str(\"c\");\n     \
    \   num -= 100;\n    }\n    while num >= 90 {\n        result.push_str(\"xc\"\
    );\n        num -= 90;\n    }\n    while num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    while num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    while num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    while num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    while num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        if digit == 9 {\n            result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n            result.push_str(&ROMAN_DIGITS[i]);\n        } else if digit\
    \ == 4 {\n            result.push_str(&ROMAN_DIGITS[i]);\n            result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n        } else {\n            if digit >= 5 {\n                result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n                digit -= 5;\n            }\n            for _ in 0..digit\
    \ {\n                result.push_str(&ROMAN_DIGITS[i]);\n            }\n     \
    \   }\n        num /= 10;\n        i += 2;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut roman_numerals = vec![\n   \
    \     (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"\
    cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n\
    \        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"\
    v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    while num > 0\
    \ {\n        for (rn, val) in roman_numerals.iter() {\n            if num >= *val\
    \ {\n                result.push_str(rn);\n                num -= *val;\n    \
    \            break;\n            }\n        }\n    }\n    result", "    let mut\
    \ result = String::new();\n    let mut num = number;\n    while num > 0 {\n  \
    \      if num >= 1000 {\n            result.push('m');\n            num -= 1000;\n\
    \        } else if num >= 900 {\n            result.push_str(\"cm\");\n      \
    \      num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    while num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    while num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    while num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    while num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    while num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    while num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    while num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    while num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    while num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (one, five, ten) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n      \
    \      _ => panic!(\"Number too large\"),\n        };\n        match digit {\n\
    \            1 => result.push(one),\n            2 => result.push_str(&[one, one].iter().collect::<String>()),\n\
    \            3 => result.push_str(&[one, one, one].iter().collect::<String>()),\n\
    \            4 => result.push_str(&[one, five].iter().collect::<String>()),\n\
    \            5 => result.push(five),\n            6 => result.push_str(&[five,\
    \ one].iter().collect::<String>()),\n            7 => result.push_str(&[five,\
    \ one, one].iter().collect::<String>()),\n            8 => result.push_str(&[five,\
    \ one, one, one].iter().collect::<String>()),\n            9 => result.push_str(&[one,\
    \ ten].iter().collect::<String>()),\n            _ => (),\n        }\n       \
    \ i += 1;\n    }\n    result.chars().rev().collect()", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut index = 0;\n    while number\
    \ > 0 {\n        let digit = number % 10;\n        number /= 10;\n        let\
    \ roman_digit = match digit {\n            1 => \"i\",\n            2 => \"ii\"\
    ,\n            3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\"\
    ,\n            6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\"\
    ,\n            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        index += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        let roman_digit = match digit {\n            0 => String::from(\"\"),\n\
    \            1 => String::from(\"i\"),\n            2 => String::from(\"ii\"),\n\
    \            3 => String::from(\"iii\"),\n            4 => String::from(\"iv\"\
    ),\n            5 => String::from(\"v\"),\n            6 => String::from(\"vi\"\
    ),\n            7 => String::from(\"vii\"),\n            8 => String::from(\"\
    viii\"),\n            9 => String::from(\"ix\"),\n            _ => String::from(\"\
    \"),\n        };\n        result = roman_digit + &result;\n        number /= 10;\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n   \
    \         result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (one, five, ten) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n      \
    \      _ => ('i', 'v', 'x'),\n        };\n        match digit {\n            1\
    \ => result.insert(0, one),\n            2 => {\n                result.insert(0,\
    \ one);\n                result.insert(0, one);\n            }\n            3\
    \ => {\n                result.insert(0, one);\n                result.insert(0,\
    \ one);\n                result.insert(0, one);\n            }\n            4\
    \ => {\n                result.insert(0, one);\n                result.insert(0,\
    \ five);\n            }\n            5 => result.insert(0, five),\n          \
    \  6 => {\n                result.insert(0, one);\n                result.insert(0,\
    \ five);\n            }\n            7 => {\n                result.insert(0,\
    \ one);\n                result.insert(0, one);\n                result.insert(0,\
    \ five);\n            }\n            8 => {\n                result.insert(0,\
    \ one);\n                result.insert(0, one);\n                result.insert(0,\
    \ one);\n                result.insert(0, five);\n            }\n            9\
    \ => {\n                result.insert(0, one);\n                result.insert(0,\
    \ ten);\n            }\n            _ => (),\n        }\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let mut roman_digit = String::new();\n        if digit\
    \ == 9 {\n            roman_digit.push(ROMAN_DIGITS[i + 1]);\n            roman_digit.push(ROMAN_DIGITS[i]);\n\
    \        } else if digit == 4 {\n            roman_digit.push(ROMAN_DIGITS[i +\
    \ 1]);\n            roman_digit.push(ROMAN_DIGITS[i + 2]);\n        } else {\n\
    \            if digit >= 5 {\n                roman_digit.push(ROMAN_DIGITS[i\
    \ + 1]);\n                digit -= 5;\n            }\n            for _ in 0..digit\
    \ {\n                roman_digit.push(ROMAN_DIGITS[i + 2]);\n            }\n \
    \       }\n        result = roman_digit + &result;\n        i += 2;\n    }\n \
    \   result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut num_of_m = 0;\n    let mut num_of_d = 0;\n    let mut num_of_c =\
    \ 0;\n    let mut num_of_l = 0;\n    let mut num_of_x = 0;\n    let mut num_of_v\
    \ = 0;\n    let mut num_of_i = 0;\n\n    while num >= 1000 {\n        num_of_m\
    \ += 1;\n        num -= 1000;\n    }\n    while num >= 500 {\n        num_of_d\
    \ += 1;\n        num -= 500;\n    }\n    while num >= 100 {\n        num_of_c\
    \ += 1;\n        num -= 100;\n    }\n    while num >= 50 {\n        num_of_l +=\
    \ 1;\n        num -= 50;\n    }\n    while num >= 10 {\n        num_of_x += 1;\n\
    \        num -= 10;\n    }\n    while num >= 5 {\n        num_of_v += 1;\n   \
    \     num -= 5;\n    }\n    while num >= 1 {\n        num_of_i += 1;\n       \
    \ num -= 1;\n    }\n\n    for _ in 0..num_of_m {\n        result.push('m');\n\
    \    }\n    for _ in 0..num_of_d {\n        result.push('d');\n    }\n    for\
    \ _ in 0..num_of_c {\n        result.push('c');\n    }\n    for _ in 0..num_of_l\
    \ {\n        result.push('l');\n    }\n    for _ in 0..num_of_x {\n        result.push('x');\n\
    \    }\n    for _ in 0..num_of_v {\n        result.push('v');\n    }\n    for\
    \ _ in 0..num_of_i {\n        result.push('i');\n    }\n\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    let mut roman_digit = String::new();\n        match digit {\n           \
    \ 1 => roman_digit.push('i'),\n            2 => roman_digit.push_str(\"ii\"),\n\
    \            3 => roman_digit.push_str(\"iii\"),\n            4 => roman_digit.push_str(\"\
    iv\"),\n            5 => roman_digit.push('v'),\n            6 => roman_digit.push_str(\"\
    vi\"),\n            7 => roman_digit.push_str(\"vii\"),\n            8 => roman_digit.push_str(\"\
    viii\"),\n            9 => roman_digit.push_str(\"ix\"),\n            _ => (),\n\
    \        }\n        match i {\n            0 => (),\n            1 => roman_digit\
    \ = roman_digit.replace(\"i\", \"x\"),\n            2 => roman_digit = roman_digit.replace(\"\
    i\", \"c\"),\n            3 => roman_digit = roman_digit.replace(\"i\", \"m\"\
    ),\n            _ => (),\n        }\n        result = roman_digit + &result;\n\
    \        i += 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let roman_numerals = vec![\n        (1000, \"m\"\
    ),\n        (900, \"cm\"),\n        (500, \"d\"),\n        (400, \"cd\"),\n  \
    \      (100, \"c\"),\n        (90, \"xc\"),\n        (50, \"l\"),\n        (40,\
    \ \"xl\"),\n        (10, \"x\"),\n        (9, \"ix\"),\n        (5, \"v\"),\n\
    \        (4, \"iv\"),\n        (1, \"i\"),\n    ];\n    for (arabic, roman) in\
    \ roman_numerals {\n        while number >= arabic {\n            result.push_str(roman);\n\
    \            number -= arabic;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        result = match digit {\n            1 => format!(\"\
    i{}\", result),\n            2 => format!(\"ii{}\", result),\n            3 =>\
    \ format!(\"iii{}\", result),\n            4 => format!(\"iv{}\", result),\n \
    \           5 => format!(\"v{}\", result),\n            6 => format!(\"vi{}\"\
    , result),\n            7 => format!(\"vii{}\", result),\n            8 => format!(\"\
    viii{}\", result),\n            9 => format!(\"ix{}\", result),\n            _\
    \ => result,\n        };\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        result = match digit {\n            1 => format!(\"\
    i{}\", result),\n            2 => format!(\"ii{}\", result),\n            3 =>\
    \ format!(\"iii{}\", result),\n            4 => format!(\"iv{}\", result),\n \
    \           5 => format!(\"v{}\", result),\n            6 => format!(\"vi{}\"\
    , result),\n            7 => format!(\"vii{}\", result),\n            8 => format!(\"\
    viii{}\", result),\n            9 => format!(\"ix{}\", result),\n            _\
    \ => result,\n        };\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let roman_numerals = vec![\n\
    \        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n     \
    \   (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"\
    l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n\
    \        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for\
    \ (roman, arabic) in roman_numerals {\n        while num >= arabic {\n       \
    \     result.push_str(roman);\n            num -= arabic;\n        }\n    }\n\
    \    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        if digit == 9 {\n            result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n            result.push_str(&ROMAN_DIGITS[i]);\n        } else if digit\
    \ == 4 {\n            result.push_str(&ROMAN_DIGITS[i + 1]);\n            result.push_str(&ROMAN_DIGITS[i]);\n\
    \        } else if digit >= 5 {\n            result.push_str(&ROMAN_DIGITS[i]);\n\
    \            for _ in 0..digit - 5 {\n                result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n            }\n        } else {\n            for _ in 0..digit {\n \
    \               result.push_str(&ROMAN_DIGITS[i + 1]);\n            }\n      \
    \  }\n        number /= 10;\n        i += 2;\n    }\n    result", "    let mut\
    \ result = String::new();\n    let mut num = number;\n    let mut i = 0;\n   \
    \ while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n       \
    \ result = format!(\"{}{}\", mini_roman_digit(digit, i), result);\n        i +=\
    \ 1;\n    }\n    result", "    let mut result = String::new();\n    let mut number\
    \ = number;\n    while number >= 1000 {\n        result.push('m');\n        number\
    \ -= 1000;\n    }\n    if number >= 900 {\n        result.push_str(\"cm\");\n\
    \        number -= 900;\n    }\n    if number >= 500 {\n        result.push('d');\n\
    \        number -= 500;\n    }\n    if number >= 400 {\n        result.push_str(\"\
    cd\");\n        number -= 400;\n    }\n    while number >= 100 {\n        result.push('c');\n\
    \        number -= 100;\n    }\n    if number >= 90 {\n        result.push_str(\"\
    xc\");\n        number -= 90;\n    }\n    if number >= 50 {\n        result.push('l');\n\
    \        number -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"\
    xl\");\n        number -= 40;\n    }\n    while number >= 10 {\n        result.push('x');\n\
    \        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push('v');\n\
    \        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    while number >= 1 {\n        result.push('i');\n\
    \        number -= 1;\n    }\n    result", "    let mut number = number;\n   \
    \ let mut result = String::new();\n    let mut i = 0;\n    while number > 0 {\n\
    \        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut n = number;\n    while n > 0 {\n\
    \        if n >= 1000 {\n            result.push('m');\n            n -= 1000;\n\
    \        } else if n >= 900 {\n            result.push_str(\"cm\");\n        \
    \    n -= 900;\n        } else if n >= 500 {\n            result.push('d');\n\
    \            n -= 500;\n        } else if n >= 400 {\n            result.push_str(\"\
    cd\");\n            n -= 400;\n        } else if n >= 100 {\n            result.push('c');\n\
    \            n -= 100;\n        } else if n >= 90 {\n            result.push_str(\"\
    xc\");\n            n -= 90;\n        } else if n >= 50 {\n            result.push('l');\n\
    \            n -= 50;\n        } else if n >= 40 {\n            result.push_str(\"\
    xl\");\n            n -= 40;\n        } else if n >= 10 {\n            result.push('x');\n\
    \            n -= 10;\n        } else if n >= 9 {\n            result.push_str(\"\
    ix\");\n            n -= 9;\n        } else if n >= 5 {\n            result.push('v');\n\
    \            n -= 5;\n        } else if n >= 4 {\n            result.push_str(\"\
    iv\");\n            n -= 4;\n        } else if n >= 1 {\n            result.push('i');\n\
    \            n -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = format!(\"{}{}\", roman_digit, result);\n      \
    \  i += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut digit = 0;\n    while number > 0 {\n        digit\
    \ = number % 10;\n        number /= 10;\n        result = match digit {\n    \
    \        1 => String::from(\"i\") + &result,\n            2 => String::from(\"\
    ii\") + &result,\n            3 => String::from(\"iii\") + &result,\n        \
    \    4 => String::from(\"iv\") + &result,\n            5 => String::from(\"v\"\
    ) + &result,\n            6 => String::from(\"vi\") + &result,\n            7\
    \ => String::from(\"vii\") + &result,\n            8 => String::from(\"viii\"\
    ) + &result,\n            9 => String::from(\"ix\") + &result,\n            _\
    \ => result,\n        };\n        result = match number {\n            1 => String::from(\"\
    x\") + &result,\n            2 => String::from(\"xx\") + &result,\n          \
    \  3 => String::from(\"xxx\") + &result,\n            4 => String::from(\"xl\"\
    ) + &result,\n            5 => String::from(\"l\") + &result,\n            6 =>\
    \ String::from(\"lx\") + &result,\n            7 => String::from(\"lxx\") + &result,\n\
    \            8 => String::from(\"lxxx\") + &result,\n            9 => String::from(\"\
    xc\") + &result,\n            _ => result,\n        };\n        result = match\
    \ number {\n            1 => String::from(\"c\") + &result,\n            2 =>\
    \ String::from(\"cc\") + &result,\n            3 => String::from(\"ccc\") + &result,\n\
    \            4 => String::from(\"cd\") + &result,\n            5 => String::from(\"\
    d\") + &result,\n            6 => String::from(\"dc\") + &result,\n          \
    \  7 => String::from(\"dcc\") + &result,\n            8 => String::from(\"dccc\"\
    ) + &result,\n            9 => String::from(\"cm\") + &result,\n            _\
    \ => result,\n        };\n        result = match number {\n            1 => String::from(\"\
    m\") + &result,\n            2 => String::from", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let mut digit = num % 10;\n        if digit == 9 {\n            result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n            result.push_str(&ROMAN_DIGITS[i]);\n        } else if digit\
    \ == 4 {\n            result.push_str(&ROMAN_DIGITS[i + 1]);\n            result.push_str(&ROMAN_DIGITS[i]);\n\
    \        } else if digit >= 5 {\n            result.push_str(&ROMAN_DIGITS[i]);\n\
    \            digit -= 5;\n        }\n        while digit > 0 {\n            result.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n            digit -= 1;\n        }\n        num /= 10;\n        i +=\
    \ 2;\n    }\n    result.chars().rev().collect()", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            0 => \"\",\n            1 => \"i\",\n            2 => \"ii\"\
    ,\n            3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\"\
    ,\n            6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\"\
    ,\n            9 => \"ix\",\n            _ => panic!(\"Invalid digit: {}\", digit),\n\
    \        };\n        result.insert_str(0, roman_digit);\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut number = number;\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        let mut roman_digit = String::new();\n       \
    \ match digit {\n            1 => roman_digit.push('i'),\n            2 => roman_digit.push_str(\"\
    ii\"),\n            3 => roman_digit.push_str(\"iii\"),\n            4 => roman_digit.push_str(\"\
    iv\"),\n            5 => roman_digit.push('v'),\n            6 => roman_digit.push_str(\"\
    vi\"),\n            7 => roman_digit.push_str(\"vii\"),\n            8 => roman_digit.push_str(\"\
    viii\"),\n            9 => roman_digit.push_str(\"ix\"),\n            _ => (),\n\
    \        }\n        match i {\n            0 => (),\n            1 => roman_digit\
    \ = roman_digit.replace(\"i\", \"x\"),\n            2 => roman_digit = roman_digit.replace(\"\
    i\", \"c\"),\n            3 => roman_digit = roman_digit.replace(\"i\", \"m\"\
    ),\n            _ => (),\n        }\n        result = roman_digit + &result;\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n   \
    \         result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut symbols = vec![\n        (1000,\
    \ \"m\"),\n        (900, \"cm\"),\n        (500, \"d\"),\n        (400, \"cd\"\
    ),\n        (100, \"c\"),\n        (90, \"xc\"),\n        (50, \"l\"),\n     \
    \   (40, \"xl\"),\n        (10, \"x\"),\n        (9, \"ix\"),\n        (5, \"\
    v\"),\n        (4, \"iv\"),\n        (1, \"i\"),\n    ];\n    while number > 0\
    \ {\n        let (value, symbol) = symbols.pop().unwrap();\n        while number\
    \ >= value {\n            result.push_str(symbol);\n            number -= value;\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        let roman_digit = match digit {\n \
    \           1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n\
    \            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n\
    \            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\"\
    ,\n            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut num = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        match i {\n            0 => {\n   \
    \             if digit == 4 {\n                    result.insert(0, 'i');\n  \
    \                  result.insert(0, 'v');\n                } else if digit ==\
    \ 9 {\n                    result.insert(0, 'i');\n                    result.insert(0,\
    \ 'x');\n                } else {\n                    if digit >= 5 {\n     \
    \                   result.insert(0, 'v');\n                        digit -= 5;\n\
    \                    }\n                    for _ in 0..digit {\n            \
    \            result.insert(0, 'i');\n                    }\n                }\n\
    \            }\n            1 => {\n                if digit == 4 {\n        \
    \            result.insert(0, 'x');\n                    result.insert(0, 'l');\n\
    \                } else if digit == 9 {\n                    result.insert(0,\
    \ 'x');\n                    result.insert(0, 'c');\n                } else {\n\
    \                    if digit >= 5 {\n                        result.insert(0,\
    \ 'l');\n                        digit -= 5;\n                    }\n        \
    \            for _ in 0..digit {\n                        result.insert(0, 'x');\n\
    \                    }\n                }\n            }\n            2 => {\n\
    \                if digit == 4 {\n                    result.insert(0, 'c');\n\
    \                    result.insert(0, 'd');\n                } else if digit ==\
    \ 9 {\n                    result.insert(0, 'c');\n                    result.insert(0,\
    \ 'm');\n                } else {\n                    if digit >= 5 {\n     \
    \                   result.insert(0, 'd');\n                        digit -= 5;\n\
    \                    }\n                    for _ in 0..digit {\n            \
    \            result.insert(0, 'c');\n                    }\n                }\n\
    \            }\n            3 => {\n                for _ in 0..digit {\n    \
    \                result.insert(0, 'm');\n                }\n            }\n  \
    \          _ => {}\n        }\n        i += 1;\n    }\n    result", "    let mut\
    \ number = number;\n    let mut result = String::new();\n    let roman_numerals\
    \ = [\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (numeral, value) in roman_numerals.iter() {\n        while number >=\
    \ *value {\n            result.push_str(numeral);\n            number -= *value;\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n         \
    \   result.push('m');\n            num -= 1000;\n        } else if num >= 900\
    \ {\n            result.push_str(\"cm\");\n            num -= 900;\n        }\
    \ else if num >= 500 {\n            result.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            result.push_str(\"cd\");\n      \
    \      num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut roman = String::new();\n    while number > 0 {\n        if number\
    \ >= 1000 {\n            roman.push('m');\n            number -= 1000;\n     \
    \   } else if number >= 900 {\n            roman.push_str(\"cm\");\n         \
    \   number -= 900;\n        } else if number >= 500 {\n            roman.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            roman.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      roman.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            roman.push_str(\"xc\");\n            number -= 90;\n  \
    \      } else if number >= 50 {\n            roman.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            roman.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            roman.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            roman.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  roman.push('v');\n            number -= 5;\n        } else if number >= 4 {\n\
    \            roman.push_str(\"iv\");\n            number -= 4;\n        } else\
    \ if number >= 1 {\n            roman.push('i');\n            number -= 1;\n \
    \       }\n    }\n    roman", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit =\
    \ num % 10;\n        num /= 10;\n        let mut roman_digit = String::new();\n\
    \        if digit == 4 {\n            roman_digit.push(ROMAN_DIGITS[i][0]);\n\
    \            roman_digit.push(ROMAN_DIGITS[i][1]);\n        } else if digit ==\
    \ 9 {\n            roman_digit.push(ROMAN_DIGITS[i][0]);\n            roman_digit.push(ROMAN_DIGITS[i\
    \ + 1][0]);\n        } else {\n            if digit >= 5 {\n                roman_digit.push(ROMAN_DIGITS[i][1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                roman_digit.push(ROMAN_DIGITS[i][0]);\n            }\n      \
    \  }\n        result = roman_digit + &result;\n        i += 1;\n    }\n    result",
  "    let mut num = number;\n    let mut result = String::new();\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        if digit == 4 {\n            result.insert(0, 'i');\n            result.insert(0,\
    \ 'v');\n        } else if digit == 9 {\n            result.insert(0, 'i');\n\
    \            result.insert(0, 'x');\n        } else if digit == 5 {\n        \
    \    result.insert(0, 'v');\n        } else if digit == 6 {\n            result.insert(0,\
    \ 'v');\n            result.insert(0, 'i');\n        } else if digit == 7 {\n\
    \            result.insert(0, 'v');\n            result.insert(0, 'i');\n    \
    \        result.insert(0, 'i');\n        } else if digit == 8 {\n            result.insert(0,\
    \ 'v');\n            result.insert(0, 'i');\n            result.insert(0, 'i');\n\
    \            result.insert(0, 'i');\n        } else {\n            for _ in 0..digit\
    \ {\n                result.insert(0, 'i');\n            }\n        }\n      \
    \  i += 1;\n        if i == 2 {\n            result = result.replace(\"iiii\"\
    , \"iv\");\n            result = result.replace(\"iiiii\", \"v\");\n         \
    \   result = result.replace(\"vv\", \"x\");\n        } else if i == 3 {\n    \
    \        result = result.replace(\"iiii\", \"iv\");\n            result = result.replace(\"\
    iiiii\", \"v\");\n            result = result.replace(\"vv\", \"x\");\n      \
    \      result = result.replace(\"xxxxx\", \"l\");\n            result = result.replace(\"\
    ll\", \"c\");\n        } else if i == 4 {\n            result = result.replace(\"\
    iiii\", \"iv\");\n            result = result.replace(\"iiiii\", \"v\");\n   \
    \         result = result.replace(\"vv\", \"x\");\n            result = result.replace(\"\
    xxxxx\", \"l\");\n            result = result.replace(\"ll\", \"c\");\n      \
    \      result = result.replace(\"ccccc\", \"d\");\n            result", "    let\
    \ mut num = number;\n    let mut result = String::new();\n    let mut roman_numerals\
    \ = vec![\n        (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n\
    \        (\"l\", 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"\
    i\", 1),\n    ];\n    while !roman_numerals.is_empty() {\n        let (rn, value)\
    \ = roman_numerals.pop().unwrap();\n        let mut count = num / value;\n   \
    \     num = num % value;\n        while count > 0 {\n            result.push_str(rn);\n\
    \            count -= 1;\n        }\n    }\n    result", "    let mut result =\
    \ String::new();\n    let mut num = number;\n    while num > 0 {\n        if num\
    \ >= 1000 {\n            result.push('m');\n            num -= 1000;\n       \
    \ } else if num >= 900 {\n            result.push_str(\"cm\");\n            num\
    \ -= 900;\n        } else if num >= 500 {\n            result.push('d');\n   \
    \         num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        match digit {\n            1\
    \ => result.push_str(MINI_ROMAN_DIGITS[i][0]),\n            2 => result.push_str(MINI_ROMAN_DIGITS[i][1]),\n\
    \            3 => result.push_str(MINI_ROMAN_DIGITS[i][2]),\n            4 =>\
    \ result.push_str(MINI_ROMAN_DIGITS[i][3]),\n            5 => result.push_str(MINI_ROMAN_DIGITS[i][4]),\n\
    \            6 => result.push_str(MINI_ROMAN_DIGITS[i][5]),\n            7 =>\
    \ result.push_str(MINI_ROMAN_DIGITS[i][6]),\n            8 => result.push_str(MINI_ROMAN_DIGITS[i][7]),\n\
    \            9 => result.push_str(MINI_ROMAN_DIGITS[i][8]),\n            _ =>\
    \ (),\n        }\n        i += 1;\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        num /= 10;\n        result = match digit\
    \ {\n            1 => format!(\"i{}\", result),\n            2 => format!(\"ii{}\"\
    , result),\n            3 => format!(\"iii{}\", result),\n            4 => format!(\"\
    iv{}\", result),\n            5 => format!(\"v{}\", result),\n            6 =>\
    \ format!(\"vi{}\", result),\n            7 => format!(\"vii{}\", result),\n \
    \           8 => format!(\"viii{}\", result),\n            9 => format!(\"ix{}\"\
    , result),\n            _ => result,\n        };\n        i += 1;\n    }\n   \
    \ result", "    let mut result = String::new();\n    let mut number = number;\n\
    \    while number > 0 {\n        if number >= 1000 {\n            result.push('m');\n\
    \            number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut roman_numeral\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            roman_numeral.push('m');\n            number\
    \ -= 1000;\n        } else if number >= 900 {\n            roman_numeral.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      roman_numeral.push('d');\n            number -= 500;\n        } else if\
    \ number >= 400 {\n            roman_numeral.push_str(\"cd\");\n            number\
    \ -= 400;\n        } else if number >= 100 {\n            roman_numeral.push('c');\n\
    \            number -= 100;\n        } else if number >= 90 {\n            roman_numeral.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    roman_numeral.push('l');\n            number -= 50;\n        } else if number\
    \ >= 40 {\n            roman_numeral.push_str(\"xl\");\n            number -=\
    \ 40;\n        } else if number >= 10 {\n            roman_numeral.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            roman_numeral.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  roman_numeral.push('v');\n            number -= 5;\n        } else if number\
    \ >= 4 {\n            roman_numeral.push_str(\"iv\");\n            number -= 4;\n\
    \        } else if number >= 1 {\n            roman_numeral.push('i');\n     \
    \       number -= 1;\n        }\n    }\n    roman_numeral", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number > 0 {\n   \
    \     if number >= 1000 {\n            result.push('m');\n            number -=\
    \ 1000;\n        } else if number >= 900 {\n            result.push_str(\"cm\"\
    );\n            number -= 900;\n        } else if number >= 500 {\n          \
    \  result.push('d');\n            number -= 500;\n        } else if number >=\
    \ 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n  \
    \      } else if number >= 100 {\n            result.push('c');\n            number\
    \ -= 100;\n        } else if number >= 90 {\n            result.push_str(\"xc\"\
    );\n            number -= 90;\n        } else if number >= 50 {\n            result.push('l');\n\
    \            number -= 50;\n        } else if number >= 40 {\n            result.push_str(\"\
    xl\");\n            number -= 40;\n        } else if number >= 10 {\n        \
    \    result.push('x');\n            number -= 10;\n        } else if number >=\
    \ 9 {\n            result.push_str(\"ix\");\n            number -= 9;\n      \
    \  } else if number >= 5 {\n            result.push('v');\n            number\
    \ -= 5;\n        } else if number >= 4 {\n            result.push_str(\"iv\");\n\
    \            number -= 4;\n        } else if number >= 1 {\n            result.push('i');\n\
    \            number -= 1;\n        }\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut numeral_index =\
    \ 0;\n    while number > 0 {\n        let numeral = NUMERALS[numeral_index];\n\
    \        let value = VALUES[numeral_index];\n        if number >= value {\n  \
    \          result.push_str(numeral);\n            number -= value;\n        }\
    \ else {\n            numeral_index += 1;\n        }\n    }\n    result", "  \
    \  let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        if digit ==\
    \ 9 {\n            result.push_str(&ROMAN_DIGITS[i + 1]);\n            result.push_str(&ROMAN_DIGITS[i]);\n\
    \        } else if digit == 4 {\n            result.push_str(&ROMAN_DIGITS[i]);\n\
    \            result.push_str(&ROMAN_DIGITS[i + 1]);\n        } else {\n      \
    \      if digit >= 5 {\n                result.push_str(&ROMAN_DIGITS[i + 1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                result.push_str(&ROMAN_DIGITS[i]);\n            }\n        }\n\
    \        num /= 10;\n        i += 2;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let (one, five, ten) = match i {\n            0 => ('i', 'v', 'x'),\n\
    \            1 => ('x', 'l', 'c'),\n            2 => ('c', 'd', 'm'),\n      \
    \      3 => ('m', 'v', 'x'),\n            _ => panic!(\"Number too large\"),\n\
    \        };\n        match digit {\n            1 | 2 | 3 => result.push_str(&one.to_string().repeat(digit\
    \ as usize)),\n            4 => result.push_str(&format!(\"{}{}\", one, five)),\n\
    \            5 | 6 | 7 | 8 => result.push_str(&format!(\"{}{}\", five, one.to_string().repeat((digit\
    \ - 5) as usize))),\n            9 => result.push_str(&format!(\"{}{}\", one,\
    \ ten)),\n            _ => (),\n        }\n        i += 1;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = roman_digit.to_string() + &result;\n        i +=\
    \ 1;\n    }\n    result", "    let mut num = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while num > 0 {\n        if num >= 1000 {\n         \
    \   result.push('m');\n            num -= 1000;\n        } else if num >= 900\
    \ {\n            result.push_str(\"cm\");\n            num -= 900;\n        }\
    \ else if num >= 500 {\n            result.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            result.push_str(\"cd\");\n      \
    \      num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let mut roman_digit = String::new();\n\
    \        match digit {\n            1 => roman_digit.push('i'),\n            2\
    \ => roman_digit.push_str(\"ii\"),\n            3 => roman_digit.push_str(\"iii\"\
    ),\n            4 => roman_digit.push_str(\"iv\"),\n            5 => roman_digit.push('v'),\n\
    \            6 => roman_digit.push_str(\"vi\"),\n            7 => roman_digit.push_str(\"\
    vii\"),\n            8 => roman_digit.push_str(\"viii\"),\n            9 => roman_digit.push_str(\"\
    ix\"),\n            _ => (),\n        }\n        match i {\n            0 => (),\n\
    \            1 => roman_digit.push_str(\"x\"),\n            2 => roman_digit.push_str(\"\
    c\"),\n            3 => roman_digit.push_str(\"m\"),\n            _ => (),\n \
    \       }\n        result = roman_digit + &result;\n        i += 1;\n    }\n \
    \   result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push_str(\"m\");\n        num -= 1000;\n\
    \    }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -=\
    \ 900;\n    }\n    if num >= 500 {\n        result.push_str(\"d\");\n        num\
    \ -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n    \
    \    num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"c\"\
    );\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    while num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    while num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    while num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    while num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    while num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    while num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    while num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    while num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    while num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        match i {\n            0 => {\n                result = digit_to_mini_roman(digit,\
    \ \"i\", \"v\", \"x\") + &result;\n            }\n            1 => {\n       \
    \         result = digit_to_mini_roman(digit, \"x\", \"l\", \"c\") + &result;\n\
    \            }\n            2 => {\n                result = digit_to_mini_roman(digit,\
    \ \"c\", \"d\", \"m\") + &result;\n            }\n            3 => {\n       \
    \         result = digit_to_mini_roman(digit, \"m\", \"\", \"\") + &result;\n\
    \            }\n            _ => {\n                panic!(\"Number too large\"\
    );\n            }\n        }\n        i += 1;\n    }\n    result", "    let mut\
    \ result = String::new();\n    let mut number = number;\n    let mut index = 0;\n\
    \    while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        index\
    \ += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let roman_numerals = vec![\n        (\"m\", 1000),\n \
    \       (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n      \
    \  (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\"\
    , 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n    \
    \    (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral, value) in roman_numerals\
    \ {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= *value;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        num /= 10;\n\
    \        i += 1;\n    }\n    result", "    let mut result = String::new();\n \
    \   let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n    \
    \    let digit = number % 10;\n        number /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let (ones, fives, tens) =\
    \ match i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n      \
    \      _ => ('i', 'v', 'x'),\n        };\n        if digit <= 3 {\n          \
    \  result = format!(\"{}{}\", ones.to_string().repeat(digit as usize), result);\n\
    \        } else if digit == 4 {\n            result = format!(\"{}{}{}\", ones,\
    \ fives, result);\n        } else if digit == 5 {\n            result = format!(\"\
    {}{}\", fives, result);\n        } else if digit <= 8 {\n            result =\
    \ format!(\"{}{}{}\", fives, ones.to_string().repeat((digit - 5) as usize), result);\n\
    \        } else {\n            result = format!(\"{}{}{}\", ones, tens, result);\n\
    \        }\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n    \
    \    let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut num = number;\n    let mut result = String::new();\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        if digit == 4 {\n            result.insert(0, 'i');\n            result.insert(0,\
    \ 'v');\n        } else if digit == 9 {\n            result.insert(0, 'i');\n\
    \            result.insert(0, 'x');\n        } else if digit >= 5 {\n        \
    \    result.insert(0, 'v');\n            for _ in 0..digit - 5 {\n           \
    \     result.insert(0, 'i');\n            }\n        } else {\n            for\
    \ _ in 0..digit {\n                result.insert(0, 'i');\n            }\n   \
    \     }\n        i += 1;\n        if i == 2 {\n            result = result.replace(\"\
    iiiii\", \"v\");\n            result = result.replace(\"iiii\", \"iv\");\n   \
    \         result = result.replace(\"vv\", \"x\");\n            result = result.replace(\"\
    viv\", \"ix\");\n        } else if i == 3 {\n            result = result.replace(\"\
    iiiiiiiiii\", \"x\");\n            result = result.replace(\"iiiiiiiii\", \"ix\"\
    );\n            result = result.replace(\"xxxxxxxxx\", \"c\");\n            result\
    \ = result.replace(\"xxxxxxxx\", \"xc\");\n        } else if i == 4 {\n      \
    \      result = result.replace(\"iiiiiiiiiiiiiiiiiiii\", \"c\");\n           \
    \ result = result.replace(\"iiiiiiiiiiiiiiiiiii\", \"ixc\");\n            result\
    \ = result.replace(\"cccccccccc\", \"m\");\n            result = result.replace(\"\
    ccccccccc\", \"cm\");\n        } else if i == 5 {\n            result = result.replace(\"\
    iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n      \
    \      _ => ('i', 'v', 'x'),\n        };\n        match digit {\n            1\
    \ => result.push(ones),\n            2 => result.push_str(&format!(\"{}{}\", ones,\
    \ ones)),\n            3 => result.push_str(&format!(\"{}{}{}\", ones, ones, ones)),\n\
    \            4 => result.push_str(&format!(\"{}{}\", ones, fives)),\n        \
    \    5 => result.push(fives),\n            6 => result.push_str(&format!(\"{}{}\"\
    , fives, ones)),\n            7 => result.push_str(&format!(\"{}{}{}\", fives,\
    \ ones, ones)),\n            8 => result.push_str(&format!(\"{}{}{}{}\", fives,\
    \ ones, ones, ones)),\n            9 => result.push_str(&format!(\"{}{}\", ones,\
    \ tens)),\n            _ => (),\n        }\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut num\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ num > 0 {\n        let digit = num % 10;\n        let mut roman = String::new();\n\
    \        if digit == 9 {\n            roman.push_str(&ROMAN_DIGITS[i + 1]);\n\
    \            roman.push_str(&ROMAN_DIGITS[i]);\n        } else if digit == 4 {\n\
    \            roman.push_str(&ROMAN_DIGITS[i]);\n            roman.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n        } else {\n            if digit >= 5 {\n                roman.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n                digit -= 5;\n            }\n            for _ in 0..digit\
    \ {\n                roman.push_str(&ROMAN_DIGITS[i]);\n            }\n      \
    \  }\n        result = roman + &result;\n        num /= 10;\n        i += 2;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result"]
stop_tokens:
- "\n}"

name: HumanEval_156_int_to_mini_roman
language: rs
prompt: "/// Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  /// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n/// Examples:\n\
  /// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>> int_to_mini_roman(152)\n\
  /// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n/// String::from(\"\
  cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        let roman_digit = match digit {\n            1\
    \ => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n           \
    \ 4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n          \
    \  7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n     \
    \       _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        result =\
    \ mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        i\
    \ += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while number > 0 {\n        let digit\
    \ = number % 10;\n        number /= 10;\n        let mut digit_str = String::new();\n\
    \        match digit {\n            1 => digit_str.push('i'),\n            2 =>\
    \ digit_str.push_str(\"ii\"),\n            3 => digit_str.push_str(\"iii\"),\n\
    \            4 => digit_str.push_str(\"iv\"),\n            5 => digit_str.push('v'),\n\
    \            6 => digit_str.push_str(\"vi\"),\n            7 => digit_str.push_str(\"\
    vii\"),\n            8 => digit_str.push_str(\"viii\"),\n            9 => digit_str.push_str(\"\
    ix\"),\n            _ => (),\n        }\n        match i {\n            0 => (),\n\
    \            1 => digit_str = digit_str.replace(\"i\", \"x\"),\n            2\
    \ => digit_str = digit_str.replace(\"i\", \"c\"),\n            3 => digit_str\
    \ = digit_str.replace(\"i\", \"m\"),\n            _ => (),\n        }\n      \
    \  result = digit_str + &result;\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    while num > 0 {\n\
    \        if num >= 1000 {\n            result.push('m');\n            num -= 1000;\n\
    \        } else if num >= 900 {\n            result.push_str(\"cm\");\n      \
    \      num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', '?', '?'),\n      \
    \      _ => panic!(\"number too large\"),\n        };\n        match digit {\n\
    \            0 => (),\n            1 => result.push(ones),\n            2 => result.push_str(&[ones,\
    \ ones].iter().collect::<String>()),\n            3 => result.push_str(&[ones,\
    \ ones, ones].iter().collect::<String>()),\n            4 => result.push_str(&[ones,\
    \ fives].iter().collect::<String>()),\n            5 => result.push(fives),\n\
    \            6 => result.push_str(&[fives, ones].iter().collect::<String>()),\n\
    \            7 => result.push_str(&[fives, ones, ones].iter().collect::<String>()),\n\
    \            8 => result.push_str(&[fives, ones, ones, ones].iter().collect::<String>()),\n\
    \            9 => result.push_str(&[ones, tens].iter().collect::<String>()),\n\
    \            _ => panic!(\"number too large\"),\n        }\n        i += 1;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut number\
    \ = number;\n    while number > 0 {\n        if number >= 1000 {\n           \
    \ result.push('m');\n            number -= 1000;\n        } else if number >=\
    \ 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n  \
    \      } else if number >= 500 {\n            result.push('d');\n            number\
    \ -= 500;\n        } else if number >= 400 {\n            result.push_str(\"cd\"\
    );\n            number -= 400;\n        } else if number >= 100 {\n          \
    \  result.push('c');\n            number -= 100;\n        } else if number >=\
    \ 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n    \
    \    } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        result = format!(\"{}{}\", mini_roman_digit(digit,\
    \ i), result);\n        num /= 10;\n        i += 1;\n    }\n    result", "   \
    \ let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        if digit ==\
    \ 4 {\n            result.insert(0, ROMAN_DIGITS[i + 1]);\n            result.insert(0,\
    \ ROMAN_DIGITS[i]);\n        } else if digit == 9 {\n            result.insert(0,\
    \ ROMAN_DIGITS[i + 2]);\n            result.insert(0, ROMAN_DIGITS[i]);\n    \
    \    } else if digit >= 5 {\n            result.insert(0, ROMAN_DIGITS[i + 1]);\n\
    \            for _ in 0..digit - 5 {\n                result.insert(0, ROMAN_DIGITS[i]);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.insert(0, ROMAN_DIGITS[i]);\n            }\n        }\n        num\
    \ /= 10;\n        i += 2;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    while number > 0 {\n        if number\
    \ >= 1000 {\n            result.push('m');\n            number -= 1000;\n    \
    \    } else if number >= 900 {\n            result.push_str(\"cm\");\n       \
    \     number -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        num /= 10;\n        i +=\
    \ 1;\n    }\n    result", "    let mut result = String::new();\n    let mut num\
    \ = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit = num\
    \ % 10;\n        num /= 10;\n        let roman_digit = match digit {\n       \
    \     1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n     \
    \       4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n    \
    \        7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n\
    \            _ => \"\",\n        };\n        result = roman_digit.to_string()\
    \ + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result"]
stop_tokens:
- "\n}"

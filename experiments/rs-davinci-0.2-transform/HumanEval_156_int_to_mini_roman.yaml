name: HumanEval_156_int_to_mini_roman
language: rs
prompt: "/// Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  /// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n/// Examples:\n\
  /// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>> int_to_mini_roman(152)\n\
  /// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n/// String::from(\"\
  cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!(candidate(19),\
  \ String::from(\"xix\"));\n    assert_eq!(candidate(152), String::from(\"clii\"\
  ));\n    assert_eq!(candidate(251), String::from(\"ccli\"));\n    assert_eq!(candidate(426),\
  \ String::from(\"cdxxvi\"));\n    assert_eq!(candidate(500), String::from(\"d\"\
  ));\n    assert_eq!(candidate(1), String::from(\"i\"));\n    assert_eq!(candidate(4),\
  \ String::from(\"iv\"));\n    assert_eq!(candidate(43), String::from(\"xliii\"));\n\
  \    assert_eq!(candidate(90), String::from(\"xc\"));\n    assert_eq!(candidate(94),\
  \ String::from(\"xciv\"));\n    assert_eq!(candidate(532), String::from(\"dxxxii\"\
  ));\n    assert_eq!(candidate(900), String::from(\"cm\"));\n    assert_eq!(candidate(994),\
  \ String::from(\"cmxciv\"));\n    assert_eq!(candidate(1000), String::from(\"m\"\
  ));\n}\n"
completions: ["    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    let mut roman_numerals = vec![\n        \"i\", \"ii\"\
    , \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\", \"x\", \"xi\", \"\
    xii\", \"xiii\", \"xiv\",\n        \"xv\", \"xvi\", \"xvii\", \"xviii\", \"xix\"\
    , \"xx\", \"xxi\", \"xxii\", \"xxiii\", \"xxiv\", \"xxv\", \"xxvi\",\n       \
    \ \"xxvii\", \"xxviii\", \"xxix\", \"xxx\", \"xxxi\", \"xxxii\", \"xxxiii\", \"\
    xxxiv\", \"xxxv\", \"xxxvi\",\n        \"xxxvii\", \"xxxviii\", \"xxxix\", \"\
    xl\", \"xli\", \"xlii\", \"xliii\", \"xliv\", \"xlv\", \"xlvi\", \"xlvii\",\n\
    \        \"xlviii\", \"xlix\", \"l\", \"li\", \"lii\", \"liii\", \"liv\", \"lv\"\
    , \"lvi\", \"lvii\", \"lviii\", \"lix\", \"lx\",\n        \"lxi\", \"lxii\", \"\
    lxiii\", \"lxiv\", \"lxv\", \"lxvi\", \"lxvii\", \"lxviii\", \"lxix\", \"lxx\"\
    , \"lxxi\",\n        \"lxxii\", \"lxxiii\", \"lxxiv\", \"lxxv\", \"lxxvi\", \"\
    lxxvii\", \"lxxviii\", \"lxxix\", \"lxxx\", \"lxxxi\",\n        \"lxxxii\", \"\
    lxxxiii\", \"lxxxiv\", \"lxxxv\", \"lxxxvi\", \"lxxxvii\", \"lxxxviii\", \"lxxxix\"\
    , \"xc\",\n        \"xci\", \"xcii\", \"xciii\", \"xciv\", \"xcv\", \"xcvi\",\
    \ \"xcvii\", \"xcviii\", \"xcix\", \"c\", \"ci\", \"cii\",\n        \"ciii\",\
    \ \"civ\", \"cv\", \"cvi", "    let mut result = String::new();\n    let mut num\
    \ = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    while num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    while num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    while num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    while num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    while num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    while num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    while num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    while num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    while num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        if digit ==\
    \ 9 {\n            result.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n            result.push_str(&MINI_ROMAN_DIGITS[i]);\n\
    \        } else if digit == 4 {\n            result.push_str(&MINI_ROMAN_DIGITS[i\
    \ + 1]);\n            result.push_str(&MINI_ROMAN_DIGITS[i]);\n        } else\
    \ if digit >= 5 {\n            result.push_str(&MINI_ROMAN_DIGITS[i + 1]);\n \
    \           for _ in 0..digit - 5 {\n                result.push_str(&MINI_ROMAN_DIGITS[i]);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.push_str(&MINI_ROMAN_DIGITS[i]);\n            }\n        }\n   \
    \     num /= 10;\n        i += 2;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        i\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    while number > 0 {\n        if number >= 1000 {\n    \
    \        result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 4 {\n           \
    \ result.insert(0, ROMAN_DIGITS[i][0]);\n            result.insert(0, ROMAN_DIGITS[i][1]);\n\
    \        } else if digit == 9 {\n            result.insert(0, ROMAN_DIGITS[i][2]);\n\
    \            result.insert(0, ROMAN_DIGITS[i][0]);\n        } else {\n       \
    \     if digit >= 5 {\n                result.insert(0, ROMAN_DIGITS[i][1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                result.insert(0, ROMAN_DIGITS[i][0]);\n            }\n      \
    \  }\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        num /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ index = 0;\n    while number > 0 {\n        let digit = number % 10;\n     \
    \   number /= 10;\n        if digit > 0 {\n            result = format!(\"{}{}\"\
    , ROMAN_DIGITS[index][digit as usize - 1], result);\n        }\n        index\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        if digit == 0 {\n           \
    \ i += 1;\n            continue;\n        }\n        let roman_digit = match i\
    \ {\n            0 => match digit {\n                1 => \"i\",\n           \
    \     2 => \"ii\",\n                3 => \"iii\",\n                4 => \"iv\"\
    ,\n                5 => \"v\",\n                6 => \"vi\",\n               \
    \ 7 => \"vii\",\n                8 => \"viii\",\n                9 => \"ix\",\n\
    \                _ => \"\",\n            },\n            1 => match digit {\n\
    \                1 => \"x\",\n                2 => \"xx\",\n                3\
    \ => \"xxx\",\n                4 => \"xl\",\n                5 => \"l\",\n   \
    \             6 => \"lx\",\n                7 => \"lxx\",\n                8 =>\
    \ \"lxxx\",\n                9 => \"xc\",\n                _ => \"\",\n      \
    \      },\n            2 => match digit {\n                1 => \"c\",\n     \
    \           2 => \"cc\",\n                3 => \"ccc\",\n                4 =>\
    \ \"cd\",\n                5 => \"d\",\n                6 => \"dc\",\n       \
    \         7 => \"dcc\",\n                8 => \"dccc\",\n                9 =>\
    \ \"cm\",\n                _ => \"\",\n            },\n            3 => match\
    \ digit {\n                1 => \"m\",\n                2 => \"mm\",\n       \
    \         3 => \"mmm\",\n                _ => \"\",\n            },\n        \
    \    _ => \"\",\n        };\n        result.insert_str(0, roman_digit);\n    \
    \    i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        let roman_digit = match digit {\n \
    \           0 => \"\",\n            1 => \"i\",\n            2 => \"ii\",\n  \
    \          3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n\
    \            6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\"\
    ,\n            9 => \"ix\",\n            _ => panic!(\"Invalid digit\"),\n   \
    \     };\n        result = roman_digit.to_string() + &result;\n        i += 1;\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let mut digit = num % 10;\n\
    \        num /= 10;\n        let mut roman_digit = String::new();\n        if\
    \ digit == 4 {\n            roman_digit.push(ROMAN_DIGITS[i][0]);\n          \
    \  roman_digit.push(ROMAN_DIGITS[i][1]);\n        } else if digit == 9 {\n   \
    \         roman_digit.push(ROMAN_DIGITS[i][0]);\n            roman_digit.push(ROMAN_DIGITS[i\
    \ + 1][0]);\n        } else {\n            if digit >= 5 {\n                roman_digit.push(ROMAN_DIGITS[i][1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                roman_digit.push(ROMAN_DIGITS[i][0]);\n            }\n      \
    \  }\n        result = roman_digit + &result;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n      \
    \      _ => (' ', ' ', ' '),\n        };\n        match digit {\n            1\
    \ => result.push(ones),\n            2 => result.push_str(&format!(\"{}{}\", ones,\
    \ ones)),\n            3 => result.push_str(&format!(\"{}{}{}\", ones, ones, ones)),\n\
    \            4 => result.push_str(&format!(\"{}{}\", ones, fives)),\n        \
    \    5 => result.push(fives),\n            6 => result.push_str(&format!(\"{}{}\"\
    , fives, ones)),\n            7 => result.push_str(&format!(\"{}{}{}\", fives,\
    \ ones, ones)),\n            8 => result.push_str(&format!(\"{}{}{}{}\", fives,\
    \ ones, ones, ones)),\n            9 => result.push_str(&format!(\"{}{}\", ones,\
    \ tens)),\n            _ => (),\n        }\n        i += 1;\n    }\n    result",
  "    let mut num = number;\n    let mut result = String::new();\n    let symbols\
    \ = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (symbol, value) in symbols {\n        while num >= value {\n        \
    \    result.push_str(symbol);\n            num -= value;\n        }\n    }\n \
    \   result", "    let mut result = String::new();\n    let mut number = number;\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        result.insert_str(0, &mini_roman_digit(digit,\
    \ i));\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        result = mini_roman_digit(digit, i) +\
    \ &result;\n        number /= 10;\n        i += 1;\n    }\n    result", "    let\
    \ mut num = number;\n    let mut result = String::new();\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        let digit_str\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", digit_str, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n        i +=\
    \ 1;\n    }\n    result", "    let mut result = String::new();\n    let mut num\
    \ = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        result =\
    \ match digit {\n            1 => format!(\"i{}\", result),\n            2 =>\
    \ format!(\"ii{}\", result),\n            3 => format!(\"iii{}\", result),\n \
    \           4 => format!(\"iv{}\", result),\n            5 => format!(\"v{}\"\
    , result),\n            6 => format!(\"vi{}\", result),\n            7 => format!(\"\
    vii{}\", result),\n            8 => format!(\"viii{}\", result),\n           \
    \ 9 => format!(\"ix{}\", result),\n            _ => result,\n        };\n    \
    \    i += 1;\n        if i == 2 {\n            result = match number % 10 {\n\
    \                1 => format!(\"x{}\", result),\n                2 => format!(\"\
    xx{}\", result),\n                3 => format!(\"xxx{}\", result),\n         \
    \       4 => format!(\"xl{}\", result),\n                5 => format!(\"l{}\"\
    , result),\n                6 => format!(\"lx{}\", result),\n                7\
    \ => format!(\"lxx{}\", result),\n                8 => format!(\"lxxx{}\", result),\n\
    \                9 => format!(\"xc{}\", result),\n                _ => result,\n\
    \            };\n            number /= 10;\n        }\n        if i == 3 {\n \
    \           result = match number % 10 {\n                1 => format!(\"c{}\"\
    , result),\n                2 => format!(\"cc{}\", result),\n                3\
    \ => format!(\"ccc{}\", result),\n                4 => format!(\"cd{}\", result),\n\
    \                5 => format!(\"d{}\", result),\n                6 => format!(\"\
    dc{}\", result),\n                7 => format!(\"dcc{}\", result),\n         \
    \       8 => format!(\"dccc{}\", result),\n                9 => format!(\"cm{}\"\
    , result),\n                _ => result,\n            };\n            number /=\
    \ 10;\n        }\n        if i == 4 {\n            result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        let roman_digit = match digit {\n\
    \            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n\
    \            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n\
    \            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\"\
    ,\n            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        number /= 10;\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ index = 0;\n    while number > 0 {\n        let digit = number % 10;\n     \
    \   number /= 10;\n        match digit {\n            1 => result.insert_str(0,\
    \ &ROMAN_DIGITS[index][0]),\n            2 => result.insert_str(0, &ROMAN_DIGITS[index][0].repeat(2)),\n\
    \            3 => result.insert_str(0, &ROMAN_DIGITS[index][0].repeat(3)),\n \
    \           4 => result.insert_str(0, &ROMAN_DIGITS[index][0] + &ROMAN_DIGITS[index][1]),\n\
    \            5 => result.insert_str(0, &ROMAN_DIGITS[index][1]),\n           \
    \ 6 => result.insert_str(0, &ROMAN_DIGITS[index][1] + &ROMAN_DIGITS[index][0]),\n\
    \            7 => result.insert_str(0, &ROMAN_DIGITS[index][1] + &ROMAN_DIGITS[index][0].repeat(2)),\n\
    \            8 => result.insert_str(0, &ROMAN_DIGITS[index][1] + &ROMAN_DIGITS[index][0].repeat(3)),\n\
    \            9 => result.insert_str(0, &ROMAN_DIGITS[index][0] + &ROMAN_DIGITS[index][2]),\n\
    \            _ => (),\n        }\n        index += 1;\n    }\n    result", " \
    \   let mut result = String::new();\n    let mut num = number;\n    while num\
    \ > 0 {\n        if num >= 1000 {\n            result.push('m');\n           \
    \ num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut index = 0;\n    while number > 0 {\n\
    \        let digit = number % 10;\n        if digit > 0 {\n            result.insert_str(0,\
    \ &mini_roman_digit(digit, index));\n        }\n        number /= 10;\n      \
    \  index += 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  if number >= 1000 {\n            result.push('m');\n            number -= 1000;\n\
    \        } else if number >= 900 {\n            result.push_str(\"cm\");\n   \
    \         number -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n        i +=\
    \ 1;\n    }\n    result", "    let mut result = String::new();\n    let mut number\
    \ = number;\n    let mut i = 0;\n    while number > 0 {\n        let digit = number\
    \ % 10;\n        number /= 10;\n        if digit == 0 {\n            i += 1;\n\
    \            continue;\n        }\n        let roman_digit = match i {\n     \
    \       0 => match digit {\n                1 => \"i\",\n                2 =>\
    \ \"ii\",\n                3 => \"iii\",\n                4 => \"iv\",\n     \
    \           5 => \"v\",\n                6 => \"vi\",\n                7 => \"\
    vii\",\n                8 => \"viii\",\n                9 => \"ix\",\n       \
    \         _ => \"\",\n            },\n            1 => match digit {\n       \
    \         1 => \"x\",\n                2 => \"xx\",\n                3 => \"xxx\"\
    ,\n                4 => \"xl\",\n                5 => \"l\",\n               \
    \ 6 => \"lx\",\n                7 => \"lxx\",\n                8 => \"lxxx\",\n\
    \                9 => \"xc\",\n                _ => \"\",\n            },\n  \
    \          2 => match digit {\n                1 => \"c\",\n                2\
    \ => \"cc\",\n                3 => \"ccc\",\n                4 => \"cd\",\n  \
    \              5 => \"d\",\n                6 => \"dc\",\n                7 =>\
    \ \"dcc\",\n                8 => \"dccc\",\n                9 => \"cm\",\n   \
    \             _ => \"\",\n            },\n            3 => match digit {\n   \
    \             1 => \"m\",\n                2 => \"mm\",\n                3 =>\
    \ \"mmm\",\n                _ => \"\",\n            },\n            _ => \"\"\
    ,\n        };\n        result.insert_str(0, roman_digit);\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match\
    \ i {\n            0 => (String::from(\"i\"), String::from(\"v\"), String::from(\"\
    x\")),\n            1 => (String::from(\"x\"), String::from(\"l\"), String::from(\"\
    c\")),\n            2 => (String::from(\"c\"), String::from(\"d\"), String::from(\"\
    m\")),\n            3 => (String::from(\"m\"), String::from(\"v\"), String::from(\"\
    x\")),\n            _ => (String::new(), String::new(), String::new()),\n    \
    \    };\n        match digit {\n            1 => result.insert_str(0, &ones),\n\
    \            2 => result.insert_str(0, &ones.repeat(2)),\n            3 => result.insert_str(0,\
    \ &ones.repeat(3)),\n            4 => {\n                result.insert_str(0,\
    \ &ones);\n                result.insert_str(0, &fives);\n            }\n    \
    \        5 => result.insert_str(0, &fives),\n            6 => {\n            \
    \    result.insert_str(0, &ones);\n                result.insert_str(0, &fives);\n\
    \            }\n            7 => {\n                result.insert_str(0, &ones.repeat(2));\n\
    \                result.insert_str(0, &fives);\n            }\n            8 =>\
    \ {\n                result.insert_str(0, &ones.repeat(3));\n                result.insert_str(0,\
    \ &fives);\n            }\n            9 => {\n                result.insert_str(0,\
    \ &ones);\n                result.insert_str(0, &tens);\n            }\n     \
    \       _ => (),\n        }\n        i += 1;\n    }\n    result", "    let mut\
    \ number = number;\n    let mut result = String::new();\n    let mut i = 0;\n\
    \    while number > 0 {\n        if number >= 1000 {\n            result.push('m');\n\
    \            number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut symbols = vec![\n        (\"\
    m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n\
    \        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"\
    xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n\
    \        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    while number > 0 {\n \
    \       let (symbol, value) = symbols.pop().unwrap();\n        while number >=\
    \ value {\n            result.push_str(symbol);\n            number -= value;\n\
    \        }\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match digit\
    \ {\n            0 => (' ', ' ', ' '),\n            1 => ('i', 'v', 'x'),\n  \
    \          2 => ('i', 'v', 'x'),\n            3 => ('i', 'v', 'x'),\n        \
    \    4 => ('i', 'v', 'x'),\n            5 => (' ', 'v', 'x'),\n            6 =>\
    \ ('i', 'v', 'x'),\n            7 => ('i', 'v', 'x'),\n            8 => ('i',\
    \ 'v', 'x'),\n            9 => ('i', 'v', 'x'),\n            _ => panic!(\"Invalid\
    \ digit: {}\", digit),\n        };\n        result.insert(0, tens);\n        result.insert(0,\
    \ fives);\n        result.insert(0, ones);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    if number\
    \ >= 1000 {\n        result.push_str(\"m\");\n        number -= 1000;\n    }\n\
    \    if number >= 900 {\n        result.push_str(\"cm\");\n        number -= 900;\n\
    \    }\n    if number >= 500 {\n        result.push_str(\"d\");\n        number\
    \ -= 500;\n    }\n    if number >= 400 {\n        result.push_str(\"cd\");\n \
    \       number -= 400;\n    }\n    if number >= 100 {\n        result.push_str(\"\
    c\");\n        number -= 100;\n    }\n    if number >= 90 {\n        result.push_str(\"\
    xc\");\n        number -= 90;\n    }\n    if number >= 50 {\n        result.push_str(\"\
    l\");\n        number -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"\
    xl\");\n        number -= 40;\n    }\n    if number >= 10 {\n        result.push_str(\"\
    x\");\n        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push_str(\"\
    v\");\n        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    if number >= 1 {\n        result.push_str(\"\
    i\");\n        number -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut remaining = number;\n    let mut digit = 0;\n    while remaining\
    \ > 0 {\n        let digit_value = 10_isize.pow(digit);\n        let digit_char\
    \ = match remaining / digit_value {\n            0 => ' ',\n            1 => 'i',\n\
    \            2 => 'x',\n            3 => 'c',\n            4 => 'm',\n       \
    \     _ => panic!(\"Invalid digit value\"),\n        };\n        result.push(digit_char);\n\
    \        remaining = remaining % digit_value;\n        digit += 1;\n    }\n  \
    \  result.replace(\" \", \"\")", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        let mut roman_digit = String::new();\n        if digit\
    \ == 4 {\n            roman_digit.push(ROMAN_DIGITS[i + 1]);\n            roman_digit.push(ROMAN_DIGITS[i]);\n\
    \        } else if digit == 9 {\n            roman_digit.push(ROMAN_DIGITS[i +\
    \ 2]);\n            roman_digit.push(ROMAN_DIGITS[i]);\n        } else {\n   \
    \         if digit >= 5 {\n                roman_digit.push(ROMAN_DIGITS[i + 1]);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                roman_digit.push(ROMAN_DIGITS[i]);\n            }\n        }\n\
    \        result = roman_digit + &result;\n        num /= 10;\n        i += 2;\n\
    \    }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    while number > 0 {\n        let digit = number % 10;\n\
    \        number /= 10;\n        let (one, five, ten) = match i {\n           \
    \ 0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n            2 => ('c',\
    \ 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n            _ => panic!(\"Number\
    \ too large\"),\n        };\n        match digit {\n            1 => result.push(one),\n\
    \            2 => result.push_str(&format!(\"{}{}\", one, one)),\n           \
    \ 3 => result.push_str(&format!(\"{}{}{}\", one, one, one)),\n            4 =>\
    \ result.push_str(&format!(\"{}{}\", one, five)),\n            5 => result.push(five),\n\
    \            6 => result.push_str(&format!(\"{}{}\", five, one)),\n          \
    \  7 => result.push_str(&format!(\"{}{}{}\", five, one, one)),\n            8\
    \ => result.push_str(&format!(\"{}{}{}{}\", five, one, one, one)),\n         \
    \   9 => result.push_str(&format!(\"{}{}\", one, ten)),\n            _ => (),\n\
    \        }\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    while number > 0 {\n\
    \        let digit_value = number % 10;\n        number /= 10;\n        match\
    \ digit {\n            0 => {\n                result = mini_roman_digit(digit_value,\
    \ 'i', 'v', 'x') + &result;\n            }\n            1 => {\n             \
    \   result = mini_roman_digit(digit_value, 'x', 'l', 'c') + &result;\n       \
    \     }\n            2 => {\n                result = mini_roman_digit(digit_value,\
    \ 'c', 'd', 'm') + &result;\n            }\n            3 => {\n             \
    \   result = mini_roman_digit(digit_value, 'm', 'v', 'x') + &result;\n       \
    \     }\n            _ => {}\n        }\n        digit += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num >= 1000 {\n        result.push_str(\"m\");\n        num -= 1000;\n\
    \    }\n    if num >= 900 {\n        result.push_str(\"cm\");\n        num -=\
    \ 900;\n    }\n    if num >= 500 {\n        result.push_str(\"d\");\n        num\
    \ -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"cd\");\n    \
    \    num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"c\"\
    );\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >=\
    \ 1000 {\n        result.push_str(\"m\");\n        num -= 1000;\n    }\n    if\
    \ num >= 900 {\n        result.push_str(\"cm\");\n        num -= 900;\n    }\n\
    \    if num >= 500 {\n        result.push_str(\"d\");\n        num -= 500;\n \
    \   }\n    if num >= 400 {\n        result.push_str(\"cd\");\n        num -= 400;\n\
    \    }\n    while num >= 100 {\n        result.push_str(\"c\");\n        num -=\
    \ 100;\n    }\n    if num >= 90 {\n        result.push_str(\"xc\");\n        num\
    \ -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"l\");\n       \
    \ num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"xl\");\n  \
    \      num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"x\"\
    );\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"ix\"\
    );\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"v\"\
    );\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"iv\"\
    );\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut roman_numerals = vec![\n   \
    \     (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"\
    cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n\
    \        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"\
    v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    while number\
    \ > 0 {\n        for (numeral, value) in roman_numerals.iter() {\n           \
    \ if number >= *value {\n                result.push_str(numeral);\n         \
    \       number -= *value;\n                break;\n            }\n        }\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n    \
    \    i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n         \
    \   result.push('m');\n            num -= 1000;\n        } else if num >= 900\
    \ {\n            result.push_str(\"cm\");\n            num -= 900;\n        }\
    \ else if num >= 500 {\n            result.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            result.push_str(\"cd\");\n      \
    \      num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let mut roman_digit = String::new();\n\
    \        match digit {\n            1 => roman_digit.push('i'),\n            2\
    \ => roman_digit.push_str(\"ii\"),\n            3 => roman_digit.push_str(\"iii\"\
    ),\n            4 => roman_digit.push_str(\"iv\"),\n            5 => roman_digit.push('v'),\n\
    \            6 => roman_digit.push_str(\"vi\"),\n            7 => roman_digit.push_str(\"\
    vii\"),\n            8 => roman_digit.push_str(\"viii\"),\n            9 => roman_digit.push_str(\"\
    ix\"),\n            _ => (),\n        }\n        match i {\n            0 => result.push_str(&roman_digit),\n\
    \            1 => result.push_str(&roman_digit.replace(\"i\", \"x\")),\n     \
    \       2 => result.push_str(&roman_digit.replace(\"i\", \"c\")),\n          \
    \  3 => result.push_str(&roman_digit.replace(\"i\", \"m\")),\n            _ =>\
    \ (),\n        }\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let digit_str\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", digit_str, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let (one, five, ten) = ROMAN_DIGITS[i];\n        match digit {\n    \
    \        0 => (),\n            1 => result.push(one),\n            2 => result.push_str(&format!(\"\
    {}{}\", one, one)),\n            3 => result.push_str(&format!(\"{}{}{}\", one,\
    \ one, one)),\n            4 => result.push_str(&format!(\"{}{}\", one, five)),\n\
    \            5 => result.push(five),\n            6 => result.push_str(&format!(\"\
    {}{}\", five, one)),\n            7 => result.push_str(&format!(\"{}{}{}\", five,\
    \ one, one)),\n            8 => result.push_str(&format!(\"{}{}{}{}\", five, one,\
    \ one, one)),\n            9 => result.push_str(&format!(\"{}{}\", one, ten)),\n\
    \            _ => panic!(\"Invalid digit: {}\", digit),\n        }\n        i\
    \ += 1;\n    }\n    result.chars().rev().collect()", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut digit = 0;\n    let mut roman_digit\
    \ = String::new();\n    while number > 0 {\n        digit = number % 10;\n   \
    \     number /= 10;\n        roman_digit = match digit {\n            1 => String::from(\"\
    i\"),\n            2 => String::from(\"ii\"),\n            3 => String::from(\"\
    iii\"),\n            4 => String::from(\"iv\"),\n            5 => String::from(\"\
    v\"),\n            6 => String::from(\"vi\"),\n            7 => String::from(\"\
    vii\"),\n            8 => String::from(\"viii\"),\n            9 => String::from(\"\
    ix\"),\n            _ => String::new(),\n        };\n        result = roman_digit\
    \ + &result;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut number = number;\n    let mut i = 0;\n    while number > 0 {\n        let\
    \ digit = number % 10;\n        if digit > 0 {\n            result.insert_str(0,\
    \ &mini_roman_digit(digit, i));\n        }\n        number /= 10;\n        i +=\
    \ 1;\n    }\n    result", "    let mut result = String::new();\n    let mut num\
    \ = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit = num\
    \ % 10;\n        num /= 10;\n        let roman_digit = match digit {\n       \
    \     1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n     \
    \       4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n    \
    \        7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n\
    \            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut num = number;\n    let mut result\
    \ = String::new();\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        let roman_digit = match digit {\n \
    \           1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n\
    \            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n\
    \            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\"\
    ,\n            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        i += 1;\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut num_of_digits = 0;\n    while num > 0\
    \ {\n        num_of_digits += 1;\n        num /= 10;\n    }\n    num = number;\n\
    \    for _ in 0..num_of_digits {\n        let digit = num % 10;\n        num /=\
    \ 10;\n        match digit {\n            1 => result.push('i'),\n           \
    \ 2 => result.push_str(\"ii\"),\n            3 => result.push_str(\"iii\"),\n\
    \            4 => result.push_str(\"iv\"),\n            5 => result.push('v'),\n\
    \            6 => result.push_str(\"vi\"),\n            7 => result.push_str(\"\
    vii\"),\n            8 => result.push_str(\"viii\"),\n            9 => result.push_str(\"\
    ix\"),\n            _ => (),\n        }\n    }\n    result", "    let mut roman\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            roman.push('m');\n            num -= 1000;\n    \
    \    } else if num >= 900 {\n            roman.push_str(\"cm\");\n           \
    \ num -= 900;\n        } else if num >= 500 {\n            roman.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            roman.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            roman.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            roman.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            roman.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            roman.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            roman.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            roman.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            roman.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            roman.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            roman.push('i');\n\
    \            num -= 1;\n        }\n    }\n    roman", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let roman_digit = match digit {\n            1 => \"\
    i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 => \"\
    iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 => \"\
    vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n            _ =>\
    \ \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        i += 1;\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut number = number;\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        result = mini_roman_digit(digit, i) + &result;\n        i +=\
    \ 1;\n    }\n    result", "    let mut roman_string = String::new();\n    let\
    \ mut number = number;\n    let mut i = 0;\n    while number > 0 {\n        let\
    \ digit = number % 10;\n        number /= 10;\n        roman_string = format!(\"\
    {}{}\", mini_roman_digit(digit, i), roman_string);\n        i += 1;\n    }\n \
    \   roman_string", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        let roman_digit = match digit {\n            1 =>\
    \ \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 =>\
    \ \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 =>\
    \ \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n           \
    \ _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        num /= 10;\n        i += 1;\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        num /= 10;\n        result = match digit\
    \ {\n            0 => result,\n            1 => format!(\"{}{}\", ROMAN_DIGITS[i][0],\
    \ result),\n            2 => format!(\"{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n\
    \            3 => format!(\"{}{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][0]),\n            4 => format!(\"{}{}\", ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][1]),\n            5 => format!(\"{}\", ROMAN_DIGITS[i][1]),\n\
    \            6 => format!(\"{}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0]),\n\
    \            7 => format!(\"{}{}{}\", ROMAN_DIGITS[i][1], ROMAN_DIGITS[i][0],\
    \ ROMAN_DIGITS[i][0]),\n            8 => format!(\"{}{}{}{}\", ROMAN_DIGITS[i][1],\
    \ ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][0]),\n            9\
    \ => format!(\"{}{}\", ROMAN_DIGITS[i][0], ROMAN_DIGITS[i][2]),\n            _\
    \ => panic!(\"Invalid digit: {}\", digit),\n        };\n        i += 1;\n    }\n\
    \    result", "    let mut result = String::new();\n    let mut number = number;\n\
    \    while number > 0 {\n        if number >= 1000 {\n            result.push('m');\n\
    \            number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        i\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        match i {\n            0 => {\n\
    \                for _ in 0..digit {\n                    result.push('i');\n\
    \                }\n            }\n            1 => {\n                if digit\
    \ == 4 {\n                    result.insert(0, 'v');\n                } else if\
    \ digit == 9 {\n                    result.insert(0, 'x');\n                }\
    \ else {\n                    for _ in 0..digit {\n                        result.insert(0,\
    \ 'x');\n                    }\n                }\n            }\n           \
    \ 2 => {\n                if digit == 4 {\n                    result.insert(0,\
    \ 'l');\n                } else if digit == 9 {\n                    result.insert(0,\
    \ 'c');\n                } else {\n                    for _ in 0..digit {\n \
    \                       result.insert(0, 'c');\n                    }\n      \
    \          }\n            }\n            3 => {\n                if digit == 4\
    \ {\n                    result.insert(0, 'd');\n                } else if digit\
    \ == 9 {\n                    result.insert(0, 'm');\n                } else {\n\
    \                    for _ in 0..digit {\n                        result.insert(0,\
    \ 'm');\n                    }\n                }\n            }\n           \
    \ _ => {}\n        }\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut remainder = number;\n    let mut i = 0;\n    while\
    \ remainder > 0 {\n        let digit = remainder % 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        remainder /= 10;\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    while num >= 1000 {\n        result.push_str(\"m\");\n\
    \        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut index = 0;\n    while num > 0 {\n    \
    \    let digit = num % 10;\n        let roman_digit = match digit {\n        \
    \    1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n      \
    \      4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n     \
    \       7 => \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n\
    \            _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit,\
    \ result);\n        num /= 10;\n        index += 1;\n    }\n    result", "   \
    \ let mut number = number;\n    let mut result = String::new();\n    let mut i\
    \ = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        if digit == 0 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut roman = String::new();\n        if digit <= 3 {\n\
    \            for _ in 0..digit {\n                roman.push(ROMAN_DIGITS[i]);\n\
    \            }\n        } else if digit == 4 {\n            roman.push(ROMAN_DIGITS[i]);\n\
    \            roman.push(ROMAN_DIGITS[i + 1]);\n        } else if digit <= 8 {\n\
    \            roman.push(ROMAN_DIGITS[i + 1]);\n            for _ in 0..(digit\
    \ - 5) {\n                roman.push(ROMAN_DIGITS[i]);\n            }\n      \
    \  } else {\n            roman.push(ROMAN_DIGITS[i]);\n            roman.push(ROMAN_DIGITS[i\
    \ + 2]);\n        }\n        result = roman + &result;\n        i += 2;\n    }\n\
    \    result", "    let mut num = number;\n    let mut result = String::new();\n\
    \    let roman_numerals = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n\
    \        (\"d\", 500),\n        (\"cd\", 400),\n        (\"c\", 100),\n      \
    \  (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\"\
    , 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n    \
    \    (\"i\", 1),\n    ];\n    for (rn, val) in roman_numerals {\n        while\
    \ num >= val {\n            result.push_str(rn);\n            num -= val;\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut i = 0;\n    while number > 0 {\n  \
    \      let digit = number % 10;\n        number /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    while number >= 1000 {\n\
    \        result.push('m');\n        number -= 1000;\n    }\n    if number >= 900\
    \ {\n        result.push_str(\"cm\");\n        number -= 900;\n    }\n    if number\
    \ >= 500 {\n        result.push('d');\n        number -= 500;\n    }\n    if number\
    \ >= 400 {\n        result.push_str(\"cd\");\n        number -= 400;\n    }\n\
    \    while number >= 100 {\n        result.push('c');\n        number -= 100;\n\
    \    }\n    if number >= 90 {\n        result.push_str(\"xc\");\n        number\
    \ -= 90;\n    }\n    if number >= 50 {\n        result.push('l');\n        number\
    \ -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"xl\");\n   \
    \     number -= 40;\n    }\n    while number >= 10 {\n        result.push('x');\n\
    \        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push('v');\n\
    \        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    while number >= 1 {\n        result.push('i');\n\
    \        number -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut number = number;\n    let mut index = 0;\n   \
    \ while number > 0 {\n        let digit = number % 10;\n        result = mini_roman_digit(digit,\
    \ index) + &result;\n        number /= 10;\n        index += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ index = 0;\n    while number > 0 {\n        let digit = number % 10;\n     \
    \   number /= 10;\n        let (roman_digit, roman_digit_len) = match digit {\n\
    \            1 => (\"i\", 1),\n            2 => (\"ii\", 2),\n            3 =>\
    \ (\"iii\", 3),\n            4 => (\"iv\", 2),\n            5 => (\"v\", 1),\n\
    \            6 => (\"vi\", 2),\n            7 => (\"vii\", 3),\n            8\
    \ => (\"viii\", 4),\n            9 => (\"ix\", 2),\n            _ => (\"\", 0),\n\
    \        };\n        result.insert_str(index, roman_digit);\n        index +=\
    \ roman_digit_len;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let mut i = 0;\n    while number > 0 {\n      \
    \  let digit = number % 10;\n        number /= 10;\n        if digit == 0 {\n\
    \            i += 1;\n            continue;\n        }\n        let mut roman\
    \ = String::new();\n        if digit == 4 {\n            roman.push_str(&ROMAN_DIGITS[i]);\n\
    \            roman.push_str(&ROMAN_DIGITS[i + 1]);\n        } else if digit ==\
    \ 9 {\n            roman.push_str(&ROMAN_DIGITS[i]);\n            roman.push_str(&ROMAN_DIGITS[i\
    \ + 2]);\n        } else {\n            if digit >= 5 {\n                roman.push_str(&ROMAN_DIGITS[i\
    \ + 1]);\n                digit -= 5;\n            }\n            for _ in 0..digit\
    \ {\n                roman.push_str(&ROMAN_DIGITS[i]);\n            }\n      \
    \  }\n        result = roman + &result;\n        i += 2;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let (one, five, ten) = match i {\n            0 => ('i', 'v', 'x'),\n\
    \            1 => ('x', 'l', 'c'),\n            2 => ('c', 'd', 'm'),\n      \
    \      3 => ('m', 'v', 'x'),\n            _ => panic!(\"Number is too large\"\
    ),\n        };\n        match digit {\n            1 => result.push(one),\n  \
    \          2 => result.push_str(&format!(\"{}{}\", one, one)),\n            3\
    \ => result.push_str(&format!(\"{}{}{}\", one, one, one)),\n            4 => result.push_str(&format!(\"\
    {}{}\", one, five)),\n            5 => result.push(five),\n            6 => result.push_str(&format!(\"\
    {}{}\", five, one)),\n            7 => result.push_str(&format!(\"{}{}{}\", five,\
    \ one, one)),\n            8 => result.push_str(&format!(\"{}{}{}{}\", five, one,\
    \ one, one)),\n            9 => result.push_str(&format!(\"{}{}\", one, ten)),\n\
    \            _ => (),\n        }\n        i += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n    \
    \    let roman_digit = match digit {\n            1 => \"i\",\n            2 =>\
    \ \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n            5\
    \ => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n           \
    \ 8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n        };\n\
    \        result = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n \
    \   }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut i = 0;\n    while num > 0 {\n        let digit = num % 10;\n    \
    \    num /= 10;\n        let (ones, fives, tens) = match i {\n            0 =>\
    \ ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n            2 => ('c',\
    \ 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n            _ => panic!(\"Number\
    \ too large\"),\n        };\n        match digit {\n            1 => result.push(ones),\n\
    \            2 => result.push_str(&[ones, ones].iter().collect::<String>()),\n\
    \            3 => result.push_str(&[ones, ones, ones].iter().collect::<String>()),\n\
    \            4 => result.push_str(&[ones, fives].iter().collect::<String>()),\n\
    \            5 => result.push(fives),\n            6 => result.push_str(&[fives,\
    \ ones].iter().collect::<String>()),\n            7 => result.push_str(&[fives,\
    \ ones, ones].iter().collect::<String>()),\n            8 => result.push_str(&[fives,\
    \ ones, ones, ones].iter().collect::<String>()),\n            9 => result.push_str(&[ones,\
    \ tens].iter().collect::<String>()),\n            _ => (),\n        }\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let digit\
    \ = num % 10;\n        num /= 10;\n        let (ones, fives, tens) = match i {\n\
    \            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n      \
    \      2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n            _\
    \ => panic!(\"Number too large\"),\n        };\n        match digit {\n      \
    \      1 | 2 | 3 => result.push_str(&ones.to_string().repeat(digit as usize)),\n\
    \            4 => result.push_str(&format!(\"{}{}\", ones, fives)),\n        \
    \    5 | 6 | 7 | 8 => result.push_str(&format!(\"{}{}\", fives, ones.to_string().repeat((digit\
    \ - 5) as usize))),\n            9 => result.push_str(&format!(\"{}{}\", ones,\
    \ tens)),\n            _ => (),\n        }\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        if digit == 4 {\n            result.insert(0, ROMAN_DIGITS[i\
    \ + 1]);\n            result.insert(0, ROMAN_DIGITS[i]);\n        } else if digit\
    \ == 9 {\n            result.insert(0, ROMAN_DIGITS[i + 2]);\n            result.insert(0,\
    \ ROMAN_DIGITS[i]);\n        } else if digit >= 5 {\n            result.insert(0,\
    \ ROMAN_DIGITS[i + 1]);\n            for _ in 0..digit - 5 {\n               \
    \ result.insert(0, ROMAN_DIGITS[i]);\n            }\n        } else {\n      \
    \      for _ in 0..digit {\n                result.insert(0, ROMAN_DIGITS[i]);\n\
    \            }\n        }\n        num /= 10;\n        i += 2;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = format!(\"{}{}\", roman_digit, result);\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut number = number;\n    let mut i = 0;\n    while number > 0 {\n        let\
    \ digit = number % 10;\n        number /= 10;\n        result = mini_roman_digit(digit,\
    \ i) + &result;\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let (one, five, ten) = match\
    \ i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l', 'c'),\n\
    \            2 => ('c', 'd', 'm'),\n            3 => ('m', ' ', ' '),\n      \
    \      _ => panic!(\"Number too large\"),\n        };\n        match digit {\n\
    \            1 => result.push(one),\n            2 => result.push_str(&format!(\"\
    {}{}\", one, one)),\n            3 => result.push_str(&format!(\"{}{}{}\", one,\
    \ one, one)),\n            4 => result.push_str(&format!(\"{}{}\", one, five)),\n\
    \            5 => result.push(five),\n            6 => result.push_str(&format!(\"\
    {}{}\", five, one)),\n            7 => result.push_str(&format!(\"{}{}{}\", five,\
    \ one, one)),\n            8 => result.push_str(&format!(\"{}{}{}{}\", five, one,\
    \ one, one)),\n            9 => result.push_str(&format!(\"{}{}\", one, ten)),\n\
    \            _ => (),\n        }\n        i += 1;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut num = number;\n    let mut result = String::new();\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let (one, five, ten) = match i {\n            0 => ('i', 'v', 'x'),\n\
    \            1 => ('x', 'l', 'c'),\n            2 => ('c', 'd', 'm'),\n      \
    \      3 => ('m', 'v', 'x'),\n            _ => ('i', 'v', 'x'),\n        };\n\
    \        match digit {\n            1 | 2 | 3 => result.push_str(&one.to_string().repeat(digit\
    \ as usize)),\n            4 => result.push_str(&format!(\"{}{}\", one, five)),\n\
    \            5 | 6 | 7 | 8 => result.push_str(&format!(\"{}{}\", five, one.to_string().repeat((digit\
    \ - 5) as usize))),\n            9 => result.push_str(&format!(\"{}{}\", one,\
    \ ten)),\n            _ => (),\n        }\n        i += 1;\n    }\n    result.chars().rev().collect()",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut i = 0;\n    while\
    \ number > 0 {\n        let digit = number % 10;\n        number /= 10;\n    \
    \    let (ones, fives, tens) = match i {\n            0 => (ROMAN_ONES[0], ROMAN_FIVES[0],\
    \ ROMAN_TENS[0]),\n            1 => (ROMAN_ONES[1], ROMAN_FIVES[1], ROMAN_TENS[1]),\n\
    \            2 => (ROMAN_ONES[2], ROMAN_FIVES[2], ROMAN_TENS[2]),\n          \
    \  3 => (ROMAN_ONES[3], ROMAN_FIVES[3], ROMAN_TENS[3]),\n            _ => panic!(\"\
    Invalid number\"),\n        };\n        if digit == 9 {\n            result.push(ones);\n\
    \            result.push(tens);\n        } else if digit == 4 {\n            result.push(ones);\n\
    \            result.push(fives);\n        } else if digit >= 5 {\n           \
    \ result.push(fives);\n            for _ in 0..digit - 5 {\n                result.push(ones);\n\
    \            }\n        } else {\n            for _ in 0..digit {\n          \
    \      result.push(ones);\n            }\n        }\n        i += 1;\n    }\n\
    \    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number >= 1000 {\n        result.push('m');\n\
    \        number -= 1000;\n    }\n    if number >= 900 {\n        result.push_str(\"\
    cm\");\n        number -= 900;\n    }\n    if number >= 500 {\n        result.push('d');\n\
    \        number -= 500;\n    }\n    if number >= 400 {\n        result.push_str(\"\
    cd\");\n        number -= 400;\n    }\n    while number >= 100 {\n        result.push('c');\n\
    \        number -= 100;\n    }\n    if number >= 90 {\n        result.push_str(\"\
    xc\");\n        number -= 90;\n    }\n    if number >= 50 {\n        result.push('l');\n\
    \        number -= 50;\n    }\n    if number >= 40 {\n        result.push_str(\"\
    xl\");\n        number -= 40;\n    }\n    while number >= 10 {\n        result.push('x');\n\
    \        number -= 10;\n    }\n    if number >= 9 {\n        result.push_str(\"\
    ix\");\n        number -= 9;\n    }\n    if number >= 5 {\n        result.push('v');\n\
    \        number -= 5;\n    }\n    if number >= 4 {\n        result.push_str(\"\
    iv\");\n        number -= 4;\n    }\n    while number >= 1 {\n        result.push('i');\n\
    \        number -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut roman\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            roman.push('m');\n            num -= 1000;\n    \
    \    } else if num >= 900 {\n            roman.push_str(\"cm\");\n           \
    \ num -= 900;\n        } else if num >= 500 {\n            roman.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            roman.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            roman.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            roman.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            roman.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            roman.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            roman.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            roman.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            roman.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            roman.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            roman.push('i');\n\
    \            num -= 1;\n        }\n    }\n    roman", "    let mut result = String::new();\n\
    \    let mut number = number;\n    let mut index = 0;\n    while number > 0 {\n\
    \        let digit = number % 10;\n        result = format!(\"{}{}\", mini_roman_digit(digit,\
    \ index), result);\n        number /= 10;\n        index += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut roman_numeral = String::new();\n    let mut roman_numerals = vec![\n\
    \        String::from(\"m\"),\n        String::from(\"cm\"),\n        String::from(\"\
    d\"),\n        String::from(\"cd\"),\n        String::from(\"c\"),\n        String::from(\"\
    xc\"),\n        String::from(\"l\"),\n        String::from(\"xl\"),\n        String::from(\"\
    x\"),\n        String::from(\"ix\"),\n        String::from(\"v\"),\n        String::from(\"\
    iv\"),\n        String::from(\"i\"),\n    ];\n    let mut numbers = vec![1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for i in 0..numbers.len()\
    \ {\n        while number >= numbers[i] {\n            roman_numeral.push_str(&roman_numerals[i]);\n\
    \            number -= numbers[i];\n        }\n    }\n    roman_numeral", "  \
    \  let mut result = String::new();\n    let mut n = number;\n    let mut i = 0;\n\
    \    while n > 0 {\n        let digit = n % 10;\n        n /= 10;\n        let\
    \ mut s = String::new();\n        if digit == 9 {\n            s.push(ROMAN_DIGITS[i\
    \ + 1]);\n            s.push(ROMAN_DIGITS[i]);\n        } else if digit == 4 {\n\
    \            s.push(ROMAN_DIGITS[i + 1]);\n            s.push(ROMAN_DIGITS[i +\
    \ 2]);\n        } else {\n            if digit >= 5 {\n                s.push(ROMAN_DIGITS[i\
    \ + 1]);\n                digit -= 5;\n            }\n            for _ in 0..digit\
    \ {\n                s.push(ROMAN_DIGITS[i + 2]);\n            }\n        }\n\
    \        result = s + &result;\n        i += 2;\n    }\n    result", "    let\
    \ mut number = number;\n    let mut result = String::new();\n    let mut roman_numerals\
    \ = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    while number > 0 {\n        for (numeral, value) in roman_numerals.iter()\
    \ {\n            if number >= *value {\n                result.push_str(numeral);\n\
    \                number -= *value;\n                break;\n            }\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    let mut index = 0;\n    while number > 0 {\n        let\
    \ digit = number % 10;\n        number /= 10;\n        let roman_digit = match\
    \ digit {\n            1 => \"i\",\n            2 => \"ii\",\n            3 =>\
    \ \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n            6 =>\
    \ \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n           \
    \ 9 => \"ix\",\n            _ => \"\",\n        };\n        result = format!(\"\
    {}{}\", roman_digit, result);\n        index += 1;\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut num = number;\n    let mut i = 0;\n\
    \    while num > 0 {\n        let digit = num % 10;\n        if digit > 0 {\n\
    \            result.insert_str(0, &mini_roman_digit(digit, i));\n        }\n \
    \       num /= 10;\n        i += 1;\n    }\n    result", "    let mut result =\
    \ String::new();\n    let mut number = number;\n    let mut num_digits = 0;\n\
    \    while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        num_digits += 1;\n        if digit == 0 {\n            continue;\n  \
    \      }\n        let digit_string = match digit {\n            1 => \"i\",\n\
    \            2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\"\
    ,\n            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\"\
    ,\n            8 => \"viii\",\n            9 => \"ix\",\n            _ => panic!(\"\
    Invalid digit: {}\", digit),\n        };\n        result = format!(\"{}{}\", digit_string,\
    \ result);\n        if num_digits == 2 {\n            result = format!(\"x{}\"\
    , result);\n        } else if num_digits == 3 {\n            result = format!(\"\
    c{}\", result);\n        } else if num_digits == 4 {\n            result = format!(\"\
    m{}\", result);\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        num /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = format!(\"{}{}\", roman_digit, result);\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n         \
    \   result.push('m');\n            num -= 1000;\n        } else if num >= 900\
    \ {\n            result.push_str(\"cm\");\n            num -= 900;\n        }\
    \ else if num >= 500 {\n            result.push('d');\n            num -= 500;\n\
    \        } else if num >= 400 {\n            result.push_str(\"cd\");\n      \
    \      num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num >= 1000 {\n        result.push_str(\"\
    m\");\n        num -= 1000;\n    }\n    if num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    if num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    if num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    if num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    if num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    if num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    if num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    if num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    if num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut num = number;\n   \
    \ let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n \
    \       let digit = num % 10;\n        num /= 10;\n        let (ones, fives, tens)\
    \ = match i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x', 'l',\
    \ 'c'),\n            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n\
    \            _ => ('i', 'v', 'x'),\n        };\n        if digit == 4 {\n    \
    \        result.push(fives);\n            result.push(ones);\n        } else if\
    \ digit == 9 {\n            result.push(tens);\n            result.push(ones);\n\
    \        } else {\n            if digit >= 5 {\n                result.push(fives);\n\
    \                digit -= 5;\n            }\n            for _ in 0..digit {\n\
    \                result.push(ones);\n            }\n        }\n        i += 1;\n\
    \    }\n    result", "    let mut number = number;\n    let mut result = String::new();\n\
    \    let mut i = 0;\n    let mut roman_numerals = vec![\n        \"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\",\n    ];\n    let mut numbers = vec![1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1];\n    while number > 0 {\n        if number >= numbers[i] {\n\
    \            result.push_str(roman_numerals[i]);\n            number -= numbers[i];\n\
    \        } else {\n            i += 1;\n        }\n    }\n    result", "    let\
    \ mut number = number;\n    let mut result = String::new();\n    let mut i = 0;\n\
    \    while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        result = match digit {\n            1 => format!(\"i{}\", result),\n\
    \            2 => format!(\"ii{}\", result),\n            3 => format!(\"iii{}\"\
    , result),\n            4 => format!(\"iv{}\", result),\n            5 => format!(\"\
    v{}\", result),\n            6 => format!(\"vi{}\", result),\n            7 =>\
    \ format!(\"vii{}\", result),\n            8 => format!(\"viii{}\", result),\n\
    \            9 => format!(\"ix{}\", result),\n            _ => result,\n     \
    \   };\n        i += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    let mut i = 0;\n    while num\
    \ > 0 {\n        let digit = num % 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        num /= 10;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        result\
    \ = format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ i = 0;\n    while number > 0 {\n        let digit = number % 10;\n        number\
    \ /= 10;\n        let roman_digit = match digit {\n            1 => \"i\",\n \
    \           2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n\
    \            5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n\
    \            8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n\
    \        };\n        result = format!(\"{}{}\", roman_digit, result);\n      \
    \  i += 1;\n    }\n    result", "    let mut result = String::new();\n    let\
    \ mut number = number;\n    while number > 0 {\n        if number >= 1000 {\n\
    \            result.push('m');\n            number -= 1000;\n        } else if\
    \ number >= 900 {\n            result.push_str(\"cm\");\n            number -=\
    \ 900;\n        } else if number >= 500 {\n            result.push('d');\n   \
    \         number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut number = number;\n    let mut\
    \ result = String::new();\n    let roman_numerals = vec![\n        (\"m\", 1000),\n\
    \        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\", 400),\n     \
    \   (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n        (\"xl\"\
    , 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"v\", 5),\n    \
    \    (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral, value) in roman_numerals\
    \ {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= *value;\n        }\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let roman_numerals = vec![\n\
    \        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n     \
    \   (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"\
    l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n\
    \        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for\
    \ (numeral, value) in roman_numerals {\n        while number >= *value {\n   \
    \         result.push_str(numeral);\n            number -= *value;\n        }\n\
    \    }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let roman_numerals = vec![\n       \
    \ (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n        (\"cd\"\
    , 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n        (\"l\", 50),\n\
    \        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\", 9),\n        (\"\
    v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n    for (numeral,\
    \ value) in roman_numerals {\n        while number >= *value {\n            result.push_str(numeral);\n\
    \            number -= *value;\n        }\n    }\n    result", "    let mut num\
    \ = number;\n    let mut roman = String::new();\n    let mut i = 0;\n    while\
    \ num > 0 {\n        let digit = num % 10;\n        num /= 10;\n        let roman_digit\
    \ = match digit {\n            1 => \"i\",\n            2 => \"ii\",\n       \
    \     3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n     \
    \       6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n\
    \            9 => \"ix\",\n            _ => \"\",\n        };\n        roman =\
    \ format!(\"{}{}\", roman_digit, roman);\n        i += 1;\n    }\n    roman",
  "    let mut result = String::new();\n    let mut num = number;\n    let mut i =\
    \ 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        result = mini_roman_digit(digit, i) + &result;\n        i += 1;\n   \
    \ }\n    result", "    let mut result = String::new();\n    let mut num = number;\n\
    \    let mut index = 0;\n    while num > 0 {\n        let digit = num % 10;\n\
    \        num /= 10;\n        let roman_digit = match digit {\n            1 =>\
    \ \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 =>\
    \ \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 =>\
    \ \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n           \
    \ _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        index += 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut symbols = vec![\n\
    \        (\"m\", 1000),\n        (\"d\", 500),\n        (\"c\", 100),\n      \
    \  (\"l\", 50),\n        (\"x\", 10),\n        (\"v\", 5),\n        (\"i\", 1),\n\
    \    ];\n    while number > 0 {\n        let (symbol, value) = symbols.pop().unwrap();\n\
    \        let count = number / value;\n        number = number % value;\n     \
    \   result.push_str(&symbol.repeat(count as usize));\n    }\n    result", "  \
    \  let mut result = String::new();\n    let mut num = number;\n    let mut index\
    \ = 0;\n    while num > 0 {\n        let digit = num % 10;\n        num /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        index\
    \ += 1;\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ number = number;\n    while number > 0 {\n        if number >= 1000 {\n    \
    \        result.push('m');\n            number -= 1000;\n        } else if number\
    \ >= 900 {\n            result.push_str(\"cm\");\n            number -= 900;\n\
    \        } else if number >= 500 {\n            result.push('d');\n          \
    \  number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result", "    let mut result = String::new();\n  \
    \  let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n    \
    \        result.push('m');\n            num -= 1000;\n        } else if num >=\
    \ 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n     \
    \   } else if num >= 500 {\n            result.push('d');\n            num -=\
    \ 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\");\n\
    \            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        num /= 10;\n        let roman_digit =\
    \ match digit {\n            1 => \"i\",\n            2 => \"ii\",\n         \
    \   3 => \"iii\",\n            4 => \"iv\",\n            5 => \"v\",\n       \
    \     6 => \"vi\",\n            7 => \"vii\",\n            8 => \"viii\",\n  \
    \          9 => \"ix\",\n            _ => \"\",\n        };\n        result =\
    \ format!(\"{}{}\", roman_digit, result);\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        num /= 10;\n        let roman_digit = match digit\
    \ {\n            1 => \"i\",\n            2 => \"ii\",\n            3 => \"iii\"\
    ,\n            4 => \"iv\",\n            5 => \"v\",\n            6 => \"vi\"\
    ,\n            7 => \"vii\",\n            8 => \"viii\",\n            9 => \"\
    ix\",\n            _ => \"\",\n        };\n        result = format!(\"{}{}\",\
    \ roman_digit, result);\n        i += 1;\n    }\n    result", "    let mut result\
    \ = String::new();\n    let mut num = number;\n    while num > 0 {\n        if\
    \ num >= 1000 {\n            result.push('m');\n            num -= 1000;\n   \
    \     } else if num >= 900 {\n            result.push_str(\"cm\");\n         \
    \   num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    let mut i = 0;\n    while num > 0 {\n        let\
    \ digit = num % 10;\n        let roman_digit = match digit {\n            1 =>\
    \ \"i\",\n            2 => \"ii\",\n            3 => \"iii\",\n            4 =>\
    \ \"iv\",\n            5 => \"v\",\n            6 => \"vi\",\n            7 =>\
    \ \"vii\",\n            8 => \"viii\",\n            9 => \"ix\",\n           \
    \ _ => \"\",\n        };\n        result = format!(\"{}{}\", roman_digit, result);\n\
    \        num /= 10;\n        i += 1;\n    }\n    result", "    let mut number\
    \ = number;\n    let mut result = String::new();\n    let mut index = 0;\n   \
    \ while number > 0 {\n        let digit = number % 10;\n        number /= 10;\n\
    \        let roman_digit = match digit {\n            1 => \"i\",\n          \
    \  2 => \"ii\",\n            3 => \"iii\",\n            4 => \"iv\",\n       \
    \     5 => \"v\",\n            6 => \"vi\",\n            7 => \"vii\",\n     \
    \       8 => \"viii\",\n            9 => \"ix\",\n            _ => \"\",\n   \
    \     };\n        result = format!(\"{}{}\", roman_digit, result);\n        index\
    \ += 1;\n    }\n    result", "    let mut number = number;\n    let mut result\
    \ = String::new();\n    let mut numeral_pairs = vec![\n        (1000, \"m\"),\n\
    \        (900, \"cm\"),\n        (500, \"d\"),\n        (400, \"cd\"),\n     \
    \   (100, \"c\"),\n        (90, \"xc\"),\n        (50, \"l\"),\n        (40, \"\
    xl\"),\n        (10, \"x\"),\n        (9, \"ix\"),\n        (5, \"v\"),\n    \
    \    (4, \"iv\"),\n        (1, \"i\"),\n    ];\n    while number > 0 {\n     \
    \   let (numeral_value, numeral_string) = numeral_pairs.pop().unwrap();\n    \
    \    while number >= numeral_value {\n            result.push_str(numeral_string);\n\
    \            number -= numeral_value;\n        }\n    }\n    result", "    let\
    \ mut result = String::new();\n    let mut number = number;\n    while number\
    \ > 0 {\n        if number >= 1000 {\n            result.push('m');\n        \
    \    number -= 1000;\n        } else if number >= 900 {\n            result.push_str(\"\
    cm\");\n            number -= 900;\n        } else if number >= 500 {\n      \
    \      result.push('d');\n            number -= 500;\n        } else if number\
    \ >= 400 {\n            result.push_str(\"cd\");\n            number -= 400;\n\
    \        } else if number >= 100 {\n            result.push('c');\n          \
    \  number -= 100;\n        } else if number >= 90 {\n            result.push_str(\"\
    xc\");\n            number -= 90;\n        } else if number >= 50 {\n        \
    \    result.push('l');\n            number -= 50;\n        } else if number >=\
    \ 40 {\n            result.push_str(\"xl\");\n            number -= 40;\n    \
    \    } else if number >= 10 {\n            result.push('x');\n            number\
    \ -= 10;\n        } else if number >= 9 {\n            result.push_str(\"ix\"\
    );\n            number -= 9;\n        } else if number >= 5 {\n            result.push('v');\n\
    \            number -= 5;\n        } else if number >= 4 {\n            result.push_str(\"\
    iv\");\n            number -= 4;\n        } else if number >= 1 {\n          \
    \  result.push('i');\n            number -= 1;\n        }\n    }\n    result",
  "    let mut number = number;\n    let mut result = String::new();\n    let mut\
    \ roman_numerals = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n   \
    \     (\"d\", 500),\n        (\"cd\", 400),\n        (\"c\", 100),\n        (\"\
    xc\", 90),\n        (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n\
    \        (\"ix\", 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"\
    i\", 1),\n    ];\n    while number > 0 {\n        for (numeral, value) in roman_numerals.iter()\
    \ {\n            if number >= *value {\n                result.push_str(numeral);\n\
    \                number -= *value;\n                break;\n            }\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    while num > 0 {\n        if num >= 1000 {\n            result.push('m');\n\
    \            num -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"\
    cm\");\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut number = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while number > 0\
    \ {\n        let digit = number % 10;\n        number /= 10;\n        result =\
    \ mini_roman_digit(digit, i) + &result;\n        i += 1;\n    }\n    result",
  "    let mut result = String::new();\n    let mut num = number;\n    while num >\
    \ 0 {\n        if num >= 1000 {\n            result.push('m');\n            num\
    \ -= 1000;\n        } else if num >= 900 {\n            result.push_str(\"cm\"\
    );\n            num -= 900;\n        } else if num >= 500 {\n            result.push('d');\n\
    \            num -= 500;\n        } else if num >= 400 {\n            result.push_str(\"\
    cd\");\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut num = number;\n    while num > 0 {\n        if num >= 1000 {\n  \
    \          result.push('m');\n            num -= 1000;\n        } else if num\
    \ >= 900 {\n            result.push_str(\"cm\");\n            num -= 900;\n  \
    \      } else if num >= 500 {\n            result.push('d');\n            num\
    \ -= 500;\n        } else if num >= 400 {\n            result.push_str(\"cd\"\
    );\n            num -= 400;\n        } else if num >= 100 {\n            result.push('c');\n\
    \            num -= 100;\n        } else if num >= 90 {\n            result.push_str(\"\
    xc\");\n            num -= 90;\n        } else if num >= 50 {\n            result.push('l');\n\
    \            num -= 50;\n        } else if num >= 40 {\n            result.push_str(\"\
    xl\");\n            num -= 40;\n        } else if num >= 10 {\n            result.push('x');\n\
    \            num -= 10;\n        } else if num >= 9 {\n            result.push_str(\"\
    ix\");\n            num -= 9;\n        } else if num >= 5 {\n            result.push('v');\n\
    \            num -= 5;\n        } else if num >= 4 {\n            result.push_str(\"\
    iv\");\n            num -= 4;\n        } else if num >= 1 {\n            result.push('i');\n\
    \            num -= 1;\n        }\n    }\n    result", "    let mut num = number;\n\
    \    let mut result = String::new();\n    let mut i = 0;\n    while num > 0 {\n\
    \        let digit = num % 10;\n        num /= 10;\n        let (ones, fives,\
    \ tens) = match i {\n            0 => ('i', 'v', 'x'),\n            1 => ('x',\
    \ 'l', 'c'),\n            2 => ('c', 'd', 'm'),\n            3 => ('m', 'v', 'x'),\n\
    \            _ => panic!(\"Number is too large\"),\n        };\n        match\
    \ digit {\n            1 => result.push(ones),\n            2 => result.push_str(&[ones,\
    \ ones].iter().collect::<String>()),\n            3 => result.push_str(&[ones,\
    \ ones, ones].iter().collect::<String>()),\n            4 => result.push_str(&[ones,\
    \ fives].iter().collect::<String>()),\n            5 => result.push(fives),\n\
    \            6 => result.push_str(&[fives, ones].iter().collect::<String>()),\n\
    \            7 => result.push_str(&[fives, ones, ones].iter().collect::<String>()),\n\
    \            8 => result.push_str(&[fives, ones, ones, ones].iter().collect::<String>()),\n\
    \            9 => result.push_str(&[ones, tens].iter().collect::<String>()),\n\
    \            _ => (),\n        }\n        i += 1;\n    }\n    result", "    let\
    \ mut number = number;\n    let mut result = String::new();\n    let roman_numerals\
    \ = vec![\n        (\"m\", 1000),\n        (\"cm\", 900),\n        (\"d\", 500),\n\
    \        (\"cd\", 400),\n        (\"c\", 100),\n        (\"xc\", 90),\n      \
    \  (\"l\", 50),\n        (\"xl\", 40),\n        (\"x\", 10),\n        (\"ix\"\
    , 9),\n        (\"v\", 5),\n        (\"iv\", 4),\n        (\"i\", 1),\n    ];\n\
    \    for (numeral, value) in roman_numerals {\n        while number >= *value\
    \ {\n            result.push_str(numeral);\n            number -= *value;\n  \
    \      }\n    }\n    result", "    let mut result = String::new();\n    let mut\
    \ num = number;\n    while num >= 1000 {\n        result.push_str(\"m\");\n  \
    \      num -= 1000;\n    }\n    while num >= 900 {\n        result.push_str(\"\
    cm\");\n        num -= 900;\n    }\n    while num >= 500 {\n        result.push_str(\"\
    d\");\n        num -= 500;\n    }\n    while num >= 400 {\n        result.push_str(\"\
    cd\");\n        num -= 400;\n    }\n    while num >= 100 {\n        result.push_str(\"\
    c\");\n        num -= 100;\n    }\n    while num >= 90 {\n        result.push_str(\"\
    xc\");\n        num -= 90;\n    }\n    while num >= 50 {\n        result.push_str(\"\
    l\");\n        num -= 50;\n    }\n    while num >= 40 {\n        result.push_str(\"\
    xl\");\n        num -= 40;\n    }\n    while num >= 10 {\n        result.push_str(\"\
    x\");\n        num -= 10;\n    }\n    while num >= 9 {\n        result.push_str(\"\
    ix\");\n        num -= 9;\n    }\n    while num >= 5 {\n        result.push_str(\"\
    v\");\n        num -= 5;\n    }\n    while num >= 4 {\n        result.push_str(\"\
    iv\");\n        num -= 4;\n    }\n    while num >= 1 {\n        result.push_str(\"\
    i\");\n        num -= 1;\n    }\n    result", "    let mut result = String::new();\n\
    \    let mut number = number;\n    while number > 0 {\n        if number >= 1000\
    \ {\n            result.push('m');\n            number -= 1000;\n        } else\
    \ if number >= 900 {\n            result.push_str(\"cm\");\n            number\
    \ -= 900;\n        } else if number >= 500 {\n            result.push('d');\n\
    \            number -= 500;\n        } else if number >= 400 {\n            result.push_str(\"\
    cd\");\n            number -= 400;\n        } else if number >= 100 {\n      \
    \      result.push('c');\n            number -= 100;\n        } else if number\
    \ >= 90 {\n            result.push_str(\"xc\");\n            number -= 90;\n \
    \       } else if number >= 50 {\n            result.push('l');\n            number\
    \ -= 50;\n        } else if number >= 40 {\n            result.push_str(\"xl\"\
    );\n            number -= 40;\n        } else if number >= 10 {\n            result.push('x');\n\
    \            number -= 10;\n        } else if number >= 9 {\n            result.push_str(\"\
    ix\");\n            number -= 9;\n        } else if number >= 5 {\n          \
    \  result.push('v');\n            number -= 5;\n        } else if number >= 4\
    \ {\n            result.push_str(\"iv\");\n            number -= 4;\n        }\
    \ else if number >= 1 {\n            result.push('i');\n            number -=\
    \ 1;\n        }\n    }\n    result"]
stop_tokens:
- "\n}"

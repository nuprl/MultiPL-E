name: HumanEval_91_is_bored
language: rs
prompt: "/// You'll be given a string of words, and your task is to count the number\n\
  /// of boredoms. A boredom is a sentence that starts with the word \"I\".\n/// Sentences\
  \ are delimited by '.', '?' or '!'.\n/// For example:\n/// >>> is_bored(String::from(\"\
  Hello world\"))\n/// 0\n/// >>> is_bored(String::from(\"The sky is blue. The sun\
  \ is shining. I love this weather\"))\n/// 1\nfn is_bored(S: String) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = is_bored;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c\
    \ == '.' || c == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if is_bored {\n            boredoms += 1;\n            is_bored\
    \ = false;\n        } else if c == 'I' {\n            is_bored = true;\n     \
    \   }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut words = word.split_whitespace();\n        if words.next() == Some(\"I\"\
    ) {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ result = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                result += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    result",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    let mut sentence_start\
    \ = true;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!'\
    \ {\n            if sentence_start && sentence.starts_with(\"I\") {\n        \
    \        boredoms += 1;\n            }\n            sentence_start = true;\n \
    \           sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \            sentence_start = false;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentences = S.split(|c| c == '.' || c == '?'\
    \ || c == '!');\n    for sentence in sentences {\n        let words = sentence.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        let mut\
    \ chars = word.chars();\n        if chars.next() == Some('I') {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut\
    \ is_bored = false;\n    for c in S.chars() {\n        if c == 'I' {\n       \
    \     is_bored = true;\n        }\n        if c == '.' || c == '?' || c == '!'\
    \ {\n            if is_bored {\n                count += 1;\n            }\n \
    \           is_bored = false;\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut sentences = S.split(|c| c == '.' || c == '?' || c == '!');\n\
    \    for sentence in sentences {\n        let words = sentence.split_whitespace();\n\
    \        for word in words {\n            if word == \"I\" {\n               \
    \ boredoms += 1;\n                break;\n            }\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        let mut words = word.split_whitespace();\n \
    \       if words.next() == Some(\"I\") {\n            boredoms += 1;\n       \
    \ }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"\
    I\"))\n        .count() as isize", "    S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!')\n        .filter(|s| s.starts_with(\"I\"))\n        .count() as\
    \ isize", "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c\
    \ in S.chars() {\n        if c == 'I' {\n            is_bored = true;\n      \
    \  } else if c == '.' || c == '?' || c == '!' {\n            if is_bored {\n \
    \               boredoms += 1;\n            }\n            is_bored = false;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut prev_char\
    \ = ' ';\n    for c in S.chars() {\n        if prev_char == 'I' && c == ' ' {\n\
    \            boredoms += 1;\n        }\n        prev_char = c;\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence_start = true;\n    for word in\
    \ S.split_whitespace() {\n        if sentence_start && word.to_uppercase() ==\
    \ \"I\" {\n            boredoms += 1;\n        }\n        sentence_start = word.ends_with('.')\
    \ || word.ends_with('?') || word.ends_with('!');\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut word_iter = word.split_whitespace();\n\
    \        if word_iter.next() == Some(\"I\") {\n            boredoms += 1;\n  \
    \      }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored =\
    \ false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!'\
    \ {\n            is_bored = false;\n        } else if c == 'I' {\n           \
    \ is_bored = true;\n        } else if is_bored {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        } else if is_bored {\n            count += 1;\n\
    \        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  boredoms += 1;\n            }\n            sentence.clear();\n        } else\
    \ {\n            sentence.push(c);\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored && c == ' ' {\n            boredoms += 1;\n            is_bored = false;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored =\
    \ false;\n    for c in S.chars() {\n        if c == 'I' {\n            is_bored\
    \ = true;\n        } else if c == '.' || c == '?' || c == '!' {\n            if\
    \ is_bored {\n                boredoms += 1;\n            }\n            is_bored\
    \ = false;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence_start = true;\n    for word in S.split_whitespace() {\n       \
    \ if sentence_start && word.to_lowercase() == \"i\" {\n            boredoms +=\
    \ 1;\n        }\n        sentence_start = word.ends_with('.') || word.ends_with('?')\
    \ || word.ends_with('!');\n    }\n    boredoms", "    S.split(|c: char| c == '.'\
    \ || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"I\"))\n      \
    \  .count() as isize", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        let mut\
    \ chars = word.split_whitespace();\n        if chars.next() == Some(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        let mut words = word.split_whitespace();\n \
    \       if words.next() == Some(\"I\") {\n            boredoms += 1;\n       \
    \ }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut words = S.split_whitespace();\n\
    \    while let Some(word) = words.next() {\n        if word == \"I\" {\n     \
    \       boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut words = S.split_whitespace();\n    while\
    \ let Some(word) = words.next() {\n        if word == \"I\" {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut is_bored = false;\n    for c in S.chars() {\n        if c == '.' || c ==\
    \ '?' || c == '!' {\n            is_bored = false;\n        } else if c == 'I'\
    \ {\n            is_bored = true;\n        } else if is_bored {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut\
    \ is_bored = false;\n    for c in S.chars() {\n        if c == 'I' {\n       \
    \     is_bored = true;\n        } else if c == '.' || c == '?' || c == '!' {\n\
    \            if is_bored {\n                count += 1;\n            }\n     \
    \       is_bored = false;\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        } else if c\
    \ == '.' || c == '?' || c == '!' {\n            if is_bored {\n              \
    \  boredoms += 1;\n            }\n            is_bored = false;\n        }\n \
    \   }\n    boredoms", "    let mut count = 0;\n    let mut iter = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for sentence in iter {\n     \
    \   if sentence.starts_with(\"I\") {\n            count += 1;\n        }\n   \
    \ }\n    count", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut iter =\
    \ S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for sentence in iter\
    \ {\n        if sentence.starts_with(\"I\") {\n            count += 1;\n     \
    \   }\n    }\n    count", "    let mut boredoms = 0;\n    let mut is_bored = false;\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         is_bored = false;\n        } else if is_bored {\n            boredoms\
    \ += 1;\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored =\
    \ false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!'\
    \ {\n            is_bored = false;\n        } else if c == 'I' {\n           \
    \ is_bored = true;\n        } else if is_bored {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  boredoms += 1;\n            }\n            sentence.clear();\n        } else\
    \ {\n            sentence.push(c);\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == 'I' {\n            is_bored = true;\n        } else if c == '.' || c == '?'\
    \ || c == '!' {\n            if is_bored {\n                boredoms += 1;\n \
    \           }\n            is_bored = false;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if chars.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence_start\
    \ = true;\n    for word in S.split_whitespace() {\n        if sentence_start &&\
    \ word == \"I\" {\n            boredoms += 1;\n        }\n        sentence_start\
    \ = word.ends_with('.') || word.ends_with('?') || word.ends_with('!');\n    }\n\
    \    boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split_whitespace();\n    while let Some(word) =\
    \ words.next() {\n        if word == \"I\" {\n            boredoms += 1;\n   \
    \     }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == 'I' {\n            is_bored\
    \ = true;\n        }\n        if c == '.' || c == '?' || c == '!' {\n        \
    \    if is_bored {\n                boredoms += 1;\n            }\n          \
    \  is_bored = false;\n        }\n    }\n    boredoms", "    let mut count = 0;\n\
    \    let mut iter = S.split(|c: char| c == '.' || c == '?' || c == '!');\n   \
    \ for s in iter {\n        let mut words = s.split_whitespace();\n        if let\
    \ Some(word) = words.next() {\n            if word == \"I\" {\n              \
    \  count += 1;\n            }\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split_whitespace();\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == '.' || c == '?' || c == '!' {\n            if is_bored {\n              \
    \  boredoms += 1;\n            }\n            is_bored = false;\n        } else\
    \ if c == 'I' {\n            is_bored = true;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.trim().starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    S.split(|c: char| c == '.' || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"\
    I\"))\n        .count() as isize", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if is_bored {\n       \
    \     continue;\n        } else if c == 'I' {\n            boredoms += 1;\n  \
    \          is_bored = true;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut last_char = ' ';\n    for c in S.chars()\
    \ {\n        if c == 'I' && last_char == ' ' {\n            boredoms += 1;\n \
    \       }\n        if c == '.' || c == '?' || c == '!' {\n            last_char\
    \ = ' ';\n        } else {\n            last_char = c;\n        }\n    }\n   \
    \ boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut chars = word.chars();\n\
    \        if chars.next() == Some('I') {\n            boredoms += 1;\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut words = word.split_whitespace();\n        if words.next() == Some(\"I\"\
    ) {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' ||\
    \ c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if chars.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        } else if is_bored {\n            boredoms +=\
    \ 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut\
    \ sentence = String::new();\n    for c in S.chars() {\n        if c == '.' ||\
    \ c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n     \
    \           boredoms += 1;\n            }\n            sentence.clear();\n   \
    \     } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut last_char = ' ';\n    for c in S.chars()\
    \ {\n        if last_char == 'I' && c == ' ' {\n            boredoms += 1;\n \
    \       }\n        last_char = c;\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        let mut words = word.split_whitespace();\n \
    \       if words.next() == Some(\"I\") {\n            boredoms += 1;\n       \
    \ }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored =\
    \ false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!'\
    \ {\n            is_bored = false;\n        } else if c == 'I' {\n           \
    \ is_bored = true;\n        } else if is_bored {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == 'I' {\n            is_bored\
    \ = true;\n        } else if c == '.' || c == '?' || c == '!' {\n            if\
    \ is_bored {\n                boredoms += 1;\n            }\n            is_bored\
    \ = false;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut i = 0;\n \
    \   let mut sentence = String::new();\n    let mut word = String::new();\n   \
    \ let mut words = Vec::new();\n    let mut sentences = Vec::new();\n    for c\
    \ in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if\
    \ i > 0 {\n                words.push(word);\n                word = String::new();\n\
    \            }\n            if words.len() > 0 {\n                sentences.push(words);\n\
    \                words = Vec::new();\n            }\n        } else if c == '\
    \ ' {\n            if i > 0 {\n                words.push(word);\n           \
    \     word = String::new();\n            }\n        } else {\n            word.push(c);\n\
    \        }\n        i += 1;\n    }\n    if word.len() > 0 {\n        words.push(word);\n\
    \    }\n    if words.len() > 0 {\n        sentences.push(words);\n    }\n    for\
    \ sentence in sentences {\n        if sentence[0] == \"I\" {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        let mut chars = word.split_whitespace();\n        if let\
    \ Some(first) = chars.next() {\n            if first == \"I\" {\n            \
    \    boredoms += 1;\n            }\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        match c {\n            '.' | '?' | '!' => {\n                if is_bored\
    \ {\n                    boredoms += 1;\n                }\n                is_bored\
    \ = false;\n            }\n            'I' => is_bored = true,\n            _\
    \ => (),\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut is_bored = false;\n    for c in S.chars() {\n        if c == '.' || c ==\
    \ '?' || c == '!' {\n            is_bored = false;\n        } else if c == 'I'\
    \ {\n            is_bored = true;\n        } else if is_bored {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        let mut words = word.split_whitespace();\n        if words.next()\
    \ == Some(\"I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        } else if c\
    \ == '.' || c == '?' || c == '!' {\n            if is_bored {\n              \
    \  boredoms += 1;\n            }\n            is_bored = false;\n        }\n \
    \   }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split_whitespace();\n    while let Some(word) = words.next() {\n       \
    \ if word == \"I\" {\n            boredoms += 1;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut chars = word.chars();\n\
    \        if let Some(c) = chars.next() {\n            if c == 'I' {\n        \
    \        boredoms += 1;\n            }\n        }\n    }\n    boredoms", "   \
    \ let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut words = S.split(|c: char| c == '.' || c ==\
    \ '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"I\"\
    ) {\n            count += 1;\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence_start = true;\n    for word in\
    \ S.split_whitespace() {\n        if sentence_start && word.starts_with(\"I\"\
    ) {\n            boredoms += 1;\n        }\n        sentence_start = word.ends_with('.')\
    \ || word.ends_with('?') || word.ends_with('!');\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        }\n        if\
    \ c == '.' || c == '?' || c == '!' {\n            if is_bored {\n            \
    \    boredoms += 1;\n            }\n            is_bored = false;\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.split_whitespace();\n        if let Some(first) = chars.next()\
    \ {\n            if first == \"I\" {\n                boredoms += 1;\n       \
    \     }\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        let mut chars = word.split_whitespace();\n        if let Some(first)\
    \ = chars.next() {\n            if first == \"I\" {\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    boredoms", "    let mut count =\
    \ 0;\n    let mut prev = ' ';\n    for c in S.chars() {\n        if c == 'I' &&\
    \ prev == ' ' {\n            count += 1;\n        }\n        if c == '.' || c\
    \ == '?' || c == '!' {\n            prev = ' ';\n        } else {\n          \
    \  prev = c;\n        }\n    }\n    count", "    let mut boredoms = 0;\n    let\
    \ mut is_bored = false;\n    for c in S.chars() {\n        if c == 'I' {\n   \
    \         is_bored = true;\n        } else if c == '.' || c == '?' || c == '!'\
    \ {\n            if is_bored {\n                boredoms += 1;\n            }\n\
    \            is_bored = false;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' ||\
    \ c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    // Your code here\n    let mut count = 0;\n    let mut i = 0;\n    let mut\
    \ j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let\
    \ mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n   \
    \ let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n\
    \    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n\
    \    let mut d = 0;\n    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n\
    \    let mut h = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n    let mut kk\
    \ = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let\
    \ mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n\
    \    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n    let mut vv\
    \ = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let\
    \ mut zz = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc = 0;\n\
    \    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let mut gg\
    \ = 0;\n    let mut hh = 0;\n    let mut iii = 0;\n    let mut jjj = 0;\n    let\
    \ mut kkk = 0;\n    let mut lll = 0;\n    let mut mmm = 0;\n    let mut nnn =\
    \ 0;\n    let mut ooo = 0;\n    let", "    let mut count = 0;\n    let mut iter\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for s in iter {\n\
    \        let mut words = s.split_whitespace();\n        if let Some(w) = words.next()\
    \ {\n            if w == \"I\" {\n                count += 1;\n            }\n\
    \        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut words =\
    \ S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        let mut chars = word.split_whitespace();\n        if let Some(first)\
    \ = chars.next() {\n            if first == \"I\" {\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut i = 0;\n    let mut words = S.split_whitespace();\n    while\
    \ let Some(word) = words.next() {\n        if word.starts_with('I') {\n      \
    \      boredoms += 1;\n        }\n        i += 1;\n    }\n    boredoms", "   \
    \ let mut boredoms = 0;\n    let mut words = S.split_whitespace();\n    while\
    \ let Some(word) = words.next() {\n        if word == \"I\" {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  boredoms += 1;\n            }\n            sentence.clear();\n        } else\
    \ {\n            sentence.push(c);\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for w in words {\n        let mut words = w.split_whitespace();\n       \
    \ if let Some(word) = words.next() {\n            if word == \"I\" {\n       \
    \         boredoms += 1;\n            }\n        }\n    }\n    boredoms", "  \
    \  let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence_start = true;\n    for word in\
    \ S.split_whitespace() {\n        if sentence_start && word == \"I\" {\n     \
    \       boredoms += 1;\n        }\n        sentence_start = word.ends_with('.')\
    \ || word.ends_with('?') || word.ends_with('!');\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        } else if c\
    \ == '.' || c == '?' || c == '!' {\n            if is_bored {\n              \
    \  boredoms += 1;\n            }\n            is_bored = false;\n        }\n \
    \   }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.split_whitespace();\n        if let Some(first) = chars.next()\
    \ {\n            if first == \"I\" {\n                boredoms += 1;\n       \
    \     }\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        let mut words = word.split_whitespace();\n        if words.next()\
    \ == Some(\"I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut words = S.split(|c: char| c == '.' || c ==\
    \ '?' || c == '!');\n    for word in words {\n        let mut chars = word.chars();\n\
    \        if chars.next() == Some('I') {\n            count += 1;\n        }\n\
    \    }\n    count", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.chars();\n        if let Some(c) = chars.next() {\n       \
    \     if c == 'I' {\n                boredoms += 1;\n            }\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        } else if is_bored {\n            boredoms +=\
    \ 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut\
    \ sentence = String::new();\n    for c in S.chars() {\n        if c == '.' ||\
    \ c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n     \
    \           boredoms += 1;\n            }\n            sentence.clear();\n   \
    \     } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut count = 0;\n    let mut last_char = ' ';\n    for c in S.chars() {\n   \
    \     if last_char == 'I' && c == ' ' {\n            count += 1;\n        }\n\
    \        if c == '.' || c == '?' || c == '!' {\n            last_char = ' ';\n\
    \        } else {\n            last_char = c;\n        }\n    }\n    count", " \
    \   let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut words_in_sentence\
    \ = word.split_whitespace();\n        if words_in_sentence.next() == Some(\"I\"\
    ) {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' ||\
    \ c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        } else if is_bored\
    \ && c == '.' {\n            boredoms += 1;\n            is_bored = false;\n \
    \       } else if is_bored && c == '?' {\n            boredoms += 1;\n       \
    \     is_bored = false;\n        } else if is_bored && c == '!' {\n          \
    \  boredoms += 1;\n            is_bored = false;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if is_bored {\n            if c == '.' || c == '?' || c == '!' {\n\
    \                is_bored = false;\n            }\n        } else {\n        \
    \    if c == 'I' {\n                is_bored = true;\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence_start = true;\n    for word in S.split_whitespace()\
    \ {\n        if sentence_start && word.to_lowercase() == \"i\" {\n           \
    \ boredoms += 1;\n        }\n        sentence_start = word.ends_with('.') || word.ends_with('?')\
    \ || word.ends_with('!');\n    }\n    boredoms", "    let mut count = 0;\n   \
    \ let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for\
    \ word in words {\n        if word.starts_with(\"I\") {\n            count +=\
    \ 1;\n        }\n    }\n    count", "    let mut count = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  count += 1;\n            }\n            sentence.clear();\n        } else {\n\
    \            sentence.push(c);\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    S.split(|c: char| c == '.' || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"\
    I\"))\n        .count() as isize", "    let mut count = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        } else if is_bored {\n            count += 1;\n\
    \        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    let mut words = S.split_whitespace();\n    while let Some(word)\
    \ = words.next() {\n        sentence.push_str(word);\n        sentence.push('\
    \ ');\n        if word.ends_with('.') || word.ends_with('?') || word.ends_with('!')\
    \ {\n            if sentence.starts_with(\"I \") {\n                boredoms +=\
    \ 1;\n            }\n            sentence.clear();\n        }\n    }\n    boredoms",
  "    S.split(|c: char| c == '.' || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"\
    I\"))\n        .count() as isize"]
stop_tokens:
- "\n}"

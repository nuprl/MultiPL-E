language: rs
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ i in result.iter() {\n        output.push_str(&format!(\"{:x}\", i));\n    }\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp95l4r8et.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let digest = md5::compute(text);\n    let\
    \ digest_hex = format!(\"{:x}\", digest);\n    Some(digest_hex)\n}\n\nfn main()\
    \ {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmp7cvbm5r0.rs:10:18\n   |\n10 |     let digest = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp6ydl8m8_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuwrxpkjd.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let digest = md5::compute(text);\n    let\
    \ mut hex_string = String::new();\n    for byte in digest.iter() {\n        hex_string.push_str(&format!(\"\
    {:02x}\", byte));\n    }\n\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmpwocxhnke.rs:10:18\n   |\n10 |     let digest = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::with_capacity(32);\n\
    \    for byte in result.iter() {\n        write!(&mut output, \"{:02x}\", byte).expect(\"\
    Unable to write data\");\n    }\n    Some(output)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp47u5t1xo.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror[E0599]: no method named `write_fmt` found\
    \ for mutable reference `&mut String` in the current scope\n  --> /tmp/tmp47u5t1xo.rs:15:9\n\
    \   |\n15 |         write!(&mut output, \"{:02x}\", byte).expect(\"Unable to write\
    \ data\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found\
    \ in `&mut String`\n   |\n   = help: items from traits can only be used if the\
    \ trait is in scope\n   = note: this error originates in the macro `write` (in\
    \ Nightly builds, run with -Z macro-backtrace for more info)\nhelp: the following\
    \ trait is implemented but not in scope; perhaps add a `use` for it:\n   |\n1\
    \  | use std::fmt::Write;\n   |\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0433, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::with_capacity(32);\n\
    \    for byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppex0fq3t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", byte));\n    }\n \
    \   Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpsn3ljoku.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let hash = hasher.result_str();\n    Some(hash)\n}\n\nfn main() {\n    let\
    \ candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\"\
    )), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpaq37ymd4.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppjb5cqbg.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpot3uobj_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp6ydl8m8_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpot3uobj_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let digest = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in digest.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpiwd9nblw.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::with_capacity(32);\n\
    \    for byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppex0fq3t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgexbk9ti.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hash = String::new();\n    for\
    \ byte in result.iter() {\n        hash.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(hash)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp1z0zw1r0.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgexbk9ti.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ i in result.iter() {\n        output.push_str(&format!(\"{:02x}\", i));\n  \
    \  }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpm1d_5i_r.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp6ydl8m8_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgexbk9ti.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpot3uobj_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let hash = hasher.result_str();\n    Some(hash)\n}\n\nfn main() {\n    let\
    \ candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\"\
    )), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpaq37ymd4.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvhvu_tzo.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgexbk9ti.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgexbk9ti.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", byte));\n    }\n \
    \   Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpsn3ljoku.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let digest = md5::compute(text);\n    let\
    \ mut output = String::new();\n    for byte in digest.iter() {\n        output.push_str(&format!(\"\
    {:02x}\", byte));\n    }\n\n    Some(output)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmpqkuauuzl.rs:10:18\n   |\n10 |     let digest = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", byte));\n    }\n \
    \   Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpsn3ljoku.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp6ydl8m8_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_str = String::new();\n   \
    \ for byte in result.iter() {\n        hex_str.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(hex_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpd4z2wfx3.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpn4xds0hp.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp7yu41u3w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp6ydl8m8_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp2n6ou67t.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuwrxpkjd.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpnrozyrkz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpjoc3uw9j.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpot3uobj_.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", byte));\n    }\n \
    \   Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpsn3ljoku.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp46b8sc2g.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"))\n\
    fn string_to_md5(text: String) -> Option<String> {\n    if text.is_empty() {\n\
    \        return None;\n    }\n\n    let mut hasher = Md5::new();\n    hasher.input_str(&text);\n\
    \    Some(hasher.result_str())\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpha758szb.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660010597

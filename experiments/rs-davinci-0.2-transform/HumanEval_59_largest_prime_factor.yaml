name: HumanEval_59_largest_prime_factor
language: rs
prompt: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  /// >>> largest_prime_factor(13195)\n/// 29\n/// >>> largest_prime_factor(2048)\n\
  /// 2\nfn largest_prime_factor(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = largest_prime_factor;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut n = n;\n    let mut i = 2;\n    while i * i <= n {\n  \
    \      while n % i == 0 {\n            n /= i;\n        }\n        i += 1;\n \
    \   }\n    n", "    let mut n = n;\n    let mut i = 2;\n    while i * i <= n {\n\
    \        while n % i == 0 {\n            n /= i;\n        }\n        i += 1;\n\
    \    }\n    n", "    let mut n = n;\n    let mut i = 2;\n    while i * i <= n\
    \ {\n        while n % i == 0 {\n            n /= i;\n        }\n        i +=\
    \ 1;\n    }\n    n", "    let mut largest_prime_factor = 1;\n    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            largest_prime_factor\
    \ = i;\n            n /= i;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    if n > 1 {\n        largest_prime_factor = n;\n    }\n    largest_prime_factor",
  "    let mut n = n;\n    let mut factor = 2;\n    while n > 1 {\n        if n %\
    \ factor == 0 {\n            n /= factor;\n        } else {\n            factor\
    \ += 1;\n        }\n    }\n    factor", "    let mut n = n;\n    let mut factor\
    \ = 2;\n    while n > 1 {\n        if n % factor == 0 {\n            n /= factor;\n\
    \        } else {\n            factor += 1;\n        }\n    }\n    factor", " \
    \   let mut factor = 2;\n    let mut n = n;\n    while n > 1 {\n        if n %\
    \ factor == 0 {\n            n /= factor;\n        } else {\n            factor\
    \ += 1;\n        }\n    }\n    factor", "    let mut n = n;\n    let mut i = 2;\n\
    \    while i * i <= n {\n        while n % i == 0 {\n            n /= i;\n   \
    \     }\n        i += 1;\n    }\n    n", "    let mut n = n;\n    let mut i =\
    \ 2;\n    while i * i <= n {\n        while n % i == 0 {\n            n /= i;\n\
    \        }\n        i += 1;\n    }\n    n", "    let mut n = n;\n    let mut factor\
    \ = 2;\n    while n > 1 {\n        if n % factor == 0 {\n            n /= factor;\n\
    \        } else {\n            factor += 1;\n        }\n    }\n    factor", " \
    \   let mut n = n;\n    let mut i = 2;\n    while i * i <= n {\n        while\
    \ n % i == 0 {\n            n /= i;\n        }\n        i += 1;\n    }\n    n",
  "    let mut n = n;\n    let mut largest_factor = 1;\n    let mut i = 2;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            largest_factor = i;\n   \
    \         n /= i;\n        } else {\n            i += 1;\n        }\n    }\n \
    \   if n > 1 {\n        largest_factor = n;\n    }\n    largest_factor", "   \
    \ let mut n = n;\n    let mut factor = 2;\n    while n > 1 {\n        if n % factor\
    \ == 0 {\n            n /= factor;\n        } else {\n            factor += 1;\n\
    \        }\n    }\n    factor", "    let mut n = n;\n    let mut i = 2;\n    while\
    \ i * i <= n {\n        while n % i == 0 {\n            n /= i;\n        }\n \
    \       i += 1;\n    }\n    n", "    let mut n = n;\n    let mut i = 2;\n    while\
    \ i * i <= n {\n        while n % i == 0 {\n            n /= i;\n        }\n \
    \       i += 1;\n    }\n    n", "    let mut n = n;\n    let mut i = 2;\n    while\
    \ i * i <= n {\n        while n % i == 0 {\n            n /= i;\n        }\n \
    \       i += 1;\n    }\n    n", "    let mut n = n;\n    let mut factor = 2;\n\
    \    while n > 1 {\n        if n % factor == 0 {\n            n /= factor;\n \
    \       } else {\n            factor += 1;\n        }\n    }\n    factor", " \
    \   let mut n = n;\n    let mut factor = 2;\n    while n > 1 {\n        if n %\
    \ factor == 0 {\n            n /= factor;\n        } else {\n            factor\
    \ += 1;\n        }\n    }\n    factor", "    let mut n = n;\n    let mut i = 2;\n\
    \    while i * i <= n {\n        while n % i == 0 {\n            n /= i;\n   \
    \     }\n        i += 1;\n    }\n    n", "    let mut n = n;\n    let mut factor\
    \ = 2;\n    while n > 1 {\n        if n % factor == 0 {\n            n /= factor;\n\
    \        } else {\n            factor += 1;\n        }\n    }\n    factor"]
stop_tokens:
- "\n}"

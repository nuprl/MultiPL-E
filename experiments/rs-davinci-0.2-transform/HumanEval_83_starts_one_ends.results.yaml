language: rs
name: HumanEval_83_starts_one_ends
results:
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpuuhweqjk.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 9;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] * 10 - dp[(i - 2) as usize];\n    }\n    dp[(n\
    \ - 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `178`,\n right: `180`', /tmp/tmpyi5710ii.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpty6ju3pb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp_5sjbup.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp_5sjbup.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut start = 1;\n    let mut end\
    \ = 1;\n    for _ in 0..n {\n        count += start + end;\n        start *= 10;\n\
    \        end = end * 10 + 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp_p8txkqs.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut num = 1;\n    for _ in 0..n\
    \ {\n        count += num;\n        num *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `18`', /tmp/tmprbtkwpz1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n\
    \n    count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp2a6rnqty.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut result =\
    \ 9;\n    for _ in 1..n {\n        result *= 10;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpipbu2rr1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(i)\
    \ * 10isize.pow(n - i - 1);\n        i += 1;\n    }\n    count + 10isize.pow(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmprsx1hnjh.rs:10:55\n   |\n\
    10 |         count += 9 * starts_one_ends(i) * 10isize.pow(n - i - 1);\n   | \
    \                                                      ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n   |\n10 |         count += 9 * starts_one_ends(i)\
    \ * 10isize.pow((n - i - 1).try_into().unwrap());\n   |                      \
    \                                 +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmprsx1hnjh.rs:13:25\n   |\n13 |     count + 10isize.pow(n\
    \ - 1)\n   |                         ^^^^^ expected `u32`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n13 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count +\
    \ 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfgwtupgf.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10i64.pow((n\
    \ - i - 1) as u32);\n    }\n    count += 10i64.pow((n - 1) as u32);\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpj7xa3gr3.rs:9:43\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10i64.pow((n - i - 1) as u32);\n \
    \ |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `i64`\n\nerror[E0277]: cannot multiply `isize` by `i64`\n -->\
    \ /tmp/tmpj7xa3gr3.rs:9:41\n  |\n9 |         count += starts_one_ends(i) * 9 *\
    \ 10i64.pow((n - i - 1) as u32);\n  |                                        \
    \ ^ no implementation for `isize * i64`\n  |\n  = help: the trait `Mul<i64>` is\
    \ not implemented for `isize`\n  = help: the following other types implement trait\
    \ `Mul<Rhs>`:\n            <&'a f32 as Mul<f32>>\n            <&'a f64 as Mul<f64>>\n\
    \            <&'a i128 as Mul<i128>>\n            <&'a i16 as Mul<i16>>\n    \
    \        <&'a i32 as Mul<i32>>\n            <&'a i64 as Mul<i64>>\n          \
    \  <&'a i8 as Mul<i8>>\n            <&'a isize as Mul<isize>>\n          and 49\
    \ others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpj7xa3gr3.rs:11:14\n\
    \   |\n11 |     count += 10i64.pow((n - 1) as u32);\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `i64`\n\nerror[E0277]: cannot add-assign `i64` to `isize`\n\
    \  --> /tmp/tmpj7xa3gr3.rs:11:11\n   |\n11 |     count += 10i64.pow((n - 1) as\
    \ u32);\n   |           ^^ no implementation for `isize += i64`\n   |\n   = help:\
    \ the trait `AddAssign<i64>` is not implemented for `isize`\n   = help: the following\
    \ other types implement trait `AddAssign<Rhs>`:\n             <f32 as AddAssign<&f32>>\n\
    \             <f32 as AddAssign>\n             <f64 as AddAssign<&f64>>\n    \
    \         <f64 as AddAssign>\n             <i128 as AddAssign<&i128>>\n      \
    \       <i128 as AddAssign>\n             <i16 as AddAssign<&i16>>\n         \
    \    <i16 as AddAssign>\n           and 20 others\n\nerror: aborting due to 4\
    \ previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor\
    \ more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpty6ju3pb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpc4nk2so8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * 10isize.pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptrv_n2xf.rs:7:34\n  |\n7 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n7 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpb0fsfstu.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..n {\n        result += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    result\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmppuq5r0be.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    for i in 1..n {\n        dp[i as usize] =\
    \ dp[(i - 1) as usize] * 9 + 10;\n    }\n    dp[(n - 1) as usize]\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp0lpeaena.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * 10isize.pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptrv_n2xf.rs:7:34\n  |\n7 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n7 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1y_z184v.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmp1y_z184v.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsyi91avl.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n\n \
    \   count * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpbhf5pdoo.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1y_z184v.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmp1y_z184v.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i) *\
    \ starts_one_ends(n - i - 1);\n        i += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbo5k556k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * (10 - i);\n \
    \   }\n    count + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpklh6jaip.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1y_z184v.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmp1y_z184v.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 10;\n    for i in 2..n {\n       \
    \ dp[i as usize] = dp[(i - 1) as usize] * 9 + dp[(i - 2) as usize];\n    }\n \
    \   dp[(n - 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpg617ww6t.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkcrnff02.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpkcrnff02.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n - i\
    \ - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9unrg4x6.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9unrg4x6.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count + (10 as isize).pow(n - 1)\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpersim307.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpersim307.rs:8:31\n  |\n8 |     count + (10 as\
    \ isize).pow(n - 1)\n  |                               ^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n8 |     count + (10 as isize).pow((n - 1).try_into().unwrap())\n\
    \  |                               +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ (n + 1) as usize];\n    dp[1] = 10;\n    for i in 2..=n {\n        dp[i as usize]\
    \ = dp[(i - 1) as usize] * 9 + dp[(i - 2) as usize];\n    }\n    dp[n as usize]\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp2on1cmq5.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *\
    \ 9 + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpglroq_ev.rs:11:30\n   |\n\
    11 |     count * 9 + 10_isize.pow(n - 1)\n   |                              ^^^^^\
    \ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32`\
    \ and panic if the converted value doesn't fit\n   |\n11 |     count * 9 + 10_isize.pow((n\
    \ - 1).try_into().unwrap())\n   |                              +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7q7uxw2w.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp7q7uxw2w.rs:11:27\n   |\n11 |     count += 10_isize.pow(n - 1);\n\
    \   |                           ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n  \
    \ |                           +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i) *\
    \ starts_one_ends(n - i);\n        i += 1;\n    }\n    count + starts_one_ends(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpmt839vsg.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n\
    \n    count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp2a6rnqty.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n - i\
    \ - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9unrg4x6.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9unrg4x6.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmplg_94jgg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 9isize.pow(i - 1);\n    }\n    count + 9\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvupluplm.rs:6:33\n  |\n6 |\
    \         count += 9 * 9isize.pow(i - 1);\n  |                               \
    \  ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 9isize.pow((i - 1).try_into().unwrap());\n  |                       \
    \          +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += starts_one_ends_helper(i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpicevm9nu.rs:7:18\n  |\n7 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..=9 {\n        count += starts_one_ends(n - 1);\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp39i5w0q8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + starts_one_ends(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpcj31mem6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i) *\
    \ starts_one_ends(n - i);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmplk2mga2l.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 10;\n    let mut i = 2;\n    while i <= n {\n        count += 9 * 10isize.pow(i\
    \ - 2);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpy2_ovrpf.rs:10:34\n   |\n\
    10 |         count += 9 * 10isize.pow(i - 2);\n   |                          \
    \        ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n   |\n10 |        \
    \ count += 9 * 10isize.pow((i - 2).try_into().unwrap());\n   |               \
    \                   +     +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpbd6qkpa_.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpbd6qkpa_.rs:12:27\n   |\n12 |     count += 10_isize.pow(n\
    \ - 1);\n   |                           ^^^^^ expected `u32`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n   |\n12 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `18`', /tmp/tmpqkgtplv6.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp_gs6dcru.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp_5sjbup.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp_5sjbup.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut base = 9;\n    for _ in 1..n {\n        count += base;\n   \
    \     base *= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpaptc3oyw.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    if n == 2 {\n   \
    \     return 4;\n    }\n    let mut sum = 0;\n    let mut prev = 2;\n    let mut\
    \ prev_prev = 1;\n    for _ in 3..=n {\n        sum = prev + prev_prev;\n    \
    \    prev_prev = prev;\n        prev = sum;\n    }\n    sum + 2\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp2jlt5mxr.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 10;\n    let mut base = 9;\n    for _ in 2..n {\n        base *= 10;\n     \
    \   count += base;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp66fssfvz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2);\n    }\n    dp[(n - 1)\
    \ as usize]\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpik7s2u14.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * (10 as isize).pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqca3ivkx.rs:7:40\n  |\n7 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n7 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    for i in 1..n {\n        dp[i as usize] =\
    \ 9 * dp[(i - 1) as usize];\n    }\n    dp[(n - 1) as usize]\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmprgb0753b.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkcrnff02.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpkcrnff02.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1y_z184v.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmp1y_z184v.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp_5sjbup.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp_5sjbup.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..10 {\n        count += starts_one_ends(n - 1);\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmps4ktmsr_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += starts_one_ends_helper(i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpicevm9nu.rs:7:18\n  |\n7 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n + 1 {\n        count +=\
    \ starts_one_ends_helper(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpl3_zvh5b.rs:6:18\n  |\n6 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 9;\n    let mut base = 9;\n    for _ in 1..n {\n        count *= base;\n \
    \       base -= 1;\n    }\n\n    count\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpg9kpkcn7.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 0..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpmx95s2f7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp_gs6dcru.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 1..n {\n        count *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpa__vbb2w.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * (10 - i);\n \
    \   }\n    count + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpklh6jaip.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 10;\n    let mut i = 2;\n    while i <= n {\n        count += 9 * 10isize.pow(i\
    \ - 2);\n        i += 1;\n    }\n\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp85ow0fp3.rs:11:34\n   |\n\
    11 |         count += 9 * 10isize.pow(i - 2);\n   |                          \
    \        ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n   |\n11 |        \
    \ count += 9 * 10isize.pow((i - 2).try_into().unwrap());\n   |               \
    \                   +     +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    for i in 1..n {\n        dp[i as usize] =\
    \ dp[(i - 1) as usize] * 9 + 10isize.pow(i - 1);\n    }\n    dp[(n - 1) as usize]\
    \ * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphohfyqle.rs:10:65\n   |\n\
    10 |         dp[i as usize] = dp[(i - 1) as usize] * 9 + 10isize.pow(i - 1);\n\
    \   |                                                                 ^^^^^ expected\
    \ `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and\
    \ panic if the converted value doesn't fit\n   |\n10 |         dp[i as usize]\
    \ = dp[(i - 1) as usize] * 9 + 10isize.pow((i - 1).try_into().unwrap());\n   |\
    \                                                                 +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpbd6qkpa_.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpbd6qkpa_.rs:12:27\n   |\n12 |     count += 10_isize.pow(n\
    \ - 1);\n   |                           ^^^^^ expected `u32`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n   |\n12 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..n {\n        result += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    result += 10isize.pow(n - 1);\n    result\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwsg1naqk.rs:9:56\n  |\n9 |\
    \         result += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |    \
    \                                                    ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n  |\n9 |         result += starts_one_ends(i)\
    \ * 9 * 10isize.pow((n - i - 1).try_into().unwrap());\n  |                   \
    \                                     +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpwsg1naqk.rs:11:27\n   |\n11 |     result +=\
    \ 10isize.pow(n - 1);\n   |                           ^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n11 |     result += 10isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n - i\
    \ - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9unrg4x6.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9unrg4x6.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..n {\n        result += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    result += 10isize.pow(n - 1);\n    result\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwsg1naqk.rs:9:56\n  |\n9 |\
    \         result += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |    \
    \                                                    ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n  |\n9 |         result += starts_one_ends(i)\
    \ * 9 * 10isize.pow((n - i - 1).try_into().unwrap());\n  |                   \
    \                                     +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpwsg1naqk.rs:11:27\n   |\n11 |     result +=\
    \ 10isize.pow(n - 1);\n   |                           ^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n11 |     result += 10isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * (10 as isize).pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqca3ivkx.rs:7:40\n  |\n7 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n7 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp_gs6dcru.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpty6ju3pb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut start = 1;\n    let mut end = 1;\n    for _ in 1..n {\n    \
    \    start *= 10;\n        end = end * 10 + 1;\n    }\n    count += start;\n \
    \   count += end;\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpv9l_3l7v.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpc4nk2so8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    let mut pow = 1;\n    for i in 1..n {\n        pow *= 10;\n      \
    \  count += 9 * pow;\n    }\n\n    count + pow\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpl5nnuf9w.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp_5sjbup.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp_5sjbup.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpty6ju3pb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * starts_one_ends(n - i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpu9ccp_qr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4hg4skj7.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    if n == 2 {\n   \
    \     return 10;\n    }\n    let mut count = 10;\n    let mut i = 2;\n    while\
    \ i < n {\n        count += 9 * (10 as isize).pow(i - 1);\n        i += 1;\n \
    \   }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpdac9nnjr.rs:13:40\n   |\n\
    13 |         count += 9 * (10 as isize).pow(i - 1);\n   |                    \
    \                    ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \   |\n13 |         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n\
    \   |                                        +     +++++++++++++++++++++\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10isize.pow(n - i\
    \ - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp49j2_q4u.rs:9:51\n  |\n9 |\
    \         count += starts_one_ends(i) * 10isize.pow(n - i - 1);\n  |         \
    \                                          ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10isize.pow((n -\
    \ i - 1).try_into().unwrap());\n  |                                          \
    \         +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp49j2_q4u.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpty6ju3pb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 0;\n    for i in 1..n {\n        result +=\
    \ 9 * 10_isize.pow(i - 1);\n    }\n    result + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdpicxr6t.rs:6:36\n  |\n6 |\
    \         result += 9 * 10_isize.pow(i - 1);\n  |                            \
    \        ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         result\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \               +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpdpicxr6t.rs:8:27\n  |\n8 |     result + 10_isize.pow(n - 1)\n  |\
    \                           ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     result + 10_isize.pow((n - 1).try_into().unwrap())\n  |        \
    \                   +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut base = 9;\n    for _ in 1..n {\n        count *= base;\n   \
    \     base -= 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpx8n_7zc6.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6x0pd3bl.rs:10:51\n   |\n\
    10 |         count += starts_one_ends(i) * 10isize.pow(n - i - 1);\n   |     \
    \                                              ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10isize.pow((n - i - 1).try_into().unwrap());\n   |                      \
    \                             +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp6x0pd3bl.rs:12:26\n   |\n12 |     count += 10isize.pow(n\
    \ - 1);\n   |                          ^^^^^ expected `u32`, found `isize`\n \
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n   |\n12 |     count += 10isize.pow((n - 1).try_into().unwrap());\n\
    \   |                          +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 0;\n    for i in 1..n {\n        result +=\
    \ 9 * 10isize.pow(i - 1);\n    }\n    result + 1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptfv2c67x.rs:6:35\n  |\n6 |\
    \         result += 9 * 10isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         result\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \             +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpuuhweqjk.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *\
    \ 10 + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpz85quazn.rs:11:31\n   |\n\
    11 |     count * 10 + 10_isize.pow(n - 1)\n   |                              \
    \ ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n   |\n11 |     count\
    \ * 10 + 10_isize.pow((n - 1).try_into().unwrap())\n   |                     \
    \          +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * 10isize.pow(i\
    \ - 1) * i;\n        i += 1;\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptx2bysit.rs:10:34\n   |\n\
    10 |         count += 9 * 10isize.pow(i - 1) * i;\n   |                      \
    \            ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n   |\n10\
    \ |         count += 9 * 10isize.pow((i - 1).try_into().unwrap()) * i;\n   | \
    \                                 +     +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmptx2bysit.rs:13:25\n   |\n13 |     count + 10isize.pow(n\
    \ - 1)\n   |                         ^^^^^ expected `u32`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n13 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 1;\n\
    \    for _ in 1..n {\n        count *= 10;\n    }\n    count * 2\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `20`,\n right: `18`', /tmp/tmpbk_50w9t.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkcrnff02.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpkcrnff02.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpbd6qkpa_.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpbd6qkpa_.rs:12:27\n   |\n12 |     count += 10_isize.pow(n\
    \ - 1);\n   |                           ^^^^^ expected `u32`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n   |\n12 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpj4kfsq26.rs:10:55\n   |\n\
    10 |         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n   | \
    \                                                      ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 9 * 10isize.pow((n - i - 1).try_into().unwrap());\n   |                  \
    \                                     +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpj4kfsq26.rs:12:26\n   |\n12 |     count += 10isize.pow(n\
    \ - 1);\n   |                          ^^^^^ expected `u32`, found `isize`\n \
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n   |\n12 |     count += 10isize.pow((n - 1).try_into().unwrap());\n\
    \   |                          +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpty6ju3pb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * 9;\n    }\n    dp[(n - 1) as usize]\
    \ * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpgn1a4kjt.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7q7uxw2w.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp7q7uxw2w.rs:11:27\n   |\n11 |     count += 10_isize.pow(n - 1);\n\
    \   |                           ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n  \
    \ |                           +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmprnqoiz08.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * (10_isize.pow(i - 1) - 10_isize.pow(i - 2));\n        i\
    \ += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9ji3cdw3.rs:7:36\n  |\n7 |\
    \         count += 9 * (10_isize.pow(i - 1) - 10_isize.pow(i - 2));\n  |     \
    \                               ^^^^^ expected `u32`, found `isize`\n  |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n  |\n7 |         count += 9 * (10_isize.pow((i - 1).try_into().unwrap())\
    \ - 10_isize.pow(i - 2));\n  |                                    +     +++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmp9ji3cdw3.rs:7:58\n  |\n7 |    \
    \     count += 9 * (10_isize.pow(i - 1) - 10_isize.pow(i - 2));\n  |         \
    \                                                 ^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n7 |         count += 9 * (10_isize.pow(i - 1) - 10_isize.pow((i\
    \ - 2).try_into().unwrap()));\n  |                                           \
    \               +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n\
    \    }\n    count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpu4m8l1hm.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..=n {\n        count += starts_one_ends_helper(i);\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmp1kwlrd_8.rs:6:18\n  |\n6 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut power = 9;\n    for _ in 1..n {\n        count += power;\n \
    \       power *= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpg5djgst1.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * pow(10, i - 1);\n    }\n    count + pow(10, n - 1)\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `pow` in this scope\n --> /tmp/tmp0st7z62f.rs:6:22\n\
    \  |\n6 |         count += 9 * pow(10, i - 1);\n  |                      ^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `pow` in this scope\n\
    \ --> /tmp/tmp0st7z62f.rs:8:13\n  |\n8 |     count + pow(10, n - 1)\n  |     \
    \        ^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(n\
    \ - i - 1);\n        i += 1;\n    }\n    count + 9\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpxt9t09k2.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count + 9\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi6s9087c.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n - i\
    \ - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9unrg4x6.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9unrg4x6.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(n\
    \ - i);\n        i += 1;\n    }\n    count + 10\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpgj2nqqbj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += starts_one_ends_helper(i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpicevm9nu.rs:7:18\n  |\n7 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count + (n as isize).pow(n - 1)\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpm2m84uiz.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpm2m84uiz.rs:8:30\n  |\n8 |     count + (n as\
    \ isize).pow(n - 1)\n  |                              ^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n8 |     count + (n as isize).pow((n - 1).try_into().unwrap())\n\
    \  |                              +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut current = 1;\n    let mut last\
    \ = 1;\n    for _ in 0..n {\n        count += last;\n        let new_current =\
    \ current * 10 + 1;\n        last = current;\n        current = new_current;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp6ndq301_.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *\
    \ 10 + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpqeu3433h.rs:11:31\n   |\n\
    11 |     count * 10 + 10_isize.pow(n - 1)\n   |                              \
    \ ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n   |\n11 |     count\
    \ * 10 + 10_isize.pow((n - 1).try_into().unwrap())\n   |                     \
    \          +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    if n == 2 {\n   \
    \     return 4;\n    }\n    let mut count = 0;\n    let mut i = 1;\n    while\
    \ i < n {\n        count += starts_one_ends(i) * starts_one_ends(n - i);\n   \
    \     i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp3058y568.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 10_isize.pow(i\
    \ as u32) * 9;\n    }\n    count + 10_isize.pow(n as u32)\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpgnw5j_ft.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    if n == 2 {\n   \
    \     return 4;\n    }\n    let mut res = 0;\n    for i in 1..n {\n        res\
    \ += starts_one_ends(i) * starts_one_ends(n - i);\n    }\n    res\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp_9r3ksmm.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n + 1 {\n        count +=\
    \ starts_one_ends_helper(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpl3_zvh5b.rs:6:18\n  |\n6 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp_5sjbup.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp_5sjbup.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 1;\n\
    \    let mut i = 1;\n    while i < n {\n        count += 9 * (10 as isize).pow(i\
    \ - 1);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp9m7zzr2g.rs:10:40\n   |\n\
    10 |         count += 9 * (10 as isize).pow(i - 1);\n   |                    \
    \                    ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \   |\n10 |         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n\
    \   |                                        +     +++++++++++++++++++++\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut result =\
    \ 9;\n    for _ in 2..n {\n        result *= 10;\n    }\n    result * 2\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpxbg0pjxo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 0..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `18`', /tmp/tmpia7xorz5.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp_gs6dcru.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `18`', /tmp/tmpqkgtplv6.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2);\n    }\n    dp[(n - 1)\
    \ as usize]\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpik7s2u14.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![vec![0;\
    \ 2]; n as usize];\n    dp[0][0] = 9;\n    dp[0][1] = 1;\n    for i in 1..n as\
    \ usize {\n        dp[i][0] = dp[i - 1][0] * 10 - dp[i - 1][1];\n        dp[i][1]\
    \ = dp[i - 1][0];\n    }\n    dp[n as usize - 1][0] + dp[n as usize - 1][1]\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpvm6b7p5s.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 9;\n    let mut base = 9;\n    for _ in 2..n {\n        count += base;\n \
    \       base *= 10;\n    }\n\n    count\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpstzlix9v.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n - i\
    \ - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9unrg4x6.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9unrg4x6.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 1..n {\n        count *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpa__vbb2w.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpuuhweqjk.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..n {\n        result += starts_one_ends(i);\n    }\n    result\
    \ *= 9;\n    result += starts_one_ends(n - 1);\n    result\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmp1ehy0rie.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpb0fsfstu.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut i = 1;\n    while i < n {\n        count *= 10 - i;\n      \
    \  i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp48mjd_hx.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkcrnff02.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpkcrnff02.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count +\
    \ 9 * starts_one_ends(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmpllhlmo9m.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut i = 1;\n    while i < n {\n        count *= 10 - i;\n      \
    \  i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp48mjd_hx.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwvmpfxgb.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwvmpfxgb.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..10 {\n        count += starts_one_ends(n - 1);\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmps4ktmsr_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n\
    \    for i in 1..n {\n        sum += starts_one_ends(i) * starts_one_ends(n -\
    \ i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp8wd4u42r.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpsk_090i6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count +\
    \ 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfgwtupgf.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10.pow(n as u32 - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n\
    \  --> /tmp/tmp9pwiltil.rs:11:20\n   |\n11 |     count * 9 + 10.pow(n as u32 -\
    \ 1)\n   |                    ^^^\n   |\nhelp: you must specify a concrete type\
    \ for this numeric value, like `i32`\n   |\n11 |     count * 9 + 10_i32.pow(n\
    \ as u32 - 1)\n   |                 ~~~~~~\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0689`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbui2_3ny.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        count += starts_one_ends(n -\
    \ i) * 9;\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpfgllp5a2.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 10;\n    let mut i = 2;\n    while i <= n {\n        count += 9 * pow(10, i\
    \ - 1);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `pow` in this scope\n  --> /tmp/tmpt0utq0u8.rs:10:22\n\
    \   |\n10 |         count += 9 * pow(10, i - 1);\n   |                      ^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkcrnff02.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpkcrnff02.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2);\n    }\n    dp[(n - 1)\
    \ as usize]\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpik7s2u14.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1y_z184v.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmp1y_z184v.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n\n   \
    \ count * 9 + starts_one_ends(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp9niinfuj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 10;\n    let mut base = 10;\n    for _ in 1..n {\n        base *= 10;\n    \
    \    count += base;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpqu2gcfy5.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp_gs6dcru.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3_6kg87.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo3_6kg87.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 1;\n\
    \    for _ in 1..n {\n        count *= 10;\n    }\n    count * 2\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `20`,\n right: `18`', /tmp/tmpbk_50w9t.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012996
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut start = 1;\n    let mut end = 1;\n    for _ in 1..n {\n        start\
    \ *= 10;\n        end = end * 10 + 1;\n    }\n    count += start;\n    count +=\
    \ end;\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpmbi3z77w.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp33llxczl.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 10_isize.pow(i\
    \ as u32);\n    }\n    count * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp3d91ijsu.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660012997

language: rs
name: HumanEval_110_exchange
results:
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_lst1 = lst1.iter().filter(|&x|\
    \ x % 2 == 0).collect::<Vec<_>>();\n    let mut odd_lst2 = lst2.iter().filter(|&x|\
    \ x % 2 != 0).collect::<Vec<_>>();\n    let mut even_lst2 = lst2.iter().filter(|&x|\
    \ x % 2 == 0).collect::<Vec<_>>();\n    let mut odd_lst1 = lst1.iter().filter(|&x|\
    \ x % 2 != 0).collect::<Vec<_>>();\n    if even_lst1.len() > odd_lst2.len() {\n\
    \        return String::from(\"NO\");\n    }\n    if even_lst2.len() > odd_lst1.len()\
    \ {\n        return String::from(\"NO\");\n    }\n    for i in 0..even_lst1.len()\
    \ {\n        let index = lst2.iter().position(|&x| x == even_lst1[i]).unwrap();\n\
    \        lst2[index] = odd_lst2[i];\n    }\n    for i in 0..even_lst2.len() {\n\
    \        let index = lst1.iter().position(|&x| x == even_lst2[i]).unwrap();\n\
    \        lst1[index] = odd_lst1[i];\n    }\n    if lst1.iter().all(|&x| x % 2\
    \ == 0) {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\"\
    )\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2wzh2wml.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2wzh2wml.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2wzh2wml.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2wzh2wml.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2wzh2wml.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2wzh2wml.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2wzh2wml.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2wzh2wml.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2wzh2wml.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2wzh2wml.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2wzh2wml.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut result = String::from(\"\
    YES\");\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 != 0 {\n       \
    \     let mut found = false;\n            for j in 0..lst2.len() {\n         \
    \       if lst2[j] % 2 != 0 {\n                    lst1[i] = lst2[j];\n      \
    \              lst2[j] = lst1[i];\n                    found = true;\n       \
    \             break;\n                }\n            }\n            if !found\
    \ {\n                result = String::from(\"NO\");\n                break;\n\
    \            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgrahuco8.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgrahuco8.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgrahuco8.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgrahuco8.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgrahuco8.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgrahuco8.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgrahuco8.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgrahuco8.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgrahuco8.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgrahuco8.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgrahuco8.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|&x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|&x| x % 2 == 0);\n  \
    \  if lst1_even && lst2_even {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_even {\n        return String::from(\"NO\");\n    }\n    if lst2_even\
    \ {\n        return String::from(\"NO\");\n    }\n    for i in 0..lst1.len() {\n\
    \        if lst1[i] % 2 == 0 {\n            continue;\n        }\n        for\
    \ j in 0..lst2.len() {\n            if lst2[j] % 2 == 0 {\n                lst1[i]\
    \ = lst2[j];\n                lst2[j] = lst1[i];\n                lst1_even =\
    \ lst1.iter().all(|&x| x % 2 == 0);\n                lst2_even = lst2.iter().all(|&x|\
    \ x % 2 == 0);\n                if lst1_even && lst2_even {\n                \
    \    return String::from(\"YES\");\n                }\n                if lst1_even\
    \ {\n                    return String::from(\"NO\");\n                }\n   \
    \             if lst2_even {\n                    return String::from(\"NO\");\n\
    \                }\n            }\n        }\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpemq91wu6.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpemq91wu6.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpemq91wu6.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpemq91wu6.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpemq91wu6.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpemq91wu6.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpemq91wu6.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in lst1.iter() {\n        if i % 2\
    \ == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in lst2.iter() {\n        if i % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count > odd_count {\n        String::from(\"YES\"\
    )\n    } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let\
    \ candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsect27hd.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsect27hd.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsect27hd.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsect27hd.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] %\
    \ 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count > odd_count {\n        return String::from(\"\
    YES\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp62revwdi.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp62revwdi.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp62revwdi.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp62revwdi.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp62revwdi.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp62revwdi.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp62revwdi.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp62revwdi.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp62revwdi.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp62revwdi.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp62revwdi.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg6wz_udq.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd_count\
    \ = lst1.iter().filter(|x| x % 2 != 0).count();\n    let mut lst2_odd_count =\
    \ lst2.iter().filter(|x| x % 2 != 0).count();\n    if lst1_odd_count == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst2_odd_count == 0 {\n\
    \        return String::from(\"NO\");\n    }\n    if lst1_odd_count == lst2_odd_count\
    \ {\n        return String::from(\"YES\");\n    }\n    if lst1_odd_count < lst2_odd_count\
    \ {\n        let mut i = 0;\n        while i < lst1.len() {\n            if lst1[i]\
    \ % 2 != 0 {\n                let mut j = 0;\n                while j < lst2.len()\
    \ {\n                    if lst2[j] % 2 != 0 {\n                        lst1[i]\
    \ = lst2[j];\n                        lst2[j] = lst1[i];\n                   \
    \     lst1_odd_count -= 1;\n                        lst2_odd_count += 1;\n   \
    \                     if lst1_odd_count == 0 {\n                            return\
    \ String::from(\"YES\");\n                        }\n                        if\
    \ lst1_odd_count == lst2_odd_count {\n                            return String::from(\"\
    YES\");\n                        }\n                        break;\n         \
    \           }\n                    j += 1;\n                }\n            }\n\
    \            i += 1;\n        }\n    } else {\n        let mut i = 0;\n      \
    \  while i < lst2.len() {\n            if lst2[i] % 2 != 0 {\n               \
    \ let mut j = 0;\n                while j < lst1.len() {\n                   \
    \ if lst1[j] % 2 != 0 {\n                        lst2[i] = lst1[j];\n        \
    \                lst1[j] = lst2[i];\n                        lst2_odd_count -=\
    \ 1;\n                        l\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp0wiif475.rs:74:3\n\
    \   |\n14 | fn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n   |\
    \                                                           - unclosed delimiter\n\
    ...\n52 |     } else {\n   |            - unclosed delimiter\n53 |         let\
    \ mut i = 0;\n54 |         while i < lst2.len() {\n   |                      \
    \        - unclosed delimiter\n55 |             if lst2[i] % 2 != 0 {\n   |  \
    \                               - unclosed delimiter\n56 |                 let\
    \ mut j = 0;\n57 |                 while j < lst1.len() {\n   |              \
    \                        - unclosed delimiter\n58 |                     if lst1[j]\
    \ % 2 != 0 {\n   |                                         - this delimiter might\
    \ not be properly closed...\n...\n63 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n74 | }\n   |   ^\n\nerror[E0425]: cannot find\
    \ value `l` in this scope\n  --> /tmp/tmp0wiif475.rs:62:25\n   |\n62 |       \
    \                  l\n   |                         ^ help: a local variable with\
    \ a similar name exists: `i`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp0wiif475.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0wiif475.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0wiif475.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0wiif475.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0wiif475.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp3vitb7r.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut exchange = false;\n    while i < lst1.len() {\n    \
    \    if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n             \
    \   if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n          \
    \          lst2[j] = lst1[i];\n                    exchange = true;\n        \
    \            break;\n                }\n                j += 1;\n            }\n\
    \        }\n        if !exchange {\n            return String::from(\"NO\");\n\
    \        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5f1zz4cz.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i == lst1.len() {\n\
    \        String::from(\"YES\")\n    } else {\n        String::from(\"NO\")\n \
    \   }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsattkpe7.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_exchange = false;\n    while i < lst1.len() {\n \
    \       if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    is_exchange = true;\n  \
    \                  break;\n                }\n                j += 1;\n      \
    \      }\n        }\n        if !is_exchange {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn\
    \ main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpindgzw1l.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = 1;\n   \
    \                 break;\n                }\n                j += 1;\n       \
    \     }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjhzfeafv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg6wz_udq.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg6wz_udq.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    if lst1.iter().any(|x| x % 2 != 0) {\n        return String::from(\"NO\"\
    );\n    }\n\n    if lst2.iter().any(|x| x % 2 == 0) {\n        return String::from(\"\
    YES\");\n    }\n\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplgzfo5iv.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgzfo5iv.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgzfo5iv.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplgzfo5iv.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplgzfo5iv.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplgzfo5iv.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplgzfo5iv.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplgzfo5iv.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplgzfo5iv.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgzfo5iv.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgzfo5iv.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        \"YES\".to_string()\n    } else {\n        \"NO\".to_string()\n\
    \    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5d1ostmo.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5d1ostmo.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5d1ostmo.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5d1ostmo.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5d1ostmo.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5d1ostmo.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5d1ostmo.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5d1ostmo.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5d1ostmo.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5d1ostmo.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5d1ostmo.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|x| x % 2 == 0);\n   \
    \ if lst1_even || lst2_even {\n        return String::from(\"YES\");\n    }\n\
    \    let mut lst1_odd = lst1.iter().all(|x| x % 2 != 0);\n    let mut lst2_odd\
    \ = lst2.iter().all(|x| x % 2 != 0);\n    if lst1_odd && lst2_odd {\n        return\
    \ String::from(\"NO\");\n    }\n    if lst1_odd {\n        for i in 0..lst1.len()\
    \ {\n            if lst1[i] % 2 == 0 {\n                lst1.swap(i, 0);\n   \
    \             break;\n            }\n        }\n        for i in 0..lst2.len()\
    \ {\n            if lst2[i] % 2 != 0 {\n                lst2.swap(i, 0);\n   \
    \             break;\n            }\n        }\n        lst1.swap(0, 0);\n   \
    \     lst2.swap(0, 0);\n        return String::from(\"YES\");\n    }\n    if lst2_odd\
    \ {\n        for i in 0..lst2.len() {\n            if lst2[i] % 2 == 0 {\n   \
    \             lst2.swap(i, 0);\n                break;\n            }\n      \
    \  }\n        for i in 0..lst1.len() {\n            if lst1[i] % 2 != 0 {\n  \
    \              lst1.swap(i, 0);\n                break;\n            }\n     \
    \   }\n        lst1.swap(0, 0);\n        lst2.swap(0, 0);\n        return String::from(\"\
    YES\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphycyootx.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphycyootx.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphycyootx.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphycyootx.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphycyootx.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphycyootx.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphycyootx.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphycyootx.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphycyootx.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphycyootx.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphycyootx.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            break;\n\
    \        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            break;\n\
    \        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i]\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpflov7tg4.rs:85:3\n\
    \   |\n14 | fn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n   |\
    \                                                           - unclosed delimiter\n\
    ...\n72 |     for i in 0..lst2.len() {\n   |                            - this\
    \ delimiter might not be properly closed...\n73 |         if lst2[i]\n74 | }\n\
    \   | - ...as it matches this but it has different indentation\n...\n85 | }\n\
    \   |   ^\n\nerror: expected `{`, found `}`\n  --> /tmp/tmpflov7tg4.rs:74:1\n\
    \   |\n73 |         if lst2[i]\n   |         -- this `if` expression has a condition,\
    \ but no block\n74 | }\n   | ^ expected `{`\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpflov7tg4.rs:78:17\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpflov7tg4.rs:78:25\n \
    \  |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpflov7tg4.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpflov7tg4.rs:79:25\n   |\n79 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpflov7tg4.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpflov7tg4.rs:80:25\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpflov7tg4.rs:81:17\n  \
    \ |\n81 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpflov7tg4.rs:81:25\n   |\n81 |     assert_eq!({l"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1_odd = lst1.iter().filter(|x| x % 2 != 0).count();\n    let mut\
    \ lst2_even = lst2.iter().filter(|x| x % 2 == 0).count();\n    if lst1_odd <=\
    \ lst2_even {\n        return String::from(\"YES\");\n    }\n    return String::from(\"\
    NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1a5ruc0h.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1a5ruc0h.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1a5ruc0h.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1a5ruc0h.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1a5ruc0h.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            let mut lst1_copy = lst1.clone();\n\
    \            let mut lst2_copy = lst2.clone();\n            lst1_copy[i] = lst2[j];\n\
    \            lst2_copy[j] = lst1[i];\n            even_count = 0;\n          \
    \  for k in 0..lst1_copy.len() {\n                if lst1_copy[k] % 2 == 0 {\n\
    \                    even_count += 1;\n                }\n            }\n    \
    \        if even_count == lst1_copy.len() {\n                return String::from(\"\
    YES\");\n            }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncma86vb.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpncma86vb.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncma86vb.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncma86vb.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncma86vb.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncma86vb.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncma86vb.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().any(|&x|\
    \ x % 2 != 0) {\n        String::from(\"NO\")\n    } else {\n        String::from(\"\
    YES\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2j1ckv1o.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2j1ckv1o.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2j1ckv1o.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2j1ckv1o.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2j1ckv1o.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_even = true;\n    while i < lst1.len() && is_even\
    \ {\n        if lst1[i] % 2 != 0 {\n            is_even = false;\n           \
    \ while j < lst2.len() && !is_even {\n                if lst2[j] % 2 != 0 {\n\
    \                    lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    is_even = true;\n                }\n                j +=\
    \ 1;\n            }\n        }\n        i += 1;\n    }\n    if is_even {\n   \
    \     String::from(\"YES\")\n    } else {\n        String::from(\"NO\")\n    }\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmph7v3ygov.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph7v3ygov.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph7v3ygov.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph7v3ygov.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph7v3ygov.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph7v3ygov.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph7v3ygov.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph7v3ygov.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph7v3ygov.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph7v3ygov.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph7v3ygov.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut result = String::from(\"YES\");\n    while i < lst1.len()\
    \ {\n        if lst1[i] % 2 != 0 {\n            while j < lst2.len() {\n     \
    \           if lst2[j] % 2 != 0 {\n                    j += 1;\n             \
    \   } else {\n                    lst1[i] = lst2[j];\n                    lst2[j]\
    \ = lst1[i];\n                    break;\n                }\n            }\n \
    \           if j == lst2.len() {\n                result = String::from(\"NO\"\
    );\n                break;\n            }\n        }\n        i += 1;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxpico5uk.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxpico5uk.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxpico5uk.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxpico5uk.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxpico5uk.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxpico5uk.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxpico5uk.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxpico5uk.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxpico5uk.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxpico5uk.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxpico5uk.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd_count\
    \ = 0;\n    let mut lst2_odd_count = 0;\n    for i in 0..lst1.len() {\n      \
    \  if lst1[i] % 2 != 0 {\n            lst1_odd_count += 1;\n        }\n      \
    \  if lst2[i] % 2 != 0 {\n            lst2_odd_count += 1;\n        }\n    }\n\
    \    if lst1_odd_count % 2 == 0 && lst2_odd_count % 2 == 0 {\n        return String::from(\"\
    YES\");\n    }\n    if lst1_odd_count % 2 != 0 && lst2_odd_count % 2 != 0 {\n\
    \        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n}\n\n\
    fn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbj9860iw.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbj9860iw.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbj9860iw.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbj9860iw.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbj9860iw.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbj9860iw.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbj9860iw.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut flag = true;\n    while i < lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            flag = false;\n            break;\n        }\n\
    \        i += 1;\n    }\n    if flag {\n        return String::from(\"YES\");\n\
    \    }\n    while j < lst2.len() {\n        if lst2[j] % 2 == 0 {\n          \
    \  flag = true;\n            break;\n        }\n        j += 1;\n    }\n    if\
    \ flag {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\"\
    )\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp90whihn5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp90whihn5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp90whihn5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp90whihn5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp90whihn5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp90whihn5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp90whihn5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp90whihn5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp90whihn5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp90whihn5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp90whihn5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] %\
    \ 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() || odd_count == lst1.len()\
    \ {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcyaig1zm.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i == lst1.len() {\n\
    \        String::from(\"YES\")\n    } else {\n        String::from(\"NO\")\n \
    \   }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsattkpe7.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    break;\n               \
    \ }\n            }\n        }\n    }\n    even_count = 0;\n    for i in 0..lst1.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            even_count += 1;\n        }\n\
    \    }\n    if even_count == lst1.len() {\n        return String::from(\"YES\"\
    );\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu8scxhno.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            break;\n\
    \        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            break;\n\
    \        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate =\
    \ exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:77:17\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv247q1pb.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv247q1pb.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv247q1pb.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv247q1pb.rs:79:25\n   |\n79 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv247q1pb.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv247q1pb.rs:80:25\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:81:17\n  \
    \ |\n81 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv247q1pb.rs:81:25\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:82:17\n   |\n82 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in lst1.iter() {\n        if i % 2 == 0 {\n            even_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    for i in 0..lst1.len() {\n        for j in 0..lst2.len() {\n\
    \            let temp = lst1[i];\n            lst1[i] = lst2[j];\n           \
    \ lst2[j] = temp;\n            even_count = 0;\n            for k in lst1.iter()\
    \ {\n                if k % 2 == 0 {\n                    even_count += 1;\n \
    \               }\n            }\n            if even_count == lst1.len() {\n\
    \                return String::from(\"YES\");\n            }\n        }\n   \
    \ }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmped0i9uir.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmped0i9uir.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmped0i9uir.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmped0i9uir.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmped0i9uir.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmped0i9uir.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmped0i9uir.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmped0i9uir.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmped0i9uir.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmped0i9uir.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmped0i9uir.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|&x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|&x| x % 2 == 0);\n  \
    \  if lst1_even && lst2_even {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_even {\n        return String::from(\"NO\");\n    }\n    if lst2_even\
    \ {\n        lst1.swap_with_slice(&mut lst2);\n        lst1_even = lst1.iter().all(|&x|\
    \ x % 2 == 0);\n        lst2_even = lst2.iter().all(|&x| x % 2 == 0);\n      \
    \  if lst1_even && lst2_even {\n            return String::from(\"YES\");\n  \
    \      }\n        return String::from(\"NO\");\n    }\n    for i in 0..lst1.len()\
    \ {\n        for j in 0..lst2.len() {\n            lst1.swap(i, j);\n        \
    \    lst1_even = lst1.iter().all(|&x| x % 2 == 0);\n            lst2_even = lst2.iter().all(|&x|\
    \ x % 2 == 0);\n            if lst1_even && lst2_even {\n                return\
    \ String::from(\"YES\");\n            }\n            lst1.swap(i, j);\n      \
    \  }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplfqo42ob.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplfqo42ob.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplfqo42ob.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplfqo42ob.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplfqo42ob.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplfqo42ob.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplfqo42ob.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplfqo42ob.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplfqo42ob.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplfqo42ob.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplfqo42ob.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut res = String::from(\"NO\");\n    while i < lst1.len()\
    \ {\n        if lst1[i] % 2 != 0 {\n            while j < lst2.len() {\n     \
    \           if lst2[j] % 2 != 0 {\n                    j += 1;\n             \
    \   } else {\n                    lst1[i] = lst2[j];\n                    res\
    \ = String::from(\"YES\");\n                    break;\n                }\n  \
    \          }\n        }\n        i += 1;\n    }\n    res\n}\n\nfn main() {\n \
    \   let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp99nepbjn.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp99nepbjn.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp99nepbjn.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp99nepbjn.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp99nepbjn.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp99nepbjn.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp99nepbjn.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp99nepbjn.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp99nepbjn.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp99nepbjn.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp99nepbjn.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    lst1.sort();\n    lst2.sort();\n\
    \    let mut i = 0;\n    let mut j = 0;\n    while i < lst1.len() && j < lst2.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            i += 1;\n        } else if lst2[j]\
    \ % 2 == 0 {\n            lst1[i] = lst2[j];\n            i += 1;\n          \
    \  j += 1;\n        } else {\n            j += 1;\n        }\n    }\n    if i\
    \ < lst1.len() {\n        return String::from(\"NO\");\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplo6opu03.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplo6opu03.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplo6opu03.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplo6opu03.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplo6opu03.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplo6opu03.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplo6opu03.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplo6opu03.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplo6opu03.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplo6opu03.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplo6opu03.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut flag = false;\n    while i < lst1.len() {\n        if\
    \ lst1[i] % 2 == 0 {\n            i += 1;\n            continue;\n        }\n\
    \        while j < lst2.len() {\n            if lst2[j] % 2 == 1 {\n         \
    \       j += 1;\n                continue;\n            }\n            lst1[i]\
    \ = lst2[j];\n            lst2[j] = lst1[i];\n            flag = true;\n     \
    \       break;\n        }\n        if !flag {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n        j += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp14ukcx6v.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut count = 0;\n    while i < lst1.len() && j < lst2.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            i += 1;\n        } else if lst2[j]\
    \ % 2 == 0 {\n            lst1[i] = lst2[j];\n            i += 1;\n          \
    \  j += 1;\n            count += 1;\n        } else {\n            j += 1;\n \
    \       }\n    }\n    if count == 0 {\n        String::from(\"NO\")\n    } else\
    \ {\n        String::from(\"YES\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_wjbwo2g.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_wjbwo2g.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_wjbwo2g.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_wjbwo2g.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_wjbwo2g.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut flag = false;\n    while i < lst1.len() {\n        if\
    \ lst1[i] % 2 == 0 {\n            i += 1;\n            continue;\n        }\n\
    \        while j < lst2.len() {\n            if lst2[j] % 2 == 1 {\n         \
    \       j += 1;\n                continue;\n            }\n            lst1[i]\
    \ = lst2[j];\n            lst2[j] = lst1[i];\n            flag = true;\n     \
    \       break;\n        }\n        if !flag {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n        j += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp14ukcx6v.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp3vitb7r.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut evens = 0;\n\
    \    let mut odds = 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 ==\
    \ 0 {\n            evens += 1;\n        } else {\n            odds += 1;\n   \
    \     }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \    }\n    if evens % 2 == 0 && odds % 2 == 0 {\n        String::from(\"YES\"\
    )\n    } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let\
    \ candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoj_69fw5.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoj_69fw5.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoj_69fw5.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoj_69fw5.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoj_69fw5.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoj_69fw5.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoj_69fw5.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = Vec::new();\n\
    \    let mut lst2_even = Vec::new();\n    for i in 0..lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            lst1_odd.push(i);\n        }\n    }\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even.push(i);\n\
    \        }\n    }\n    if lst1_odd.len() == 0 || lst2_even.len() == 0 {\n    \
    \    return String::from(\"NO\");\n    }\n    for i in 0..lst1_odd.len() {\n \
    \       for j in 0..lst2_even.len() {\n            let temp = lst1[lst1_odd[i]];\n\
    \            lst1[lst1_odd[i]] = lst2[lst2_even[j]];\n            lst2[lst2_even[j]]\
    \ = temp;\n            if lst1.iter().all(|&x| x % 2 == 0) {\n               \
    \ return String::from(\"YES\");\n            }\n        }\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2b1at6km.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2b1at6km.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2b1at6km.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2b1at6km.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2b1at6km.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2b1at6km.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2b1at6km.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2b1at6km.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2b1at6km.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2b1at6km.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2b1at6km.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut res = String::from(\"\
    NO\");\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 != 0 {\n        \
    \    for j in 0..lst2.len() {\n                if lst2[j] % 2 == 0 {\n       \
    \             lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n   \
    \                 res = String::from(\"YES\");\n                    break;\n \
    \               }\n            }\n        }\n    }\n    res\n}\n\nfn main() {\n\
    \    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmply55p828.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmply55p828.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmply55p828.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmply55p828.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmply55p828.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmply55p828.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmply55p828.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmply55p828.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmply55p828.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmply55p828.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmply55p828.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd_count\
    \ = 0;\n    let mut lst2_odd_count = 0;\n    for i in lst1.iter() {\n        if\
    \ i % 2 != 0 {\n            lst1_odd_count += 1;\n        }\n    }\n    for i\
    \ in lst2.iter() {\n        if i % 2 != 0 {\n            lst2_odd_count += 1;\n\
    \        }\n    }\n    if lst1_odd_count % 2 == 0 && lst2_odd_count % 2 == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst1_odd_count % 2 != 0\
    \ && lst2_odd_count % 2 != 0 {\n        return String::from(\"YES\");\n    }\n\
    \    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2ojheyyw.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2ojheyyw.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2ojheyyw.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2ojheyyw.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2ojheyyw.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2ojheyyw.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2ojheyyw.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2ojheyyw.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2ojheyyw.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2ojheyyw.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2ojheyyw.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut found = false;\n    while i < lst1.len() {\n       \
    \ if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n                if\
    \ lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n               \
    \     lst2[j] = lst1[i];\n                    found = true;\n                \
    \    break;\n                }\n                j += 1;\n            }\n     \
    \   }\n        if !found {\n            return String::from(\"NO\");\n       \
    \ }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main() {\n   \
    \ let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp01cwbyaa.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp01cwbyaa.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp01cwbyaa.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp01cwbyaa.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp01cwbyaa.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp01cwbyaa.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp01cwbyaa.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = lst1.iter().filter(|x|\
    \ x % 2 != 0).count();\n    let mut lst2_odd = lst2.iter().filter(|x| x % 2 !=\
    \ 0).count();\n    let mut lst1_even = lst1.iter().filter(|x| x % 2 == 0).count();\n\
    \    let mut lst2_even = lst2.iter().filter(|x| x % 2 == 0).count();\n    if lst1_odd\
    \ == 0 {\n        return String::from(\"YES\");\n    }\n    if lst2_odd == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst1_odd == lst1.len() &&\
    \ lst2_odd == lst2.len() {\n        return String::from(\"NO\");\n    }\n    if\
    \ lst1_odd == lst1.len() {\n        return String::from(\"YES\");\n    }\n   \
    \ if lst2_odd == lst2.len() {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_odd > lst2_even && lst2_odd > lst1_even {\n        return String::from(\"\
    NO\");\n    }\n    if lst1_odd > lst2_even {\n        for i in 0..lst1.len() {\n\
    \            if lst1[i] % 2 != 0 {\n                for j in 0..lst2.len() {\n\
    \                    if lst2[j] % 2 == 0 {\n                        lst1[i] =\
    \ lst2[j];\n                        lst2[j] = lst1[i];\n                     \
    \   break;\n                    }\n                }\n            }\n        }\n\
    \    }\n    if lst2_odd > lst1_even {\n        for i in 0..lst2.len() {\n    \
    \        if lst2[i] % 2 != 0 {\n                for j in 0..lst1.len() {\n   \
    \                 if lst1[j] % 2 == 0\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpzhnbv1cz.rs:68:3\n\
    \   |\n14 | fn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n   |\
    \                                                           - unclosed delimiter\n\
    ...\n52 |     if lst2_odd > lst1_even {\n   |                             - unclosed\
    \ delimiter\n53 |         for i in 0..lst2.len() {\n   |                     \
    \           - unclosed delimiter\n54 |             if lst2[i] % 2 != 0 {\n   |\
    \                                 - unclosed delimiter\n55 |                 for\
    \ j in 0..lst1.len() {\n   |                                        - this delimiter\
    \ might not be properly closed...\n56 |                     if lst1[j] % 2 ==\
    \ 0\n57 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    68 | }\n   |   ^\n\nerror: expected `{`, found `}`\n  --> /tmp/tmpzhnbv1cz.rs:57:1\n\
    \   |\n56 |                     if lst1[j] % 2 == 0\n   |                    \
    \ -- this `if` expression has a condition, but no block\n57 | }\n   | ^ expected\
    \ `{`\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhnbv1cz.rs:61:17\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhnbv1cz.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhnbv1cz.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhnbv1cz.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzhnbv1cz.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzhnbv1cz.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {ri"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut exchange_count\
    \ = 0;\n    let mut i = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2\
    \ == 1 {\n            let mut j = 0;\n            while j < lst2.len() {\n   \
    \             if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[i];\n                    exchange_count +=\
    \ 1;\n                    break;\n                }\n                j += 1;\n\
    \            }\n        }\n        i += 1;\n    }\n    if exchange_count == 0\
    \ {\n        String::from(\"NO\")\n    } else {\n        String::from(\"YES\"\
    )\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyqv2lwdm.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyqv2lwdm.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyqv2lwdm.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyqv2lwdm.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyqv2lwdm.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1_odd = lst1.iter().filter(|&x| x % 2 != 0).count();\n    let\
    \ mut lst2_odd = lst2.iter().filter(|&x| x % 2 != 0).count();\n    if lst1_odd\
    \ == 0 {\n        return String::from(\"YES\");\n    }\n    if lst2_odd == 0 {\n\
    \        return String::from(\"NO\");\n    }\n    if lst1_odd == lst2_odd {\n\
    \        return String::from(\"YES\");\n    }\n    if lst1_odd > lst2_odd {\n\
    \        return String::from(\"NO\");\n    }\n    String::from(\"YES\")\n}\n\n\
    fn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_vio0ke5.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_vio0ke5.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_vio0ke5.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_vio0ke5.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_vio0ke5.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_vio0ke5.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_vio0ke5.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_vio0ke5.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_vio0ke5.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_vio0ke5.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_vio0ke5.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut evens = 0;\n    let mut odds = 0;\n    for i in lst1 {\n        if\
    \ i % 2 == 0 {\n            evens += 1;\n        } else {\n            odds +=\
    \ 1;\n        }\n    }\n    for i in lst2 {\n        if i % 2 == 0 {\n       \
    \     evens += 1;\n        } else {\n            odds += 1;\n        }\n    }\n\
    \    if evens % 2 == 0 && odds % 2 == 0 {\n        String::from(\"YES\")\n   \
    \ } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmklxywni.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmklxywni.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmklxywni.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmklxywni.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmklxywni.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmklxywni.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmklxywni.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in lst1.iter() {\n        if i % 2 == 0 {\n            even_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    for i in 0..lst1.len() {\n        for j in 0..lst2.len() {\n\
    \            if lst1[i] % 2 == 0 && lst2[j] % 2 != 0 {\n                lst1[i]\
    \ = lst2[j];\n                lst2[j] = lst1[i];\n                even_count +=\
    \ 1;\n            }\n            if even_count == lst1.len() {\n             \
    \   return String::from(\"YES\");\n            }\n        }\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyme7dtiu.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyme7dtiu.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyme7dtiu.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyme7dtiu.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyme7dtiu.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyme7dtiu.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyme7dtiu.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyme7dtiu.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyme7dtiu.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyme7dtiu.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyme7dtiu.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut found = false;\n    while i < lst1.len() {\n       \
    \ if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n                if\
    \ lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n               \
    \     found = true;\n                    break;\n                }\n         \
    \       j += 1;\n            }\n        }\n        if !found {\n            return\
    \ String::from(\"NO\");\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxq3jg969.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxq3jg969.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxq3jg969.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxq3jg969.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxq3jg969.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxq3jg969.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxq3jg969.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxq3jg969.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxq3jg969.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxq3jg969.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxq3jg969.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut flag = true;\n    while i < lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            while j < lst2.len() {\n                if lst2[j]\
    \ % 2 != 0 {\n                    j += 1;\n                } else {\n        \
    \            let temp = lst1[i];\n                    lst1[i] = lst2[j];\n   \
    \                 lst2[j] = temp;\n                    break;\n              \
    \  }\n            }\n            if j == lst2.len() {\n                flag =\
    \ false;\n                break;\n            }\n        }\n        i += 1;\n\
    \    }\n    if flag {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc4vt0nui.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc4vt0nui.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc4vt0nui.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc4vt0nui.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc4vt0nui.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc4vt0nui.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc4vt0nui.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc4vt0nui.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc4vt0nui.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc4vt0nui.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc4vt0nui.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    lst1.sort();\n    lst2.sort();\n\
    \    let mut i = 0;\n    let mut j = 0;\n    while i < lst1.len() && j < lst2.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            i += 1;\n        } else if lst2[j]\
    \ % 2 == 0 {\n            i += 1;\n            j += 1;\n        } else {\n   \
    \         return String::from(\"NO\");\n        }\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptm1_lqrf.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptm1_lqrf.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptm1_lqrf.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptm1_lqrf.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptm1_lqrf.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptm1_lqrf.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptm1_lqrf.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptm1_lqrf.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptm1_lqrf.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptm1_lqrf.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptm1_lqrf.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut flag = true;\n\
    \    for i in 0..lst1.len() {\n        if lst1[i] % 2 != 0 {\n            for\
    \ j in 0..lst2.len() {\n                if lst2[j] % 2 == 0 {\n              \
    \      lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n          \
    \          flag = true;\n                    break;\n                } else {\n\
    \                    flag = false;\n                }\n            }\n       \
    \ }\n        if !flag {\n            return String::from(\"NO\");\n        }\n\
    \    }\n    String::from(\"YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpinumm0a1.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpinumm0a1.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpinumm0a1.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpinumm0a1.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpinumm0a1.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpinumm0a1.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpinumm0a1.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpinumm0a1.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpinumm0a1.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpinumm0a1.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpinumm0a1.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in lst1.iter() {\n        if i % 2\
    \ == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in lst2.iter() {\n        if i % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count > odd_count {\n        String::from(\"YES\"\
    )\n    } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let\
    \ candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsect27hd.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsect27hd.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsect27hd.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsect27hd.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|&x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpice4xgvb.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpice4xgvb.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpice4xgvb.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpice4xgvb.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpice4xgvb.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpice4xgvb.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpice4xgvb.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = Vec::new();\n\
    \    let mut lst2_even = Vec::new();\n    for i in 0..lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            lst1_odd.push(i);\n        }\n    }\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even.push(i);\n\
    \        }\n    }\n    if lst1_odd.len() == 0 || lst2_even.len() == 0 {\n    \
    \    return String::from(\"NO\");\n    }\n    for i in 0..lst1_odd.len() {\n \
    \       for j in 0..lst2_even.len() {\n            let tmp = lst1[lst1_odd[i]];\n\
    \            lst1[lst1_odd[i]] = lst2[lst2_even[j]];\n            lst2[lst2_even[j]]\
    \ = tmp;\n            if lst1.iter().all(|&x| x % 2 == 0) {\n                return\
    \ String::from(\"YES\");\n            }\n        }\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp3b4gemi.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3b4gemi.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3b4gemi.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp3b4gemi.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp3b4gemi.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp3b4gemi.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp3b4gemi.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp3b4gemi.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp3b4gemi.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3b4gemi.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3b4gemi.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = Vec::new();\n\
    \    let mut lst2_even = Vec::new();\n    for i in 0..lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            lst1_odd.push(i);\n        }\n    }\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even.push(i);\n\
    \        }\n    }\n    if lst1_odd.len() == 0 || lst2_even.len() == 0 {\n    \
    \    return String::from(\"NO\");\n    }\n    for i in 0..lst1_odd.len() {\n \
    \       for j in 0..lst2_even.len() {\n            let tmp = lst1[lst1_odd[i]];\n\
    \            lst1[lst1_odd[i]] = lst2[lst2_even[j]];\n            lst2[lst2_even[j]]\
    \ = tmp;\n            let mut lst1_odd_tmp = Vec::new();\n            for k in\
    \ 0..lst1.len() {\n                if lst1[k] % 2 != 0 {\n                   \
    \ lst1_odd_tmp.push(k);\n                }\n            }\n            if lst1_odd_tmp.len()\
    \ == 0 {\n                return String::from(\"YES\");\n            }\n     \
    \       let tmp = lst1[lst1_odd[i]];\n            lst1[lst1_odd[i]] = lst2[lst2_even[j]];\n\
    \            lst2[lst2_even[j]] = tmp;\n        }\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp41whq9a5.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp41whq9a5.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp41whq9a5.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp41whq9a5.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp41whq9a5.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp41whq9a5.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp41whq9a5.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp41whq9a5.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp41whq9a5.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp41whq9a5.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp41whq9a5.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut flag = true;\n    while i < lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            while j < lst2.len() {\n                if lst2[j]\
    \ % 2 != 0 {\n                    let tmp = lst1[i];\n                    lst1[i]\
    \ = lst2[j];\n                    lst2[j] = tmp;\n                    break;\n\
    \                }\n                j += 1;\n            }\n            if j ==\
    \ lst2.len() {\n                flag = false;\n                break;\n      \
    \      }\n        }\n        i += 1;\n    }\n    if flag {\n        String::from(\"\
    YES\")\n    } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n\
    \    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphmkzz6dx.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphmkzz6dx.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphmkzz6dx.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphmkzz6dx.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphmkzz6dx.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphmkzz6dx.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphmkzz6dx.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphmkzz6dx.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphmkzz6dx.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphmkzz6dx.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphmkzz6dx.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd_count\
    \ = 0;\n    let mut lst2_odd_count = 0;\n    for i in 0..lst1.len() {\n      \
    \  if lst1[i] % 2 != 0 {\n            lst1_odd_count += 1;\n        }\n      \
    \  if lst2[i] % 2 != 0 {\n            lst2_odd_count += 1;\n        }\n    }\n\
    \    if lst1_odd_count % 2 == 0 && lst2_odd_count % 2 == 0 {\n        return String::from(\"\
    YES\");\n    }\n    if lst1_odd_count % 2 != 0 && lst2_odd_count % 2 != 0 {\n\
    \        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n}\n\n\
    fn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbj9860iw.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbj9860iw.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbj9860iw.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbj9860iw.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbj9860iw.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbj9860iw.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbj9860iw.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbj9860iw.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = 0;\n                    even_count += 1;\n           \
    \         break;\n                }\n            }\n        }\n    }\n    if even_count\
    \ == lst1.len() {\n        return String::from(\"YES\");\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppto7t0py.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppto7t0py.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppto7t0py.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppto7t0py.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppto7t0py.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppto7t0py.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppto7t0py.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppto7t0py.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppto7t0py.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppto7t0py.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppto7t0py.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut count = 0;\n    while i < lst1.len() {\n        if lst1[i]\
    \ % 2 == 1 {\n            while j < lst2.len() {\n                if lst2[j] %\
    \ 2 == 0 {\n                    lst1[i] = lst2[j];\n                    lst2[j]\
    \ = lst1[i];\n                    count += 1;\n                    break;\n  \
    \              }\n                j += 1;\n            }\n        }\n        i\
    \ += 1;\n    }\n    if count == 0 {\n        String::from(\"NO\")\n    } else\
    \ {\n        String::from(\"YES\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvglvuqe8.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvglvuqe8.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvglvuqe8.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvglvuqe8.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvglvuqe8.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvglvuqe8.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvglvuqe8.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            lst2[j] = lst1[i];\n            i +=\
    \ 1;\n            j += 1;\n        } else {\n            j += 1;\n        }\n\
    \    }\n    if lst1.iter().any(|&x| x % 2 != 0) {\n        String::from(\"NO\"\
    )\n    } else {\n        String::from(\"YES\")\n    }\n}\n\nfn main() {\n    let\
    \ candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2bx6ki1c.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2bx6ki1c.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2bx6ki1c.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2bx6ki1c.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2bx6ki1c.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n   \
    \ let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n\
    \    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n\
    \    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc\
    \ = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let\
    \ mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n\
    \    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn\
    \ = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let\
    \ mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n\
    \    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy\
    \ = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let mut bbb = 0;\n    let\
    \ mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee = 0;\n    let mut fff =\
    \ 0;\n    let mut ggg = 0;\n    let mut hhh = 0;\n    let mut iii = 0;\n    let\
    \ mut jjj = 0;\n    let mut kkk = 0;\n    let mut lll = 0;\n    let mut mmm =\
    \ 0;\n    let\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp8x_b4e5z.rs:75:1\n  \
    \ |\n75 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp8x_b4e5z.rs:79:17\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp8x_b4e5z.rs:79:25\n \
    \  |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8x_b4e5z.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8x_b4e5z.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8x_b4e5z.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8x_b4e5z.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8x_b4e5z.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8x_b4e5z.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8x_b4e5z.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8x_b4e5z.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8x_b4e5z.rs:84:17\n   |\n84 |     assert"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in lst1.iter() {\n        if i % 2\
    \ == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in lst2.iter() {\n        if i % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count > odd_count {\n        return String::from(\"\
    YES\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpf16wgap6.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf16wgap6.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf16wgap6.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf16wgap6.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf16wgap6.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf16wgap6.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf16wgap6.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf16wgap6.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf16wgap6.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf16wgap6.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf16wgap6.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    break;\n               \
    \ }\n            }\n        }\n    }\n    even_count = 0;\n    for i in 0..lst1.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            even_count += 1;\n        }\n\
    \    }\n    if even_count == lst1.len() {\n        return String::from(\"YES\"\
    );\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu8scxhno.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut result = String::from(\"\
    YES\");\n    let mut i = 0;\n    while i < lst1.len() {\n        if lst1[i] %\
    \ 2 != 0 {\n            let mut j = 0;\n            while j < lst2.len() {\n \
    \               if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[i];\n                    break;\n        \
    \        }\n                j += 1;\n            }\n            if j == lst2.len()\
    \ {\n                result = String::from(\"NO\");\n                break;\n\
    \            }\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp215kqooc.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp215kqooc.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp215kqooc.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp215kqooc.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i == lst1.len() {\n\
    \        \"YES\".to_string()\n    } else {\n        \"NO\".to_string()\n    }\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjxo6mt14.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjxo6mt14.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjxo6mt14.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjxo6mt14.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjxo6mt14.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjxo6mt14.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjxo6mt14.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjxo6mt14.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjxo6mt14.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjxo6mt14.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjxo6mt14.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               if even_count == lst1.len() {\n                        return\
    \ String::from(\"YES\");\n                    }\n                }\n         \
    \   }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8tm8m7x5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            let mut lst1_copy = lst1.clone();\n\
    \            let mut lst2_copy = lst2.clone();\n            lst1_copy[i] = lst2[j];\n\
    \            lst2_copy[j] = lst1[i];\n            even_count = 0;\n          \
    \  for k in 0..lst1_copy.len() {\n                if lst1_copy[k] % 2 == 0 {\n\
    \                    even_count += 1;\n                }\n            }\n    \
    \        if even_count == lst1_copy.len() {\n                return String::from(\"\
    YES\");\n            }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncma86vb.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpncma86vb.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncma86vb.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncma86vb.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncma86vb.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncma86vb.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncma86vb.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncma86vb.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n   \
    \ let mut n = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n\
    \    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n\
    \    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n\
    \    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n\
    \    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n\
    \    let mut ii = 0;\n    let mut jj = 0;\n    let mut kk = 0;\n    let mut ll\
    \ = 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let\
    \ mut pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n\
    \    let mut tt = 0;\n    let mut uu = 0;\n    let mut vv = 0;\n    let mut ww\
    \ = 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let\
    \ mut aa = 0;\n    let mut bb = 0;\n    let mut cc = 0;\n    let mut dd = 0;\n\
    \    let mut ee = 0;\n    let mut ff = 0;\n    let mut gg = 0;\n    let mut hh\
    \ = 0;\n    let mut iii = 0;\n    let mut jjj = 0;\n    let mut kkk = 0;\n   \
    \ let mut lll = 0;\n    let mut mmm = 0;\n    let mut nnn = 0;\n    let mut ooo\
    \ = 0;\n\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuyz62bff.rs:80:17\n\
    \   |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuyz62bff.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuyz62bff.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuyz62bff.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuyz62bff.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuyz62bff.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuyz62bff.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuyz62bff.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuyz62bff.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuyz62bff.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuyz62bff.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = Vec::new();\n\
    \    let mut lst2_even = Vec::new();\n    for i in 0..lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            lst1_odd.push(i);\n        }\n    }\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even.push(i);\n\
    \        }\n    }\n    if lst1_odd.len() == 0 || lst2_even.len() == 0 {\n    \
    \    return String::from(\"NO\");\n    }\n    for i in 0..lst1_odd.len() {\n \
    \       for j in 0..lst2_even.len() {\n            let tmp = lst1[lst1_odd[i]];\n\
    \            lst1[lst1_odd[i]] = lst2[lst2_even[j]];\n            lst2[lst2_even[j]]\
    \ = tmp;\n            if lst1.iter().all(|x| x % 2 == 0) {\n                return\
    \ String::from(\"YES\");\n            }\n        }\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1qm_dcm4.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1qm_dcm4.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1qm_dcm4.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1qm_dcm4.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1qm_dcm4.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_exchange = false;\n    while i < lst1.len() {\n \
    \       if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    is_exchange = true;\n  \
    \                  break;\n                }\n                j += 1;\n      \
    \      }\n        }\n        if !is_exchange {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn\
    \ main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpindgzw1l.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_lst1 = lst1.iter().filter(|x|\
    \ x % 2 == 0).count();\n    let mut even_lst2 = lst2.iter().filter(|x| x % 2 ==\
    \ 0).count();\n    let mut odd_lst1 = lst1.iter().filter(|x| x % 2 != 0).count();\n\
    \    let mut odd_lst2 = lst2.iter().filter(|x| x % 2 != 0).count();\n    if even_lst1\
    \ == lst1.len() {\n        return String::from(\"YES\");\n    }\n    if even_lst2\
    \ == lst2.len() {\n        return String::from(\"YES\");\n    }\n    if odd_lst1\
    \ == lst1.len() {\n        return String::from(\"NO\");\n    }\n    if odd_lst2\
    \ == lst2.len() {\n        return String::from(\"NO\");\n    }\n    if even_lst1\
    \ > odd_lst2 {\n        return String::from(\"YES\");\n    }\n    if even_lst2\
    \ > odd_lst1 {\n        return String::from(\"YES\");\n    }\n    return String::from(\"\
    NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl9a3dw0e.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl9a3dw0e.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl9a3dw0e.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl9a3dw0e.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl9a3dw0e.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut k = 0;\n    while i < lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else {\n            while j < lst2.len()\
    \ {\n                if lst2[j] % 2 == 1 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[k];\n                    k += 1;\n       \
    \             break;\n                }\n                j += 1;\n           \
    \ }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n    }\n    String::from(\"YES\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpazcqriu_.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpazcqriu_.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpazcqriu_.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpazcqriu_.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpazcqriu_.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpazcqriu_.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpazcqriu_.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpazcqriu_.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpazcqriu_.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpazcqriu_.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpazcqriu_.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|&x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|&x| x % 2 == 0);\n  \
    \  if lst1_even && lst2_even {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_even {\n        return String::from(\"NO\");\n    }\n    if lst2_even\
    \ {\n        return String::from(\"NO\");\n    }\n    for i in 0..lst1.len() {\n\
    \        if lst1[i] % 2 == 0 {\n            continue;\n        }\n        for\
    \ j in 0..lst2.len() {\n            if lst2[j] % 2 == 0 {\n                lst1[i]\
    \ = lst2[j];\n                lst2[j] = lst1[i];\n                lst1_even =\
    \ lst1.iter().all(|&x| x % 2 == 0);\n                lst2_even = lst2.iter().all(|&x|\
    \ x % 2 == 0);\n                if lst1_even && lst2_even {\n                \
    \    return String::from(\"YES\");\n                }\n                if lst1_even\
    \ {\n                    return String::from(\"NO\");\n                }\n   \
    \             if lst2_even {\n                    return String::from(\"NO\");\n\
    \                }\n            }\n        }\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpemq91wu6.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpemq91wu6.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpemq91wu6.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpemq91wu6.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpemq91wu6.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpemq91wu6.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpemq91wu6.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpemq91wu6.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               if even_count == lst1.len() {\n                        return\
    \ String::from(\"YES\");\n                    }\n                }\n         \
    \   }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8tm8m7x5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|x| x % 2 == 0);\n   \
    \ if lst1_even && lst2_even {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_even {\n        return String::from(\"NO\");\n    }\n    if lst2_even\
    \ {\n        return String::from(\"NO\");\n    }\n    let mut lst1_odd = lst1.iter().all(|x|\
    \ x % 2 != 0);\n    let mut lst2_odd = lst2.iter().all(|x| x % 2 != 0);\n    if\
    \ lst1_odd && lst2_odd {\n        return String::from(\"YES\");\n    }\n    if\
    \ lst1_odd {\n        lst1.swap_with_slice(&mut lst2);\n    }\n    let mut lst1_odd_idx\
    \ = Vec::new();\n    let mut lst2_even_idx = Vec::new();\n    for (i, x) in lst1.iter().enumerate()\
    \ {\n        if x % 2 != 0 {\n            lst1_odd_idx.push(i);\n        }\n \
    \   }\n    for (i, x) in lst2.iter().enumerate() {\n        if x % 2 == 0 {\n\
    \            lst2_even_idx.push(i);\n        }\n    }\n    if lst1_odd_idx.len()\
    \ > lst2_even_idx.len() {\n        return String::from(\"NO\");\n    }\n    for\
    \ i in 0..lst1_odd_idx.len() {\n        lst1.swap(lst1_odd_idx[i], lst2_even_idx[i]);\n\
    \    }\n    if lst1.iter().all(|x| x % 2 == 0) {\n        return String::from(\"\
    \n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmp3sl053lo.rs:55:29\n\
    \   |\n55 |           return String::from(\"\n   |  _____________________________^\n\
    56 | | }\n57 | |\n58 | | fn main() {\n...  |\n66 | |     assert_eq!({left}, {right});\n\
    67 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    if lst1.iter().any(|x| x % 2 != 0) {\n        if lst2.iter().any(|x| x %\
    \ 2 == 0) {\n            return String::from(\"YES\");\n        }\n    }\n   \
    \ String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpok7qtyck.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    lst1.sort();\n    lst2.sort();\n\
    \    let mut i = 0;\n    let mut j = 0;\n    let mut count = 0;\n    while i <\
    \ lst1.len() && j < lst2.len() {\n        if lst1[i] % 2 == 0 {\n            i\
    \ += 1;\n        } else if lst2[j] % 2 == 0 {\n            j += 1;\n        }\
    \ else {\n            count += 1;\n            i += 1;\n            j += 1;\n\
    \        }\n    }\n    if count % 2 == 0 {\n        String::from(\"YES\")\n  \
    \  } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpncrwt9ji.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncrwt9ji.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncrwt9ji.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpncrwt9ji.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncrwt9ji.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncrwt9ji.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncrwt9ji.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncrwt9ji.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncrwt9ji.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncrwt9ji.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncrwt9ji.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut flag = false;\n    while i < lst1.len() {\n        if\
    \ lst1[i] % 2 == 0 {\n            i += 1;\n            continue;\n        }\n\
    \        while j < lst2.len() {\n            if lst2[j] % 2 == 1 {\n         \
    \       j += 1;\n                continue;\n            }\n            lst1[i]\
    \ = lst2[j];\n            lst2[j] = lst1[i];\n            flag = true;\n     \
    \       break;\n        }\n        if !flag {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n        j += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp14ukcx6v.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp14ukcx6v.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14ukcx6v.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14ukcx6v.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut is_even = |x:\
    \ &isize| -> bool { x % 2 == 0 };\n    let mut is_odd = |x: &isize| -> bool {\
    \ x % 2 != 0 };\n    let mut lst1_even = lst1.iter().all(is_even);\n    let mut\
    \ lst2_even = lst2.iter().all(is_even);\n    let mut lst1_odd = lst1.iter().all(is_odd);\n\
    \    let mut lst2_odd = lst2.iter().all(is_odd);\n    if lst1_even && lst2_even\
    \ {\n        return String::from(\"YES\");\n    }\n    if lst1_odd && lst2_odd\
    \ {\n        return String::from(\"NO\");\n    }\n    if lst1_even && lst2_odd\
    \ {\n        return String::from(\"NO\");\n    }\n    if lst1_odd && lst2_even\
    \ {\n        return String::from(\"YES\");\n    }\n    let mut lst1_even_count\
    \ = 0;\n    let mut lst2_even_count = 0;\n    for i in lst1.iter() {\n       \
    \ if is_even(i) {\n            lst1_even_count += 1;\n        }\n    }\n    for\
    \ i in lst2.iter() {\n        if is_even(i) {\n            lst2_even_count +=\
    \ 1;\n        }\n    }\n    if lst1_even_count > lst2_even_count {\n        return\
    \ String::from(\"YES\");\n    }\n    if lst1_even_count < lst2_even_count {\n\
    \        return String::from(\"NO\");\n    }\n    String::from(\"YES\")\n}\n\n\
    fn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjcjvj1vx.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjcjvj1vx.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjcjvj1vx.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjcjvj1vx.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjcjvj1vx.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_exchanged = false;\n    while i < lst1.len() {\n\
    \        if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n         \
    \       if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n      \
    \              lst2[j] = lst1[i];\n                    is_exchanged = true;\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n        }\n        if !is_exchanged {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn\
    \ main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0x6y_of7.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0x6y_of7.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0x6y_of7.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0x6y_of7.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0x6y_of7.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0x6y_of7.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0x6y_of7.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0x6y_of7.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0x6y_of7.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0x6y_of7.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0x6y_of7.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    for i in 0..lst2.len() {\n        if\
    \ lst2[i] % 2 == 0 {\n            even_count += 1;\n        }\n    }\n    if even_count\
    \ == lst1.len() + lst2.len() {\n        return String::from(\"YES\");\n    }\n\
    \    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw99ic98y.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw99ic98y.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw99ic98y.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw99ic98y.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw99ic98y.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw99ic98y.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw99ic98y.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw99ic98y.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw99ic98y.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw99ic98y.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw99ic98y.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd_count\
    \ = lst1.iter().filter(|x| x % 2 != 0).count();\n    let mut lst2_odd_count =\
    \ lst2.iter().filter(|x| x % 2 != 0).count();\n    if lst1_odd_count == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst2_odd_count == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst1_odd_count == lst2_odd_count\
    \ {\n        return String::from(\"YES\");\n    }\n    if lst1_odd_count > lst2_odd_count\
    \ {\n        lst1.sort();\n        lst2.sort();\n        for i in 0..lst1.len()\
    \ {\n            if lst1[i] % 2 != 0 {\n                for j in 0..lst2.len()\
    \ {\n                    if lst2[j] % 2 != 0 {\n                        lst1[i]\
    \ = lst2[j];\n                        lst2[j] = 0;\n                        lst1_odd_count\
    \ -= 1;\n                        lst2_odd_count += 1;\n                      \
    \  if lst1_odd_count == lst2_odd_count {\n                            return String::from(\"\
    YES\");\n                        }\n                        break;\n         \
    \           }\n                }\n            }\n        }\n    } else {\n   \
    \     lst1.sort();\n        lst2.sort();\n        for i in 0..lst2.len() {\n \
    \           if lst2[i] % 2 != 0 {\n                for j in 0..lst1.len() {\n\
    \                    if lst1[j] % 2 != 0 {\n                        lst2[i] =\
    \ lst1[j];\n                        lst1[j] = 0;\n                        lst1_odd_count\
    \ += 1;\n                        lst2_odd_count -= 1;\n                      \
    \  if lst1_odd_count == lst2_odd_count {\n                            return String::from(\"\
    YES\");\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp9my24jtj.rs:71:3\n\
    \   |\n14 | fn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n   |\
    \                                                           - unclosed delimiter\n\
    ...\n47 |     } else {\n   |            - unclosed delimiter\n...\n50 |      \
    \   for i in 0..lst2.len() {\n   |                                - unclosed delimiter\n\
    51 |             if lst2[i] % 2 != 0 {\n   |                                 -\
    \ unclosed delimiter\n52 |                 for j in 0..lst1.len() {\n   |    \
    \                                    - unclosed delimiter\n53 |              \
    \       if lst1[j] % 2 != 0 {\n   |                                         -\
    \ unclosed delimiter\n...\n58 |                         if lst1_odd_count == lst2_odd_count\
    \ {\n   |                                                             - this delimiter\
    \ might not be properly closed...\n59 |                             return String::from(\"\
    YES\");\n60 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n71 | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9my24jtj.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9my24jtj.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9my24jtj.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9my24jtj.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9my24jtj.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9my24jtj.rs:66:25"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().any(|x|\
    \ x % 2 != 0) {\n        String::from(\"NO\")\n    } else {\n        String::from(\"\
    YES\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwr1ffyw9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg6wz_udq.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut evens = 0;\n\
    \    let mut odds = 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 ==\
    \ 0 {\n            evens += 1;\n        } else {\n            odds += 1;\n   \
    \     }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \    }\n    if odds % 2 == 0 {\n        String::from(\"YES\")\n    } else {\n\
    \        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkc5q353b.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkc5q353b.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkc5q353b.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkc5q353b.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkc5q353b.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkc5q353b.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkc5q353b.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkc5q353b.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkc5q353b.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkc5q353b.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkc5q353b.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               if even_count == lst1.len() {\n                        return\
    \ String::from(\"YES\");\n                    }\n                }\n         \
    \   }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8tm8m7x5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut swapped = false;\n    while i < lst1.len() {\n     \
    \   if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n              \
    \  if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n           \
    \         lst2[j] = lst1[i];\n                    swapped = true;\n          \
    \          break;\n                }\n                j += 1;\n            }\n\
    \        }\n        if !swapped {\n            return String::from(\"NO\");\n\
    \        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps04v9gm_.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps04v9gm_.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps04v9gm_.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps04v9gm_.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps04v9gm_.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps04v9gm_.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps04v9gm_.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    if lst1.iter().any(|x| x % 2 != 0) {\n        if lst2.iter().any(|x| x %\
    \ 2 == 0) {\n            return String::from(\"YES\");\n        }\n    }\n   \
    \ String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpok7qtyck.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] %\
    \ 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() || odd_count == lst1.len()\
    \ {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcyaig1zm.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = lst1.iter().filter(|x|\
    \ x % 2 != 0).count();\n    let mut lst2_odd = lst2.iter().filter(|x| x % 2 !=\
    \ 0).count();\n    if lst1_odd == 0 {\n        return String::from(\"YES\");\n\
    \    }\n    if lst2_odd == 0 {\n        return String::from(\"NO\");\n    }\n\
    \    if lst1_odd == lst2_odd {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_odd > lst2_odd {\n        for i in 0..lst1.len() {\n            if\
    \ lst1[i] % 2 != 0 {\n                for j in 0..lst2.len() {\n             \
    \       if lst2[j] % 2 != 0 {\n                        lst1[i] = lst2[j];\n  \
    \                      lst2[j] = lst1[i];\n                        lst1_odd -=\
    \ 1;\n                        lst2_odd += 1;\n                        if lst1_odd\
    \ == lst2_odd {\n                            return String::from(\"YES\");\n \
    \                       }\n                        break;\n                  \
    \  }\n                }\n            }\n        }\n    } else {\n        for i\
    \ in 0..lst2.len() {\n            if lst2[i] % 2 != 0 {\n                for j\
    \ in 0..lst1.len() {\n                    if lst1[j] % 2 != 0 {\n            \
    \            lst2[i] = lst1[j];\n                        lst1[j] = lst2[i];\n\
    \                        lst1_odd += 1;\n                        lst2_odd -= 1;\n\
    \                        if lst1_odd == lst2_odd {\n                         \
    \   return String::from(\"YES\");\n                        }\n               \
    \         break;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp70meu1vm.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp70meu1vm.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp70meu1vm.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp70meu1vm.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp70meu1vm.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp70meu1vm.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp70meu1vm.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in lst1.iter() {\n        if i % 2 == 0 {\n            even_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    for i in lst1.iter_mut() {\n        if i % 2 != 0 {\n    \
    \        for j in lst2.iter_mut() {\n                if j % 2 == 0 {\n       \
    \             *i = *j;\n                    *j = *i;\n                    even_count\
    \ += 1;\n                    break;\n                }\n            }\n      \
    \  }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuu2ea4kt.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuu2ea4kt.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuu2ea4kt.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuu2ea4kt.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuu2ea4kt.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().any(|&x|\
    \ x % 2 != 0) {\n        \"NO\".to_string()\n    } else {\n        \"YES\".to_string()\n\
    \    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphgv78sy8.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphgv78sy8.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphgv78sy8.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphgv78sy8.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphgv78sy8.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphgv78sy8.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphgv78sy8.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i < lst1.len() {\n\
    \        return String::from(\"NO\");\n    }\n    String::from(\"YES\")\n}\n\n\
    fn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptjv2tc0m.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptjv2tc0m.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptjv2tc0m.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptjv2tc0m.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptjv2tc0m.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptjv2tc0m.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptjv2tc0m.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut is_even = |x:\
    \ &isize| -> bool { x % 2 == 0 };\n    let mut is_odd = |x: &isize| -> bool {\
    \ x % 2 != 0 };\n    let mut is_all_even = |lst: &Vec<isize>| -> bool { lst.iter().all(is_even)\
    \ };\n    let mut is_all_odd = |lst: &Vec<isize>| -> bool { lst.iter().all(is_odd)\
    \ };\n    let mut is_all_even_or_all_odd = |lst1: &Vec<isize>, lst2: &Vec<isize>|\
    \ -> bool {\n        is_all_even(lst1) || is_all_even(lst2) || is_all_odd(lst1)\
    \ || is_all_odd(lst2)\n    };\n    let mut is_exchangeable = |lst1: &Vec<isize>,\
    \ lst2: &Vec<isize>| -> bool {\n        if is_all_even_or_all_odd(lst1, lst2)\
    \ {\n            return true;\n        }\n        let mut lst1_even = lst1.clone();\n\
    \        let mut lst1_odd = lst1.clone();\n        let mut lst2_even = lst2.clone();\n\
    \        let mut lst2_odd = lst2.clone();\n        lst1_even.retain(is_even);\n\
    \        lst1_odd.retain(is_odd);\n        lst2_even.retain(is_even);\n      \
    \  lst2_odd.retain(is_odd);\n        is_exchangeable(&lst1_even, &lst2_odd) ||\
    \ is_exchangeable(&lst1_odd, &lst2_even)\n    };\n    if is_exchangeable(&lst1,\
    \ &lst2) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    \n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmphuo3jpur.rs:41:22\n\
    \   |\n41 |           String::from(\"\n   |  ______________________^\n42 | | }\n\
    43 | |\n44 | | fn main() {\n...  |\n52 | |     assert_eq!({left}, {right});\n\
    53 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut result = String::from(\"\
    YES\");\n    let mut i = 0;\n    while i < lst1.len() {\n        if lst1[i] %\
    \ 2 != 0 {\n            let mut j = 0;\n            while j < lst2.len() {\n \
    \               if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[i];\n                    break;\n        \
    \        }\n                j += 1;\n            }\n            if j == lst2.len()\
    \ {\n                result = String::from(\"NO\");\n                break;\n\
    \            }\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp215kqooc.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp215kqooc.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp215kqooc.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp215kqooc.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = lst1.iter().filter(|x|\
    \ x % 2 != 0).count();\n    let mut lst2_odd = lst2.iter().filter(|x| x % 2 !=\
    \ 0).count();\n    if lst1_odd == 0 {\n        return String::from(\"YES\");\n\
    \    }\n    if lst2_odd == 0 {\n        return String::from(\"NO\");\n    }\n\
    \    if lst1_odd == lst2_odd {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_odd > lst2_odd {\n        for i in 0..lst1.len() {\n            if\
    \ lst1[i] % 2 != 0 {\n                for j in 0..lst2.len() {\n             \
    \       if lst2[j] % 2 != 0 {\n                        lst1[i] = lst2[j];\n  \
    \                      lst2[j] = 0;\n                        lst1_odd -= 1;\n\
    \                        lst2_odd += 1;\n                        if lst1_odd ==\
    \ lst2_odd {\n                            return String::from(\"YES\");\n    \
    \                    }\n                        break;\n                    }\n\
    \                }\n            }\n        }\n    } else {\n        for i in 0..lst2.len()\
    \ {\n            if lst2[i] % 2 != 0 {\n                for j in 0..lst1.len()\
    \ {\n                    if lst1[j] % 2 != 0 {\n                        lst2[i]\
    \ = lst1[j];\n                        lst1[j] = 0;\n                        lst1_odd\
    \ += 1;\n                        lst2_odd -= 1;\n                        if lst1_odd\
    \ == lst2_odd {\n                            return String::from(\"YES\");\n \
    \                       }\n                        break;\n                  \
    \  }\n                }\n            }\n        }\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_d40gzdg.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_d40gzdg.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_d40gzdg.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_d40gzdg.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_d40gzdg.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_d40gzdg.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_d40gzdg.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_d40gzdg.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_d40gzdg.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_d40gzdg.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_d40gzdg.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut evens = 0;\n    let mut odds = 0;\n    for i in lst1 {\n        if\
    \ i % 2 == 0 {\n            evens += 1;\n        } else {\n            odds +=\
    \ 1;\n        }\n    }\n    for i in lst2 {\n        if i % 2 == 0 {\n       \
    \     evens += 1;\n        } else {\n            odds += 1;\n        }\n    }\n\
    \    if evens % 2 == 0 && odds % 2 == 0 {\n        String::from(\"YES\")\n   \
    \ } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmklxywni.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmklxywni.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmklxywni.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmklxywni.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmklxywni.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmklxywni.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmklxywni.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmklxywni.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i == lst1.len() {\n\
    \        String::from(\"YES\")\n    } else {\n        String::from(\"NO\")\n \
    \   }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsattkpe7.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsattkpe7.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsattkpe7.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsattkpe7.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = lst1.iter().filter(|x|\
    \ x % 2 != 0).count();\n    let mut lst2_odd = lst2.iter().filter(|x| x % 2 !=\
    \ 0).count();\n    if lst1_odd == 0 {\n        return String::from(\"YES\");\n\
    \    }\n    if lst2_odd == 0 {\n        return String::from(\"NO\");\n    }\n\
    \    if lst1_odd == lst2_odd {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_odd > lst2_odd {\n        for i in 0..lst1.len() {\n            if\
    \ lst1[i] % 2 != 0 {\n                for j in 0..lst2.len() {\n             \
    \       if lst2[j] % 2 != 0 {\n                        lst1[i] = lst2[j];\n  \
    \                      lst2[j] = lst1[i];\n                        lst1_odd -=\
    \ 1;\n                        lst2_odd += 1;\n                        if lst1_odd\
    \ == lst2_odd {\n                            return String::from(\"YES\");\n \
    \                       }\n                        break;\n                  \
    \  }\n                }\n            }\n        }\n    } else {\n        for i\
    \ in 0..lst2.len() {\n            if lst2[i] % 2 != 0 {\n                for j\
    \ in 0..lst1.len() {\n                    if lst1[j] % 2 != 0 {\n            \
    \            lst2[i] = lst1[j];\n                        lst1[j] = lst2[i];\n\
    \                        lst1_odd += 1;\n                        lst2_odd -= 1;\n\
    \                        if lst1_odd == lst2_odd {\n                         \
    \   return String::from(\"YES\");\n                        }\n               \
    \         break;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp70meu1vm.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp70meu1vm.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp70meu1vm.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp70meu1vm.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp70meu1vm.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp70meu1vm.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp70meu1vm.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp70meu1vm.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut exchange = false;\n    while i < lst1.len() {\n    \
    \    if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n             \
    \   if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n          \
    \          lst2[j] = lst1[i];\n                    exchange = true;\n        \
    \            break;\n                }\n                j += 1;\n            }\n\
    \        }\n        if !exchange {\n            return String::from(\"NO\");\n\
    \        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5f1zz4cz.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = 1;\n   \
    \                 break;\n                }\n                j += 1;\n       \
    \     }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjhzfeafv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp3vitb7r.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|&x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpice4xgvb.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpice4xgvb.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpice4xgvb.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpice4xgvb.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpice4xgvb.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpice4xgvb.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpice4xgvb.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpice4xgvb.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut swapped = false;\n    while i < lst1.len() {\n     \
    \   if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n              \
    \  if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n           \
    \         lst2[j] = lst1[i];\n                    swapped = true;\n          \
    \          break;\n                }\n                j += 1;\n            }\n\
    \        }\n        if !swapped {\n            return String::from(\"NO\");\n\
    \        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps04v9gm_.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps04v9gm_.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps04v9gm_.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps04v9gm_.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps04v9gm_.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps04v9gm_.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps04v9gm_.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps04v9gm_.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               if even_count == lst1.len() {\n                        return\
    \ String::from(\"YES\");\n                    }\n                }\n         \
    \   }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8tm8m7x5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut exchange = false;\n    while i < lst1.len() {\n    \
    \    if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n             \
    \   if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n          \
    \          lst2[j] = lst1[i];\n                    exchange = true;\n        \
    \            break;\n                }\n                j += 1;\n            }\n\
    \        }\n        if !exchange {\n            return String::from(\"NO\");\n\
    \        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5f1zz4cz.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5f1zz4cz.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5f1zz4cz.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut evens = 0;\n\
    \    let mut odds = 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 ==\
    \ 0 {\n            evens += 1;\n        } else {\n            odds += 1;\n   \
    \     }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \    }\n    if evens >= odds {\n        String::from(\"YES\")\n    } else {\n\
    \        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphtru3b4q.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphtru3b4q.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphtru3b4q.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphtru3b4q.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphtru3b4q.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphtru3b4q.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphtru3b4q.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp3vitb7r.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = true;\n\
    \    for i in 0..lst1.len() {\n        if lst1[i] % 2 != 0 {\n            lst1_even\
    \ = false;\n            break;\n        }\n    }\n    if lst1_even {\n       \
    \ return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n       \
    \ if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n              \
    \  if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n           \
    \         lst2[j] = lst1[i];\n                    break;\n                }\n\
    \            }\n        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 != 0 {\n            return String::from(\"NO\");\n        }\n    }\n   \
    \ String::from(\"YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm1m642wa.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm1m642wa.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm1m642wa.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm1m642wa.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm1m642wa.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm1m642wa.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm1m642wa.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm1m642wa.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm1m642wa.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm1m642wa.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm1m642wa.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    let mut odd_count = 0;\n    for i in\
    \ 0..lst2.len() {\n        if lst2[i] % 2 == 1 {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst2.len() {\n        return String::from(\"\
    NO\");\n    }\n    if even_count + odd_count >= lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyyuwevhh.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyyuwevhh.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyyuwevhh.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyyuwevhh.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyyuwevhh.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyyuwevhh.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyyuwevhh.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyyuwevhh.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyyuwevhh.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyyuwevhh.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyyuwevhh.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    if lst1.iter().all(|x| x % 2 == 0) {\n        return String::from(\"YES\"\
    );\n    }\n    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    for (i, x)\
    \ in lst1.iter().enumerate() {\n        if x % 2 == 0 {\n            continue;\n\
    \        }\n        for (j, y) in lst2.iter().enumerate() {\n            if y\
    \ % 2 == 0 {\n                lst1[i] = *y;\n                lst2[j] = *x;\n \
    \               break;\n            }\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        return String::from(\"YES\");\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmph2yah893.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph2yah893.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph2yah893.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph2yah893.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph2yah893.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph2yah893.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph2yah893.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph2yah893.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph2yah893.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph2yah893.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph2yah893.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut result = String::from(\"\
    YES\");\n    let mut i = 0;\n    while i < lst1.len() {\n        if lst1[i] %\
    \ 2 != 0 {\n            let mut j = 0;\n            while j < lst2.len() {\n \
    \               if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[i];\n                    break;\n        \
    \        }\n                j += 1;\n            }\n            if j == lst2.len()\
    \ {\n                result = String::from(\"NO\");\n                break;\n\
    \            }\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp215kqooc.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp215kqooc.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp215kqooc.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp215kqooc.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp215kqooc.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp215kqooc.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i < lst1.len() {\n\
    \        return String::from(\"NO\");\n    }\n    String::from(\"YES\")\n}\n\n\
    fn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptjv2tc0m.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptjv2tc0m.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptjv2tc0m.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptjv2tc0m.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptjv2tc0m.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptjv2tc0m.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptjv2tc0m.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptjv2tc0m.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if i < lst1.len() {\n\
    \        \"NO\".to_string()\n    } else {\n        \"YES\".to_string()\n    }\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphhp2aqc8.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphhp2aqc8.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphhp2aqc8.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphhp2aqc8.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphhp2aqc8.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphhp2aqc8.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphhp2aqc8.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphhp2aqc8.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphhp2aqc8.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphhp2aqc8.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphhp2aqc8.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for &i in lst1.iter() {\n        if i %\
    \ 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for &i in lst2.iter() {\n        if i % 2 == 0\
    \ {\n            even_count += 1;\n        } else {\n            odd_count +=\
    \ 1;\n        }\n    }\n    if even_count >= lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count >= lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4231qw5e.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4231qw5e.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4231qw5e.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4231qw5e.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4231qw5e.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4231qw5e.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4231qw5e.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4231qw5e.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4231qw5e.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4231qw5e.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4231qw5e.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            break;\n\
    \        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            break;\n\
    \        }\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate =\
    \ exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:77:17\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv247q1pb.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv247q1pb.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv247q1pb.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv247q1pb.rs:79:25\n   |\n79 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv247q1pb.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv247q1pb.rs:80:25\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:81:17\n  \
    \ |\n81 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv247q1pb.rs:81:25\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv247q1pb.rs:82:17\n   |\n82 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = Vec::new();\n\
    \    let mut lst2_even = Vec::new();\n    for i in 0..lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            lst1_odd.push(i);\n        }\n    }\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even.push(i);\n\
    \        }\n    }\n    if lst1_odd.len() != lst2_even.len() {\n        return\
    \ String::from(\"NO\");\n    }\n    for i in 0..lst1_odd.len() {\n        lst1.swap(lst1_odd[i],\
    \ lst2_even[i]);\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2\
    \ != 0 {\n            return String::from(\"NO\");\n        }\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuwz918k8.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuwz918k8.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuwz918k8.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuwz918k8.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuwz918k8.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuwz918k8.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuwz918k8.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuwz918k8.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuwz918k8.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuwz918k8.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuwz918k8.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|x| x % 2 == 0);\n   \
    \ if lst1_even && lst2_even {\n        return String::from(\"YES\");\n    }\n\
    \    if lst1_even {\n        return String::from(\"NO\");\n    }\n    if lst2_even\
    \ {\n        return String::from(\"NO\");\n    }\n    for i in 0..lst1.len() {\n\
    \        for j in 0..lst2.len() {\n            let temp = lst1[i];\n         \
    \   lst1[i] = lst2[j];\n            lst2[j] = temp;\n            lst1_even = lst1.iter().all(|x|\
    \ x % 2 == 0);\n            lst2_even = lst2.iter().all(|x| x % 2 == 0);\n   \
    \         if lst1_even && lst2_even {\n                return String::from(\"\
    YES\");\n            }\n            if lst1_even {\n                return String::from(\"\
    NO\");\n            }\n            if lst2_even {\n                return String::from(\"\
    NO\");\n            }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main()\
    \ {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp98kyogce.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp98kyogce.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp98kyogce.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp98kyogce.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp98kyogce.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp98kyogce.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp98kyogce.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp98kyogce.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp98kyogce.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp98kyogce.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp98kyogce.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg6wz_udq.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg6wz_udq.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg6wz_udq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg6wz_udq.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_exchange = false;\n    while i < lst1.len() {\n \
    \       if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    is_exchange = true;\n  \
    \                  break;\n                }\n                j += 1;\n      \
    \      }\n        }\n        if !is_exchange {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn\
    \ main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpindgzw1l.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut evens = 0;\n\
    \    let mut odds = 0;\n    for i in lst1.iter() {\n        if i % 2 == 0 {\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \    }\n    for i in lst2.iter() {\n        if i % 2 == 0 {\n            evens\
    \ += 1;\n        } else {\n            odds += 1;\n        }\n    }\n    if evens\
    \ > odds {\n        return String::from(\"YES\");\n    }\n    String::from(\"\
    NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp60s7t3_4.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp60s7t3_4.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp60s7t3_4.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp60s7t3_4.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp60s7t3_4.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp60s7t3_4.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp60s7t3_4.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp60s7t3_4.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp60s7t3_4.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp60s7t3_4.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp60s7t3_4.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut found = false;\n    while i < lst1.len() {\n       \
    \ if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n                if\
    \ lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n               \
    \     lst2[j] = lst1[i];\n                    found = true;\n                \
    \    break;\n                }\n                j += 1;\n            }\n     \
    \   }\n        if !found {\n            return String::from(\"NO\");\n       \
    \ }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn main() {\n   \
    \ let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp01cwbyaa.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp01cwbyaa.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp01cwbyaa.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp01cwbyaa.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp01cwbyaa.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp01cwbyaa.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp01cwbyaa.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp01cwbyaa.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().any(|&x|\
    \ x % 2 != 0) {\n        \"NO\".to_string()\n    } else {\n        \"YES\".to_string()\n\
    \    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphgv78sy8.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphgv78sy8.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphgv78sy8.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphgv78sy8.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphgv78sy8.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphgv78sy8.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphgv78sy8.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphgv78sy8.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut evens = 0;\n\
    \    let mut odds = 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 ==\
    \ 0 {\n            evens += 1;\n        } else {\n            odds += 1;\n   \
    \     }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \    }\n    if evens % 2 == 0 && odds % 2 == 0 {\n        String::from(\"YES\"\
    )\n    } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let\
    \ candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoj_69fw5.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoj_69fw5.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoj_69fw5.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoj_69fw5.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoj_69fw5.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoj_69fw5.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoj_69fw5.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoj_69fw5.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in lst1.iter() {\n        if i % 2\
    \ == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in lst2.iter() {\n        if i % 2 == 0 {\n\
    \            even_count += 1;\n        } else {\n            odd_count += 1;\n\
    \        }\n    }\n    if even_count > odd_count {\n        String::from(\"YES\"\
    )\n    } else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let\
    \ candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsect27hd.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsect27hd.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsect27hd.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsect27hd.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsect27hd.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsect27hd.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|x| x % 2 == 0);\n   \
    \ if lst1_even {\n        return String::from(\"YES\");\n    }\n    if lst2_even\
    \ {\n        return String::from(\"YES\");\n    }\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n            continue;\n        }\n        if\
    \ lst2[j] % 2 == 0 {\n            lst1[i] = lst2[j];\n            i += 1;\n  \
    \          j += 1;\n            continue;\n        }\n        i += 1;\n      \
    \  j += 1;\n    }\n    lst1_even = lst1.iter().all(|x| x % 2 == 0);\n    if lst1_even\
    \ {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeks4s5ov.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeks4s5ov.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeks4s5ov.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeks4s5ov.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeks4s5ov.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeks4s5ov.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeks4s5ov.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeks4s5ov.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeks4s5ov.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeks4s5ov.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeks4s5ov.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    if lst1.iter().any(|x| x % 2 != 0) {\n        let mut lst1 = lst1;\n    \
    \    let mut lst2 = lst2;\n        let mut i = 0;\n        while i < lst1.len()\
    \ {\n            if lst1[i] % 2 != 0 {\n                let mut j = 0;\n     \
    \           while j < lst2.len() {\n                    if lst2[j] % 2 == 0 {\n\
    \                        lst1[i] = lst2[j];\n                        lst2[j] =\
    \ lst1[i];\n                        break;\n                    }\n          \
    \          j += 1;\n                }\n                if j == lst2.len() {\n\
    \                    return String::from(\"NO\");\n                }\n       \
    \     }\n            i += 1;\n        }\n    }\n    String::from(\"YES\")\n}\n\
    \nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx_qvcdwv.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx_qvcdwv.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx_qvcdwv.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx_qvcdwv.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx_qvcdwv.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_possible = false;\n    while i < lst1.len() && !is_possible\
    \ {\n        if lst1[i] % 2 != 0 {\n            while j < lst2.len() && !is_possible\
    \ {\n                if lst2[j] % 2 != 0 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[i];\n                    is_possible = true;\n\
    \                }\n                j += 1;\n            }\n        }\n      \
    \  i += 1;\n    }\n    if is_possible {\n        String::from(\"YES\")\n    }\
    \ else {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprq5v8md1.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq5v8md1.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq5v8md1.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprq5v8md1.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprq5v8md1.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprq5v8md1.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprq5v8md1.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprq5v8md1.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprq5v8md1.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq5v8md1.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq5v8md1.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odds = 0;\n\
    \    let mut lst2_odds = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 != 0 {\n            lst1_odds += 1;\n        }\n    }\n    for i in 0..lst2.len()\
    \ {\n        if lst2[i] % 2 != 0 {\n            lst2_odds += 1;\n        }\n \
    \   }\n    if lst1_odds == lst2_odds {\n        return String::from(\"YES\");\n\
    \    }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpygui4ihv.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpygui4ihv.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpygui4ihv.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpygui4ihv.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpygui4ihv.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpygui4ihv.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpygui4ihv.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpygui4ihv.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpygui4ihv.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpygui4ihv.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpygui4ihv.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    if lst1.iter().any(|x| x % 2 != 0) {\n        if lst2.iter().any(|x| x %\
    \ 2 == 0) {\n            return String::from(\"YES\");\n        }\n    }\n   \
    \ String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpok7qtyck.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpok7qtyck.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpok7qtyck.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpok7qtyck.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_even = lst1.iter().all(|x|\
    \ x % 2 == 0);\n    let mut lst2_even = lst2.iter().all(|x| x % 2 == 0);\n   \
    \ if lst1_even {\n        return String::from(\"YES\");\n    }\n    if lst2_even\
    \ {\n        return String::from(\"YES\");\n    }\n    let mut lst1_odd = lst1.iter().all(|x|\
    \ x % 2 != 0);\n    let mut lst2_odd = lst2.iter().all(|x| x % 2 != 0);\n    if\
    \ lst1_odd {\n        return String::from(\"NO\");\n    }\n    if lst2_odd {\n\
    \        return String::from(\"NO\");\n    }\n    let mut lst1_even_count = 0;\n\
    \    let mut lst2_even_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            lst1_even_count += 1;\n        }\n    }\n    for i in\
    \ 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even_count\
    \ += 1;\n        }\n    }\n    if lst1_even_count == lst1.len() || lst2_even_count\
    \ == lst2.len() {\n        return String::from(\"YES\");\n    }\n    if lst1_even_count\
    \ == 0 || lst2_even_count == 0 {\n        return String::from(\"NO\");\n    }\n\
    \    String::from(\"YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpahyd1ksz.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpahyd1ksz.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpahyd1ksz.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpahyd1ksz.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpahyd1ksz.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpahyd1ksz.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpahyd1ksz.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpahyd1ksz.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpahyd1ksz.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpahyd1ksz.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpahyd1ksz.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut count = 0;\n    while i < lst1.len() && j < lst2.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            i += 1;\n        } else if lst2[j]\
    \ % 2 == 0 {\n            lst1[i] = lst2[j];\n            i += 1;\n          \
    \  j += 1;\n            count += 1;\n        } else {\n            j += 1;\n \
    \       }\n    }\n    if count > 0 {\n        String::from(\"YES\")\n    } else\
    \ {\n        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa4q2ecj9.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa4q2ecj9.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa4q2ecj9.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa4q2ecj9.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa4q2ecj9.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().any(|x|\
    \ x % 2 != 0) {\n        String::from(\"NO\")\n    } else {\n        String::from(\"\
    YES\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwr1ffyw9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut evens = 0;\n\
    \    let mut odds = 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 ==\
    \ 0 {\n            evens += 1;\n        } else {\n            odds += 1;\n   \
    \     }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \    }\n    if evens >= odds {\n        String::from(\"YES\")\n    } else {\n\
    \        String::from(\"NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphtru3b4q.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphtru3b4q.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphtru3b4q.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphtru3b4q.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphtru3b4q.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphtru3b4q.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphtru3b4q.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphtru3b4q.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] %\
    \ 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() || odd_count == lst1.len()\
    \ {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcyaig1zm.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcyaig1zm.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcyaig1zm.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcyaig1zm.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               if even_count == lst1.len() {\n                        return\
    \ String::from(\"YES\");\n                    }\n                }\n         \
    \   }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8tm8m7x5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8tm8m7x5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8tm8m7x5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = 1;\n   \
    \                 break;\n                }\n                j += 1;\n       \
    \     }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjhzfeafv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().all(|x|\
    \ x % 2 == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp3vitb7r.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp3vitb7r.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp3vitb7r.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp3vitb7r.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n    \
    \        while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n     \
    \               lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n \
    \                   break;\n                }\n                j += 1;\n     \
    \       }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3uu2p5e5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3uu2p5e5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3uu2p5e5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    while i < lst1.len() && j < lst2.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1;\n        } else if lst2[j] % 2 == 0 {\n    \
    \        lst1[i] = lst2[j];\n            i += 1;\n            j += 1;\n      \
    \  } else {\n            j += 1;\n        }\n    }\n    if lst1.iter().any(|x|\
    \ x % 2 != 0) {\n        String::from(\"NO\")\n    } else {\n        String::from(\"\
    YES\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwr1ffyw9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwr1ffyw9.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwr1ffyw9.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    break;\n               \
    \ }\n            }\n        }\n    }\n    even_count = 0;\n    for i in 0..lst1.len()\
    \ {\n        if lst1[i] % 2 == 0 {\n            even_count += 1;\n        }\n\
    \    }\n    if even_count == lst1.len() {\n        return String::from(\"YES\"\
    );\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu8scxhno.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu8scxhno.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu8scxhno.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu8scxhno.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    let mut odd_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i]\
    \ % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    if even_count == lst1.len() {\n        return String::from(\"\
    YES\");\n    }\n    if odd_count == lst1.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n \
    \           lst1.push(lst2[i]);\n            lst2.remove(i);\n            even_count\
    \ += 1;\n            odd_count -= 1;\n            if even_count == lst1.len()\
    \ {\n                return String::from(\"YES\");\n            }\n          \
    \  if odd_count == lst1.len() {\n                return String::from(\"NO\");\n\
    \            }\n        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n\
    \    let candidate = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq7v3oqi2.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq7v3oqi2.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq7v3oqi2.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq7v3oqi2.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq7v3oqi2.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = lst1[i];\n\
    \                    break;\n                }\n                j += 1;\n    \
    \        }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavqzqr3a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavqzqr3a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavqzqr3a.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavqzqr3a.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    let mut odd_count = 0;\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 1 {\n            odd_count +=\
    \ 1;\n        }\n    }\n    if odd_count == lst2.len() {\n        return String::from(\"\
    NO\");\n    }\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 1 {\n \
    \           for j in 0..lst2.len() {\n                if lst2[j] % 2 == 0 {\n\
    \                    lst1[i] = lst2[j];\n                    lst2[j] = 1;\n  \
    \                  break;\n                }\n            }\n        }\n    }\n\
    \    even_count = 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 ==\
    \ 0 {\n            even_count += 1;\n        }\n    }\n    if even_count == lst1.len()\
    \ {\n        return String::from(\"YES\");\n    }\n    String::from(\"NO\")\n\
    }\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpf4z60tzs.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf4z60tzs.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf4z60tzs.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf4z60tzs.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf4z60tzs.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf4z60tzs.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf4z60tzs.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf4z60tzs.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf4z60tzs.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf4z60tzs.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf4z60tzs.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd = Vec::new();\n\
    \    let mut lst2_even = Vec::new();\n    for i in 0..lst1.len() {\n        if\
    \ lst1[i] % 2 != 0 {\n            lst1_odd.push(i);\n        }\n    }\n    for\
    \ i in 0..lst2.len() {\n        if lst2[i] % 2 == 0 {\n            lst2_even.push(i);\n\
    \        }\n    }\n    if lst1_odd.len() == 0 || lst2_even.len() == 0 {\n    \
    \    return String::from(\"NO\");\n    }\n    for i in 0..lst1_odd.len() {\n \
    \       let temp = lst1[lst1_odd[i]];\n        lst1[lst1_odd[i]] = lst2[lst2_even[i]];\n\
    \        lst2[lst2_even[i]] = temp;\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            return String::from(\"NO\");\n      \
    \  }\n    }\n    String::from(\"YES\")\n}\n\nfn main() {\n    let candidate =\
    \ exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp60elntap.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp60elntap.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp60elntap.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp60elntap.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp60elntap.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp60elntap.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp60elntap.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp60elntap.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp60elntap.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp60elntap.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp60elntap.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut lst1_odd_count\
    \ = lst1.iter().filter(|x| x % 2 != 0).count();\n    let mut lst2_odd_count =\
    \ lst2.iter().filter(|x| x % 2 != 0).count();\n    if lst1_odd_count == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst2_odd_count == 0 {\n\
    \        return String::from(\"YES\");\n    }\n    if lst1_odd_count == lst2_odd_count\
    \ {\n        return String::from(\"YES\");\n    }\n    if lst1_odd_count > lst2_odd_count\
    \ {\n        for i in 0..lst1.len() {\n            if lst1[i] % 2 != 0 {\n   \
    \             for j in 0..lst2.len() {\n                    if lst2[j] % 2 !=\
    \ 0 {\n                        lst1[i] = lst2[j];\n                        lst2[j]\
    \ = lst1[i];\n                        lst1_odd_count -= 1;\n                 \
    \       lst2_odd_count += 1;\n                        if lst1_odd_count == lst2_odd_count\
    \ {\n                            return String::from(\"YES\");\n             \
    \           }\n                        break;\n                    }\n       \
    \         }\n            }\n        }\n    } else {\n        for i in 0..lst2.len()\
    \ {\n            if lst2[i] % 2 != 0 {\n                for j in 0..lst1.len()\
    \ {\n                    if lst1[j] % 2 != 0 {\n                        lst2[i]\
    \ = lst1[j];\n                        lst1[j] = lst2[i];\n                   \
    \     lst1_odd_count += 1;\n                        lst2_odd_count -= 1;\n   \
    \                     if lst1_odd_count == lst2_odd_count {\n                \
    \            return String::from(\"YES\");\n                        }\n      \
    \                  break;\n                    }\n                }\n        \
    \    }\n        }\n    }\n   \n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5rhs8c8u.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5rhs8c8u.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5rhs8c8u.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5rhs8c8u.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5rhs8c8u.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    for i in 0..lst1.len()\
    \ {\n        if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n   \
    \             if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n\
    \                    lst2[j] = lst1[i];\n                    break;\n        \
    \        }\n            }\n        }\n    }\n    if lst1.iter().all(|&x| x % 2\
    \ == 0) {\n        String::from(\"YES\")\n    } else {\n        String::from(\"\
    NO\")\n    }\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7c3209n0.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7c3209n0.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7c3209n0.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7c3209n0.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7c3209n0.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7c3209n0.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7c3209n0.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7c3209n0.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7c3209n0.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7c3209n0.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7c3209n0.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794211
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut is_exchange = false;\n    while i < lst1.len() {\n \
    \       if lst1[i] % 2 == 1 {\n            while j < lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    is_exchange = true;\n  \
    \                  break;\n                }\n                j += 1;\n      \
    \      }\n        }\n        if !is_exchange {\n            return String::from(\"\
    NO\");\n        }\n        i += 1;\n    }\n    String::from(\"YES\")\n}\n\nfn\
    \ main() {\n    let candidate = exchange;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpindgzw1l.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpindgzw1l.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpindgzw1l.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpindgzw1l.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     for j in 0..lst2.len() {\n            if lst1[i] % 2 == 0 && lst2[j] % 2\
    \ != 0 {\n                lst1[i] = lst2[j];\n                lst2[j] = lst1[i];\n\
    \                even_count += 1;\n            }\n            if even_count ==\
    \ lst1.len() {\n                return String::from(\"YES\");\n            }\n\
    \        }\n    }\n    String::from(\"NO\")\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi3x579gz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi3x579gz.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi3x579gz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi3x579gz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut count = 0;\n    while i < lst1.len() {\n        if lst1[i]\
    \ % 2 == 1 {\n            while j < lst2.len() {\n                if lst2[j] %\
    \ 2 == 0 {\n                    lst1[i] = lst2[j];\n                    lst2[j]\
    \ = lst1[i];\n                    count += 1;\n                    break;\n  \
    \              }\n                j += 1;\n            }\n        }\n        i\
    \ += 1;\n    }\n    if count == 0 {\n        String::from(\"NO\")\n    } else\
    \ {\n        String::from(\"YES\")\n    }\n}\n\nfn main() {\n    let candidate\
    \ = exchange;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvglvuqe8.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvglvuqe8.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvglvuqe8.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvglvuqe8.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvglvuqe8.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvglvuqe8.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvglvuqe8.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvglvuqe8.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut even_count =\
    \ 0;\n    for i in 0..lst1.len() {\n        if lst1[i] % 2 == 0 {\n          \
    \  even_count += 1;\n        }\n    }\n    if even_count == lst1.len() {\n   \
    \     return String::from(\"YES\");\n    }\n    for i in 0..lst1.len() {\n   \
    \     if lst1[i] % 2 != 0 {\n            for j in 0..lst2.len() {\n          \
    \      if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j];\n       \
    \             lst2[j] = lst1[i];\n                    even_count += 1;\n     \
    \               break;\n                }\n            }\n        }\n    }\n \
    \   if even_count == lst1.len() {\n        return String::from(\"YES\");\n   \
    \ }\n    return String::from(\"NO\");\n}\n\nfn main() {\n    let candidate = exchange;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg75j_o7k.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg75j_o7k.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg75j_o7k.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg75j_o7k.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659794210
- exit_code: 1
  program: "/// In this problem, you will implement a function that takes two lists\
    \ of numbers,\n/// and determines whether it is possible to perform an exchange\
    \ of elements\n/// between them to make lst1 a list of only even numbers.\n///\
    \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    /// If it is possible to exchange elements between the lst1 and lst2 to make\n\
    /// all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return\
    \ \"NO\".\n/// For example:\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 2, 3,\
    \ 4])\n/// String::from(\"YES\")\n/// >>> exchange(vec![1, 2, 3, 4], vec![1, 5,\
    \ 3, 4])\n/// String::from(\"NO\")\n/// It is assumed that the input lists will\
    \ be non-empty.\nfn exchange(lst1: Vec<isize>, lst2: Vec<isize>) -> String {\n\
    \    let mut lst1 = lst1;\n    let mut lst2 = lst2;\n    let mut i = 0;\n    while\
    \ i < lst1.len() {\n        if lst1[i] % 2 == 1 {\n            let mut j = 0;\n\
    \            while j < lst2.len() {\n                if lst2[j] % 2 == 0 {\n \
    \                   lst1[i] = lst2[j];\n                    lst2[j] = 1;\n   \
    \                 break;\n                }\n                j += 1;\n       \
    \     }\n            if j == lst2.len() {\n                return String::from(\"\
    NO\");\n            }\n        }\n        i += 1;\n    }\n    String::from(\"\
    YES\")\n}\n\nfn main() {\n    let candidate = exchange;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjhzfeafv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjhzfeafv.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjhzfeafv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjhzfeafv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659747553

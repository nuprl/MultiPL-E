name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// >>>\
  \ choose_num(12, 15)\n/// 14\n/// >>> choose_num(13, 12)\n/// -1\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    // TODO: implement this function\n    let mut num = -1;\n    for\
    \ i in x..y+1 {\n        if i % 2 == 0 {\n            num = i;\n        }\n  \
    \  }\n    num", "    let mut result = -1;\n    for i in x..y+1 {\n        if i\
    \ % 2 == 0 {\n            result = i;\n        }\n    }\n    result", "    let\
    \ mut result = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n         \
    \   result = i;\n        }\n    }\n    result", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    // TODO: Implement this function\n\
    \    unimplemented!()", "    if x > y {\n        return -1;\n    }\n\n    let\
    \ mut max_even = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0 {\n     \
    \       max_even = i;\n        }\n    }\n\n    return max_even;", "    // TODO:\
    \ Implement this function\n    unimplemented!()", "    // TODO: implement this\
    \ function\n    unimplemented!()", "    if x % 2 == 0 {\n        return x;\n \
    \   }\n    if x + 1 == y {\n        return -1;\n    }\n    return choose_num(x\
    \ + 1, y);", "    let mut result = -1;\n    for i in x..y+1 {\n        if i %\
    \ 2 == 0 {\n            result = i;\n        }\n    }\n    result", "    if x\
    \ > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n \
    \   }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if\
    \ x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", '    unimplemented!();',
  "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", " \
    \   if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", " \
    \   if x > y {\n        return -1;\n    }\n    let mut i = x;\n    while i <=\
    \ y {\n        if i % 2 == 0 {\n            return i;\n        }\n        i +=\
    \ 1;\n    }\n    -1", "    // TODO: Implement this function\n    0", "    let\
    \ mut result = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n         \
    \   result = i;\n        }\n    }\n    result", "    // TODO: Implement this function\n\
    \    unimplemented!()"]
stop_tokens:
- "\n}"

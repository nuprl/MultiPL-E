name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// >>>\
  \ choose_num(12, 15)\n/// 14\n/// >>> choose_num(13, 12)\n/// -1\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n  \
    \      return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n    \
    \    return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n    \
    \    return x;\n    }\n    if x + 1 == y {\n        return -1;\n    }\n    return\
    \ x + 2;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n \
    \       return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x % 2 == 0 {\n        if x >= y {\n            return x;\n   \
    \     } else {\n            return y;\n        }\n    } else {\n        if x +\
    \ 1 >= y {\n            return -1;\n        } else {\n            return y;\n\
    \        }\n    }", "    // TODO: Implement this function\n    -1", "    if x\
    \ % 2 == 0 && x <= y {\n        return x;\n    } else if x % 2 == 1 && x + 1 <=\
    \ y {\n        return x + 1;\n    } else {\n        return -1;\n    }", "    let\
    \ mut result = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n         \
    \   result = i;\n        }\n    }\n    result", "    // TODO: Implement this function\n\
    \    let mut num = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n     \
    \       num = i;\n        }\n    }\n    num", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    return choose_num(x\
    \ + 1, y);", "    // TODO: implement this function\n    -1", "    if x > y {\n\
    \        return -1;\n    }\n    for i in (x..y+1).rev() {\n        if i % 2 ==\
    \ 0 {\n            return i;\n        }\n    }\n    -1", "    if x > y {\n   \
    \     return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if\
    \ y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    // TODO: Implement\
    \ this function\n    let mut result = -1;\n    for i in x..(y+1) {\n        if\
    \ i % 2 == 0 {\n            result = i;\n        }\n    }\n    result", "    if\
    \ x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    let\
    \ mut i = x;\n    while i <= y {\n        if i % 2 == 0 {\n            return\
    \ i;\n        }\n        i += 1;\n    }\n    -1", "    // TODO: Implement this\
    \ function\n    -1", "    if x > y {\n        return -1;\n    }\n    if x % 2\
    \ == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n \
    \   }\n    return -1;", "    // TODO: Implement this function\n    -1", "    //\
    \ TODO: implement this function\n    unimplemented!()", "    // TODO: implement\
    \ this function\n    let mut max = -1;\n    for i in x..y+1 {\n        if i %\
    \ 2 == 0 {\n            if i > max {\n                max = i;\n            }\n\
    \        }\n    }\n    max", "    // TODO: Implement this function.\n    let mut\
    \ max_even = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n           \
    \ max_even = i;\n        }\n    }\n    max_even", "    if x % 2 == 0 && x >= y\
    \ {\n        return x;\n    } else if y % 2 == 0 && y >= x {\n        return y;\n\
    \    } else if x % 2 == 0 && y % 2 == 0 {\n        return y;\n    } else if x\
    \ % 2 != 0 && y % 2 != 0 {\n        return -1;\n    } else if x % 2 != 0 && y\
    \ % 2 == 0 {\n        return y;\n    } else if x % 2 == 0 && y % 2 != 0 {\n  \
    \      return x;\n    } else {\n        return -1;\n    }", "    if x > y {\n\
    \        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n  \
    \  if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if x > y {\n\
    \        return -1;\n    }\n\n    let mut result = -1;\n    for i in x..y+1 {\n\
    \        if i % 2 == 0 {\n            result = i;\n        }\n    }\n\n    result",
  "    // TODO: implement this function\n    let mut max = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            if i > max {\n                max =\
    \ i;\n            }\n        }\n    }\n    max", '    unimplemented!()', "   \
    \ // TODO: Implement this function\n    -1", "    if x > y {\n        return -1;\n\
    \    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n \
    \       return y;\n    }\n    return -1;", "    let mut max = -1;\n    for i in\
    \ x..y+1 {\n        if i % 2 == 0 && i > max {\n            max = i;\n       \
    \ }\n    }\n    max", "    if x > y {\n        return -1;\n    }\n    if x % 2\
    \ == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n \
    \   }\n    return -1;", "    // TODO: implement this function\n    unimplemented!()",
  "    if x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n\n    if y % 2 == 0 {\n        return y;\n    }\n\n    return -1;",
  "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", " \
    \   // TODO: implement this function\n    -1", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    if x > y {\n        return\
    \ -1;\n    }\n    let mut i = x;\n    while i <= y {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n        i += 1;\n    }\n    -1", "    if x\
    \ > y {\n        return -1;\n    }\n\n    for i in (x..y+1).rev() {\n        if\
    \ i % 2 == 0 {\n            return i;\n        }\n    }\n\n    -1", "    if x\
    \ > y {\n        return -1;\n    }\n    let mut max = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            max = i;\n        }\n    }\n    return\
    \ max;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n   \
    \     return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x % 2 == 0 {\n        if x >= y {\n            return x;\n   \
    \     }\n        else {\n            return choose_num(x + 2, y);\n        }\n\
    \    }\n    else {\n        if x + 1 >= y {\n            return -1;\n        }\n\
    \        else {\n            return choose_num(x + 2, y);\n        }\n    }",
  "    // TODO: Implement this function\n    unimplemented!()", "    if x > y {\n\
    \        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n  \
    \  if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if x > y {\n\
    \        return -1;\n    }\n    let mut i = x;\n    while i <= y {\n        if\
    \ i % 2 == 0 {\n            return i;\n        }\n        i += 1;\n    }\n   \
    \ -1", "    // TODO: Implement this function\n    -1", "    let mut max = -1;\n\
    \    for i in x..y+1 {\n        if i % 2 == 0 && i > max {\n            max =\
    \ i;\n        }\n    }\n    max", "    // TODO: implement this function\n    unimplemented!()",
  "    let mut num = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n       \
    \     num = i;\n        }\n    }\n    num", "    if x > y {\n        return -1;\n\
    \    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n \
    \       return y;\n    }\n    return -1;", "    if x > y {\n        return -1;\n\
    \    }\n    let mut max_even = -1;\n    for i in x..(y + 1) {\n        if i %\
    \ 2 == 0 {\n            max_even = i;\n        }\n    }\n    max_even", '    unimplemented!()',
  "    if x > y {\n        return -1;\n    }\n    let mut i = x;\n    while i <= y\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    -1", "    let mut max_even = -1;\n    for i in x..y+1 {\n        if\
    \ i % 2 == 0 {\n            max_even = i;\n        }\n    }\n    max_even", " \
    \   let mut max = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 && i > max\
    \ {\n            max = i;\n        }\n    }\n    max", "    // TODO: implement\
    \ this function\n    -1", "    if x > y {\n        return -1;\n    }\n    if x\
    \ % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n\
    \    }\n    return -1;", "    // TODO: implement this function\n    unimplemented!()",
  '    unimplemented!();', "    if x > y {\n        return -1;\n    }\n    if x %\
    \ 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n\
    \    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n    let mut\
    \ result = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0 {\n           \
    \ result = i;\n        }\n    }\n    result", "    if x % 2 == 0 && x <= y {\n\
    \        x\n    } else if x + 1 <= y {\n        x + 1\n    } else {\n        -1\n\
    \    }", "    if x > y {\n        return -1;\n    }\n    let mut i = y;\n    while\
    \ i >= x {\n        if i % 2 == 0 {\n            return i;\n        }\n      \
    \  i -= 1;\n    }\n    -1", "    // TODO: Implement this function\n    -1", " \
    \   let mut result = -1;\n    for i in x..(y+1) {\n        if i % 2 == 0 {\n \
    \           result = i;\n        }\n    }\n    result", "    if x > y {\n    \
    \    return -1;\n    }\n    let mut max_even = -1;\n    for i in x..(y + 1) {\n\
    \        if i % 2 == 0 {\n            max_even = i;\n        }\n    }\n    max_even",
  "    // TODO: Implement this function\n    unimplemented!()", "    if x % 2 == 0\
    \ {\n        if x <= y {\n            return x;\n        }\n    } else {\n   \
    \     if x + 1 <= y {\n            return x + 1;\n        }\n    }\n    -1", " \
    \   // TODO: Implement this function\n    if x%2 == 0 {\n        if y%2 == 0 {\n\
    \            if x > y {\n                return y;\n            } else {\n   \
    \             return x;\n            }\n        } else {\n            if x > y-1\
    \ {\n                return y-1;\n            } else {\n                return\
    \ x;\n            }\n        }\n    } else {\n        if y%2 == 0 {\n        \
    \    if x+1 > y {\n                return y;\n            } else {\n         \
    \       return x+1;\n            }\n        } else {\n            if x+1 > y-1\
    \ {\n                return y-1;\n            } else {\n                return\
    \ x+1;\n            }\n        }\n    }", "    // TODO: Implement this function.\n\
    \    unimplemented!()", "    if x % 2 == 0 && x <= y {\n        return x;\n  \
    \  } else if x % 2 == 1 && x + 1 <= y {\n        return x + 1;\n    } else {\n\
    \        return -1;\n    }", "    if x > y {\n        return -1;\n    }\n    if\
    \ x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", '    unimplemented!()', "    // TODO: Implement\
    \ this function\n    -1", "    // TODO: Implement this function\n    unimplemented!()",
  "    // TODO: Implement this function\n    let mut max = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            if i > max {\n                max =\
    \ i;\n            }\n        }\n    }\n    max", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    // TODO: Implement this function\n\
    \    if x % 2 == 0 {\n        if x <= y {\n            return x;\n        }\n\
    \    }\n    if x % 2 == 1 {\n        if x + 1 <= y {\n            return x + 1;\n\
    \        }\n    }\n    return -1;", "    // TODO: implement this function\n  \
    \  unimplemented!()", '    unimplemented!()', "    if x % 2 == 0 {\n        if\
    \ x >= y {\n            return x;\n        } else {\n            return choose_num(x\
    \ + 2, y);\n        }\n    } else {\n        if x + 1 >= y {\n            return\
    \ -1;\n        } else {\n            return choose_num(x + 1, y);\n        }\n\
    \    }", '    unimplemented!();', '    unimplemented!()', "    if x % 2 == 0 {\n\
    \        x\n    } else if x + 1 <= y {\n        x + 1\n    } else {\n        -1\n\
    \    }", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n   \
    \     return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n    \
    \    return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x > y {\n        return -1;\n    }\n    let mut max = -1;\n  \
    \  for i in x..y+1 {\n        if i % 2 == 0 {\n            max = i;\n        }\n\
    \    }\n    return max;", "    // TODO: Implement this function\n    unimplemented!()",
  "    if x % 2 == 0 {\n        x\n    } else if x + 1 <= y {\n        x + 1\n   \
    \ } else {\n        -1\n    }", "    if x % 2 == 0 {\n        if x >= y {\n  \
    \          return x;\n        } else {\n            return choose_num(x + 2, y);\n\
    \        }\n    } else {\n        if x + 1 >= y {\n            return -1;\n  \
    \      } else {\n            return choose_num(x + 2, y);\n        }\n    }",
  "    if x % 2 == 0 {\n        if x > y {\n            return -1;\n        }\n  \
    \      return x;\n    }\n    if x + 1 > y {\n        return -1;\n    }\n    return\
    \ x + 1;", "    if x % 2 == 0 {\n        x\n    } else if y % 2 == 0 {\n     \
    \   y\n    } else {\n        -1\n    }", "    if x % 2 == 0 {\n        if x >=\
    \ y {\n            return x;\n        } else {\n            return y;\n      \
    \  }\n    } else {\n        if x + 1 >= y {\n            return -1;\n        }\
    \ else {\n            return y;\n        }\n    }", "    if x % 2 == 0 {\n   \
    \     if x >= y {\n            return x;\n        } else {\n            return\
    \ choose_num(x + 2, y);\n        }\n    } else {\n        if x + 1 >= y {\n  \
    \          return -1;\n        } else {\n            return choose_num(x + 2,\
    \ y);\n        }\n    }", "    // TODO: Implement this function\n    unimplemented!()",
  "    if x > y {\n        return -1;\n    }\n    let mut result = -1;\n    for i\
    \ in x..y + 1 {\n        if i % 2 == 0 {\n            result = i;\n        }\n\
    \    }\n    result", "    // TODO: implement this function\n    unimplemented!()",
  "    let mut result = -1;\n    for i in x..(y+1) {\n        if i % 2 == 0 {\n  \
    \          result = i;\n        }\n    }\n    result", "    // TODO: implement\
    \ this function\n    unimplemented!()", "    if x % 2 == 0 {\n        if x > y\
    \ {\n            return -1;\n        }\n        return x;\n    }\n    if x + 1\
    \ > y {\n        return -1;\n    }\n    return x + 1;", "    if x % 2 == 0 {\n\
    \        if x > y {\n            return -1;\n        } else {\n            return\
    \ x;\n        }\n    } else {\n        if x + 1 > y {\n            return -1;\n\
    \        } else {\n            return x + 1;\n        }\n    }", "    if x % 2\
    \ == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n \
    \   }\n    return -1;", "    if x > y {\n        return -1;\n    }\n    if x %\
    \ 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n\
    \    }\n    return -1;", "    // TODO: implement this function\n    unimplemented!()",
  "    // TODO: Implement this function\n    if x % 2 == 0 {\n        if x >= y {\n\
    \            return x;\n        } else {\n            return y;\n        }\n \
    \   } else {\n        if x + 1 >= y {\n            return -1;\n        } else\
    \ {\n            return y;\n        }\n    }", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    // TODO: Implement this function\n\
    \    unimplemented!()", "    let mut result = -1;\n    for i in x..y+1 {\n   \
    \     if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result",
  "    // TODO: Implement this function\n    unimplemented!()", "    if x > y {\n\
    \        return -1;\n    }\n    let mut i = x;\n    while i <= y {\n        if\
    \ i % 2 == 0 {\n            return i;\n        }\n        i += 1;\n    }\n   \
    \ -1", "    // TODO: implement this function\n    let mut max = -1;\n    for i\
    \ in x..y+1 {\n        if i % 2 == 0 {\n            if i > max {\n           \
    \     max = i;\n            }\n        }\n    }\n    max", "    if x > y {\n \
    \       return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n   \
    \ if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if x > y {\n\
    \        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n  \
    \  if x + 1 == y {\n        return -1;\n    }\n    return x + 2;", "    if x %\
    \ 2 == 0 {\n        if x <= y {\n            return x;\n        }\n    }\n   \
    \ if y % 2 == 0 {\n        if x <= y {\n            return y;\n        }\n   \
    \ }\n    return -1;", "    if x > y {\n        return -1;\n    }\n    let mut\
    \ max = x;\n    for i in x..y+1 {\n        if i % 2 == 0 && i > max {\n      \
    \      max = i;\n        }\n    }\n    if max % 2 == 0 {\n        return max;\n\
    \    }\n    return -1;", "    // TODO: Implement this function\n    -1", "   \
    \ if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    //\
    \ TODO: Implement this function\n    unimplemented!()", "    // TODO: Implement\
    \ this function\n    -1", "    // TODO: Implement this function\n    if x % 2\
    \ == 0 && y % 2 == 0 {\n        if x > y {\n            return y;\n        } else\
    \ {\n            return x;\n        }\n    } else if x % 2 == 0 && y % 2 != 0\
    \ {\n        return x;\n    } else if x % 2 != 0 && y % 2 == 0 {\n        return\
    \ y;\n    } else {\n        return -1;\n    }", "    if x % 2 == 0 {\n       \
    \ if x >= y {\n            return x;\n        } else {\n            return choose_num(x\
    \ + 2, y);\n        }\n    } else {\n        if x + 1 >= y {\n            return\
    \ -1;\n        } else {\n            return choose_num(x + 2, y);\n        }\n\
    \    }", "    // TODO: implement this function\n    let mut result = -1;\n   \
    \ for i in x..y+1 {\n        if i % 2 == 0 {\n            result = i;\n      \
    \  }\n    }\n    result", '    unimplemented!();', "    if x > y {\n        return\
    \ -1;\n    }\n\n    let mut max_even = -1;\n    for i in x..(y + 1) {\n      \
    \  if i % 2 == 0 {\n            max_even = i;\n        }\n    }\n\n    return\
    \ max_even;", "    // TODO: Implement this function\n    unimplemented!()", " \
    \   if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", " \
    \   if x % 2 == 0 {\n        if x >= y {\n            return x;\n        } else\
    \ {\n            return y;\n        }\n    } else {\n        if x >= y {\n   \
    \         return x - 1;\n        } else {\n            return y - 1;\n       \
    \ }\n    }", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ return -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ return -1;", "    if x > y {\n        return -1;\n    }\n    let mut max = -1;\n\
    \    for i in x..(y + 1) {\n        if i % 2 == 0 {\n            max = i;\n  \
    \      }\n    }\n    max", "    let mut result = -1;\n    for i in x..y+1 {\n\
    \        if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result",
  '    unimplemented!();', "    if x % 2 == 0 {\n        return x;\n    }\n    if\
    \ x + 1 == y {\n        return -1;\n    }\n    choose_num(x + 1, y)", '    unimplemented!();',
  "    // TODO: implement this function\n    -1", "    if x % 2 == 0 {\n        if\
    \ x >= y {\n            return x;\n        }\n        else {\n            return\
    \ choose_num(x + 2, y);\n        }\n    }\n    else {\n        if x + 1 >= y {\n\
    \            return -1;\n        }\n        else {\n            return choose_num(x\
    \ + 2, y);\n        }\n    }", "    if x > y {\n        return -1;\n    }\n  \
    \  if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    -1", "    if x > y {\n        return -1;\n    }\n    let mut\
    \ i = x;\n    while i <= y {\n        if i % 2 == 0 {\n            return i;\n\
    \        }\n        i += 1;\n    }\n    -1", "    if x % 2 == 0 {\n        if\
    \ x <= y {\n            return x;\n        }\n    }\n    if y % 2 == 0 {\n   \
    \     if x <= y {\n            return y;\n        }\n    }\n    return -1;", " \
    \   if x % 2 == 0 {\n        if x >= y {\n            return x;\n        }\n \
    \       else {\n            return choose_num(x + 2, y);\n        }\n    }\n \
    \   else {\n        if x + 1 >= y {\n            return -1;\n        }\n     \
    \   else {\n            return choose_num(x + 2, y);\n        }\n    }", "   \
    \ if x > y {\n        return -1;\n    }\n    let mut max = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            max = i;\n        }\n    }\n    return\
    \ max;", "    // TODO: Implement this function\n    unimplemented!()", "    if\
    \ x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if x + 1 == y {\n        return -1;\n    }\n    return x + 2;", " \
    \   if x > y {\n        return -1;\n    }\n    let mut i = x;\n    while i <=\
    \ y {\n        if i % 2 == 0 {\n            return i;\n        }\n        i +=\
    \ 1;\n    }\n    -1", "    if x > y {\n        return -1;\n    }\n\n    let mut\
    \ max = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n            max =\
    \ i;\n        }\n    }\n\n    return max;", "    // TODO: implement this function\n\
    \    let mut even_num = -1;\n    for num in x..y+1 {\n        if num % 2 == 0\
    \ {\n            even_num = num;\n        }\n    }\n    even_num", "    if x %\
    \ 2 == 0 {\n        if x >= y {\n            return x;\n        }\n        return\
    \ choose_num(x + 2, y);\n    }\n    if x + 1 == y {\n        return -1;\n    }\n\
    \    return choose_num(x + 1, y);", "    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    //\
    \ TODO: implement me!\n    unimplemented!();", "    if x > y {\n        return\
    \ -1;\n    }\n    let mut num = y;\n    while num >= x {\n        if num % 2 ==\
    \ 0 {\n            return num;\n        }\n        num -= 1;\n    }\n    -1",
  "    if x % 2 == 0 {\n        if x <= y {\n            return x;\n        }\n  \
    \  }\n    if x + 1 <= y {\n        return x + 1;\n    }\n    -1", "    if x %\
    \ 2 == 0 {\n        if x >= y {\n            return x;\n        } else {\n   \
    \         return choose_num(x + 2, y);\n        }\n    } else {\n        if x\
    \ + 1 >= y {\n            return -1;\n        } else {\n            return choose_num(x\
    \ + 1, y);\n        }\n    }", "    if x > y {\n        return -1;\n    }\n  \
    \  if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n   \
    \ if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", "    if x % 2 == 0 {\n        if x >= y {\n    \
    \        return x;\n        }\n        return x + 2;\n    }\n    if x + 1 >= y\
    \ {\n        return -1;\n    }\n    return x + 1;", "    // TODO: Implement this\
    \ function\n    unimplemented!()", "    if x > y {\n        return -1;\n    }\n\
    \    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", "    // TODO: Implement this function\n    // Hint:\
    \ You can use the modulo operator (%) to check if a number is even\n    // or\
    \ odd.\n    // Hint: You can use the max function to find the maximum of two numbers.\n\
    \    // Hint: You can use the if-else statement to return different values\n \
    \   // depending on the condition.\n    unimplemented!()", '    unimplemented!();',
  "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", " \
    \   if x % 2 == 0 {\n        if x >= y {\n            return x;\n        } else\
    \ {\n            return choose_num(x + 2, y);\n        }\n    } else {\n     \
    \   if x + 1 >= y {\n            return -1;\n        } else {\n            return\
    \ choose_num(x + 1, y);\n        }\n    }", "    if x > y {\n        return -1;\n\
    \    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n \
    \       return y;\n    }\n    return -1;", "    let mut result = -1;\n    for\
    \ i in x..y+1 {\n        if i % 2 == 0 {\n            result = i;\n        }\n\
    \    }\n    result", "    if x > y {\n        return -1;\n    }\n    if x % 2\
    \ == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n \
    \   }\n    return -1;", "    // TODO: Implement this function\n    -1", "    let\
    \ mut result = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n         \
    \   result = i;\n        }\n    }\n    result", "    if x % 2 == 0 {\n       \
    \ if x > y {\n            return -1;\n        } else {\n            return x;\n\
    \        }\n    } else {\n        if x + 1 > y {\n            return -1;\n   \
    \     } else {\n            return x + 1;\n        }\n    }", "    if x > y {\n\
    \        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n  \
    \  if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    // TODO: Implement\
    \ this function\n    -1", "    let mut result = -1;\n    for i in x..y + 1 {\n\
    \        if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result",
  "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", " \
    \   if x % 2 == 0 {\n        if x > y {\n            return -1;\n        }\n \
    \       return x;\n    }\n    if x + 1 > y {\n        return -1;\n    }\n    return\
    \ x + 1;", "    if x % 2 == 0 {\n        return x;\n    } else if y % 2 == 0 {\n\
    \        return y;\n    } else {\n        return -1;\n    }", "    // TODO: Implement\
    \ this function.\n    if x > y {\n        return -1;\n    }\n    if x % 2 == 0\
    \ {\n        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n\
    \    return -1;", "    if x % 2 == 0 {\n        if x > y {\n            return\
    \ -1;\n        } else {\n            return x;\n        }\n    } else {\n    \
    \    if x + 1 > y {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }", "    let mut result = -1;\n    for i in x..y+1 {\n\
    \        if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result",
  "    // TODO: Implement this function\n    -1", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0\
    \ {\n        return y;\n    }\n    return -1;", '    unimplemented!();', "   \
    \ if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if\
    \ x > y {\n        return -1;\n    }\n    let mut max_even = -1;\n    for i in\
    \ x..y+1 {\n        if i % 2 == 0 {\n            max_even = i;\n        }\n  \
    \  }\n    return max_even;", "    let mut max_even = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            max_even = i;\n        }\n    }\n  \
    \  max_even", "    if x % 2 == 0 {\n        if x == y {\n            return x;\n\
    \        }\n        return choose_num(x + 2, y);\n    }\n    if x + 1 == y {\n\
    \        return -1;\n    }\n    return choose_num(x + 1, y);", "    if x % 2 ==\
    \ 0 {\n        if x >= y {\n            return x;\n        } else {\n        \
    \    return choose_num(x + 2, y);\n        }\n    } else {\n        if x + 1 >=\
    \ y {\n            return -1;\n        } else {\n            return choose_num(x\
    \ + 2, y);\n        }\n    }", "    if x > y {\n        return -1;\n    }\n  \
    \  if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n   \
    \ if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n   \
    \ if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    return -1;", "    let mut max_even = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            max_even = i;\n        }\n    }\n  \
    \  max_even", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ return -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ return -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ return -1;", "    if x > y {\n        return -1;\n    }\n    let mut max_even\
    \ = -1;\n    for i in x..(y + 1) {\n        if i % 2 == 0 {\n            max_even\
    \ = i;\n        }\n    }\n    max_even", '    unimplemented!();', "    // TODO:\
    \ implement this function\n    -1", "    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if x + 1 == y {\n        return -1;\n    }\n    choose_num(x + 1,\
    \ y)", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n     \
    \   return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return\
    \ -1;", "    if x % 2 == 0 {\n        x\n    } else if x + 1 < y {\n        x\
    \ + 1\n    } else {\n        -1\n    }"]
stop_tokens:
- "\n}"

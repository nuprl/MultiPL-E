name: HumanEval_95_check_dict_case
language: rs
prompt: "use std::collections::HashMap;\n\n/// Given a dictionary, return True if\
  \ all keys are strings in lower \n/// case or all keys are strings in upper case,\
  \ else return False.\n/// The function should return False is the given dictionary\
  \ is empty.\n/// Examples:\n/// >>> check_dict_case(HashMap::from([(String::from(\"\
  a\"), String::from(\"apple\")), (String::from(\"b\"), String::from(\"banana\"))]))\n\
  /// true\n/// >>> check_dict_case(HashMap::from([(String::from(\"a\"), String::from(\"\
  apple\")), (String::from(\"A\"), String::from(\"banana\")), (String::from(\"B\"\
  ), String::from(\"banana\"))]))\n/// false\n/// >>> check_dict_case(HashMap::from([(String::from(\"\
  a\"), String::from(\"apple\")), (8, String::from(\"banana\")), (String::from(\"\
  a\"), String::from(\"apple\"))]))\n/// false\n/// >>> check_dict_case(HashMap::from([(String::from(\"\
  Name\"), String::from(\"John\")), (String::from(\"Age\"), String::from(\"36\")),\
  \ (String::from(\"City\"), String::from(\"Houston\"))]))\n/// false\n/// >>> check_dict_case(HashMap::from([(String::from(\"\
  STATE\"), String::from(\"NC\")), (String::from(\"ZIP\"), String::from(\"12345\"\
  ))]))\n/// true\nfn check_dict_case(dict: HashMap<String, String>) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = check_dict_case;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut lower_case = true;\n    let mut upper_case = true;\n  \
    \  for key in dict.keys() {\n        if key.chars().next().unwrap().is_lowercase()\
    \ {\n            upper_case = false;\n        } else if key.chars().next().unwrap().is_uppercase()\
    \ {\n            lower_case = false;\n        } else {\n            return false;\n\
    \        }\n    }\n    lower_case || upper_case", "    let mut is_lower = true;\n\
    \    let mut is_upper = true;\n    for key in dict.keys() {\n        if key.chars().any(|c|\
    \ c.is_uppercase()) {\n            is_lower = false;\n        }\n        if key.chars().any(|c|\
    \ c.is_lowercase()) {\n            is_upper = false;\n        }\n    }\n    is_lower\
    \ || is_upper", "    let mut lower = true;\n    let mut upper = true;\n    for\
    \ key in dict.keys() {\n        if key.chars().all(|c| c.is_lowercase()) {\n \
    \           upper = false;\n        } else if key.chars().all(|c| c.is_uppercase())\
    \ {\n            lower = false;\n        } else {\n            return false;\n\
    \        }\n    }\n    lower || upper", "    let mut lower_case = true;\n    let\
    \ mut upper_case = true;\n    for key in dict.keys() {\n        if !key.is_empty()\
    \ {\n            if key.chars().next().unwrap().is_lowercase() {\n           \
    \     upper_case = false;\n            } else if key.chars().next().unwrap().is_uppercase()\
    \ {\n                lower_case = false;\n            } else {\n             \
    \   return false;\n            }\n        }\n    }\n    lower_case || upper_case",
  "    let mut is_lower = true;\n    let mut is_upper = true;\n    for key in dict.keys()\
    \ {\n        if key.chars().next().unwrap().is_lowercase() {\n            is_upper\
    \ = false;\n        } else if key.chars().next().unwrap().is_uppercase() {\n \
    \           is_lower = false;\n        } else {\n            return false;\n \
    \       }\n    }\n    is_lower || is_upper", "    let mut all_lower = true;\n\
    \    let mut all_upper = true;\n    for key in dict.keys() {\n        if key.is_ascii_lowercase()\
    \ {\n            all_upper = false;\n        } else if key.is_ascii_uppercase()\
    \ {\n            all_lower = false;\n        } else {\n            return false;\n\
    \        }\n    }\n    all_lower || all_upper", "    let mut is_lower = true;\n\
    \    let mut is_upper = true;\n    for (key, _) in dict {\n        if key.chars().all(|c|\
    \ c.is_lowercase()) {\n            is_upper = false;\n        } else if key.chars().all(|c|\
    \ c.is_uppercase()) {\n            is_lower = false;\n        } else {\n     \
    \       return false;\n        }\n    }\n    is_lower || is_upper", "    let mut\
    \ lower = true;\n    let mut upper = true;\n    for (key, _) in dict {\n     \
    \   if key.chars().any(|c| c.is_uppercase()) {\n            lower = false;\n \
    \       }\n        if key.chars().any(|c| c.is_lowercase()) {\n            upper\
    \ = false;\n        }\n    }\n    lower || upper", "    let mut lower = true;\n\
    \    let mut upper = true;\n    for (key, _) in dict {\n        if key.chars().any(|c|\
    \ c.is_uppercase()) {\n            lower = false;\n        }\n        if key.chars().any(|c|\
    \ c.is_lowercase()) {\n            upper = false;\n        }\n    }\n    lower\
    \ || upper", "    let mut is_lower = true;\n    let mut is_upper = true;\n   \
    \ for key in dict.keys() {\n        if key.chars().any(|c| c.is_uppercase()) {\n\
    \            is_lower = false;\n        }\n        if key.chars().any(|c| c.is_lowercase())\
    \ {\n            is_upper = false;\n        }\n    }\n    is_lower || is_upper",
  "    let mut is_lower = None;\n    for key in dict.keys() {\n        let is_lower_key\
    \ = key.chars().all(|c| c.is_lowercase());\n        if is_lower.is_none() {\n\
    \            is_lower = Some(is_lower_key);\n        } else if is_lower.unwrap()\
    \ != is_lower_key {\n            return false;\n        }\n    }\n    is_lower.unwrap_or(false)",
  "    let mut is_lower = true;\n    let mut is_upper = true;\n    for (key, _) in\
    \ dict {\n        if key.chars().next().unwrap().is_lowercase() {\n          \
    \  is_upper = false;\n        } else if key.chars().next().unwrap().is_uppercase()\
    \ {\n            is_lower = false;\n        } else {\n            return false;\n\
    \        }\n    }\n    is_lower || is_upper", "    let mut is_lower = true;\n\
    \    let mut is_upper = true;\n    for key in dict.keys() {\n        if key.chars().all(|c|\
    \ c.is_lowercase()) {\n            is_upper = false;\n        } else if key.chars().all(|c|\
    \ c.is_uppercase()) {\n            is_lower = false;\n        } else {\n     \
    \       return false;\n        }\n    }\n    is_lower || is_upper", "    if dict.is_empty()\
    \ {\n        return false;\n    }\n    let mut lower_case = true;\n    let mut\
    \ upper_case = true;\n    for (key, _) in dict {\n        if !key.is_ascii_lowercase()\
    \ {\n            lower_case = false;\n        }\n        if !key.is_ascii_uppercase()\
    \ {\n            upper_case = false;\n        }\n    }\n    lower_case || upper_case",
  "    let mut lower_case = true;\n    let mut upper_case = true;\n    for (key, _)\
    \ in dict {\n        if !key.is_ascii_lowercase() {\n            lower_case =\
    \ false;\n        }\n        if !key.is_ascii_uppercase() {\n            upper_case\
    \ = false;\n        }\n    }\n    lower_case || upper_case", "    let mut lower_case\
    \ = true;\n    let mut upper_case = true;\n    for key in dict.keys() {\n    \
    \    if !key.is_empty() {\n            if !key.chars().all(|c| c.is_lowercase())\
    \ {\n                lower_case = false;\n            }\n            if !key.chars().all(|c|\
    \ c.is_uppercase()) {\n                upper_case = false;\n            }\n  \
    \      }\n    }\n    lower_case || upper_case", "    let mut lower_case = true;\n\
    \    let mut upper_case = true;\n    for key in dict.keys() {\n        if key.chars().next().unwrap().is_uppercase()\
    \ {\n            lower_case = false;\n        } else {\n            upper_case\
    \ = false;\n        }\n    }\n    lower_case || upper_case", "    let mut is_lower\
    \ = true;\n    let mut is_upper = true;\n    for key in dict.keys() {\n      \
    \  if key.chars().next().unwrap().is_lowercase() {\n            is_upper = false;\n\
    \        } else if key.chars().next().unwrap().is_uppercase() {\n            is_lower\
    \ = false;\n        } else {\n            return false;\n        }\n    }\n  \
    \  is_lower || is_upper", "    let mut lower_case = true;\n    let mut upper_case\
    \ = true;\n    for key in dict.keys() {\n        if key.chars().next().unwrap().is_lowercase()\
    \ {\n            upper_case = false;\n        } else if key.chars().next().unwrap().is_uppercase()\
    \ {\n            lower_case = false;\n        } else {\n            return false;\n\
    \        }\n    }\n    lower_case || upper_case", "    let mut all_lower = true;\n\
    \    let mut all_upper = true;\n    for (key, _) in dict {\n        if key.chars().any(|c|\
    \ c.is_uppercase()) {\n            all_lower = false;\n        }\n        if key.chars().any(|c|\
    \ c.is_lowercase()) {\n            all_upper = false;\n        }\n    }\n    all_lower\
    \ || all_upper"]
stop_tokens:
- "\n}"

name: HumanEval_114_minSubArraySum
language: rs
prompt: "/// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n/// of nums.\n/// Example\n/// >>> minSubArraySum(vec![2, 3, 4, 1,\
  \ 2, 4])\n/// 1\n/// >>> minSubArraySum(vec![-1, -2, -3])\n/// -6\nfn minSubArraySum(nums:\
  \ Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = minSubArraySum;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for\
    \ i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum {\n\
    \            min_sum = sum;\n        }\n        if sum > 0 {\n            sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    let\
    \ mut sum = 0;\n    for num in nums {\n        sum += num;\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n       \
    \ sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0 {\n   \
    \         sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n\
    \    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::max_value();\n    let mut sum = 0;\n    for i in 0..nums.len() {\n\
    \        sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut sum = 0;\n \
    \   for i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n   \
    \ let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n  \
    \      if sum < min_sum {\n            min_sum = sum;\n        }\n        if sum\
    \ > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n   \
    \     sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in\
    \ nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n       \
    \ sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0 {\n   \
    \         sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = isize::max_value();\n    let mut\
    \ sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut curr_sum = nums[0];\n\
    \    for i in 1..nums.len() {\n        curr_sum = nums[i].min(curr_sum + nums[i]);\n\
    \        min_sum = min_sum.min(curr_sum);\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut curr_sum = 0;\n    for num in nums {\n     \
    \   curr_sum += num;\n        min_sum = std::cmp::min(min_sum, curr_sum);\n  \
    \      if curr_sum > 0 {\n            curr_sum = 0;\n        }\n    }\n    min_sum",
  "    if nums.is_empty() {\n        return 0;\n    }\n    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut\
    \ sum = 0;\n    for num in nums {\n        sum += num;\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in\
    \ nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum\
    \ < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n \
    \           sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n   \
    \ let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut sum = 0;\n \
    \   for num in nums {\n        sum += num;\n        if sum < min_sum {\n     \
    \       min_sum = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut sum = 0;\n\
    \    for num in nums {\n        sum += num;\n        if sum < min_sum {\n    \
    \        min_sum = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum < 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = isize::max_value();\n    let mut curr_sum = 0;\n    for num\
    \ in nums {\n        curr_sum += num;\n        min_sum = min_sum.min(curr_sum);\n\
    \        curr_sum = curr_sum.max(0);\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n       \
    \ sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0 {\n   \
    \         sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum\
    \ < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n \
    \           sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        if\
    \ sum < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n\
    \            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum =\
    \ std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum +=\
    \ num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n\
    \            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum =\
    \ nums[0];\n    let mut curr_sum = 0;\n    for num in nums {\n        curr_sum\
    \ += num;\n        if curr_sum < min_sum {\n            min_sum = curr_sum;\n\
    \        }\n        if curr_sum > 0 {\n            curr_sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n \
    \       sum += num;\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in\
    \ 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum {\n     \
    \       min_sum = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut\
    \ sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n        if\
    \ sum < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n\
    \            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum =\
    \ std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n     \
    \   sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum\
    \ < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n \
    \           sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min = std::isize::MAX;\n    let\
    \ mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n      \
    \  if sum < min {\n            min = sum;\n        }\n        if sum > 0 {\n \
    \           sum = 0;\n        }\n    }\n    min", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n \
    \       sum += num;\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        if\
    \ sum < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n\
    \            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum =\
    \ nums[0];\n    let mut sum = 0;\n    for num in nums {\n        sum += num;\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums[0];\n    let mut sum = 0;\n    for num in nums {\n        sum += num;\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums[0];\n    let mut sum = 0;\n    for num in nums {\n        sum += num;\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        if sum < min_sum {\n            min_sum = sum;\n        }\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in\
    \ nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n       \
    \ sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0 {\n   \
    \         sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut curr_sum = 0;\n    for i in 0..nums.len() {\n        curr_sum +=\
    \ nums[i];\n        if curr_sum < min_sum {\n            min_sum = curr_sum;\n\
    \        }\n        if curr_sum > 0 {\n            curr_sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut current_sum\
    \ = 0;\n    for num in nums {\n        current_sum += num;\n        if current_sum\
    \ < min_sum {\n            min_sum = current_sum;\n        }\n        if current_sum\
    \ > 0 {\n            current_sum = 0;\n        }\n    }\n    min_sum", "    let\
    \ mut min_sum = isize::max_value();\n    let mut curr_sum = 0;\n    for num in\
    \ nums {\n        curr_sum += num;\n        min_sum = min_sum.min(curr_sum);\n\
    \        curr_sum = curr_sum.max(0);\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n   \
    \     sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in\
    \ nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = std::isize::MAX;\n    let mut curr_sum = 0;\n    for num\
    \ in nums {\n        curr_sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ curr_sum);\n        if curr_sum > 0 {\n            curr_sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut curr_sum\
    \ = 0;\n    for num in nums {\n        curr_sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ curr_sum);\n        if curr_sum > 0 {\n            curr_sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum\
    \ < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n \
    \           sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for n in nums\
    \ {\n        sum += n;\n        min_sum = min_sum.min(sum);\n        if sum >\
    \ 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n   \
    \     sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut sum = 0;\n \
    \   for i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n   \
    \ let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    if nums.is_empty() {\n        return 0;\n    }\n  \
    \  let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum\
    \ < 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum\
    \ += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n      \
    \  }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n \
    \       sum += num;\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n   \
    \     sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n \
    \       sum += num;\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum\
    \ > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum\
    \ += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n      \
    \  }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums[0];\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut sum = 0;\n \
    \   for n in nums {\n        sum += n;\n        if sum < min_sum {\n         \
    \   min_sum = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n  \
    \      }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut curr_sum\
    \ = nums[0];\n    for i in 1..nums.len() {\n        curr_sum = curr_sum.min(0)\
    \ + nums[i];\n        min_sum = min_sum.min(curr_sum);\n    }\n    min_sum", " \
    \   let mut min_sum = isize::max_value();\n    let mut curr_sum = 0;\n    for\
    \ num in nums {\n        curr_sum += num;\n        min_sum = min_sum.min(curr_sum);\n\
    \        curr_sum = curr_sum.max(0);\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n       \
    \ sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0 {\n   \
    \         sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n   \
    \ let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = std::cmp::min(min_sum, sum);\n        if sum > 0 {\n            sum = 0;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    let mut\
    \ sum = nums[0];\n    for i in 1..nums.len() {\n        sum = std::cmp::min(nums[i],\
    \ sum + nums[i]);\n        min_sum = std::cmp::min(min_sum, sum);\n    }\n   \
    \ min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n\
    \    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = std::isize::MAX;\n    let mut current_sum = 0;\n    for num\
    \ in nums {\n        current_sum += num;\n        if current_sum < min_sum {\n\
    \            min_sum = current_sum;\n        }\n        if current_sum > 0 {\n\
    \            current_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n   \
    \     sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for i in 0..nums.len() {\n        sum += nums[i];\n        if sum < min_sum\
    \ {\n            min_sum = sum;\n        }\n        if sum > 0 {\n           \
    \ sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = isize::max_value();\n\
    \    let mut sum = 0;\n    for num in nums {\n        sum += num;\n        min_sum\
    \ = min_sum.min(sum);\n        if sum > 0 {\n            sum = 0;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n        if sum\
    \ < min_sum {\n            min_sum = sum;\n        }\n        if sum > 0 {\n \
    \           sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n\
    \    let mut sum = 0;\n    for i in 0..nums.len() {\n        sum += nums[i];\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums[0];\n    let mut sum = 0;\n    for num in nums {\n        sum += num;\n\
    \        if sum < min_sum {\n            min_sum = sum;\n        }\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums {\n  \
    \      sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in nums {\n\
    \        sum += num;\n        min_sum = min_sum.min(sum);\n        if sum > 0\
    \ {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len() {\n   \
    \     sum += nums[i];\n        if sum < min_sum {\n            min_sum = sum;\n\
    \        }\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n  \
    \  for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for num in nums\
    \ {\n        sum += num;\n        min_sum = std::cmp::min(min_sum, sum);\n   \
    \     if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "  \
    \  let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in\
    \ nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums[0];\n    let mut sum = 0;\n    for num in nums {\n        sum\
    \ += num;\n        if sum < min_sum {\n            min_sum = sum;\n        }\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = std::isize::MAX;\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = std::cmp::min(min_sum,\
    \ sum);\n        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = isize::max_value();\n    let mut sum = 0;\n    for num in\
    \ nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n        if\
    \ sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = std::isize::MAX;\n    let mut sum = 0;\n    for i in 0..nums.len()\
    \ {\n        sum += nums[i];\n        if sum < min_sum {\n            min_sum\
    \ = sum;\n        }\n        if sum > 0 {\n            sum = 0;\n        }\n \
    \   }\n    min_sum", "    let mut min_sum = isize::max_value();\n    let mut sum\
    \ = 0;\n    for num in nums {\n        sum += num;\n        min_sum = min_sum.min(sum);\n\
    \        if sum > 0 {\n            sum = 0;\n        }\n    }\n    min_sum"]
stop_tokens:
- "\n}"

name: HumanEval_121_solution
language: rs
prompt: "/// Given a non-empty list of integers, return the sum of all of the odd\
  \ elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5, 8,\
  \ 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
  \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut sum = 0;\n    for (i, &x) in lst.iter().enumerate() {\n\
    \        if i % 2 == 0 && x % 2 != 0 {\n            sum += x;\n        }\n   \
    \ }\n    sum", '    lst.iter().enumerate().filter(|&(i, _)| i % 2 == 0).filter(|&(_,
    x)| x % 2 != 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).filter(|(_, x)| x % 2 != 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).filter(|(_, n)| n % 2 != 0).map(|(_, n)| n).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).filter(|(_, x)| x % 2 != 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).filter(|(_, x)| x % 2 != 0).map(|(_, x)| x).sum()', "    let mut\
    \ sum = 0;\n    for (i, x) in lst.iter().enumerate() {\n        if i % 2 == 0\
    \ && x % 2 != 0 {\n            sum += x;\n        }\n    }\n    sum", "    let\
    \ mut sum = 0;\n    for (i, n) in lst.iter().enumerate() {\n        if i % 2 ==\
    \ 0 && n % 2 != 0 {\n            sum += n;\n        }\n    }\n    sum", '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|&(i,
    _)| i % 2 == 0).filter(|&(_, x)| x % 2 != 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).filter(|(_, x)| x % 2 != 0).map(|(_, x)| x).sum()', '    lst.iter().enumerate().filter(|(i,
    _)| i % 2 == 0).map(|(_, x)| x).sum()', "    let mut sum = 0;\n    for (i, x)\
    \ in lst.iter().enumerate() {\n        if i % 2 == 0 && x % 2 != 0 {\n       \
    \     sum += x;\n        }\n    }\n    sum"]
stop_tokens:
- "\n}"

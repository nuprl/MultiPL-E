language: rs
name: HumanEval_109_move_one_ball
results:
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    // TODO\n    true\n}\n\nfn main()\
    \ {\n    let candidate = move_one_ball;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptzrh5bxd.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptzrh5bxd.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptzrh5bxd.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptzrh5bxd.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptzrh5bxd.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptzrh5bxd.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptzrh5bxd.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptzrh5bxd.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptzrh5bxd.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptzrh5bxd.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut max = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < max {\n            return false;\n        }\n        max\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd8fmsxwb.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd8fmsxwb.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd8fmsxwb.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd8fmsxwb.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd8fmsxwb.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd8fmsxwb.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd8fmsxwb.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd8fmsxwb.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd8fmsxwb.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd8fmsxwb.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut arr = arr;\n    let mut count = 0;\n    let\
    \ mut max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] < max {\n\
    \            count += 1;\n        }\n        max = max.max(arr[i]);\n    }\n \
    \   count == 1\n}\n\nfn main() {\n    let candidate = move_one_ball;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_2cfqbml.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_2cfqbml.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_2cfqbml.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_2cfqbml.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_2cfqbml.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_2cfqbml.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_2cfqbml.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_2cfqbml.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_2cfqbml.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_2cfqbml.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    let mut arr = arr;\n    let mut\
    \ count = 0;\n    let mut i = 0;\n    while i < arr.len() - 1 {\n        if arr[i]\
    \ > arr[i + 1] {\n            count += 1;\n            if count > 1 {\n      \
    \          return false;\n            }\n            let mut j = i + 1;\n    \
    \        while j < arr.len() && arr[j] < arr[j - 1] {\n                j += 1;\n\
    \            }\n            i = j - 1;\n        }\n        i += 1;\n    }\n  \
    \  true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvcnyaxmi.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvcnyaxmi.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvcnyaxmi.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvcnyaxmi.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvcnyaxmi.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvcnyaxmi.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvcnyaxmi.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvcnyaxmi.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvcnyaxmi.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvcnyaxmi.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    let mut arr = arr;\n    let mut\
    \ i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut n = arr.len();\n\
    \    let mut min = arr[0];\n    let mut max = arr[0];\n    let mut flag = true;\n\
    \    while k < n {\n        if arr[k] < min {\n            min = arr[k];\n   \
    \         i = k;\n        }\n        if arr[k] > max {\n            max = arr[k];\n\
    \            j = k;\n        }\n        k += 1;\n    }\n    if i == 0 && j ==\
    \ n - 1 {\n        flag = true;\n    } else if i == 0 || j == n - 1 {\n      \
    \  flag = false;\n    } else {\n        flag = false;\n    }\n    flag\n}\n\n\
    fn main() {\n    let candidate = move_one_ball;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdijynlq5.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdijynlq5.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdijynlq5.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdijynlq5.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdijynlq5.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdijynlq5.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdijynlq5.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdijynlq5.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdijynlq5.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdijynlq5.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() < 2 {\n        return\
    \ true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n     \
    \   if arr[i] < min {\n            return false;\n        }\n        min = arr[i];\n\
    \    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3sokn4q0.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3sokn4q0.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3sokn4q0.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3sokn4q0.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3sokn4q0.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3sokn4q0.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3sokn4q0.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3sokn4q0.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3sokn4q0.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3sokn4q0.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    // TODO\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = move_one_ball;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfr2kqdwo.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfr2kqdwo.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfr2kqdwo.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfr2kqdwo.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfr2kqdwo.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfr2kqdwo.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfr2kqdwo.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfr2kqdwo.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfr2kqdwo.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfr2kqdwo.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    let mut arr = arr;\n    let mut\
    \ i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n    let\
    \ mut m = 4;\n    let mut n = 5;\n    let mut o = 6;\n    let mut p = 7;\n   \
    \ let mut q = 8;\n    let mut r = 9;\n    let mut s = 10;\n    let mut t = 11;\n\
    \    let mut u = 12;\n    let mut v = 13;\n    let mut w = 14;\n    let mut x\
    \ = 15;\n    let mut y = 16;\n    let mut z = 17;\n    let mut aa = 18;\n    let\
    \ mut bb = 19;\n    let mut cc = 20;\n    let mut dd = 21;\n    let mut ee = 22;\n\
    \    let mut ff = 23;\n    let mut gg = 24;\n    let mut hh = 25;\n    let mut\
    \ ii = 26;\n    let mut jj = 27;\n    let mut kk = 28;\n    let mut ll = 29;\n\
    \    let mut mm = 30;\n    let mut nn = 31;\n    let mut oo = 32;\n    let mut\
    \ pp = 33;\n    let mut qq = 34;\n    let mut rr = 35;\n    let mut ss = 36;\n\
    \    let mut tt = 37;\n    let mut uu = 38;\n    let mut vv = 39;\n    let mut\
    \ ww = 40;\n    let mut xx = 41;\n    let mut yy = 42;\n    let mut zz = 43;\n\
    \    let mut aaa = 44;\n    let mut bbb = 45;\n    let mut ccc = 46;\n    let\
    \ mut ddd = 47;\n    let mut eee = 48;\n    let mut fff = 49;\n    let mut ggg\
    \ = 50;\n    let mut hhh = 51;\n    let mut iii = 52;\n    let mut jjj = 53;\n\
    \    let mut kkk = 54;\n    let mut lll = 55;\n    let mut mmm = 56;\n    let\
    \ mut nnn = 57;\n    let mut ooo = 58;\n\n}\n\nfn main() {\n    let candidate\
    \ = move_one_ball;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmhmqeix8.rs:88:17\n\
    \   |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmhmqeix8.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmhmqeix8.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmhmqeix8.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmhmqeix8.rs:90:17\n   |\n90 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmhmqeix8.rs:90:25\n   |\n90 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmhmqeix8.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmhmqeix8.rs:91:25\n   |\n91 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmhmqeix8.rs:92:17\n  \
    \ |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmhmqeix8.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpmhmqeix8.rs:22:38\n   |\n22 | fn move_one_ball(arr: Vec<isize>)\
    \ -> bool {\n   |    -------------                     ^^^^ expected `bool`, found\
    \ `()`\n   |    |\n   |  "
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut arr = arr;\n    let mut i = 0;\n    let mut\
    \ j = arr.len() - 1;\n    while i < j {\n        if arr[i] > arr[j] {\n      \
    \      return false;\n        }\n        i += 1;\n        j -= 1;\n    }\n   \
    \ true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprl0setx1.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprl0setx1.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprl0setx1.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprl0setx1.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprl0setx1.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprl0setx1.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprl0setx1.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprl0setx1.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprl0setx1.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprl0setx1.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    let mut arr = arr;\n    let mut\
    \ i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n    let\
    \ mut m = 4;\n    let mut n = 5;\n    let mut o = 6;\n    let mut p = 7;\n   \
    \ let mut q = 8;\n    let mut r = 9;\n    let mut s = 10;\n    let mut t = 11;\n\
    \    let mut u = 12;\n    let mut v = 13;\n    let mut w = 14;\n    let mut x\
    \ = 15;\n    let mut y = 16;\n    let mut z = 17;\n    let mut aa = 18;\n    let\
    \ mut bb = 19;\n    let mut cc = 20;\n    let mut dd = 21;\n    let mut ee = 22;\n\
    \    let mut ff = 23;\n    let mut gg = 24;\n    let mut hh = 25;\n    let mut\
    \ ii = 26;\n    let mut jj = 27;\n    let mut kk = 28;\n    let mut ll = 29;\n\
    \    let mut mm = 30;\n    let mut nn = 31;\n    let mut oo = 32;\n    let mut\
    \ pp = 33;\n    let mut qq = 34;\n    let mut rr = 35;\n    let mut ss = 36;\n\
    \    let mut tt = 37;\n    let mut uu = 38;\n    let mut vv = 39;\n    let mut\
    \ ww = 40;\n    let mut xx = 41;\n    let mut yy = 42;\n    let mut zz = 43;\n\
    \    let mut aaa = 44;\n    let mut bbb = 45;\n    let mut ccc = 46;\n    let\
    \ mut ddd = 47;\n    let mut eee = 48;\n    let mut fff = 49;\n    let mut ggg\
    \ = 50;\n    let mut hhh = 51;\n    let mut iii = 52;\n    let mut jjj = 53;\n\
    \    let mut kkk = 54;\n    let mut lll = 55;\n    let mut mmm = 56;\n    let\
    \ mut nnn = 57;\n    let mut ooo = 58;\n\n}\n\nfn main() {\n    let candidate\
    \ = move_one_ball;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmhmqeix8.rs:88:17\n\
    \   |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmhmqeix8.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmhmqeix8.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmhmqeix8.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmhmqeix8.rs:90:17\n   |\n90 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmhmqeix8.rs:90:25\n   |\n90 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmhmqeix8.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmhmqeix8.rs:91:25\n   |\n91 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmhmqeix8.rs:92:17\n  \
    \ |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmhmqeix8.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpmhmqeix8.rs:22:38\n   |\n22 | fn move_one_ball(arr: Vec<isize>)\
    \ -> bool {\n   |    -------------                     ^^^^ expected `bool`, found\
    \ `()`\n   |    |\n   |  "
  stdout: ''
  timestamp: 1659748175
- exit_code: 1
  program: "/// We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
    /// numbers in the array will be randomly ordered. Your task is to determine if\n\
    /// it is possible to get an array sorted in non-decreasing order by performing\
    \ \n/// the following operation on the given array:\n/// You are allowed to perform\
    \ right shift operation any number of times.\n/// One right shift operation means\
    \ shifting all elements of the array by one\n/// position in the right direction.\
    \ The last element of the array will be moved to\n/// the starting position in\
    \ the array i.e. 0th index. \n/// If it is possible to obtain the sorted array\
    \ by performing the above operation\n/// then return True else return False.\n\
    /// If the given array is empty then return True.\n/// Note: The given list is\
    \ guaranteed to have unique elements.\n/// For Example:\n/// >>> move_one_ball(vec![3,\
    \ 4, 5, 1, 2])\n/// true\n/// Explanation: By performin 2 right shift operations,\
    \ non-decreasing order can\n/// be achieved for the given array.\n/// >>> move_one_ball(vec![3,\
    \ 5, 4, 1, 2])\n/// false\n/// Explanation:It is not possible to get non-decreasing\
    \ order for the given\n/// array by performing any number of right shift operations.\n\
    fn move_one_ball(arr: Vec<isize>) -> bool {\n    if arr.len() == 0 {\n       \
    \ return true;\n    }\n    let mut min = arr[0];\n    for i in 1..arr.len() {\n\
    \        if arr[i] < min {\n            return false;\n        }\n        min\
    \ = arr[i];\n    }\n    true\n}\n\nfn main() {\n    let candidate = move_one_ball;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zndc_m9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zndc_m9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zndc_m9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zndc_m9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659748175

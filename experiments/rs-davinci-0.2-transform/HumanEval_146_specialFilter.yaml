name: HumanEval_146_specialFilter
language: rs
prompt: "/// Write a function that takes an array of numbers as input and returns\
  \ \n/// the number of elements in the array that are greater than 10 and both \n\
  /// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
  /// >>> specialFilter(vec![15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(vec![33,\
  \ -2, -3, 45, 21, 109])\n/// 2\nfn specialFilter(nums: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = specialFilter;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut count = 0;\n    for i in nums {\n        if i > 10 && i.abs()\
    \ % 10 % 2 != 0 && i / 10 % 10 % 2 != 0 {\n            count += 1;\n        }\n\
    \    }\n    count", "    let mut count = 0;\n    for num in nums {\n        if\
    \ num > 10 && num.abs() % 10 % 2 != 0 && num / 10 % 10 % 2 != 0 {\n          \
    \  count += 1;\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num\
    \ % 10 % 2 != 0 {\n            count += 1;\n        }\n    }\n    count", "  \
    \  let mut count = 0;\n    for num in nums {\n        if num > 10 && num % 2 !=\
    \ 0 && (num / 10) % 2 != 0 && num % 10 != 0 {\n            count += 1;\n     \
    \   }\n    }\n    count", "    let mut count = 0;\n    for num in nums {\n   \
    \     if num > 10 && num.abs() % 10 % 2 != 0 && num / 10 % 10 % 2 != 0 {\n   \
    \         count += 1;\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    for num in nums {\n        if num > 10 {\n            let mut num_copy =\
    \ num;\n            let mut first_digit = num_copy % 10;\n            num_copy\
    \ /= 10;\n            let mut last_digit = num_copy % 10;\n            if first_digit\
    \ % 2 != 0 && last_digit % 2 != 0 {\n                count += 1;\n           \
    \ }\n        }\n    }\n    count", "    let mut count = 0;\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1;\n        }\n    }\n    count", "    let mut count = 0;\n    for num in\
    \ nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num % 10\
    \ % 2 != 0 {\n            count += 1;\n        }\n    }\n    count", "    let\
    \ mut count = 0;\n    for num in nums {\n        if num > 10 && num.abs() % 10\
    \ % 2 != 0 && num / 10 % 10 % 2 != 0 {\n            count += 1;\n        }\n \
    \   }\n    count", "    let mut count = 0;\n    for num in nums {\n        if\
    \ num > 10 && num.abs() % 10 % 2 != 0 && num.abs() / 10 % 2 != 0 {\n         \
    \   count += 1;\n        }\n    }\n    count", "    let mut count = 0;\n    for\
    \ num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num\
    \ % 10 % 2 != 0 {\n            count += 1;\n        }\n    }\n    count", "  \
    \  let mut count = 0;\n    for num in nums {\n        if num > 10 && num % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1;\n        }\n    }\n    count",
  "    let mut count = 0;\n    for num in nums {\n        if num > 10 && num.abs()\
    \ % 10 % 2 != 0 && num.abs() / 10 % 2 != 0 {\n            count += 1;\n      \
    \  }\n    }\n    count", "    let mut count = 0;\n    for i in nums {\n      \
    \  if i > 10 && i % 2 != 0 && i % 10 != 0 {\n            count += 1;\n       \
    \ }\n    }\n    count", "    let mut count = 0;\n    for num in nums {\n     \
    \   if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count += 1;\n\
    \        }\n    }\n    count", "    let mut count = 0;\n    for num in nums {\n\
    \        if num > 10 && num % 2 != 0 && num > 10 {\n            let mut num =\
    \ num;\n            let mut first = num % 10;\n            let mut last = 0;\n\
    \            while num > 0 {\n                last = num % 10;\n             \
    \   num /= 10;\n            }\n            if first % 2 != 0 && last % 2 != 0\
    \ {\n                count += 1;\n            }\n        }\n    }\n    count",
  "    let mut count = 0;\n    for num in nums {\n        if num > 10 && num % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1;\n        }\n    }\n    count",
  "    let mut count = 0;\n    for num in nums {\n        let mut num = num;\n   \
    \     if num < 0 {\n            num = -num;\n        }\n        if num > 10 {\n\
    \            let first_digit = num % 10;\n            let last_digit = num / 10;\n\
    \            if first_digit % 2 == 1 && last_digit % 2 == 1 {\n              \
    \  count += 1;\n            }\n        }\n    }\n    count", "    let mut count\
    \ = 0;\n    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10\
    \ % 2 != 0 && num % 10 % 2 != 0 {\n            count += 1;\n        }\n    }\n\
    \    count", "    let mut count = 0;\n    for num in nums {\n        if num >\
    \ 10 && is_odd(num) && is_odd(num / 10) {\n            count += 1;\n        }\n\
    \    }\n    count"]
stop_tokens:
- "\n}"

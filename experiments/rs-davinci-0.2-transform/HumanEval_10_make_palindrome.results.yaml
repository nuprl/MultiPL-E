language: rs
name: HumanEval_10_make_palindrome
results:
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        if is_palindrome(&string[i..]) {\n  \
    \          longest_palindrome_suffix = string[i..].to_string();\n            break;\n\
    \        }\n    }\n    let prefix = string[..string.len() - longest_palindrome_suffix.len()].chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpxnuwrtbr.rs:15:12\n   |\n15 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxnuwrtbr.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxnuwrtbr.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxnuwrtbr.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxnuwrtbr.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = find_longest_palindrome_suffix(&string);\n\
    \    let mut prefix = string.split_off(string.len() - palindrome_suffix.len());\n\
    \    prefix.reverse();\n    string.push_str(&prefix);\n    string\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `find_longest_palindrome_suffix` in\
    \ this scope\n  --> /tmp/tmpmqyf885l.rs:13:33\n   |\n13 |     let mut palindrome_suffix\
    \ = find_longest_palindrome_suffix(&string);\n   |                           \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmqyf885l.rs:22:17\n  \
    \ |\n22 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmqyf885l.rs:22:25\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmqyf885l.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmqyf885l.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmqyf885l.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmqyf885l.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmqyf885l.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmqyf885l.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmqyf885l.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmqyf885l.rs:26:25\n   |\n26 |     assert_"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   for c in string.chars().rev() {\n        suffix.push(c);\n        if is_palindrome(&string,\
    \ &suffix) {\n            result.push_str(&suffix);\n            break;\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmptdmyvakl.rs:16:12\n   |\n16 |         if is_palindrome(&string, &suffix)\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptdmyvakl.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptdmyvakl.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptdmyvakl.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptdmyvakl.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptdmyvakl.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptdmyvakl.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\ne"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_suffix_len = 0;\n    let mut i = string.len();\n    while\
    \ i > 0 {\n        if is_palindrome(&string[..i]) {\n            palindrome_suffix\
    \ = string[i..].to_string();\n            palindrome_suffix_len = palindrome_suffix.len();\n\
    \            break;\n        }\n        i -= 1;\n    }\n    string.push_str(&palindrome_suffix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmps6_4r1po.rs:17:12\n   |\n17 |         if is_palindrome(&string[..i])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps6_4r1po.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps6_4r1po.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps6_4r1po.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps6_4r1po.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps6_4r1po.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps6_4r1po.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps6_4r1po.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps6_4r1po.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps6_4r1po.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps6_4r1po.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut suffix_len = 0;\n    let mut\
    \ prefix_len = 0;\n    let mut i = 0;\n    let mut j = string.len() - 1;\n   \
    \ while i < j {\n        if string.chars().nth(i) == string.chars().nth(j) {\n\
    \            suffix.push(string.chars().nth(i).unwrap());\n            suffix_len\
    \ += 1;\n            i += 1;\n            j -= 1;\n        } else {\n        \
    \    if suffix_len > prefix_len {\n                prefix_len = suffix_len;\n\
    \                prefix = suffix.clone();\n            }\n            suffix =\
    \ String::new();\n            suffix_len = 0;\n            i = 0;\n          \
    \  j -= 1;\n        }\n    }\n    if suffix_len > prefix_len {\n        prefix_len\
    \ = suffix_len;\n        prefix = suffix.clone();\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7kf2qk2a.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7kf2qk2a.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7kf2qk2a.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7kf2qk2a.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7kf2qk2a.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7kf2qk2a.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7kf2qk2a.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7kf2qk2a.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7kf2qk2a.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7kf2qk2a.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut postfix = String::new();\n    let mut is_palindrome = false;\n   \
    \ for (i, c) in string.chars().enumerate() {\n        if is_palindrome {\n   \
    \         prefix.push(c);\n        } else {\n            postfix.push(c);\n  \
    \      }\n        if postfix == prefix.chars().rev().collect::<String>() {\n \
    \           is_palindrome = true;\n        }\n        if i == string.len() - 1\
    \ {\n            result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsuphr5gr.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsuphr5gr.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsuphr5gr.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsuphr5gr.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsuphr5gr.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsuphr5gr.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsuphr5gr.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsuphr5gr.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsuphr5gr.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsuphr5gr.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut palindrome_suffix_len\
    \ = 0;\n    let mut palindrome_prefix_len = 0;\n    let mut palindrome_len = 0;\n\
    \    let mut palindrome_len_max = 0;\n    let mut palindrome_len_max_index = 0;\n\
    \    let mut palindrome_len_max_index_max = 0;\n    let mut palindrome_len_max_index_max_len\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max = 0;\n    let mut palindrome_len_max_index_max_len_max_index\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max = 0;\n    let\
    \ mut palindrome_len_max_index_max_len_max_index_max_len = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max_index\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max_index_max\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max_index_max_len\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max_index_max_len_max\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max_index_max_len_max_index\
    \ = 0;\n    let mut palindrome_len_max_index_max_len_max_index_max_len_max_index_max_len_max_index_max\
    \ = 0;\n    let mut palindrome_len_max_index_\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo89yezj7.rs:33:38\n   |\n\
    33 |     let mut palindrome_len_max_index_\n   |                             \
    \         ^ help: add `;` here\n34 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo89yezj7.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo89yezj7.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo89yezj7.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpo89yezj7.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo89yezj7.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo89yezj7.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo89yezj7.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo89yezj7.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo89yezj7.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo89yezj7.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\ner"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_length = 0;\n    for\
    \ i in 0..string.len() {\n        let (prefix_part, suffix_part) = string.split_at(i);\n\
    \        if is_palindrome(suffix_part) && suffix_part.len() > longest_palindrome_length\
    \ {\n            longest_palindrome_length = suffix_part.len();\n            prefix\
    \ = prefix_part.to_string();\n            suffix = suffix_part.to_string();\n\
    \        }\n    }\n    suffix.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    suffix\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmped9lu9ar.rs:18:12\n   |\n18 |         if is_palindrome(suffix_part)\
    \ && suffix_part.len() > longest_palindrome_length {\n   |            ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmped9lu9ar.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmped9lu9ar.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmped9lu9ar.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmped9lu9ar.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmped9lu9ar.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmped9lu9ar.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmped9lu9ar.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmped9lu9ar.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmped9lu9ar.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmped9lu9ar.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |             "
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ is_palindrome = false;\n    let mut i = string.len();\n    while !is_palindrome\
    \ {\n        suffix = string.chars().skip(i).collect();\n        prefix = string.chars().take(i).collect();\n\
    \        palindrome = suffix.clone() + &prefix.chars().rev().collect::<String>();\n\
    \        is_palindrome = is_palindrome(&palindrome);\n        i -= 1;\n    }\n\
    \    palindrome\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzx1fdpax.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzx1fdpax.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzx1fdpax.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzx1fdpax.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzx1fdpax.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzx1fdpax.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzx1fdpax.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzx1fdpax.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzx1fdpax.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzx1fdpax.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmpzx1fdpax.rs:22:25\n   |\n16 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n22 |         is_pa"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut longest_palindrome_suffix_length\
    \ = 0;\n    let mut longest_palindrome_suffix_index = 0;\n    let mut string_length\
    \ = string.len();\n    let mut i = 0;\n    while i < string_length {\n       \
    \ let mut j = i;\n        let mut k = string_length - 1;\n        while j < k\
    \ {\n            if string.chars().nth(j) != string.chars().nth(k) {\n       \
    \         break;\n            }\n            j += 1;\n            k -= 1;\n  \
    \      }\n        if j >= k && j - i + 1 > longest_palindrome_suffix_length {\n\
    \            longest_palindrome_suffix_length = j - i + 1;\n            longest_palindrome_suffix_index\
    \ = i;\n        }\n        i += 1;\n    }\n    if longest_palindrome_suffix_length\
    \ > 0 {\n        palindrome_suffix = string.chars().skip(longest_palindrome_suffix_index).take(longest_palindrome_suffix_length).collect();\n\
    \        palindrome_prefix = string.chars().take(longest_palindrome_suffix_index).collect();\n\
    \        palindrome_prefix = palindrome_prefix.chars().rev().collect();\n    \
    \    string = palindrome_prefix + &palindrome_suffix;\n    }\n    string\n}\n\n\
    fn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3nhkqsr2.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3nhkqsr2.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3nhkqsr2.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3nhkqsr2.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3nhkqsr2.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3nhkqsr2.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3nhkqsr2.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3nhkqsr2.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3nhkqsr2.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3nhkqsr2.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut reversed = string.clone();\n    reversed.reverse();\n\
    \    let mut longest_suffix = String::new();\n    for i in 0..string.len() {\n\
    \        if string.ends_with(&reversed[i..]) {\n            longest_suffix = reversed[i..].to_string();\n\
    \            break;\n        }\n    }\n    string.push_str(&longest_suffix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2my_d3ep.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2my_d3ep.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2my_d3ep.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2my_d3ep.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2my_d3ep.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2my_d3ep.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2my_d3ep.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2my_d3ep.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2my_d3ep.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2my_d3ep.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `reverse` found for struct `String` in the current scope\n  --> /tmp/tmp2my_d3ep.rs:14:14\n\
    \   |\n14 |     reversed.reverse();\n   |              ^^^^^^^ help: there is\
    \ an associated "
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_suffix_len = 0;\n    for i in 0..string.len() {\n    \
    \    let suffix = &string[i..];\n        if is_palindrome(suffix) {\n        \
    \    palindrome_suffix = suffix.to_string();\n            palindrome_suffix_len\
    \ = palindrome_suffix.len();\n            break;\n        }\n    }\n    let prefix\
    \ = &string[..string.len() - palindrome_suffix_len];\n    let reversed_prefix\
    \ = reverse(prefix);\n    result.push_str(&reversed_prefix);\n    result\n}\n\n\
    fn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpkj5u0m0j.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmpkj5u0m0j.rs:24:27\n   |\n\
    24 |     let reversed_prefix = reverse(prefix);\n   |                        \
    \   ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpkj5u0m0j.rs:31:17\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpkj5u0m0j.rs:31:25\n \
    \  |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkj5u0m0j.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkj5u0m0j.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkj5u0m0j.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkj5u0m0j.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkj5u0m0j.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkj5u0m0j.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkj5u0m0j.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut suffix_len = 0;\n    let mut prefix_len\
    \ = 0;\n    let mut i = 0;\n    let mut j = string.len() - 1;\n    while i < j\
    \ {\n        if string.chars().nth(i) == string.chars().nth(j) {\n           \
    \ suffix.push(string.chars().nth(i).unwrap());\n            suffix_len += 1;\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            if suffix_len\
    \ > 0 {\n                prefix.push_str(&suffix);\n                prefix_len\
    \ += suffix_len;\n                suffix.clear();\n                suffix_len\
    \ = 0;\n            } else {\n                prefix.push(string.chars().nth(i).unwrap());\n\
    \                prefix_len += 1;\n                i += 1;\n            }\n  \
    \      }\n    }\n    if suffix_len > 0 {\n        prefix.push_str(&suffix);\n\
    \        prefix_len += suffix_len;\n    }\n    prefix.push_str(&prefix[0..prefix_len].chars().rev().collect::<String>());\n\
    \    prefix\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7vcm52zc.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7vcm52zc.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7vcm52zc.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7vcm52zc.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7vcm52zc.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7vcm52zc.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7vcm52zc.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7vcm52zc.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7vcm52zc.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7vcm52zc.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ palindrome_length = 0;\n    let mut string_length = string.len();\n    let mut\
    \ string_chars = string.chars();\n    let mut string_chars_rev = string.chars().rev();\n\
    \n    // Find the longest postfix of supplied string that is a palindrome.\n \
    \   while let Some(c) = string_chars.next() {\n        if let Some(c_rev) = string_chars_rev.next()\
    \ {\n            if c == c_rev {\n                palindrome.push(c);\n      \
    \          palindrome_length += 1;\n            } else {\n                break;\n\
    \            }\n        }\n    }\n\n    // Append to the end of the string reverse\
    \ of a string prefix that comes before the palindromic suffix.\n    if palindrome_length\
    \ < string_length {\n        suffix = string.chars().skip(palindrome_length).collect();\n\
    \        prefix = string.chars().take(string_length - palindrome_length).collect();\n\
    \        string = format!(\"{}{}{}\", prefix, palindrome, suffix.chars().rev().collect::<String>());\n\
    \    }\n\n    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyf7hn4rt.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyf7hn4rt.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyf7hn4rt.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyf7hn4rt.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyf7hn4rt.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyf7hn4rt.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyf7hn4rt.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyf7hn4rt.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyf7hn4rt.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyf7hn4rt.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix_len = 0;\n    let mut\
    \ suffix_len = 0;\n    let mut suffix_start = 0;\n    let mut suffix_end = 0;\n\
    \    let mut prefix_start = 0;\n    let mut prefix_end = 0;\n    let mut is_palindrome\
    \ = false;\n    let mut is_palindrome_found = false;\n    let mut is_prefix_found\
    \ = false;\n    let mut is_suffix_found = false;\n    let mut is_suffix_palindrome\
    \ = false;\n    let mut is_prefix_palindrome = false;\n    let mut is_prefix_palindrome_found\
    \ = false;\n    let mut is_suffix_palindrome_found = false;\n    let mut is_prefix_palindrome_found_first\
    \ = false;\n    let mut is_suffix_palindrome_found_first = false;\n    let mut\
    \ is_prefix_palindrome_found_second = false;\n    let mut is_suffix_palindrome_found_second\
    \ = false;\n    let mut is_prefix_palindrome_found_third = false;\n    let mut\
    \ is_suffix_palindrome_found_third = false;\n    let mut is_prefix_palindrome_found_fourth\
    \ = false;\n    let mut is_suffix_palindrome_found_fourth = false;\n    let mut\
    \ is_prefix_palindrome_found_fifth = false;\n    let mut is_suffix_palindrome_found_fifth\
    \ = false;\n    let mut is_prefix_palindrome_found_sixth = false;\n    let mut\
    \ is_suffix_palindrome_found_sixth = false;\n    let mut is_prefix_palindrome_found_seventh\
    \ = false;\n    let mut is_suffix_palindrome_found_seventh = false;\n    let mut\
    \ is_prefix_palindrome_found_eighth = false;\n    let mut is_suffix_palindrome_found_eighth\
    \ = false;\n    let mut is_prefix_palindrome_found_ninth = false;\n    let mut\
    \ is_suffix\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptvnzt7_g.rs:44:22\n   |\n\
    44 |     let mut is_suffix\n   |                      ^ help: add `;` here\n45\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmptvnzt7_g.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptvnzt7_g.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptvnzt7_g.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptvnzt7_g.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptvnzt7_g.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptvnzt7_g.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptvnzt7_g.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptvnzt7_g.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptvnzt7_g.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptvnzt7_g.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  -"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    if i == j {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n    result\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp200556ug.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp200556ug.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp200556ug.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp200556ug.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp200556ug.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp200556ug.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp200556ug.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp200556ug.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp200556ug.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp200556ug.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    let\
    \ mut i = 0;\n    while i < string.len() {\n        let mut j = string.len() -\
    \ 1 - i;\n        if string.chars().nth(i) == string.chars().nth(j) {\n      \
    \      suffix.push(string.chars().nth(i).unwrap());\n            prefix.push(string.chars().nth(j).unwrap());\n\
    \            is_palindrome = true;\n        } else {\n            suffix.clear();\n\
    \            prefix.clear();\n            is_palindrome = false;\n        }\n\
    \        i += 1;\n    }\n    if is_palindrome {\n        result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdjmyc1va.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdjmyc1va.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdjmyc1va.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdjmyc1va.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdjmyc1va.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdjmyc1va.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdjmyc1va.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdjmyc1va.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdjmyc1va.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdjmyc1va.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in (0..string.len()).rev() {\n        if is_palindrome(&string[i..])\
    \ {\n            longest_palindrome_suffix = string[i..].to_string();\n      \
    \      break;\n        }\n    }\n    string.push_str(&string[..string.len() -\
    \ longest_palindrome_suffix.len()].chars().rev().collect::<String>());\n    string\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpggp5_j01.rs:15:12\n   |\n15 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpggp5_j01.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpggp5_j01.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpggp5_j01.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpggp5_j01.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpggp5_j01.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpggp5_j01.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpggp5_j01.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpggp5_j01.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpggp5_j01.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpggp5_j01.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut prefix = String::new();\n    let mut suffix = String::new();\n  \
    \  let mut longest_palindrome_length = 0;\n    let mut longest_palindrome_start\
    \ = 0;\n    let mut longest_palindrome_end = 0;\n    let string_length = string.len();\n\
    \    let string_chars: Vec<char> = string.chars().collect();\n    for i in 0..string_length\
    \ {\n        let mut j = 0;\n        while i - j >= 0 && i + j < string_length\
    \ && string_chars[i - j] == string_chars[i + j] {\n            j += 1;\n     \
    \   }\n        if j > longest_palindrome_length {\n            longest_palindrome_length\
    \ = j;\n            longest_palindrome_start = i - j + 1;\n            longest_palindrome_end\
    \ = i + j;\n        }\n    }\n    for i in 0..string_length {\n        let mut\
    \ j = 0;\n        while i - j >= 0 && i + j + 1 < string_length && string_chars[i\
    \ - j] == string_chars[i + j + 1] {\n            j += 1;\n        }\n        if\
    \ j > longest_palindrome_length {\n            longest_palindrome_length = j;\n\
    \            longest_palindrome_start = i - j + 1;\n            longest_palindrome_end\
    \ = i + j + 1;\n        }\n    }\n    for i in 0..longest_palindrome_start {\n\
    \        prefix.push(string_chars[i]);\n    }\n    for i in longest_palindrome_end..string_length\
    \ {\n        suffix.push(string_chars[i]);\n    }\n    prefix.push_str(&suffix);\n\
    \    prefix.push_str(&suffix.chars().rev().collect::<String>());\n    prefix\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpybho3xbe.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpybho3xbe.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpybho3xbe.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpybho3xbe.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpybho3xbe.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpybho3xbe.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpybho3xbe.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpybho3xbe.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpybho3xbe.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpybho3xbe.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut i = string.len();\n    while i > 0 {\n\
    \        if is_palindrome(&string) {\n            break;\n        }\n        suffix.push(string.pop().unwrap());\n\
    \        i -= 1;\n    }\n    prefix = suffix.chars().rev().collect();\n    string.push_str(&prefix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp521nl6ze.rs:17:12\n   |\n17 |         if is_palindrome(&string) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp521nl6ze.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp521nl6ze.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp521nl6ze.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp521nl6ze.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp521nl6ze.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp521nl6ze.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp521nl6ze.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp521nl6ze.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp521nl6ze.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp521nl6ze.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_idx\
    \ = 0;\n    let mut idx = 0;\n    let mut string_len = string.len();\n    while\
    \ idx < string_len {\n        let mut palindrome_suffix_len = 0;\n        let\
    \ mut palindrome_suffix_idx = idx;\n        while palindrome_suffix_idx < string_len\
    \ {\n            if string.chars().nth(idx) == string.chars().nth(string_len -\
    \ 1 - palindrome_suffix_idx) {\n                palindrome_suffix_len += 1;\n\
    \            } else {\n                break;\n            }\n            palindrome_suffix_idx\
    \ += 1;\n        }\n        if palindrome_suffix_len > longest_palindrome_suffix_len\
    \ {\n            longest_palindrome_suffix_len = palindrome_suffix_len;\n    \
    \        longest_palindrome_suffix_idx = idx;\n        }\n        idx += 1;\n\
    \    }\n    if longest_palindrome_suffix_len > 0 {\n        longest_palindrome_suffix\
    \ = string.chars().skip(longest_palindrome_suffix_idx).take(longest_palindrome_suffix_len).collect();\n\
    \        string.push_str(&longest_palindrome_suffix.chars().rev().collect::<String>());\n\
    \    }\n    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmper46cqp8.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmper46cqp8.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmper46cqp8.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmper46cqp8.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmper46cqp8.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmper46cqp8.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmper46cqp8.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmper46cqp8.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmper46cqp8.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmper46cqp8.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6udgrnn.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix_length =\
    \ 0;\n    let mut longest_palindrome_suffix_index = 0;\n    for i in 0..string.len()\
    \ {\n        let (is_palindrome, palindrome_length) = is_palindrome(&string[i..]);\n\
    \        if is_palindrome && palindrome_length > longest_palindrome_suffix_length\
    \ {\n            longest_palindrome_suffix_length = palindrome_length;\n     \
    \       longest_palindrome_suffix_index = i;\n        }\n    }\n    let prefix\
    \ = &string[..longest_palindrome_suffix_index];\n    let prefix_reversed = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpu1mzdmmw.rs:16:50\n   |\n16 |         let (is_palindrome, palindrome_length)\
    \ = is_palindrome(&string[i..]);\n   |                                       \
    \           ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:30:17\n   |\n30 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu1mzdmmw.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu1mzdmmw.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu1mzdmmw.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu1mzdmmw.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, "
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = string.clone();\n\
    \    let mut prefix = String::new();\n    while !is_palindrome(&suffix) {\n  \
    \      let (head, tail) = suffix.split_at(1);\n        prefix.push_str(head);\n\
    \        suffix = tail.to_string();\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmps3tsqlbn.rs:15:12\n   |\n15 |     while !is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps3tsqlbn.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps3tsqlbn.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps3tsqlbn.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps3tsqlbn.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps3tsqlbn.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps3tsqlbn.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps3tsqlbn.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps3tsqlbn.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps3tsqlbn.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps3tsqlbn.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ i = 0;\n    let mut j = string.len() - 1;\n    let mut k = 0;\n    let mut l\
    \ = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut\
    \ p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let\
    \ mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n   \
    \ let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n\
    \    let mut ab = 0;\n    let mut ac = 0;\n    let mut ad = 0;\n    let mut ae\
    \ = 0;\n    let mut af = 0;\n    let mut ag = 0;\n    let mut ah = 0;\n    let\
    \ mut ai = 0;\n    let mut aj = 0;\n    let mut ak = 0;\n    let mut al = 0;\n\
    \    let mut am = 0;\n    let mut an = 0;\n    let mut ao = 0;\n    let mut ap\
    \ = 0;\n    let mut aq = 0;\n    let mut ar = 0;\n    let mut as_ = 0;\n    let\
    \ mut at = 0;\n    let mut au = 0;\n    let mut av = 0;\n    let mut aw = 0;\n\
    \    let mut ax = 0;\n    let mut ay = 0;\n    let mut az = 0;\n    let mut ba\
    \ = 0;\n    let mut bb = 0;\n    let mut bc = 0;\n    let mut bd = 0;\n    let\
    \ mut be = 0;\n    let mut bf = 0;\n    let mut bg = 0;\n    let mut bh = 0;\n\
    \    let mut bi = 0;\n    let mut bj = 0;\n    let mut bk = 0;\n    let mut bl\
    \ = 0;\n    let mut b\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptri1so9v.rs:72:14\n   |\n\
    72 |     let mut b\n   |              ^ help: add `;` here\n73 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptri1so9v.rs:77:17\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptri1so9v.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptri1so9v.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptri1so9v.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptri1so9v.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptri1so9v.rs:79:25\n   |\n79 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptri1so9v.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptri1so9v.rs:80:25\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptri1so9v.rs:81:17\n  \
    \ |\n81 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptri1so9v.rs:81:25\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmptri1s"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        let prefix = &string[..string.len()\
    \ - i];\n        if is_palindrome(suffix) && suffix.len() > longest_palindrome_suffix_len\
    \ {\n            longest_palindrome_suffix = suffix.to_string();\n           \
    \ longest_palindrome_suffix_len = suffix.len();\n        }\n        if is_palindrome(prefix)\
    \ && prefix.len() > longest_palindrome_suffix_len {\n            longest_palindrome_suffix\
    \ = prefix.to_string();\n            longest_palindrome_suffix_len = prefix.len();\n\
    \        }\n    }\n    let prefix = &string[..string.len() - longest_palindrome_suffix_len];\n\
    \    string.push_str(&prefix.chars().rev().collect::<String>());\n    string\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpwvv6cpbd.rs:18:12\n   |\n18 |         if is_palindrome(suffix) && suffix.len()\
    \ > longest_palindrome_suffix_len {\n   |            ^^^^^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `is_palindrome` in this scope\n\
    \  --> /tmp/tmpwvv6cpbd.rs:22:12\n   |\n22 |         if is_palindrome(prefix)\
    \ && prefix.len() > longest_palindrome_suffix_len {\n   |            ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwvv6cpbd.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwvv6cpbd.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwvv6cpbd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwvv6cpbd.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwvv6cpbd.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwvv6cpbd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwvv6cpbd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwvv6cpbd.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwvv6cpbd.rs:38:17\n "
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = find_longest_palindrome_suffix(&string);\n\
    \    let mut prefix = string.split_off(string.len() - palindrome_suffix.len());\n\
    \    prefix.reverse();\n    string.push_str(&prefix);\n    string\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `find_longest_palindrome_suffix` in\
    \ this scope\n  --> /tmp/tmpmqyf885l.rs:13:33\n   |\n13 |     let mut palindrome_suffix\
    \ = find_longest_palindrome_suffix(&string);\n   |                           \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmqyf885l.rs:22:17\n  \
    \ |\n22 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmqyf885l.rs:22:25\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmqyf885l.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmqyf885l.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmqyf885l.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmqyf885l.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmqyf885l.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmqyf885l.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmqyf885l.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmqyf885l.rs:26:25\n   |\n26 |     assert_"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_suffix_len = 0;\n    for i in (0..string.len()).rev()\
    \ {\n        let (prefix, suffix) = string.split_at(i);\n        if is_palindrome(suffix)\
    \ {\n            palindrome_suffix = suffix.to_string();\n            palindrome_suffix_len\
    \ = palindrome_suffix.len();\n            break;\n        }\n    }\n    let mut\
    \ prefix = String::new();\n    for i in 0..(string.len() - palindrome_suffix_len)\
    \ {\n        prefix.push(string.chars().nth(i).unwrap());\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp4o7de6x3.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4o7de6x3.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4o7de6x3.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4o7de6x3.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4o7de6x3.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4o7de6x3.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4o7de6x3.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4o7de6x3.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4o7de6x3.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4o7de6x3.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4o7de6x3.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut current_palindrome_suffix\
    \ = String::new();\n    let mut current_palindrome_suffix_length = 0;\n    let\
    \ mut current_palindrome_suffix_start = 0;\n    let mut current_palindrome_suffix_end\
    \ = 0;\n    let mut current_palindrome_suffix_mid = 0;\n    let mut current_palindrome_suffix_mid_length\
    \ = 0;\n    let mut current_palindrome_suffix_mid_start = 0;\n    let mut current_palindrome_suffix_mid_end\
    \ = 0;\n    let mut current_palindrome_suffix_mid_is_even = false;\n    let mut\
    \ current_palindrome_suffix_mid_is_odd = false;\n    let mut current_palindrome_suffix_mid_is_even_start\
    \ = 0;\n    let mut current_palindrome_suffix_mid_is_even_end = 0;\n    let mut\
    \ current_palindrome_suffix_mid_is_odd_start = 0;\n    let mut current_palindrome_suffix_mid_is_odd_end\
    \ = 0;\n    let mut current_palindrome_suffix_mid_is_even_length = 0;\n    let\
    \ mut current_palindrome_suffix_mid_is_odd_length = 0;\n    let mut current_palindrome_suffix_mid_is_even_is_palindrome\
    \ = false;\n    let mut current_palindrome_suffix_mid_is_odd_is_palindrome = false;\n\
    \    let mut current_palindrome_suffix_mid_is_even_is_palindrome_start = 0;\n\
    \    let mut current_palindrome_suffix_mid_is_odd_is_palindrome_start = 0;\n \
    \   let mut current_palindrome_suffix_mid_is_even_is_palindrome_end = 0;\n   \
    \ let mut current_pal\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpk3uns2ha.rs:36:24\n   |\n\
    36 |     let mut current_pal\n   |                        ^ help: add `;` here\n\
    37 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpk3uns2ha.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpk3uns2ha.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpk3uns2ha.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpk3uns2ha.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpk3uns2ha.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk3uns2ha.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk3uns2ha.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpk3uns2ha.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpk3uns2ha.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpk3uns2ha.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut max_palindrome_length = 0;\n\
    \    let mut max_palindrome_index = 0;\n    let mut i = 0;\n    let mut j = 0;\n\
    \    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n\
    \    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n\
    \    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n\
    \    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n\
    \    let mut aa = 0;\n    let mut ab = 0;\n    let mut ac = 0;\n    let mut ad\
    \ = 0;\n    let mut ae = 0;\n    let mut af = 0;\n    let mut ag = 0;\n    let\
    \ mut ah = 0;\n    let mut ai = 0;\n    let mut aj = 0;\n    let mut ak = 0;\n\
    \    let mut al = 0;\n    let mut am = 0;\n    let mut an = 0;\n    let mut ao\
    \ = 0;\n    let mut ap = 0;\n    let mut aq = 0;\n    let mut ar = 0;\n    let\
    \ mut as_ = 0;\n    let mut at = 0;\n    let mut au = 0;\n    let mut av = 0;\n\
    \    let mut aw = 0;\n    let mut ax = 0;\n    let mut ay = 0;\n    let mut az\
    \ = 0;\n    let mut ba = 0;\n    let mut bb = 0;\n    let mut bc = 0;\n    let\
    \ mut bd = 0;\n    let mut be = 0;\n    let mut bf = 0;\n    let mut bg = 0;\n\
    \    let mut bh = 0;\n    let mut bi = 0;\n    let mut bj = 0;\n    let mut bk\
    \ = 0;\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpf_y7jdfs.rs:76:17\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf_y7jdfs.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf_y7jdfs.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf_y7jdfs.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf_y7jdfs.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf_y7jdfs.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf_y7jdfs.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf_y7jdfs.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf_y7jdfs.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf_y7jdfs.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpf_y7jdfs.rs:11:39\n   |\n11 | fn make_palindrome(string:\
    \ String) -> String {\n   |    ---------------                    ^^^^^^ expected\
    \ struct `String`, found `()`\n "
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut palindrome_suffix_len\
    \ = 0;\n    let mut palindrome_prefix_len = 0;\n    let mut palindrome_len = 0;\n\
    \    let mut string_len = string.len();\n    let mut i = 0;\n    let mut j = string_len\
    \ - 1;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut\
    \ n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let\
    \ mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n   \
    \ let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc\
    \ = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let\
    \ mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n\
    \    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn\
    \ = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let\
    \ mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n\
    \    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy\
    \ = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let mut bbb = 0;\n    let\
    \ mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee = 0;\n    let mut\n}\n\n\
    fn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp6cnz4u_d.rs:69:1\n\
    \   |\n69 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp6cnz4u_d.rs:73:17\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp6cnz4u_d.rs:73:25\n \
    \  |\n73 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6cnz4u_d.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6cnz4u_d.rs:74:25\n   |\n74 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6cnz4u_d.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6cnz4u_d.rs:75:25\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6cnz4u_d.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6cnz4u_d.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6cnz4u_d.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6cnz4u_d.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: aborting due to 11 previous errors\n\nFor\
    \ more information about this error, try `rustc --expl"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut max_palindrome_length\
    \ = 0;\n    let mut max_palindrome_start = 0;\n    let mut max_palindrome_end\
    \ = 0;\n    let mut current_palindrome_length = 0;\n    let mut current_palindrome_start\
    \ = 0;\n    let mut current_palindrome_end = 0;\n    let mut i = 0;\n    let mut\
    \ j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let\
    \ mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n   \
    \ let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n\
    \    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut aa = 0;\n    let mut ab = 0;\n    let mut ac\
    \ = 0;\n    let mut ad = 0;\n    let mut ae = 0;\n    let mut af = 0;\n    let\
    \ mut ag = 0;\n    let mut ah = 0;\n    let mut ai = 0;\n    let mut aj = 0;\n\
    \    let mut ak = 0;\n    let mut al = 0;\n    let mut am = 0;\n    let mut an\
    \ = 0;\n    let mut ao = 0;\n    let mut ap = 0;\n    let mut aq = 0;\n    let\
    \ mut ar = 0;\n    let mut as_ = 0;\n    let mut at = 0;\n    let mut au = 0;\n\
    \    let mut av = 0;\n    let mut aw = 0;\n    let mut ax = 0;\n    let mut ay\
    \ = 0;\n    let mut az = 0;\n    let mut ba = 0;\n    let mut bb = 0;\n    let\
    \ mut bc = 0;\n    let mut bd =\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp8amxole1.rs:69:1\n\
    \   |\n69 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp8amxole1.rs:73:17\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp8amxole1.rs:73:25\n \
    \  |\n73 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8amxole1.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8amxole1.rs:74:25\n   |\n74 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8amxole1.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8amxole1.rs:75:25\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8amxole1.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8amxole1.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8amxole1.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8amxole1.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: aborting due to 11 previous errors\n\nFor\
    \ more information about this error, try `rustc --expl"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    let\
    \ mut i = 0;\n    while i < string.len() {\n        let c = string.chars().nth(i).unwrap();\n\
    \        suffix.push(c);\n        if is_palindrome {\n            prefix.insert(0,\
    \ c);\n        }\n        if suffix == prefix {\n            is_palindrome = true;\n\
    \        }\n        i += 1;\n    }\n    result.push_str(&prefix);\n    result\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjiykairq.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjiykairq.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjiykairq.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjiykairq.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjiykairq.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjiykairq.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjiykairq.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjiykairq.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjiykairq.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjiykairq.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    for (i, c) in string.chars().enumerate()\
    \ {\n        if is_palindrome(&string[i..]) {\n            suffix = string[i..].to_string();\n\
    \            prefix = string[..i].to_string();\n            break;\n        }\n\
    \    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n    result\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpuu8xihnt.rs:16:12\n   |\n16 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuu8xihnt.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuu8xihnt.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuu8xihnt.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuu8xihnt.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuu8xihnt.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuu8xihnt.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuu8xihnt.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuu8xihnt.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuu8xihnt.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuu8xihnt.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    string.push_str(&longest_palindrome_suffix);\n\
    \    string.push_str(&string[..string.len() - longest_palindrome_suffix.len()].chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuoaebkv_.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   for (i, c) in string.chars().enumerate() {\n        if is_palindrome(&string[i..])\
    \ {\n            prefix = string[..i].to_string();\n            break;\n     \
    \   }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpkatz6hne.rs:15:12\n   |\n15 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkatz6hne.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkatz6hne.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkatz6hne.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkatz6hne.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkatz6hne.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkatz6hne.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkatz6hne.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkatz6hne.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkatz6hne.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkatz6hne.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    string.push_str(&string[..string.len()\
    \ - longest_palindrome_suffix_length].chars().rev().collect::<String>());\n  \
    \  string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpp9c7r_f_.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp9c7r_f_.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp9c7r_f_.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp9c7r_f_.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp9c7r_f_.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut string_length = string.len();\n    let mut string_chars =\
    \ string.chars();\n    let mut string_chars_rev = string.chars().rev();\n    let\
    \ mut string_chars_rev_clone = string.chars().rev();\n    let mut string_chars_clone\
    \ = string.chars();\n    let mut string_chars_clone_rev = string.chars().rev();\n\
    \    let mut string_chars_clone_rev_clone = string.chars().rev();\n    let mut\
    \ string_chars_clone_clone = string.chars();\n    let mut string_chars_clone_clone_rev\
    \ = string.chars().rev();\n    let mut string_chars_clone_clone_rev_clone = string.chars().rev();\n\
    \    let mut string_chars_clone_clone_clone = string.chars();\n    let mut string_chars_clone_clone_clone_rev\
    \ = string.chars().rev();\n    let mut string_chars_clone_clone_clone_rev_clone\
    \ = string.chars().rev();\n    let mut string_chars_clone_clone_clone_clone =\
    \ string.chars();\n    let mut string_chars_clone_clone_clone_clone_rev = string.chars().rev();\n\
    \    let mut string_chars_clone_clone_clone_clone_rev_clone = string.chars().rev();\n\
    \    let mut string_chars_clone_clone_clone_clone_clone = string.chars();\n  \
    \  let mut string_chars_clone_clone_clone_clone_clone_rev = string.chars().rev();\n\
    \    let mut string_chars_clone_clone_clone_clone_clone_rev_clone = string.chars().rev();\n\
    \    let mut string_chars_clone_clone_clone_clone_clone_clone = string.chars();\n\
    \    let mut string_chars_clone_clone_\n}\n\nfn main() {\n    let candidate =\
    \ make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp9q3e8z6.rs:36:38\n   |\n\
    36 |     let mut string_chars_clone_clone_\n   |                             \
    \         ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp9q3e8z6.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp9q3e8z6.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp9q3e8z6.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp9q3e8z6.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp9q3e8z6.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp9q3e8z6.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp9q3e8z6.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp9q3e8z6.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp9q3e8z6.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp9q3e8z6.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\ner"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut i = 0;\n    let mut j = string.len() - 1;\n    while i < j\
    \ {\n        if string.chars().nth(i) == string.chars().nth(j) {\n           \
    \ if i + 1 == j {\n                longest_palindrome_suffix_length = 2;\n   \
    \             longest_palindrome_suffix_index = i;\n            } else if i +\
    \ 2 == j {\n                longest_palindrome_suffix_length = 3;\n          \
    \      longest_palindrome_suffix_index = i;\n            }\n            i += 1;\n\
    \            j -= 1;\n        } else {\n            i = 0;\n            j -= 1;\n\
    \        }\n    }\n    if longest_palindrome_suffix_length > 0 {\n        longest_palindrome_suffix\
    \ = string.chars().skip(longest_palindrome_suffix_index).take(longest_palindrome_suffix_length).collect();\n\
    \        string.truncate(longest_palindrome_suffix_index);\n        string.push_str(&longest_palindrome_suffix);\n\
    \        string.push_str(&string.chars().rev().collect::<String>());\n    }\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuwzc4h5m.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuwzc4h5m.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuwzc4h5m.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuwzc4h5m.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuwzc4h5m.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuwzc4h5m.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuwzc4h5m.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuwzc4h5m.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuwzc4h5m.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuwzc4h5m.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ i = 0;\n    let mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            suffix.push(string.chars().nth(i).unwrap());\n\
    \            prefix.push(string.chars().nth(j).unwrap());\n            i += 1;\n\
    \            j -= 1;\n        } else {\n            break;\n        }\n    }\n\
    \    if i == j {\n        palindrome.push_str(&string);\n        palindrome.push(string.chars().nth(i).unwrap());\n\
    \    } else {\n        palindrome.push_str(&string);\n        palindrome.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    }\n    palindrome\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnh35j4u5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnh35j4u5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnh35j4u5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnh35j4u5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnh35j4u5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnh35j4u5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnh35j4u5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnh35j4u5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnh35j4u5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnh35j4u5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = string.clone();\n\
    \    while !is_palindrome(&suffix) {\n        suffix.remove(0);\n    }\n    result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp5al44qn1.rs:14:12\n   |\n14 |     while !is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5al44qn1.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5al44qn1.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5al44qn1.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5al44qn1.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5al44qn1.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5al44qn1.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    for i in 0..string.len() {\n        if\
    \ is_palindrome(&string[i..]) {\n            if string.len() - i > longest_palindrome_length\
    \ {\n                longest_palindrome_length = string.len() - i;\n         \
    \       longest_palindrome_index = i;\n            }\n        }\n    }\n    suffix\
    \ = string.split_off(longest_palindrome_index);\n    prefix = string.chars().rev().collect();\n\
    \    string.push_str(&prefix);\n    string.push_str(&suffix);\n    string\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpj7znhn56.rs:18:12\n   |\n18 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj7znhn56.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj7znhn56.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj7znhn56.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj7znhn56.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj7znhn56.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj7znhn56.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj7znhn56.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj7znhn56.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj7znhn56.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj7znhn56.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    string.push_str(&longest_palindrome_suffix);\n\
    \    string.push_str(&string[..string.len() - longest_palindrome_suffix.len()].chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuoaebkv_.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut palindrome = string.clone();\n    let mut prefix = String::new();\n\
    \    let mut suffix = String::new();\n    let mut longest_palindrome_suffix_length\
    \ = 0;\n    let mut longest_palindrome_suffix_index = 0;\n    let mut i = 0;\n\
    \    while i < string.len() {\n        let (palindrome_suffix_length, palindrome_suffix_index)\
    \ =\n            find_palindrome_suffix(&string, i);\n        if palindrome_suffix_length\
    \ > longest_palindrome_suffix_length {\n            longest_palindrome_suffix_length\
    \ = palindrome_suffix_length;\n            longest_palindrome_suffix_index = palindrome_suffix_index;\n\
    \        }\n        i += 1;\n    }\n    prefix = string[0..longest_palindrome_suffix_index].to_string();\n\
    \    suffix = string[longest_palindrome_suffix_index..]\n        .chars()\n  \
    \      .rev()\n        .collect();\n    palindrome.push_str(&suffix);\n    palindrome.insert_str(0,\
    \ &prefix);\n    palindrome\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `find_palindrome_suffix` in this scope\n\
    \  --> /tmp/tmpctu0qu8y.rs:20:13\n   |\n20 |             find_palindrome_suffix(&string,\
    \ i);\n   |             ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpctu0qu8y.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpctu0qu8y.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpctu0qu8y.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpctu0qu8y.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpctu0qu8y.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpctu0qu8y.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpctu0qu8y.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpctu0qu8y.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpctu0qu8y.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpctu0qu8y.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not "
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    let\
    \ mut i = string.len();\n    while !is_palindrome {\n        i -= 1;\n       \
    \ suffix.push(string.chars().nth(i).unwrap());\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \        is_palindrome = is_palindrome(&suffix);\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5klv9xhx.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5klv9xhx.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5klv9xhx.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5klv9xhx.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5klv9xhx.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5klv9xhx.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5klv9xhx.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5klv9xhx.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5klv9xhx.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5klv9xhx.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmp5klv9xhx.rs:21:25\n   |\n15 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n21 |         is_pa"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let\
    \ mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n   \
    \ let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n\
    \    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n\
    \    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut bb =\
    \ 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut\
    \ ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n   \
    \ let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm =\
    \ 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut\
    \ qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n   \
    \ let mut uu = 0;\n    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx =\
    \ 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let\
    \ mut bbb = 0;\n    let mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee =\
    \ 0;\n    let mut fff = 0;\n    let mut ggg = 0;\n    let mut hhh = 0;\n    let\
    \ mut iii = 0;\n    let mut jjj = 0;\n    let mut kkk = 0;\n    let mut ll\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpwyowvqvq.rs:71:15\n   |\n\
    71 |     let mut ll\n   |               ^ help: add `;` here\n72 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwyowvqvq.rs:76:17\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwyowvqvq.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwyowvqvq.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwyowvqvq.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwyowvqvq.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwyowvqvq.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwyowvqvq.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwyowvqvq.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwyowvqvq.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwyowvqvq.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwyo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpekf0d6t5.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut palindrome = string.clone();\n    let mut prefix = String::new();\n\
    \    let mut suffix = String::new();\n    let mut suffix_len = 0;\n    let mut\
    \ prefix_len = 0;\n    let mut max_len = 0;\n    let mut max_len_idx = 0;\n  \
    \  let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n\
    \    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n\
    \    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n\
    \    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n\
    \    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut bb =\
    \ 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut\
    \ ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n   \
    \ let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm =\
    \ 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut\
    \ qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n   \
    \ let mut uu = 0;\n    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx =\
    \ 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let\
    \ mut bbb = 0;\n    let mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee =\
    \ 0;\n    let mut fff = 0;\n    let mut ggg = 0;\n    let mut h\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpmkdf1kyz.rs:70:14\n   |\n\
    70 |     let mut h\n   |              ^ help: add `;` here\n71 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmkdf1kyz.rs:75:17\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmkdf1kyz.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmkdf1kyz.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmkdf1kyz.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmkdf1kyz.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmkdf1kyz.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmkdf1kyz.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmkdf1kyz.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmkdf1kyz.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmkdf1kyz.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpmkdf1"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut reversed = string.clone();\n    reversed.reverse();\n    let mut\
    \ result = string;\n    result.push_str(&reversed[string.len()..]);\n    result\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn7cvmb1d.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn7cvmb1d.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn7cvmb1d.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn7cvmb1d.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `reverse` found for struct `String` in the current scope\n  --> /tmp/tmpn7cvmb1d.rs:13:14\n\
    \   |\n13 |     reversed.reverse();\n   |              ^^^^^^^ help: there is\
    \ an associated "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    for i in 0..string.len() {\n        if\
    \ is_palindrome(&string[i..]) {\n            longest_palindrome_length = string.len()\
    \ - i;\n            longest_palindrome_index = i;\n            break;\n      \
    \  }\n    }\n    suffix = string.split_off(longest_palindrome_index);\n    prefix\
    \ = string.chars().rev().collect();\n    string.push_str(&prefix);\n    string\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp1i2a2fxy.rs:18:12\n   |\n18 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1i2a2fxy.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1i2a2fxy.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1i2a2fxy.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1i2a2fxy.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut longest_palindrome_suffix_index_rev = 0;\n    let mut longest_palindrome_suffix_index_rev_len\
    \ = 0;\n    let mut longest_palindrome_suffix_index_rev_len_rev = 0;\n    for\
    \ i in 0..string.len() {\n        let mut j = 0;\n        while i - j >= 0 &&\
    \ i + j < string.len() {\n            if string.chars().nth(i - j).unwrap() ==\
    \ string.chars().nth(i + j).unwrap() {\n                if 2 * j + 1 > longest_palindrome_suffix_len\
    \ {\n                    longest_palindrome_suffix_len = 2 * j + 1;\n        \
    \            longest_palindrome_suffix_index = i - j;\n                    longest_palindrome_suffix_index_rev\
    \ = i + j;\n                }\n            } else {\n                break;\n\
    \            }\n            j += 1;\n        }\n    }\n    for i in 0..string.len()\
    \ {\n        let mut j = 0;\n        while i - j >= 0 && i + j + 1 < string.len()\
    \ {\n            if string.chars().nth(i - j).unwrap() == string.chars().nth(i\
    \ + j + 1).unwrap() {\n                if 2 * j + 2 > longest_palindrome_suffix_len\
    \ {\n                    longest_palindrome_suffix_len = 2 * j + 2;\n        \
    \            longest_palindrome_suffix_index = i - j;\n                    longest_palindrome_suffix_index_rev\
    \ = i + j + 1;\n                }\n            } else {\n                break;\n\
    \            }\n            j += 1;\n        }\n    }\n    if longest_palindrome_suffix_len\
    \ > 0 {\n        longest_palindrome_suffix_index_rev_len = string\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpktyqe9pu.rs:60:3\n\
    \   |\n11 | fn make_palindrome(string: String) -> String {\n   |             \
    \                                 - unclosed delimiter\n...\n49 |     if longest_palindrome_suffix_len\
    \ > 0 {\n   |                                          - this delimiter might\
    \ not be properly closed...\n50 |         longest_palindrome_suffix_index_rev_len\
    \ = string\n51 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n60 | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpktyqe9pu.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpktyqe9pu.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpktyqe9pu.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpktyqe9pu.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpktyqe9pu.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpktyqe9pu.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpktyqe9pu.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpktyqe9pu.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkty"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut postfix = String::new();\n    let mut postfix_len = 0;\n    let mut\
    \ postfix_start = 0;\n    let mut postfix_end = 0;\n    let mut prefix_len = 0;\n\
    \    let mut prefix_start = 0;\n    let mut prefix_end = 0;\n    let mut i = 0;\n\
    \    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n\
    \    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n\
    \    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n\
    \    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc\
    \ = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let\
    \ mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n\
    \    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn\
    \ = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let\
    \ mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n\
    \    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy\
    \ = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let mut bbb = 0;\n    let\
    \ mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee = 0;\n    let mut\n}\n\n\
    fn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpdg6nu0hl.rs:71:1\n\
    \   |\n71 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpdg6nu0hl.rs:75:17\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpdg6nu0hl.rs:75:25\n \
    \  |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdg6nu0hl.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdg6nu0hl.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdg6nu0hl.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdg6nu0hl.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdg6nu0hl.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdg6nu0hl.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdg6nu0hl.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdg6nu0hl.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: aborting due to 11 previous errors\n\nFor\
    \ more information about this error, try `rustc --expl"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut current_palindrome_suffix_length = 0;\n    let mut current_palindrome_suffix_index\
    \ = 0;\n    let mut current_palindrome_suffix = String::new();\n    let mut current_palindrome_suffix_reversed\
    \ = String::new();\n    let mut current_palindrome_suffix_reversed_chars = Vec::new();\n\
    \    let mut current_palindrome_suffix_chars = Vec::new();\n    let mut string_chars\
    \ = string.chars().collect::<Vec<char>>();\n    let mut string_chars_reversed\
    \ = string.chars().rev().collect::<Vec<char>>();\n    let string_length = string.len();\n\
    \    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n\
    \    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n\
    \    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n\
    \    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n\
    \    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut bb =\
    \ 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut\
    \ ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n   \
    \ let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm =\
    \ 0;\n    let mut nn = 0;\n    let mut oo = 0;\n\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi5mtg_5y.rs:63:17\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi5mtg_5y.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi5mtg_5y.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi5mtg_5y.rs:64:25\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi5mtg_5y.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi5mtg_5y.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi5mtg_5y.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi5mtg_5y.rs:66:25\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi5mtg_5y.rs:67:17\n  \
    \ |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi5mtg_5y.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpi5mtg_5y.rs:11:39\n   |\n11 | fn make_palindrome(string:\
    \ String) -> String {\n   |    ---------------                    ^^^^^^ expected\
    \ struct `String`, found `()`\n "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut longest_palindrome_length = 0;\n\
    \    let mut longest_palindrome_index = 0;\n    let mut i = 0;\n    let mut j\
    \ = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i) ==\
    \ string.chars().nth(j) {\n            if i == j {\n                longest_palindrome_length\
    \ = i + 1;\n                longest_palindrome_index = i;\n            } else\
    \ {\n                longest_palindrome_length = i + 1;\n                longest_palindrome_index\
    \ = i;\n            }\n        }\n        i += 1;\n        j -= 1;\n    }\n  \
    \  if longest_palindrome_length == 0 {\n        return result;\n    }\n    let\
    \ mut i = 0;\n    while i < string.len() - longest_palindrome_length {\n     \
    \   prefix.push(string.chars().nth(i).unwrap());\n        i += 1;\n    }\n   \
    \ let mut i = longest_palindrome_index + 1;\n    while i < string.len() {\n  \
    \      suffix.push(string.chars().nth(i).unwrap());\n        i += 1;\n    }\n\
    \    result.push_str(&suffix.chars().rev().collect::<String>());\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppi_7nx5_.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppi_7nx5_.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppi_7nx5_.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppi_7nx5_.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppi_7nx5_.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppi_7nx5_.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppi_7nx5_.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppi_7nx5_.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppi_7nx5_.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppi_7nx5_.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut is_palindrome = false;\n    let\
    \ mut i = 0;\n    while !is_palindrome {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \        suffix.push(string.chars().nth(string.len() - i - 1).unwrap());\n   \
    \     if prefix == suffix {\n            is_palindrome = true;\n        }\n  \
    \      i += 1;\n    }\n    result.push_str(&prefix);\n    result\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmps6nslsg1.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps6nslsg1.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps6nslsg1.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps6nslsg1.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps6nslsg1.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps6nslsg1.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps6nslsg1.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps6nslsg1.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps6nslsg1.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps6nslsg1.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            suffix.push(string.chars().nth(i).unwrap());\n            prefix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9bs_yfim.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9bs_yfim.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9bs_yfim.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9bs_yfim.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9bs_yfim.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9bs_yfim.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9bs_yfim.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9bs_yfim.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9bs_yfim.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9bs_yfim.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut longest_palindrome_suffix_len\
    \ = 0;\n    let mut longest_palindrome_suffix_idx = 0;\n    let mut longest_palindrome_prefix_len\
    \ = 0;\n    let mut longest_palindrome_prefix_idx = 0;\n    let mut i = 0;\n \
    \   let mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            if i == j {\n                palindrome_suffix.push(string.chars().nth(i).unwrap());\n\
    \                palindrome_prefix.push(string.chars().nth(i).unwrap());\n   \
    \         } else {\n                palindrome_suffix.push(string.chars().nth(i).unwrap());\n\
    \                palindrome_prefix.push(string.chars().nth(j).unwrap());\n   \
    \         }\n            if palindrome_suffix.len() > longest_palindrome_suffix_len\
    \ {\n                longest_palindrome_suffix_len = palindrome_suffix.len();\n\
    \                longest_palindrome_suffix_idx = i;\n            }\n         \
    \   if palindrome_prefix.len() > longest_palindrome_prefix_len {\n           \
    \     longest_palindrome_prefix_len = palindrome_prefix.len();\n             \
    \   longest_palindrome_prefix_idx = j;\n            }\n            i += 1;\n \
    \           j -= 1;\n        } else {\n            palindrome_suffix = String::new();\n\
    \            palindrome_prefix = String::new();\n            i += 1;\n       \
    \     j = string.len() - 1;\n        }\n    }\n    if longest_palindrome_suffix_len\
    \ > longest_palindrome_prefix_len {\n        let prefix = string.chars().take(longest_palindrome_suffix_idx\
    \ + 1).collect::<String\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpxq88z_5s.rs:58:3\n\
    \   |\n11 | fn make_palindrome(string: String) -> String {\n   |             \
    \                                 - unclosed delimiter\n...\n47 |     if longest_palindrome_suffix_len\
    \ > longest_palindrome_prefix_len {\n   |                                    \
    \                                  - this delimiter might not be properly closed...\n\
    48 |         let prefix = string.chars().take(longest_palindrome_suffix_idx +\
    \ 1).collect::<String\n49 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n58 | }\n   |   ^\n\nerror: expected one of `!`, `(`, `+`,\
    \ `,`, `::`, `:`, `<`, `=`, or `>`, found `}`\n  --> /tmp/tmpxq88z_5s.rs:49:1\n\
    \   |\n48 |         let prefix = string.chars().take(longest_palindrome_suffix_idx\
    \ + 1).collect::<String\n   |                                                \
    \                                             - expected one of 9 possible tokens\n\
    49 | }\n   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpxq88z_5s.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxq88z_5s.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxq88z_5s.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxq88z_5s.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxq88z_5s.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxq88z_5s.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                     "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut string_len = string.len();\n\
    \    let mut string_chars = string.chars();\n    let mut string_chars_rev = string.chars().rev();\n\
    \    let mut string_chars_rev_len = string_len;\n    let mut string_chars_rev_iter\
    \ = string_chars_rev.clone();\n    let mut string_chars_rev_iter_len = string_len;\n\
    \    let mut string_chars_rev_iter_len_dec = string_len;\n    let mut string_chars_rev_iter_len_dec_dec\
    \ = string_len;\n    let mut string_chars_rev_iter_len_dec_dec_dec = string_len;\n\
    \    let mut string_chars_rev_iter_len_dec_dec_dec_dec = string_len;\n    let\
    \ mut string_chars_rev_iter_len_dec_dec_dec_dec_dec = string_len;\n    let mut\
    \ string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec = string_len;\n    let mut\
    \ string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_dec = string_len;\n    let\
    \ mut string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_dec_dec = string_len;\n\
    \    let mut string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_dec_dec_dec = string_len;\n\
    \    let mut string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec\
    \ = string_len;\n    let mut string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec\
    \ = string_len;\n    let mut string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnyu3c8se.rs:32:63\n   |\n\
    32 |     let mut string_chars_rev_iter_len_dec_dec_dec_dec_dec_dec_\n   |    \
    \                                                           ^ help: add `;` here\n\
    33 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpnyu3c8se.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnyu3c8se.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnyu3c8se.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnyu3c8se.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnyu3c8se.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnyu3c8se.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnyu3c8se.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnyu3c8se.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnyu3c8se.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnyu3c8se.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |        "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = 0;\n  \
    \  let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let palindrome_suffix_length = is_palindrome(&string[i..]);\n   \
    \     if palindrome_suffix_length > longest_palindrome_suffix_length {\n     \
    \       longest_palindrome_suffix = i;\n            longest_palindrome_suffix_length\
    \ = palindrome_suffix_length;\n        }\n    }\n    let prefix = &string[..longest_palindrome_suffix];\n\
    \    let prefix_reversed: String = prefix.chars().rev().collect();\n    string.push_str(&prefix_reversed);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpmk9261oe.rs:16:40\n   |\n16 |         let palindrome_suffix_length =\
    \ is_palindrome(&string[i..]);\n   |                                        ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmk9261oe.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmk9261oe.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmk9261oe.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmk9261oe.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmk9261oe.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmk9261oe.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmk9261oe.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmk9261oe.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmk9261oe.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmk9261oe.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |      "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut i = 0;\n    let mut j = string.len() -\
    \ 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            suffix.push(string.chars().nth(i).unwrap());\n            prefix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            i = 0;\n\
    \            j -= 1;\n            suffix.clear();\n            prefix.clear();\n\
    \        }\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnpqgifue.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpqgifue.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpqgifue.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnpqgifue.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnpqgifue.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnpqgifue.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnpqgifue.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnpqgifue.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnpqgifue.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpqgifue.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = string.clone();\n\
    \    let mut prefix = String::new();\n    while !is_palindrome(&suffix) {\n  \
    \      prefix.push(suffix.pop().unwrap());\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp05nx9r5y.rs:15:12\n   |\n15 |     while !is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp05nx9r5y.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp05nx9r5y.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp05nx9r5y.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp05nx9r5y.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp05nx9r5y.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp05nx9r5y.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    for\
    \ (i, c) in string.chars().enumerate() {\n        suffix.push(c);\n        if\
    \ is_palindrome {\n            prefix.push(c);\n        }\n        if suffix ==\
    \ prefix {\n            is_palindrome = true;\n        }\n        if i == string.len()\
    \ - 1 {\n            result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvwkhkirc.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwkhkirc.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwkhkirc.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvwkhkirc.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvwkhkirc.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvwkhkirc.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvwkhkirc.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvwkhkirc.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvwkhkirc.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwkhkirc.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            if i + 1 == j {\n                longest_palindrome_length =\
    \ 2;\n                longest_palindrome_index = i;\n            } else if i +\
    \ 2 == j {\n                longest_palindrome_length = 3;\n                longest_palindrome_index\
    \ = i;\n            }\n            i += 1;\n            j -= 1;\n        } else\
    \ {\n            i = 0;\n            j -= 1;\n        }\n    }\n    if longest_palindrome_length\
    \ > 0 {\n        prefix = string.chars().take(longest_palindrome_index).collect();\n\
    \        suffix = string.chars().skip(longest_palindrome_index + longest_palindrome_length).collect();\n\
    \    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n    string.push_str(&suffix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5a_8tif9.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5a_8tif9.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5a_8tif9.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5a_8tif9.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5a_8tif9.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5a_8tif9.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5a_8tif9.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5a_8tif9.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5a_8tif9.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5a_8tif9.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut longest_palindrome_suffix_index_end = 0;\n    let mut longest_palindrome_suffix_index_start\
    \ = 0;\n    for i in 0..string.len() {\n        let mut palindrome_suffix_length\
    \ = 0;\n        let mut palindrome_suffix_index_start = 0;\n        let mut palindrome_suffix_index_end\
    \ = 0;\n        for j in 0..i {\n            if string.chars().nth(i - j) == string.chars().nth(i\
    \ + j) {\n                palindrome_suffix_length += 1;\n                palindrome_suffix_index_start\
    \ = i - j;\n                palindrome_suffix_index_end = i + j;\n           \
    \ } else {\n                break;\n            }\n        }\n        if palindrome_suffix_length\
    \ > longest_palindrome_suffix_length {\n            longest_palindrome_suffix_length\
    \ = palindrome_suffix_length;\n            longest_palindrome_suffix_index_start\
    \ = palindrome_suffix_index_start;\n            longest_palindrome_suffix_index_end\
    \ = palindrome_suffix_index_end;\n        }\n    }\n    for i in 0..string.len()\
    \ - 1 {\n        let mut palindrome_suffix_length = 0;\n        let mut palindrome_suffix_index_start\
    \ = 0;\n        let mut palindrome_suffix_index_end = 0;\n        for j in 0..i\
    \ + 1 {\n            if string.chars().nth(i - j) == string.chars().nth(i + 1\
    \ + j) {\n                palindrome_suffix_length += 1;\n                palindrome_suffix_index_start\
    \ = i - j;\n                palindrome_suffix_index_end = i + 1\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmppz1ixuul.rs:55:3\n\
    \   |\n11 | fn make_palindrome(string: String) -> String {\n   |             \
    \                                 - unclosed delimiter\n...\n37 |     for i in\
    \ 0..string.len() - 1 {\n   |                                  - unclosed delimiter\n\
    ...\n41 |         for j in 0..i + 1 {\n   |                           - unclosed\
    \ delimiter\n42 |             if string.chars().nth(i - j) == string.chars().nth(i\
    \ + 1 + j) {\n   |                                                           \
    \                - this delimiter might not be properly closed...\n...\n46 | }\n\
    \   | - ...as it matches this but it has different indentation\n...\n55 | }\n\
    \   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppz1ixuul.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppz1ixuul.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppz1ixuul.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppz1ixuul.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppz1ixuul.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppz1ixuul.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppz1ixuul.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tm"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    for\
    \ c in string.chars().rev() {\n        suffix.push(c);\n        if is_palindrome(&suffix)\
    \ {\n            is_palindrome = true;\n            break;\n        }\n    }\n\
    \    if is_palindrome {\n        for c in string.chars() {\n            prefix.push(c);\n\
    \            if is_palindrome(&prefix) {\n                break;\n           \
    \ }\n        }\n        result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxa8pv9jq.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxa8pv9jq.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxa8pv9jq.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxa8pv9jq.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmpxa8pv9jq.rs:18:12\n   |\n15 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n18 |         if is"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut longest_palindrome_length\
    \ = 0;\n    let mut longest_palindrome_index = 0;\n    let mut current_palindrome_length\
    \ = 0;\n    let mut current_palindrome_index = 0;\n    let mut i = 0;\n    let\
    \ mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            current_palindrome_length += 1;\n  \
    \          if current_palindrome_length > longest_palindrome_length {\n      \
    \          longest_palindrome_length = current_palindrome_length;\n          \
    \      longest_palindrome_index = current_palindrome_index;\n            }\n \
    \       } else {\n            current_palindrome_length = 0;\n            current_palindrome_index\
    \ = i + 1;\n        }\n        i += 1;\n        j -= 1;\n    }\n    if longest_palindrome_length\
    \ > 0 {\n        palindrome_suffix = string.chars().skip(longest_palindrome_index).take(longest_palindrome_length).collect();\n\
    \        palindrome_prefix = string.chars().take(longest_palindrome_index).collect();\n\
    \        string.push_str(&palindrome_prefix.chars().rev().collect::<String>());\n\
    \    }\n    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcx99tuml.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcx99tuml.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcx99tuml.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcx99tuml.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcx99tuml.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcx99tuml.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcx99tuml.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcx99tuml.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcx99tuml.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcx99tuml.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpekf0d6t5.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.get(i..).unwrap();\n\
    \        if is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = string.get(0..string.len()\
    \ - longest_palindrome_suffix.len()).unwrap();\n    let mut prefix = prefix.to_string();\n\
    \    prefix.push_str(&longest_palindrome_suffix);\n    prefix.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    prefix\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpt6mg92uo.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt6mg92uo.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt6mg92uo.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt6mg92uo.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt6mg92uo.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt6mg92uo.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt6mg92uo.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt6mg92uo.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt6mg92uo.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt6mg92uo.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt6mg92uo.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_length = 0;\n  \
    \  let mut longest_palindrome_index = 0;\n    let mut i = 0;\n    let mut j =\
    \ string.len() - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            if i + 1 > longest_palindrome_length {\n                longest_palindrome_length\
    \ = i + 1;\n                longest_palindrome_index = i;\n            }\n   \
    \         i += 1;\n            j -= 1;\n        } else {\n            i = 0;\n\
    \            j -= 1;\n        }\n    }\n    let mut prefix = string.chars().take(longest_palindrome_index\
    \ + 1).collect::<String>();\n    prefix.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    prefix\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpo89737tf.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo89737tf.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo89737tf.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpo89737tf.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo89737tf.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo89737tf.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo89737tf.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo89737tf.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo89737tf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo89737tf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_idx\
    \ = 0;\n    let mut prefix_len = 0;\n    let mut prefix_idx = 0;\n    let mut\
    \ prefix_end_idx = 0;\n    let mut suffix_len = 0;\n    let mut suffix_idx = 0;\n\
    \    let mut suffix_end_idx = 0;\n    let mut is_palindrome = false;\n    let\
    \ mut is_palindrome_prefix = false;\n    let mut is_palindrome_suffix = false;\n\
    \    let mut is_palindrome_prefix_suffix = false;\n    let mut is_palindrome_prefix_suffix_len\
    \ = 0;\n    let mut is_palindrome_prefix_suffix_idx = 0;\n    let mut is_palindrome_prefix_suffix_end_idx\
    \ = 0;\n    let mut is_palindrome_prefix_suffix_len_max = 0;\n    let mut is_palindrome_prefix_suffix_idx_max\
    \ = 0;\n    let mut is_palindrome_prefix_suffix_end_idx_max = 0;\n    let mut\
    \ is_palindrome_prefix_suffix_len_max_idx = 0;\n    let mut is_palindrome_prefix_suffix_idx_max_idx\
    \ = 0;\n    let mut is_palindrome_prefix_suffix_end_idx_max_idx = 0;\n    let\
    \ mut is_palindrome_prefix_suffix_len_max_idx_max = 0;\n    let mut is_palindrome_prefix_suffix_idx_max_idx_max\
    \ = 0;\n    let mut is_palindrome_prefix_suffix_end_idx_max_idx_max = 0;\n   \
    \ let mut is_palindrome_prefix_suffix_len_max_idx_max_max = 0;\n    let mut is_palindrome_prefix_\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp83sek7wf.rs:39:34\n   |\n\
    39 |     let mut is_palindrome_prefix_\n   |                                 \
    \ ^ help: add `;` here\n40 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp83sek7wf.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp83sek7wf.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp83sek7wf.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp83sek7wf.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp83sek7wf.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp83sek7wf.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp83sek7wf.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp83sek7wf.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp83sek7wf.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp83sek7wf.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E030"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = string.clone();\n\
    \    while !is_palindrome(&suffix) {\n        suffix.remove(0);\n    }\n    result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp5al44qn1.rs:14:12\n   |\n14 |     while !is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5al44qn1.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5al44qn1.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5al44qn1.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5al44qn1.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5al44qn1.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5al44qn1.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5al44qn1.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut i = 0;\n    let mut\
    \ j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i) ==\
    \ string.chars().nth(j) {\n            palindrome_suffix.push(string.chars().nth(i).unwrap());\n\
    \            palindrome_prefix.push(string.chars().nth(j).unwrap());\n       \
    \     i += 1;\n            j -= 1;\n        } else {\n            break;\n   \
    \     }\n    }\n    string.push_str(&palindrome_prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpna_c_n43.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpna_c_n43.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpna_c_n43.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpna_c_n43.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpna_c_n43.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpna_c_n43.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpna_c_n43.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpna_c_n43.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpna_c_n43.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpna_c_n43.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut palindrome_suffix_length\
    \ = 0;\n    let mut palindrome_prefix_length = 0;\n    let mut string_length =\
    \ string.len();\n    let mut string_chars = string.chars();\n    let mut string_chars_rev\
    \ = string.chars().rev();\n    let mut string_chars_rev_iter = string_chars_rev.clone();\n\
    \    let mut string_chars_iter = string_chars.clone();\n    let mut string_chars_rev_iter_clone\
    \ = string_chars_rev_iter.clone();\n    let mut string_chars_iter_clone = string_chars_iter.clone();\n\
    \    let mut string_chars_rev_iter_clone_clone = string_chars_rev_iter_clone.clone();\n\
    \    let mut string_chars_iter_clone_clone = string_chars_iter_clone.clone();\n\
    \    let mut string_chars_rev_iter_clone_clone_clone = string_chars_rev_iter_clone_clone.clone();\n\
    \    let mut string_chars_iter_clone_clone_clone = string_chars_iter_clone_clone.clone();\n\
    \    let mut string_chars_rev_iter_clone_clone_clone_clone = string_chars_rev_iter_clone_clone_clone.clone();\n\
    \    let mut string_chars_iter_clone_clone_clone_clone = string_chars_iter_clone_clone_clone.clone();\n\
    \    let mut string_chars_rev_iter_clone_clone_clone_clone_clone = string_chars_rev_iter_clone_clone_clone_clone.clone();\n\
    \    let mut string_chars_iter_clone_clone_clone_clone_clone = string_chars_iter_clone_clone_clone_clone.clone();\n\
    \    let mut string_chars_rev_iter_clone_clone_clone_clone_clone_clone = string_chars_rev_iter_clone_clone_clone_clone_\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp_2zuh1c6.rs:32:119\n   |\n\
    32 |     let mut string_chars_rev_iter_clone_clone_clone_clone_clone_clone = string_chars_rev_iter_clone_clone_clone_clone_\n\
    \   |                                                                        \
    \                                               ^ help: add `;` here\n33 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `string_chars_rev_iter_clone_clone_clone_clone_`\
    \ in this scope\n  --> /tmp/tmp_2zuh1c6.rs:32:73\n   |\n32 |     let mut string_chars_rev_iter_clone_clone_clone_clone_clone_clone\
    \ = string_chars_rev_iter_clone_clone_clone_clone_\n   |                     \
    \                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `string_chars_rev_iter_clone_clone_clone_clone`\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_2zuh1c6.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_2zuh1c6.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_2zuh1c6.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_2zuh1c6.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_2zuh1c6.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_2zuh1c6.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_2zuh1c6.rs:40:17\n   |\n40 | "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut i = 0;\n    let\
    \ mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            suffix.push(string.chars().nth(i).unwrap());\n\
    \            prefix.push(string.chars().nth(j).unwrap());\n            if suffix.len()\
    \ > longest_palindrome_suffix_length {\n                longest_palindrome_suffix\
    \ = suffix.clone();\n                longest_palindrome_suffix_length = suffix.len();\n\
    \            }\n            i += 1;\n            j -= 1;\n        } else {\n \
    \           suffix.clear();\n            prefix.clear();\n            i += 1;\n\
    \        }\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxrf74m1j.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrf74m1j.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrf74m1j.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxrf74m1j.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxrf74m1j.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxrf74m1j.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxrf74m1j.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxrf74m1j.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxrf74m1j.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrf74m1j.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix_len = 0;\n\
    \    let mut longest_palindrome_suffix_start = 0;\n    for i in 0..string.len()\
    \ {\n        let mut j = 0;\n        while i - j >= 0 && i + j < string.len()\
    \ && string.chars().nth(i - j).unwrap() == string.chars().nth(i + j).unwrap()\
    \ {\n            j += 1;\n        }\n        if j > longest_palindrome_suffix_len\
    \ {\n            longest_palindrome_suffix_len = j;\n            longest_palindrome_suffix_start\
    \ = i - j + 1;\n        }\n    }\n    let mut prefix = String::new();\n    for\
    \ i in 0..longest_palindrome_suffix_start {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    prefix = prefix.chars().rev().collect();\n    string.push_str(&prefix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpshga0aj1.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpshga0aj1.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpshga0aj1.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpshga0aj1.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpshga0aj1.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpshga0aj1.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpshga0aj1.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpshga0aj1.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpshga0aj1.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpshga0aj1.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    for (i, c) in string.chars().enumerate()\
    \ {\n        suffix.push(c);\n        if is_palindrome(&suffix) {\n          \
    \  prefix = string[0..i].chars().rev().collect();\n        }\n    }\n    result.push_str(&prefix);\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmprqb42gfa.rs:17:12\n   |\n17 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprqb42gfa.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprqb42gfa.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprqb42gfa.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprqb42gfa.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprqb42gfa.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprqb42gfa.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprqb42gfa.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprqb42gfa.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprqb42gfa.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprqb42gfa.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_length];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv7ixwbgj.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    for i\
    \ in (0..string.len()).rev() {\n        if is_palindrome(&string[i..]) {\n   \
    \         suffix = string.split_off(i);\n            break;\n        }\n    }\n\
    \    string.push_str(&suffix.chars().rev().collect::<String>());\n    string\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpjo4r8_dj.rs:15:12\n   |\n15 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjo4r8_dj.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjo4r8_dj.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjo4r8_dj.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjo4r8_dj.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_length];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv7ixwbgj.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpekf0d6t5.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::from(\"\");\n    let\
    \ mut suffix = String::from(\"\");\n    let mut longest_palindrome_length = 0;\n\
    \    let mut longest_palindrome_index = 0;\n    for i in 0..string.len() {\n \
    \       let (p, s) = string.split_at(i);\n        if p == s.chars().rev().collect::<String>()\
    \ && p.len() > longest_palindrome_length {\n            longest_palindrome_length\
    \ = p.len();\n            longest_palindrome_index = i;\n        }\n    }\n  \
    \  let (p, s) = string.split_at(longest_palindrome_index);\n    prefix = p.to_string();\n\
    \    suffix = s.to_string();\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdpigtp5i.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdpigtp5i.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdpigtp5i.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdpigtp5i.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdpigtp5i.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdpigtp5i.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdpigtp5i.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdpigtp5i.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdpigtp5i.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdpigtp5i.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut palindrome = string.clone();\n    let mut suffix = String::new();\n\
    \    let mut prefix = String::new();\n    let mut is_palindrome = false;\n   \
    \ for (i, c) in string.chars().enumerate() {\n        if is_palindrome {\n   \
    \         break;\n        }\n        suffix.push(c);\n        if is_palindrome_string(&suffix)\
    \ {\n            is_palindrome = true;\n            prefix = string[0..i].chars().rev().collect();\n\
    \        }\n    }\n    palindrome.push_str(&prefix);\n    palindrome\n}\n\nfn\
    \ main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome_string` in this scope\n\
    \  --> /tmp/tmpav4mkgar.rs:21:12\n   |\n21 |         if is_palindrome_string(&suffix)\
    \ {\n   |            ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpav4mkgar.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpav4mkgar.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpav4mkgar.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpav4mkgar.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpav4mkgar.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpav4mkgar.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpav4mkgar.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpav4mkgar.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpav4mkgar.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpav4mkgar.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in t"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpekf0d6t5.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut reversed = string.clone();\n    reversed.reverse();\n    let mut\
    \ result = string;\n    result.push_str(&reversed[string.len()..]);\n    result\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn7cvmb1d.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn7cvmb1d.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn7cvmb1d.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn7cvmb1d.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn7cvmb1d.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `reverse` found for struct `String` in the current scope\n  --> /tmp/tmpn7cvmb1d.rs:13:14\n\
    \   |\n13 |     reversed.reverse();\n   |              ^^^^^^^ help: there is\
    \ an associated "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    if string.is_empty() {\n        return string;\n    }\n    let mut result\
    \ = string.clone();\n    let mut prefix = String::new();\n    let mut suffix =\
    \ String::new();\n    let mut is_palindrome = false;\n    for c in string.chars().rev()\
    \ {\n        prefix.push(c);\n        if is_palindrome {\n            break;\n\
    \        }\n        if prefix == suffix {\n            is_palindrome = true;\n\
    \        } else {\n            suffix.push(c);\n        }\n    }\n    result.push_str(&prefix);\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpot3xohyl.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpot3xohyl.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpot3xohyl.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpot3xohyl.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpot3xohyl.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpot3xohyl.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpot3xohyl.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpot3xohyl.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpot3xohyl.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpot3xohyl.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut current_palindrome_suffix\
    \ = String::new();\n    let mut current_palindrome_suffix_length = 0;\n    for\
    \ (i, c) in string.chars().enumerate() {\n        current_palindrome_suffix.insert(0,\
    \ c);\n        current_palindrome_suffix_length += 1;\n        if is_palindrome(&current_palindrome_suffix)\
    \ {\n            if current_palindrome_suffix_length > longest_palindrome_suffix_length\
    \ {\n                longest_palindrome_suffix = current_palindrome_suffix.clone();\n\
    \                longest_palindrome_suffix_length = current_palindrome_suffix_length;\n\
    \            }\n        }\n        if i == string.len() - 1 {\n            break;\n\
    \        }\n        let next_char = string.chars().nth(string.len() - 1 - i).unwrap();\n\
    \        if next_char != c {\n            current_palindrome_suffix.clear();\n\
    \            current_palindrome_suffix_length = 0;\n        }\n    }\n    string.push_str(&longest_palindrome_suffix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp9m8g31da.rs:20:12\n   |\n20 |         if is_palindrome(&current_palindrome_suffix)\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9m8g31da.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9m8g31da.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9m8g31da.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9m8g31da.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9m8g31da.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9m8g31da.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9m8g31da.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9m8g31da.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9m8g31da.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9m8g31da.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in thi"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpfxxcnnjg.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfxxcnnjg.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfxxcnnjg.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfxxcnnjg.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut palindrome = String::from(string.as_str());\n    let mut prefix =\
    \ String::from(\"\");\n    let mut suffix = String::from(\"\");\n    let mut i\
    \ = 0;\n    let mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            prefix.push(string.chars().nth(i).unwrap());\n\
    \            suffix.push(string.chars().nth(j).unwrap());\n            i += 1;\n\
    \            j -= 1;\n        } else {\n            break;\n        }\n    }\n\
    \    palindrome.push_str(prefix.chars().rev().collect::<String>().as_str());\n\
    \    palindrome\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpick35tp0.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpick35tp0.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpick35tp0.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpick35tp0.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpick35tp0.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpick35tp0.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpick35tp0.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpick35tp0.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpick35tp0.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpick35tp0.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpekf0d6t5.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    let reversed_prefix = reverse(prefix);\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp_s93xmm7.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmp_s93xmm7.rs:25:27\n   |\n\
    25 |     let reversed_prefix = reverse(prefix);\n   |                        \
    \   ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_s93xmm7.rs:32:17\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_s93xmm7.rs:32:25\n \
    \  |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_s93xmm7.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_s93xmm7.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_s93xmm7.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_s93xmm7.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_s93xmm7.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_s93xmm7.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_s93xmm7.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_pos\
    \ = 0;\n    let mut string_len = string.len();\n    let mut string_chars = string.chars();\n\
    \    let mut string_chars_rev = string.chars().rev();\n    let mut string_chars_rev_vec\
    \ = string.chars().rev().collect::<Vec<char>>();\n    let mut string_chars_rev_vec_len\
    \ = string_chars_rev_vec.len();\n    let mut string_chars_rev_vec_pos = 0;\n \
    \   let mut string_chars_rev_vec_pos_rev = 0;\n    let mut string_chars_rev_vec_pos_rev_len\
    \ = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos\
    \ = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos_rev = 0;\n    let\
    \ mut string_chars_rev_vec_pos_rev_len_max_pos_rev_len = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos_rev_len_max\
    \ = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos_rev_len_max_pos =\
    \ 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos_rev_len_max_pos_rev\
    \ = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos_rev_len_max_pos_rev_len\
    \ = 0;\n    let mut string_chars_rev_vec_pos_rev_len_max_pos_rev_len_max_pos_rev_len_max\
    \ = 0;\n    let mut string_chars_rev_vec_pos_rev_len\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpv23cdz12.rs:33:45\n   |\n\
    33 |     let mut string_chars_rev_vec_pos_rev_len\n   |                      \
    \                       ^ help: add `;` here\n34 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpv23cdz12.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv23cdz12.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv23cdz12.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv23cdz12.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv23cdz12.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv23cdz12.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv23cdz12.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv23cdz12.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv23cdz12.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv23cdz12.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = string.split_off(i);\n        if is_palindrome(&suffix)\
    \ {\n            if suffix.len() > longest_palindrome_suffix_len {\n         \
    \       longest_palindrome_suffix = suffix;\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n        string = suffix;\n    }\n\
    \    let prefix = string.split_off(longest_palindrome_suffix_len);\n    let mut\
    \ prefix_reversed = prefix.chars().rev().collect::<String>();\n    prefix_reversed.push_str(&longest_palindrome_suffix);\n\
    \    prefix_reversed\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpbrmh9_xe.rs:17:12\n   |\n17 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbrmh9_xe.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbrmh9_xe.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbrmh9_xe.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbrmh9_xe.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \    result.push_str(&prefix);\n    result\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpf4mxo477.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf4mxo477.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf4mxo477.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf4mxo477.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf4mxo477.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf4mxo477.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf4mxo477.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf4mxo477.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf4mxo477.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf4mxo477.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            suffix.push(string.chars().nth(i).unwrap());\n            prefix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            i = 0;\n\
    \            j -= 1;\n            suffix.clear();\n            prefix.clear();\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsolyh_d7.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsolyh_d7.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsolyh_d7.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsolyh_d7.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsolyh_d7.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsolyh_d7.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsolyh_d7.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsolyh_d7.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsolyh_d7.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsolyh_d7.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut current_palindrome_suffix\
    \ = String::new();\n    let mut current_palindrome_suffix_length = 0;\n    let\
    \ mut current_palindrome_suffix_start = 0;\n    let mut current_palindrome_suffix_end\
    \ = 0;\n    let mut current_palindrome_suffix_mid = 0;\n    let mut current_palindrome_suffix_mid_length\
    \ = 0;\n    let mut current_palindrome_suffix_mid_length_is_even = false;\n  \
    \  let mut current_palindrome_suffix_mid_length_is_odd = false;\n    let mut current_palindrome_suffix_mid_length_is_even_or_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_and_odd =\
    \ false;\n    let mut current_palindrome_suffix_mid_length_is_even_or_odd_and_even_and_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_and_odd_and_even_or_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_or_odd_and_even_or_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_and_odd_and_even_and_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_or_odd_and_even_and_odd_and_even_or_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_and_odd_and_even_or_odd_and_even_and_odd\
    \ = false;\n    let mut current_palindrome_suffix_mid_length_is_even_or_odd_and_even_or_odd_and_even_and_odd\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnqjbmpa7.rs:31:97\n   |\n\
    31 |     let mut current_palindrome_suffix_mid_length_is_even_or_odd_and_even_or_odd_and_even_and_odd\n\
    \   |                                                                        \
    \                         ^ help: add `;` here\n32 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnqjbmpa7.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnqjbmpa7.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnqjbmpa7.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnqjbmpa7.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnqjbmpa7.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnqjbmpa7.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnqjbmpa7.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnqjbmpa7.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnqjbmpa7.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnqjbm"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ longest_palindrome = String::new();\n    let mut longest_palindrome_length =\
    \ 0;\n    let mut string_length = string.len();\n    let mut string_chars = string.chars();\n\
    \    let mut string_chars_rev = string.chars().rev();\n\n    for _ in 0..string_length\
    \ {\n        prefix.push(string_chars.next().unwrap());\n        suffix.push(string_chars_rev.next().unwrap());\n\
    \        palindrome = prefix.clone() + &suffix;\n        if is_palindrome(&palindrome)\
    \ {\n            if palindrome.len() > longest_palindrome_length {\n         \
    \       longest_palindrome = palindrome.clone();\n                longest_palindrome_length\
    \ = palindrome.len();\n            }\n        }\n    }\n\n    let mut prefix_chars\
    \ = prefix.chars();\n    let mut prefix_chars_rev = prefix.chars().rev();\n  \
    \  for _ in 0..prefix.len() {\n        prefix_chars.next();\n        prefix_chars_rev.next();\n\
    \        palindrome = prefix_chars_rev.collect::<String>() + &longest_palindrome;\n\
    \        if is_palindrome(&palindrome) {\n            return palindrome;\n   \
    \     }\n    }\n\n    return palindrome;\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp0q7141ie.rs:26:12\n   |\n26 |         if is_palindrome(&palindrome)\
    \ {\n   |            ^^^^^^^^^^^^^ help: a local variable with a similar name\
    \ exists: `palindrome`\n\nerror[E0425]: cannot find function `is_palindrome` in\
    \ this scope\n  --> /tmp/tmp0q7141ie.rs:40:12\n   |\n40 |         if is_palindrome(&palindrome)\
    \ {\n   |            ^^^^^^^^^^^^^ help: a local variable with a similar name\
    \ exists: `palindrome`\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0q7141ie.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0q7141ie.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0q7141ie.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0q7141ie.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0q7141ie.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0q7141ie.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0q7141ie.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0q7141ie.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0q7141ie.rs:54:17\n   |\n54"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        let (pre, suf) = string.split_at(i);\n        if is_palindrome(suf)\
    \ {\n            prefix = pre.to_string();\n            suffix = suf.to_string();\n\
    \        }\n        i += 1;\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpwv3ss9vh.rs:18:12\n   |\n18 |         if is_palindrome(suf) {\n   |\
    \            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:30:17\n   |\n30 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwv3ss9vh.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwv3ss9vh.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwv3ss9vh.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwv3ss9vh.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abortin"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ longest_palindrome = String::new();\n    let mut longest_palindrome_length =\
    \ 0;\n    let mut string_length = string.len();\n    let mut i = 0;\n    let mut\
    \ j = 0;\n\n    while i < string_length {\n        suffix.push(string.pop().unwrap());\n\
    \        prefix.push(suffix.chars().next().unwrap());\n        palindrome = suffix.clone()\
    \ + &prefix;\n        if palindrome == palindrome.chars().rev().collect::<String>()\
    \ {\n            if palindrome.len() > longest_palindrome_length {\n         \
    \       longest_palindrome = palindrome.clone();\n                longest_palindrome_length\
    \ = palindrome.len();\n            }\n        }\n        i += 1;\n    }\n\n  \
    \  while j < string_length - longest_palindrome_length {\n        longest_palindrome.push(string.chars().next().unwrap());\n\
    \        string.remove(0);\n        j += 1;\n    }\n\n    longest_palindrome\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4ivsvjw0.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4ivsvjw0.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4ivsvjw0.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4ivsvjw0.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4ivsvjw0.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4ivsvjw0.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4ivsvjw0.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4ivsvjw0.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4ivsvjw0.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4ivsvjw0.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ i = 0;\n    let mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            suffix.push(string.chars().nth(i).unwrap());\n\
    \            prefix.push(string.chars().nth(j).unwrap());\n            i += 1;\n\
    \            j -= 1;\n        } else {\n            break;\n        }\n    }\n\
    \    if i == j {\n        suffix.push(string.chars().nth(i).unwrap());\n    }\n\
    \    palindrome.push_str(&string[i..]);\n    palindrome.push_str(&suffix);\n \
    \   palindrome.push_str(&prefix.chars().rev().collect::<String>());\n    palindrome\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr0hm8lae.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr0hm8lae.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr0hm8lae.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr0hm8lae.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr0hm8lae.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr0hm8lae.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr0hm8lae.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr0hm8lae.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr0hm8lae.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr0hm8lae.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut longest_palindrome_suffix =\
    \ String::new();\n    for i in (0..string.len()).rev() {\n        let suffix =\
    \ &string[i..];\n        if is_palindrome(suffix) {\n            longest_palindrome_suffix\
    \ = suffix.to_string();\n            break;\n        }\n    }\n    let prefix\
    \ = &string[..string.len() - longest_palindrome_suffix.len()];\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp6yw6yy30.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6yw6yy30.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6yw6yy30.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6yw6yy30.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6yw6yy30.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6yw6yy30.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6yw6yy30.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6yw6yy30.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6yw6yy30.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6yw6yy30.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6yw6yy30.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ postfix = String::new();\n    let mut is_palindrome = false;\n    let mut i\
    \ = 0;\n    while !is_palindrome {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \        postfix.insert(0, string.chars().nth(i).unwrap());\n        is_palindrome\
    \ = is_palindrome(&string);\n        i += 1;\n    }\n    string.push_str(&prefix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmda_hmhs.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmda_hmhs.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmda_hmhs.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmda_hmhs.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmda_hmhs.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmda_hmhs.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmda_hmhs.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmda_hmhs.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmda_hmhs.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmda_hmhs.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmpmda_hmhs.rs:20:25\n   |\n15 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n20 |         is_pa"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    string.push_str(&string[..string.len()\
    \ - longest_palindrome_suffix.len()].chars().rev().collect::<String>());\n   \
    \ string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp4vql1elr.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4vql1elr.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4vql1elr.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4vql1elr.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4vql1elr.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4vql1elr.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4vql1elr.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4vql1elr.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4vql1elr.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4vql1elr.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4vql1elr.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut i = 0;\n    while i < string.len() {\n        let (prefix_char,\
    \ suffix_char) = string.split_at(i);\n        prefix.push_str(prefix_char);\n\
    \        suffix.push_str(suffix_char);\n        if is_palindrome(&suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.clone();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n                longest_palindrome_suffix_index = i;\n    \
    \        }\n        }\n        i += 1;\n    }\n    let (prefix, _) = string.split_at(longest_palindrome_suffix_index);\n\
    \    let mut prefix_reversed = prefix.chars().rev().collect::<String>();\n   \
    \ prefix_reversed.push_str(&string);\n    prefix_reversed\n}\n\nfn main() {\n\
    \    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp4li5_13u.rs:23:12\n   |\n23 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4li5_13u.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4li5_13u.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4li5_13u.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4li5_13u.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4li5_13u.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4li5_13u.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4li5_13u.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4li5_13u.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4li5_13u.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4li5_13u.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    let prefix_reversed = reverse(prefix);\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmplpbxi_la.rs:25:27\n   |\n\
    25 |     let prefix_reversed = reverse(prefix);\n   |                        \
    \   ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmplpbxi_la.rs:32:17\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:32:25\n \
    \  |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplpbxi_la.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplpbxi_la.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplpbxi_la.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_suffix_length = 0;\n\
    \    let mut longest_palindrome_suffix_index = 0;\n    let mut i = 0;\n    while\
    \ i < string.len() {\n        let (mut j, mut k) = (i, string.len() - 1);\n  \
    \      while j < k {\n            if string.chars().nth(j) != string.chars().nth(k)\
    \ {\n                break;\n            }\n            j += 1;\n            k\
    \ -= 1;\n        }\n        if j >= k && k - i + 1 > longest_palindrome_suffix_length\
    \ {\n            longest_palindrome_suffix_length = k - i + 1;\n            longest_palindrome_suffix_index\
    \ = i;\n        }\n        i += 1;\n    }\n    suffix = string.chars().skip(longest_palindrome_suffix_index).take(longest_palindrome_suffix_length).collect();\n\
    \    prefix = string.chars().take(longest_palindrome_suffix_index).collect();\n\
    \    string.push_str(&prefix.chars().rev().collect::<String>());\n    string\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpf6hnx9mb.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf6hnx9mb.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf6hnx9mb.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf6hnx9mb.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf6hnx9mb.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf6hnx9mb.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf6hnx9mb.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf6hnx9mb.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf6hnx9mb.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf6hnx9mb.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut longest_palindrome_suffix_index_in_string = 0;\n    for (index,\
    \ _) in string.chars().enumerate() {\n        let mut palindrome_suffix = String::new();\n\
    \        let mut palindrome_suffix_length = 0;\n        let mut palindrome_suffix_index\
    \ = 0;\n        for (index_in_string, character) in string.chars().enumerate()\
    \ {\n            if index_in_string < index {\n                palindrome_suffix.push(character);\n\
    \                palindrome_suffix_length += 1;\n                palindrome_suffix_index\
    \ += 1;\n            }\n        }\n        if is_palindrome(&palindrome_suffix)\
    \ {\n            if palindrome_suffix_length > longest_palindrome_suffix_length\
    \ {\n                longest_palindrome_suffix = palindrome_suffix;\n        \
    \        longest_palindrome_suffix_length = palindrome_suffix_length;\n      \
    \          longest_palindrome_suffix_index = palindrome_suffix_index;\n      \
    \          longest_palindrome_suffix_index_in_string = index;\n            }\n\
    \        }\n    }\n    let mut prefix = String::new();\n    for (index, character)\
    \ in string.chars().enumerate() {\n        if index < longest_palindrome_suffix_index_in_string\
    \ {\n            prefix.push(character);\n        }\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpvjon0h2h.rs:28:12\n   |\n28 |         if is_palindrome(&palindrome_suffix)\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvjon0h2h.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvjon0h2h.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvjon0h2h.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvjon0h2h.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvjon0h2h.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvjon0h2h.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvjon0h2h.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvjon0h2h.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvjon0h2h.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvjon0h2h.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        suffix.push(string.chars().nth(i).unwrap());\n        prefix.push(string.chars().nth(string.len()\
    \ - i - 1).unwrap());\n        if suffix == prefix {\n            result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \            break;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkbbs73w5.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkbbs73w5.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkbbs73w5.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkbbs73w5.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkbbs73w5.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkbbs73w5.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkbbs73w5.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkbbs73w5.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkbbs73w5.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkbbs73w5.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    string.push_str(&longest_palindrome_suffix);\n\
    \    string.push_str(&string[..string.len() - longest_palindrome_suffix.len()].chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuoaebkv_.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        let prefix = &string[..string.len()\
    \ - i];\n        if is_palindrome(suffix) && suffix.len() > longest_palindrome_suffix_len\
    \ {\n            longest_palindrome_suffix = suffix.to_string();\n           \
    \ longest_palindrome_suffix_len = suffix.len();\n        }\n        if is_palindrome(prefix)\
    \ && prefix.len() > longest_palindrome_suffix_len {\n            longest_palindrome_suffix\
    \ = prefix.to_string();\n            longest_palindrome_suffix_len = prefix.len();\n\
    \        }\n    }\n    string.push_str(&longest_palindrome_suffix[..longest_palindrome_suffix.len()\
    \ - 1].chars().rev().collect::<String>());\n    string\n}\n\nfn main() {\n   \
    \ let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp898umfss.rs:18:12\n   |\n18 |         if is_palindrome(suffix) && suffix.len()\
    \ > longest_palindrome_suffix_len {\n   |            ^^^^^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `is_palindrome` in this scope\n\
    \  --> /tmp/tmp898umfss.rs:22:12\n   |\n22 |         if is_palindrome(prefix)\
    \ && prefix.len() > longest_palindrome_suffix_len {\n   |            ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp898umfss.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp898umfss.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp898umfss.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp898umfss.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp898umfss.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp898umfss.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp898umfss.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp898umfss.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp898umfss.rs:37:17\n "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    let prefix_reversed = reverse(prefix);\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmplpbxi_la.rs:25:27\n   |\n\
    25 |     let prefix_reversed = reverse(prefix);\n   |                        \
    \   ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmplpbxi_la.rs:32:17\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:32:25\n \
    \  |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplpbxi_la.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplpbxi_la.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplpbxi_la.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_suffix_len = 0;\n  \
    \  let mut longest_palindrome_suffix_start = 0;\n    let mut longest_palindrome_suffix_end\
    \ = 0;\n    let mut i = 0;\n    let mut j = string.len() - 1;\n    while i < j\
    \ {\n        if string.chars().nth(i) == string.chars().nth(j) {\n           \
    \ if i == j - 1 {\n                longest_palindrome_suffix_len = 2;\n      \
    \          longest_palindrome_suffix_start = i;\n                longest_palindrome_suffix_end\
    \ = j;\n            } else if i == j - 2 {\n                longest_palindrome_suffix_len\
    \ = 3;\n                longest_palindrome_suffix_start = i;\n               \
    \ longest_palindrome_suffix_end = j;\n            }\n        }\n        i += 1;\n\
    \        j -= 1;\n    }\n    if longest_palindrome_suffix_len > 0 {\n        suffix\
    \ = string.chars().skip(longest_palindrome_suffix_start).take(longest_palindrome_suffix_len).collect();\n\
    \        prefix = string.chars().take(longest_palindrome_suffix_start).collect();\n\
    \        string.push_str(&prefix.chars().rev().collect::<String>());\n    }\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeii6hllo.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeii6hllo.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeii6hllo.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeii6hllo.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeii6hllo.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeii6hllo.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeii6hllo.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeii6hllo.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeii6hllo.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeii6hllo.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpfxxcnnjg.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfxxcnnjg.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfxxcnnjg.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfxxcnnjg.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfxxcnnjg.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_suffix_len = 0;\n  \
    \  for i in 0..string.len() {\n        let (suffix_len, prefix_len) = is_palindrome(&string,\
    \ i);\n        if suffix_len > longest_palindrome_suffix_len {\n            longest_palindrome_suffix_len\
    \ = suffix_len;\n            suffix = string[i..i + suffix_len].to_string();\n\
    \            prefix = string[i - prefix_len..i].to_string();\n        }\n    }\n\
    \    string.push_str(&prefix.chars().rev().collect::<String>());\n    string.push_str(&suffix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp9dgwdm1i.rs:17:40\n   |\n17 |         let (suffix_len, prefix_len) =\
    \ is_palindrome(&string, i);\n   |                                        ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9dgwdm1i.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9dgwdm1i.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9dgwdm1i.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9dgwdm1i.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9dgwdm1i.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9dgwdm1i.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9dgwdm1i.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9dgwdm1i.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9dgwdm1i.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9dgwdm1i.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |        "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut i = 0;\n    let mut j = string.len() -\
    \ 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            suffix.push(string.chars().nth(i).unwrap());\n            prefix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjq5g7nsn.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjq5g7nsn.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjq5g7nsn.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjq5g7nsn.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjq5g7nsn.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjq5g7nsn.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjq5g7nsn.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjq5g7nsn.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjq5g7nsn.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjq5g7nsn.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        let mut j = string.len() - 1;\n        while j >= i {\n         \
    \   if string.chars().nth(i) == string.chars().nth(j) {\n                suffix.push(string.chars().nth(i).unwrap());\n\
    \                prefix.push(string.chars().nth(j).unwrap());\n              \
    \  i += 1;\n                j -= 1;\n            } else {\n                break;\n\
    \            }\n        }\n        if j < i {\n            break;\n        }\n\
    \        suffix.clear();\n        prefix.clear();\n        i += 1;\n    }\n  \
    \  result.push_str(&prefix.chars().rev().collect::<String>());\n    result\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpndpivw3f.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndpivw3f.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndpivw3f.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpndpivw3f.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpndpivw3f.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpndpivw3f.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpndpivw3f.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpndpivw3f.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpndpivw3f.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndpivw3f.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6udgrnn.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut current_palindrome_suffix_length = 0;\n    let mut current_palindrome_suffix_index\
    \ = 0;\n    let mut current_palindrome_suffix = String::new();\n    let mut current_palindrome_suffix_reversed\
    \ = String::new();\n    for (index, _) in string.chars().enumerate() {\n     \
    \   current_palindrome_suffix = string[index..].to_string();\n        current_palindrome_suffix_reversed\
    \ = current_palindrome_suffix.chars().rev().collect();\n        if current_palindrome_suffix\
    \ == current_palindrome_suffix_reversed {\n            current_palindrome_suffix_length\
    \ = current_palindrome_suffix.len();\n            current_palindrome_suffix_index\
    \ = index;\n            if current_palindrome_suffix_length > longest_palindrome_suffix_length\
    \ {\n                longest_palindrome_suffix_length = current_palindrome_suffix_length;\n\
    \                longest_palindrome_suffix_index = current_palindrome_suffix_index;\n\
    \                longest_palindrome_suffix = current_palindrome_suffix;\n    \
    \        }\n        }\n    }\n    if longest_palindrome_suffix_length > 0 {\n\
    \        string.push_str(&string[..longest_palindrome_suffix_index].chars().rev().collect::<String>());\n\
    \    }\n    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp_t8qcvy.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp_t8qcvy.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp_t8qcvy.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp_t8qcvy.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp_t8qcvy.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp_t8qcvy.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp_t8qcvy.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp_t8qcvy.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp_t8qcvy.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp_t8qcvy.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_length];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv7ixwbgj.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut longest_palindrome_length = 0;\n\
    \    let mut longest_palindrome_index = 0;\n    let mut i = 0;\n    let mut j\
    \ = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i) ==\
    \ string.chars().nth(j) {\n            if i + 1 == j {\n                longest_palindrome_length\
    \ = 2;\n                longest_palindrome_index = i;\n            } else if i\
    \ + 2 == j {\n                longest_palindrome_length = 3;\n               \
    \ longest_palindrome_index = i;\n            }\n            i += 1;\n        \
    \    j -= 1;\n        } else {\n            i = 0;\n            j -= 1;\n    \
    \    }\n    }\n    if longest_palindrome_length == 0 {\n        return result;\n\
    \    }\n    for i in 0..longest_palindrome_index {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    for i in 0..prefix.len() {\n        suffix.push(prefix.chars().nth(prefix.len()\
    \ - i - 1).unwrap());\n    }\n    result.push_str(&suffix);\n    result\n}\n\n\
    fn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppbu3e9k0.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppbu3e9k0.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppbu3e9k0.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppbu3e9k0.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppbu3e9k0.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppbu3e9k0.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppbu3e9k0.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppbu3e9k0.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppbu3e9k0.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppbu3e9k0.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   for c in string.chars().rev() {\n        suffix.push(c);\n        if is_palindrome(&string,\
    \ &suffix) {\n            result.push_str(&suffix);\n            break;\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmptdmyvakl.rs:16:12\n   |\n16 |         if is_palindrome(&string, &suffix)\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptdmyvakl.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptdmyvakl.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptdmyvakl.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptdmyvakl.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptdmyvakl.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptdmyvakl.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptdmyvakl.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\ne"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    string.push_str(&longest_palindrome_suffix);\n\
    \    string.push_str(&string[..string.len() - longest_palindrome_suffix.len()].chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuoaebkv_.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuoaebkv_.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuoaebkv_.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_len = 0;\n    let mut\
    \ longest_palindrome_idx = 0;\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            if i + 1 == j {\n                longest_palindrome_len = 2;\n\
    \                longest_palindrome_idx = i;\n            } else if i + 2 == j\
    \ {\n                longest_palindrome_len = 3;\n                longest_palindrome_idx\
    \ = i;\n            }\n            i += 1;\n            j -= 1;\n        } else\
    \ {\n            i = 0;\n            j -= 1;\n        }\n    }\n    if longest_palindrome_len\
    \ == 0 {\n        return string;\n    }\n    for i in 0..longest_palindrome_idx\
    \ {\n        suffix.push(string.chars().nth(i).unwrap());\n    }\n    for i in\
    \ (longest_palindrome_idx + longest_palindrome_len)..string.len() {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    string.push_str(&suffix.chars().rev().collect::<String>());\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6ekpzas.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6ekpzas.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6ekpzas.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6ekpzas.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6ekpzas.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6ekpzas.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6ekpzas.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6ekpzas.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6ekpzas.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6ekpzas.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut i = 0;\n    while i < string.len() {\n        let mut j =\
    \ 0;\n        while j < string.len() - i {\n            if string[i..i + j + 1]\
    \ == string[i + j + 1..i + 2 * j + 2].chars().rev().collect::<String>() {\n  \
    \              if j + 1 > longest_palindrome_suffix_len {\n                  \
    \  longest_palindrome_suffix_len = j + 1;\n                    longest_palindrome_suffix_index\
    \ = i;\n                    longest_palindrome_suffix = string[i..i + j + 1].clone();\n\
    \                }\n            }\n            j += 1;\n        }\n        i +=\
    \ 1;\n    }\n    string.push_str(&string[..longest_palindrome_suffix_index].chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_0171l7x.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_0171l7x.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_0171l7x.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_0171l7x.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_0171l7x.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_0171l7x.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_0171l7x.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_0171l7x.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_0171l7x.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_0171l7x.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `clone` found for type `str` in the current scope\n  --> /tmp/tmp_0171l7x.rs:24:70\n\
    \   |\n24 |                     longest_palindrome_suffix = string[i..i + j +\
    \ 1].clone();\n   |    "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix_len = 0;\n    let mut prefix_len\
    \ = 0;\n    let mut suffix_is_palindrome = false;\n    let mut prefix_is_palindrome\
    \ = false;\n    let mut suffix_is_palindrome_len = 0;\n    let mut prefix_is_palindrome_len\
    \ = 0;\n    let mut suffix_is_palindrome_len_max = 0;\n    let mut prefix_is_palindrome_len_max\
    \ = 0;\n    let mut suffix_is_palindrome_len_max_index = 0;\n    let mut prefix_is_palindrome_len_max_index\
    \ = 0;\n    let mut suffix_is_palindrome_len_max_index_max = 0;\n    let mut prefix_is_palindrome_len_max_index_max\
    \ = 0;\n    let mut suffix_is_palindrome_len_max_index_max_len = 0;\n    let mut\
    \ prefix_is_palindrome_len_max_index_max_len = 0;\n    let mut suffix_is_palindrome_len_max_index_max_len_max\
    \ = 0;\n    let mut prefix_is_palindrome_len_max_index_max_len_max = 0;\n    let\
    \ mut suffix_is_palindrome_len_max_index_max_len_max_index = 0;\n    let mut prefix_is_palindrome_len_max_index_max_len_max_index\
    \ = 0;\n    let mut suffix_is_palindrome_len_max_index_max_len_max_index_max =\
    \ 0;\n    let mut prefix_is_palindrome_len_max_index_max_len_max_index_max = 0;\n\
    \    let mut suffix_is_palindrome_len_max_index_max_len_max_index_max_len = 0;\n\
    \    let mut prefix_is_palindrome_len_max_index_max_len_max_index_max_len = 0;\n\
    \    let mut suffix_is_palindrome_len_max_index_max_len_max_\n}\n\nfn main() {\n\
    \    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpvb2u5s89.rs:35:60\n   |\n\
    35 |     let mut suffix_is_palindrome_len_max_index_max_len_max_\n   |       \
    \                                                     ^ help: add `;` here\n36\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpvb2u5s89.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvb2u5s89.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvb2u5s89.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvb2u5s89.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvb2u5s89.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvb2u5s89.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvb2u5s89.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvb2u5s89.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvb2u5s89.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvb2u5s89.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |              "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut longest_palindrome_suffix_len\
    \ = 0;\n    let mut longest_palindrome_suffix_end = 0;\n    for i in 0..string.len()\
    \ {\n        if is_palindrome(&string[i..]) {\n            longest_palindrome_suffix_len\
    \ = string.len() - i;\n            longest_palindrome_suffix_end = i;\n      \
    \      break;\n        }\n    }\n    let prefix = &string[..longest_palindrome_suffix_end];\n\
    \    let prefix_reversed = prefix.chars().rev().collect::<String>();\n    result.push_str(&prefix_reversed);\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpfa3dy22v.rs:16:12\n   |\n16 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfa3dy22v.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfa3dy22v.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfa3dy22v.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfa3dy22v.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfa3dy22v.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfa3dy22v.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfa3dy22v.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfa3dy22v.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfa3dy22v.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfa3dy22v.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut i = 0;\n    while\
    \ i < string.len() {\n        let (mut j, mut k) = (i, string.len() - 1);\n  \
    \      while j < k {\n            if string.chars().nth(j) != string.chars().nth(k)\
    \ {\n                break;\n            }\n            j += 1;\n            k\
    \ -= 1;\n        }\n        if j >= k && string.len() - i > longest_palindrome_suffix_len\
    \ {\n            longest_palindrome_suffix = string.chars().skip(i).collect();\n\
    \            longest_palindrome_suffix_len = string.len() - i;\n        }\n  \
    \      i += 1;\n    }\n    let prefix = string.chars().take(string.len() - longest_palindrome_suffix_len).collect::<String>();\n\
    \    let prefix_reversed = prefix.chars().rev().collect::<String>();\n    string.push_str(&prefix_reversed);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplhb9zebi.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplhb9zebi.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplhb9zebi.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplhb9zebi.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplhb9zebi.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplhb9zebi.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplhb9zebi.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplhb9zebi.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplhb9zebi.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplhb9zebi.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut lps = longest_palindromic_suffix(&string);\n\
    \    let prefix = &string[..string.len() - lps];\n    string.push_str(prefix.chars().rev().collect::<String>().as_str());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `longest_palindromic_suffix` in this\
    \ scope\n  --> /tmp/tmp95efsa15.rs:13:19\n   |\n13 |     let mut lps = longest_palindromic_suffix(&string);\n\
    \   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp95efsa15.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp95efsa15.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp95efsa15.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp95efsa15.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp95efsa15.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp95efsa15.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp95efsa15.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp95efsa15.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp95efsa15.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp95efsa15.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \              "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    let\
    \ mut i = 0;\n    while !is_palindrome {\n        suffix.push(string.chars().nth(i).unwrap());\n\
    \        prefix.push(string.chars().nth(string.len() - i - 1).unwrap());\n   \
    \     if suffix == prefix {\n            is_palindrome = true;\n        }\n  \
    \      i += 1;\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6phfqq09.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6phfqq09.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6phfqq09.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6phfqq09.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6phfqq09.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6phfqq09.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6phfqq09.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6phfqq09.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6phfqq09.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6phfqq09.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    for\
    \ i in 0..string.len() {\n        let (suffix_part, prefix_part) = string.split_at(i);\n\
    \        if suffix_part == suffix_part.chars().rev().collect::<String>() {\n \
    \           suffix = suffix_part.to_string();\n            prefix = prefix_part.to_string();\n\
    \            longest_palindrome_length = suffix.len();\n        }\n    }\n   \
    \ string.push_str(&prefix.chars().rev().collect::<String>());\n    string\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5pfy544u.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pfy544u.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5pfy544u.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5pfy544u.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5pfy544u.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5pfy544u.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5pfy544u.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5pfy544u.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5pfy544u.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pfy544u.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = string.clone();\n\
    \    let mut prefix = String::new();\n    while !is_palindrome(&suffix) {\n  \
    \      prefix.push(suffix.pop().unwrap());\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp05nx9r5y.rs:15:12\n   |\n15 |     while !is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp05nx9r5y.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp05nx9r5y.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp05nx9r5y.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp05nx9r5y.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp05nx9r5y.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp05nx9r5y.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp05nx9r5y.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    string.push_str(&reverse(prefix));\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpt7kxz5yd.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:25:22\n   |\n\
    25 |     string.push_str(&reverse(prefix));\n   |                      ^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt7kxz5yd.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt7kxz5yd.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt7kxz5yd.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt7kxz5yd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\ne"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut longest_palindrome_length = 0;\n\
    \    let mut longest_palindrome_index = 0;\n    for i in 0..string.len() {\n \
    \       let (p, s) = string.split_at(i);\n        if p == s.chars().rev().collect::<String>()\
    \ && p.len() > longest_palindrome_length {\n            longest_palindrome_length\
    \ = p.len();\n            longest_palindrome_index = i;\n            prefix =\
    \ p.to_string();\n            suffix = s.to_string();\n        }\n    }\n    result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr87_qxik.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr87_qxik.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr87_qxik.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr87_qxik.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr87_qxik.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr87_qxik.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr87_qxik.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr87_qxik.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr87_qxik.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr87_qxik.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6udgrnn.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = string.clone();\n\
    \    let mut prefix = String::new();\n    while !suffix.is_empty() {\n       \
    \ if is_palindrome(&suffix) {\n            result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \            return result;\n        }\n        prefix.push(suffix.pop().unwrap());\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp1dsoxvrt.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1dsoxvrt.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1dsoxvrt.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1dsoxvrt.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1dsoxvrt.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_length = 0;\n  \
    \  let mut longest_palindrome_start = 0;\n    for i in 0..string.len() {\n   \
    \     let mut j = 0;\n        while i - j >= 0 && i + j < string.len() && string.chars().nth(i\
    \ - j).unwrap() == string.chars().nth(i + j).unwrap() {\n            j += 1;\n\
    \        }\n        if j > longest_palindrome_length {\n            longest_palindrome_length\
    \ = j;\n            longest_palindrome_start = i - j + 1;\n        }\n    }\n\
    \    let mut prefix = String::new();\n    for i in 0..longest_palindrome_start\
    \ {\n        prefix.push(string.chars().nth(i).unwrap());\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmped5hds3t.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmped5hds3t.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmped5hds3t.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmped5hds3t.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmped5hds3t.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmped5hds3t.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmped5hds3t.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmped5hds3t.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmped5hds3t.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmped5hds3t.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut current_palindrome_suffix\
    \ = String::new();\n    let mut current_palindrome_suffix_length = 0;\n    let\
    \ mut current_palindrome_suffix_start = 0;\n    let mut current_palindrome_suffix_end\
    \ = 0;\n    let mut current_palindrome_suffix_center = 0;\n    let mut current_palindrome_suffix_center_length\
    \ = 0;\n    let mut current_palindrome_suffix_center_length_is_odd = false;\n\
    \    let mut current_palindrome_suffix_center_length_is_even = false;\n    let\
    \ mut current_palindrome_suffix_center_length_is_even_and_odd = false;\n    for\
    \ (i, c) in string.chars().enumerate() {\n        if i == 0 {\n            current_palindrome_suffix_center_length_is_odd\
    \ = true;\n            current_palindrome_suffix_center_length_is_even = false;\n\
    \            current_palindrome_suffix_center_length_is_even_and_odd = false;\n\
    \            current_palindrome_suffix_center_length = 1;\n            current_palindrome_suffix_center\
    \ = i;\n            current_palindrome_suffix_start = i;\n            current_palindrome_suffix_end\
    \ = i;\n            current_palindrome_suffix_length = 1;\n            current_palindrome_suffix.push(c);\n\
    \        } else {\n            if c == string.chars().nth(i - 1).unwrap() {\n\
    \                current_palindrome_suffix_center_length_is_odd = false;\n   \
    \             current_palindrome_suffix_center_length_is_even = true;\n      \
    \          current_palindrome_suffix_center_length_is_even_and_odd = false;\n\
    \                current_palindrome_suffix_center_length =\n}\n\nfn main() {\n\
    \    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpc4g1qos3.rs:50:3\n\
    \   |\n11 | fn make_palindrome(string: String) -> String {\n   |             \
    \                                 - unclosed delimiter\n...\n24 |     for (i,\
    \ c) in string.chars().enumerate() {\n   |                                   \
    \           - unclosed delimiter\n...\n35 |         } else {\n   |           \
    \     - unclosed delimiter\n36 |             if c == string.chars().nth(i - 1).unwrap()\
    \ {\n   |                                                        - this delimiter\
    \ might not be properly closed...\n...\n41 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n50 | }\n   |   ^\n\nerror: expected expression,\
    \ found `}`\n  --> /tmp/tmpc4g1qos3.rs:41:1\n   |\n41 | }\n   | ^ expected expression\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc4g1qos3.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc4g1qos3.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc4g1qos3.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc4g1qos3.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc4g1qos3.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc4g1qos3.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc4g1qos3.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in th"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ i = 0;\n    let mut j = string.len() - 1;\n    let mut k = 0;\n    let mut l\
    \ = 0;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            i += 1;\n            j -= 1;\n        } else {\n            i\
    \ = 0;\n            j = string.len() - 1 - k;\n            k += 1;\n        }\n\
    \    }\n    if k > 0 {\n        l = string.len() - k;\n        suffix = string.chars().skip(l).collect();\n\
    \        prefix = string.chars().take(l).collect();\n        palindrome = suffix.clone()\
    \ + &prefix.chars().rev().collect::<String>();\n    } else {\n        palindrome\
    \ = string;\n    }\n    palindrome\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpo35l66un.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo35l66un.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo35l66un.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpo35l66un.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo35l66un.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo35l66un.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo35l66un.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo35l66un.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo35l66un.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo35l66un.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len() -\
    \ 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    if i == j {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n    string\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpiuwqrqms.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiuwqrqms.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiuwqrqms.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiuwqrqms.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiuwqrqms.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiuwqrqms.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiuwqrqms.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiuwqrqms.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiuwqrqms.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiuwqrqms.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ longest_palindrome = String::new();\n    let mut longest_palindrome_len = 0;\n\
    \    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n\
    \    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n\
    \    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n\
    \    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n\
    \    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut ab =\
    \ 0;\n    let mut ac = 0;\n    let mut ad = 0;\n    let mut ae = 0;\n    let mut\
    \ af = 0;\n    let mut ag = 0;\n    let mut ah = 0;\n    let mut ai = 0;\n   \
    \ let mut aj = 0;\n    let mut ak = 0;\n    let mut al = 0;\n    let mut am =\
    \ 0;\n    let mut an = 0;\n    let mut ao = 0;\n    let mut ap = 0;\n    let mut\
    \ aq = 0;\n    let mut ar = 0;\n    let mut as_ = 0;\n    let mut at = 0;\n  \
    \  let mut au = 0;\n    let mut av = 0;\n    let mut aw = 0;\n    let mut ax =\
    \ 0;\n    let mut ay = 0;\n    let mut az = 0;\n    let mut ba = 0;\n    let mut\
    \ bb = 0;\n    let mut bc = 0;\n    let mut bd = 0;\n    let mut be = 0;\n   \
    \ let mut bf = 0;\n    let mut bg = 0;\n    let mut bh = 0;\n    let mut bi =\
    \ 0;\n    let mut bj = 0\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpcdq65icr.rs:71:19\n   |\n\
    71 |     let mut bj = 0\n   |                   ^ help: add `;` here\n72 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcdq65icr.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcdq65icr.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcdq65icr.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcdq65icr.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcdq65icr.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcdq65icr.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcdq65icr.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcdq65icr.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcdq65icr.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcdq65icr.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  --> /tm"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut suffix_len = 0;\n    let mut prefix_len\
    \ = 0;\n    let mut max_palindrome_len = 0;\n    let mut max_palindrome_start\
    \ = 0;\n    let mut max_palindrome_end = 0;\n    let mut max_palindrome_start_index\
    \ = 0;\n    let mut max_palindrome_end_index = 0;\n    let mut max_palindrome_len_index\
    \ = 0;\n    let mut max_palindrome_start_index_index = 0;\n    let mut max_palindrome_end_index_index\
    \ = 0;\n    let mut max_palindrome_start_index_index_index = 0;\n    let mut max_palindrome_end_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index = 0;\n    let mut max_palindrome_len_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index = 0;\n    let mut\
    \ max_palindrome_len_index_index_index_index_index = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index_index_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index_index_index_index_index_index\
    \ = 0;\n    let mut max_palindrome_len_index_index_index_index_index_index_index_index_\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpa024qrkr.rs:37:80\n   |\n\
    37 |     let mut max_palindrome_len_index_index_index_index_index_index_index_index_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n38 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa024qrkr.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa024qrkr.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa024qrkr.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa024qrkr.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa024qrkr.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa024qrkr.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa024qrkr.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa024qrkr.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa024qrkr.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa024qrkr.rs:46:25\n   |\n46 |     assert_"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            if i + 1 == j {\n                longest_palindrome_length =\
    \ 2;\n                longest_palindrome_index = i;\n            } else if i +\
    \ 2 == j {\n                longest_palindrome_length = 3;\n                longest_palindrome_index\
    \ = i;\n            }\n            i += 1;\n            j -= 1;\n        } else\
    \ {\n            i = 0;\n            j -= 1;\n        }\n    }\n    if longest_palindrome_length\
    \ == 0 {\n        string.push(string.chars().nth(0).unwrap());\n        return\
    \ string;\n    }\n    prefix = string.chars().take(longest_palindrome_index).collect();\n\
    \    suffix = string.chars().skip(longest_palindrome_index + longest_palindrome_length).collect();\n\
    \    string.push_str(&suffix.chars().rev().collect::<String>());\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmomm1t23.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmomm1t23.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmomm1t23.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmomm1t23.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmomm1t23.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmomm1t23.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmomm1t23.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmomm1t23.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmomm1t23.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmomm1t23.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut i = 0;\n    while i < string.len() {\n\
    \        let mut j = string.len() - 1;\n        while j >= i {\n            if\
    \ string.chars().nth(i) == string.chars().nth(j) {\n                i += 1;\n\
    \                j -= 1;\n            } else {\n                break;\n     \
    \       }\n        }\n        if j < i {\n            break;\n        }\n    \
    \    suffix.push(string.pop().unwrap());\n    }\n    prefix = string.chars().rev().collect();\n\
    \    string.push_str(&suffix);\n    string.push_str(&prefix);\n    string\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0u085x7l.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0u085x7l.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0u085x7l.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0u085x7l.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0u085x7l.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0u085x7l.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0u085x7l.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0u085x7l.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0u085x7l.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0u085x7l.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut index = 0;\n    let mut length = 0;\n    let mut string_length\
    \ = string.len();\n    let mut string_chars = string.chars().collect::<Vec<char>>();\n\
    \    let mut string_chars_reverse = string.chars().rev().collect::<Vec<char>>();\n\
    \    while index < string_length {\n        if string_chars[index] == string_chars_reverse[index]\
    \ {\n            length += 1;\n            if length > longest_palindrome_suffix_length\
    \ {\n                longest_palindrome_suffix_length = length;\n            \
    \    longest_palindrome_suffix_index = index;\n            }\n        } else {\n\
    \            length = 0;\n        }\n        index += 1;\n    }\n    if longest_palindrome_suffix_length\
    \ > 0 {\n        longest_palindrome_suffix = string_chars[longest_palindrome_suffix_index\
    \ - longest_palindrome_suffix_length + 1..longest_palindrome_suffix_index + 1].iter().collect();\n\
    \    }\n    string.push_str(&longest_palindrome_suffix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpczel82dd.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpczel82dd.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpczel82dd.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpczel82dd.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpczel82dd.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpczel82dd.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpczel82dd.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpczel82dd.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpczel82dd.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpczel82dd.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    let mut current_palindrome_length = 0;\n\
    \    let mut current_palindrome_index = 0;\n    let mut string_length = string.len();\n\
    \    let mut string_chars = string.chars().collect::<Vec<char>>();\n    for i\
    \ in 0..string_length {\n        if i > 0 && string_chars[i] == string_chars[i\
    \ - 1] {\n            current_palindrome_length = 2;\n            current_palindrome_index\
    \ = i - 1;\n        } else {\n            current_palindrome_length = 1;\n   \
    \         current_palindrome_index = i;\n        }\n        let mut j = 1;\n \
    \       while i - j >= 0 && i + j < string_length {\n            if string_chars[i\
    \ - j] != string_chars[i + j] {\n                break;\n            }\n     \
    \       current_palindrome_length += 2;\n            current_palindrome_index\
    \ = i - j;\n            j += 1;\n        }\n        if current_palindrome_length\
    \ > longest_palindrome_length {\n            longest_palindrome_length = current_palindrome_length;\n\
    \            longest_palindrome_index = current_palindrome_index;\n        }\n\
    \    }\n    for i in 0..longest_palindrome_index {\n        prefix.push(string_chars[i]);\n\
    \    }\n    for i in longest_palindrome_index + longest_palindrome_length..string_length\
    \ {\n        suffix.push(string_chars[i]);\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string.push_str(&suffix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxu9sbsij.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxu9sbsij.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxu9sbsij.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxu9sbsij.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxu9sbsij.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxu9sbsij.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxu9sbsij.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxu9sbsij.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxu9sbsij.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxu9sbsij.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = string.len();\n    while\
    \ i > 0 {\n        suffix.push(string.chars().nth(i - 1).unwrap());\n        prefix.push(string.chars().nth(string.len()\
    \ - i).unwrap());\n        if suffix == prefix {\n            break;\n       \
    \ }\n        i -= 1;\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa8dfay55.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa8dfay55.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa8dfay55.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa8dfay55.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa8dfay55.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa8dfay55.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa8dfay55.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa8dfay55.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa8dfay55.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa8dfay55.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    for i in 0..string.len() {\n        let suffix = &string[i..];\n \
    \       let suffix_len = suffix.len();\n        if is_palindrome(suffix) {\n \
    \           if suffix_len > longest_palindrome_suffix_len {\n                longest_palindrome_suffix\
    \ = suffix.to_string();\n                longest_palindrome_suffix_len = suffix_len;\n\
    \                longest_palindrome_suffix_index = i;\n            }\n       \
    \ }\n    }\n    let prefix = &string[..longest_palindrome_suffix_index];\n   \
    \ let prefix_reversed = reverse(prefix);\n    string.push_str(&prefix_reversed);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpmo__06fr.rs:19:12\n   |\n19 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmpmo__06fr.rs:28:27\n   |\n\
    28 |     let prefix_reversed = reverse(prefix);\n   |                        \
    \   ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpmo__06fr.rs:35:17\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpmo__06fr.rs:35:25\n \
    \  |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmo__06fr.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmo__06fr.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmo__06fr.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmo__06fr.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmo__06fr.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmo__06fr.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmo__06fr.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut prefix_reversed = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp3nblimr9.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3nblimr9.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3nblimr9.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3nblimr9.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3nblimr9.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3nblimr9.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3nblimr9.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    for\
    \ c in string.chars().rev() {\n        suffix.push(c);\n        if is_palindrome(&suffix)\
    \ {\n            is_palindrome = true;\n            break;\n        }\n    }\n\
    \    if is_palindrome {\n        for c in string.chars() {\n            prefix.push(c);\n\
    \            if is_palindrome(&prefix) {\n                break;\n           \
    \ }\n        }\n        result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxa8pv9jq.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxa8pv9jq.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxa8pv9jq.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxa8pv9jq.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxa8pv9jq.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmpxa8pv9jq.rs:18:12\n   |\n15 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n18 |         if is"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_length];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv7ixwbgj.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        suffix.push(string.chars().nth(i).unwrap());\n        prefix.push(string.chars().nth(string.len()\
    \ - i - 1).unwrap());\n        if suffix == prefix {\n            result.push_str(&prefix);\n\
    \            break;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcc2ouqdz.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcc2ouqdz.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcc2ouqdz.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcc2ouqdz.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcc2ouqdz.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcc2ouqdz.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcc2ouqdz.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcc2ouqdz.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcc2ouqdz.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcc2ouqdz.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut reversed = string.clone();\n    reversed.reverse();\n    let mut\
    \ result = string.clone();\n    result.push_str(&reversed);\n    let mut longest_palindrome_suffix\
    \ = String::new();\n    for i in 0..string.len() {\n        let suffix = &string[i..];\n\
    \        let reversed_suffix = &reversed[..string.len() - i];\n        if suffix\
    \ == reversed_suffix {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \        }\n    }\n    let prefix = &string[..string.len() - longest_palindrome_suffix.len()];\n\
    \    let reversed_prefix = prefix.chars().rev().collect::<String>();\n    result.push_str(&reversed_prefix);\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmqgm0ldh.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmqgm0ldh.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmqgm0ldh.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmqgm0ldh.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmqgm0ldh.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmqgm0ldh.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmqgm0ldh.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmqgm0ldh.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmqgm0ldh.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmqgm0ldh.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `reverse` found for struct `String` in the current scope\n  --> /tmp/tmpmqgm0ldh.rs:13:14\n\
    \   |\n13 |     reversed.reverse();\n   |              ^^^^^^^ help: there is\
    \ an associated "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut i = 0;\n    let mut\
    \ j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i) ==\
    \ string.chars().nth(j) {\n            palindrome_suffix.push(string.chars().nth(i).unwrap());\n\
    \            palindrome_prefix.push(string.chars().nth(j).unwrap());\n       \
    \     i += 1;\n            j -= 1;\n        } else {\n            i = 0;\n   \
    \         j -= 1;\n            palindrome_suffix.clear();\n            palindrome_prefix.clear();\n\
    \        }\n    }\n    string.push_str(&palindrome_prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1gsyau9v.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1gsyau9v.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1gsyau9v.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1gsyau9v.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1gsyau9v.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1gsyau9v.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1gsyau9v.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1gsyau9v.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1gsyau9v.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1gsyau9v.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    for i in (0..string.len()).rev() {\n        if is_palindrome(&string[i..])\
    \ {\n            palindrome_suffix = string[i..].to_string();\n            break;\n\
    \        }\n    }\n    string.push_str(&palindrome_suffix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp6tdnut2o.rs:15:12\n   |\n15 |         if is_palindrome(&string[i..])\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6tdnut2o.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6tdnut2o.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6tdnut2o.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6tdnut2o.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6tdnut2o.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6tdnut2o.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6tdnut2o.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6tdnut2o.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6tdnut2o.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6tdnut2o.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix_len = 0;\n    let mut prefix_len\
    \ = 0;\n    let mut i = 0;\n    let mut j = string.len() - 1;\n    while i < j\
    \ {\n        if string.chars().nth(i) == string.chars().nth(j) {\n           \
    \ suffix_len += 1;\n            prefix_len += 1;\n            i += 1;\n      \
    \      j -= 1;\n        } else {\n            break;\n        }\n    }\n    let\
    \ prefix = string.chars().take(prefix_len).collect::<String>();\n    let mut suffix\
    \ = string.chars().skip(suffix_len).collect::<String>();\n    suffix.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    suffix\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1u72cmyo.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1u72cmyo.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1u72cmyo.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1u72cmyo.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1u72cmyo.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1u72cmyo.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1u72cmyo.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1u72cmyo.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1u72cmyo.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1u72cmyo.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_start = 0;\n    for i in 0..string.len() {\n        let\
    \ (s, p) = string.split_at(i);\n        if s == p.chars().rev().collect::<String>()\
    \ && s.len() > longest_palindrome_length {\n            longest_palindrome_length\
    \ = s.len();\n            longest_palindrome_start = i;\n        }\n    }\n  \
    \  if longest_palindrome_length > 0 {\n        let (s, p) = string.split_at(longest_palindrome_start);\n\
    \        suffix = s.to_string();\n        prefix = p.chars().rev().collect::<String>();\n\
    \    }\n    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvpj515mo.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvpj515mo.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvpj515mo.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvpj515mo.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvpj515mo.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvpj515mo.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvpj515mo.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvpj515mo.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvpj515mo.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvpj515mo.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        let (prefix_len, suffix_len) = (prefix.len(), suffix.len());\n  \
    \      if prefix_len > suffix_len {\n            suffix.push(string.chars().nth(i).unwrap());\n\
    \        } else {\n            prefix.push(string.chars().nth(i).unwrap());\n\
    \        }\n        if is_palindrome(&prefix) && is_palindrome(&suffix) {\n  \
    \          break;\n        }\n        i += 1;\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpoyskjcru.rs:23:12\n   |\n23 |         if is_palindrome(&prefix) && is_palindrome(&suffix)\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `is_palindrome` in this scope\n  --> /tmp/tmpoyskjcru.rs:23:38\n\
    \   |\n23 |         if is_palindrome(&prefix) && is_palindrome(&suffix) {\n  \
    \ |                                      ^^^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpoyskjcru.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoyskjcru.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoyskjcru.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoyskjcru.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoyskjcru.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoyskjcru.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoyskjcru.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoyskjcru.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoyskjcru.rs:38:17\n  \
    \ |\n38 |     ass"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut reversed = string.clone();\n    reversed.reverse();\n    let mut\
    \ result = string.clone();\n    result.push_str(&reversed[string.len()..]);\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvdjikgm7.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvdjikgm7.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvdjikgm7.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvdjikgm7.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvdjikgm7.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvdjikgm7.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvdjikgm7.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvdjikgm7.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvdjikgm7.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvdjikgm7.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `reverse` found for struct `String` in the current scope\n  --> /tmp/tmpvdjikgm7.rs:13:14\n\
    \   |\n13 |     reversed.reverse();\n   |              ^^^^^^^ help: there is\
    \ an associated "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_length];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv7ixwbgj.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut is_palindrome = false;\n    for\
    \ (i, c) in string.chars().enumerate() {\n        if is_palindrome {\n       \
    \     break;\n        }\n        suffix.push(c);\n        prefix.push(string.chars().nth(string.len()\
    \ - i - 1).unwrap());\n        if suffix == prefix {\n            is_palindrome\
    \ = true;\n        }\n    }\n    if is_palindrome {\n        result.push_str(&prefix);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi7wvnb5d.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi7wvnb5d.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi7wvnb5d.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi7wvnb5d.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi7wvnb5d.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi7wvnb5d.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi7wvnb5d.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi7wvnb5d.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi7wvnb5d.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi7wvnb5d.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6udgrnn.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6udgrnn.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6udgrnn.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6udgrnn.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut longest_palindrome_len = 0;\n\
    \    let mut longest_palindrome_start = 0;\n    for i in 0..string.len() {\n \
    \       let (p, s) = string.split_at(i);\n        if is_palindrome(p) {\n    \
    \        if p.len() > longest_palindrome_len {\n                longest_palindrome_len\
    \ = p.len();\n                longest_palindrome_start = i;\n                prefix\
    \ = p.to_string();\n                suffix = s.to_string();\n            }\n \
    \       }\n    }\n    result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp9pf1e1tb.rs:19:12\n   |\n19 |         if is_palindrome(p) {\n   |  \
    \          ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:34:17\n   |\n34 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9pf1e1tb.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9pf1e1tb.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9pf1e1tb.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9pf1e1tb.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: aborting "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ postfix = String::new();\n    let mut is_palindrome = false;\n    let mut i\
    \ = 0;\n    while !is_palindrome {\n        let (prefix_part, postfix_part) =\
    \ string.split_at(i);\n        prefix = prefix_part.to_string();\n        postfix\
    \ = postfix_part.to_string();\n        is_palindrome = is_palindrome(&postfix);\n\
    \        i += 1;\n    }\n    let mut prefix = prefix.chars().rev().collect::<String>();\n\
    \    prefix.push_str(&postfix);\n    prefix\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0eksb73o.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0eksb73o.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0eksb73o.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0eksb73o.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0eksb73o.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0eksb73o.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0eksb73o.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0eksb73o.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0eksb73o.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0eksb73o.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmp0eksb73o.rs:21:25\n   |\n15 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n21 |         is_pa"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut string_length = string.len();\n    let mut string_chars =\
    \ string.chars().collect::<Vec<char>>();\n    for i in 0..string_length {\n  \
    \      let mut j = 0;\n        while i - j >= 0 && i + j < string_length && string_chars[i\
    \ - j] == string_chars[i + j] {\n            j += 1;\n        }\n        if j\
    \ > longest_palindrome_suffix_length {\n            longest_palindrome_suffix_length\
    \ = j;\n            longest_palindrome_suffix_index = i;\n        }\n    }\n \
    \   for i in 0..longest_palindrome_suffix_length {\n        longest_palindrome_suffix.push(string_chars[longest_palindrome_suffix_index\
    \ - i]);\n    }\n    string.push_str(&longest_palindrome_suffix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpswu9u79g.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpswu9u79g.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpswu9u79g.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpswu9u79g.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpswu9u79g.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpswu9u79g.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpswu9u79g.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpswu9u79g.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpswu9u79g.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpswu9u79g.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut is_palindrome = false;\n    let\
    \ mut i = 0;\n    while !is_palindrome {\n        let (prefix_part, suffix_part)\
    \ = result.split_at(i);\n        prefix = prefix_part.to_string();\n        suffix\
    \ = suffix_part.to_string();\n        is_palindrome = is_palindrome(&suffix);\n\
    \        i += 1;\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_cuiem5r.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_cuiem5r.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_cuiem5r.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_cuiem5r.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_cuiem5r.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_cuiem5r.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_cuiem5r.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_cuiem5r.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_cuiem5r.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_cuiem5r.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0618]: expected\
    \ function, found `bool`\n  --> /tmp/tmp_cuiem5r.rs:21:25\n   |\n15 |     let\
    \ mut is_palindrome = false;\n   |         ----------------- `is_palindrome` has\
    \ type `bool`\n...\n21 |         is_pa"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut palindrome = string.clone();\n    let mut prefix = String::new();\n\
    \    let mut suffix = String::new();\n    for (i, c) in string.chars().enumerate()\
    \ {\n        prefix.push(c);\n        suffix.insert(0, c);\n        if prefix\
    \ == suffix {\n            palindrome.push_str(&suffix[i + 1..]);\n          \
    \  break;\n        }\n    }\n    palindrome\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvq87tpdv.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvq87tpdv.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvq87tpdv.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvq87tpdv.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvq87tpdv.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvq87tpdv.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvq87tpdv.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvq87tpdv.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvq87tpdv.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvq87tpdv.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut reversed = string.clone();\n    reversed.reverse();\n    let mut\
    \ palindrome = string.clone();\n    palindrome.push_str(&reversed);\n    let mut\
    \ z_function = z_function(&palindrome);\n    let mut longest_palindrome_suffix\
    \ = 0;\n    for i in 0..z_function.len() {\n        if z_function[i] == i + 1\
    \ {\n            longest_palindrome_suffix = i + 1;\n        }\n    }\n    let\
    \ mut prefix = string.clone();\n    prefix.truncate(string.len() - longest_palindrome_suffix);\n\
    \    prefix.reverse();\n    palindrome.push_str(&prefix);\n    palindrome\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `z_function` in this scope\n  --> /tmp/tmpf3illhki.rs:16:26\n\
    \   |\n16 |     let mut z_function = z_function(&palindrome);\n   |          \
    \                ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpf3illhki.rs:32:17\n   |\n32 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf3illhki.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf3illhki.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf3illhki.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf3illhki.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf3illhki.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf3illhki.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf3illhki.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf3illhki.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf3illhki.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ postfix = String::new();\n    let mut palindrome_length = 0;\n    let mut palindrome_index\
    \ = 0;\n    let mut i = 0;\n    let mut j = string.len() - 1;\n    while i < j\
    \ {\n        if string.chars().nth(i) == string.chars().nth(j) {\n           \
    \ palindrome_length += 1;\n            palindrome_index = i;\n        } else {\n\
    \            palindrome_length = 0;\n            palindrome_index = 0;\n     \
    \   }\n        i += 1;\n        j -= 1;\n    }\n    prefix = string.chars().take(palindrome_index).collect();\n\
    \    postfix = string.chars().skip(palindrome_index + palindrome_length).collect();\n\
    \    prefix.chars().rev().chain(string.chars()).chain(postfix.chars().rev()).collect()\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfq_b735x.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfq_b735x.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfq_b735x.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfq_b735x.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfq_b735x.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfq_b735x.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfq_b735x.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfq_b735x.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfq_b735x.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfq_b735x.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&reversed_prefix);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpekf0d6t5.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpekf0d6t5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpekf0d6t5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    let prefix_reversed = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp3m41lvo4.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3m41lvo4.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3m41lvo4.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3m41lvo4.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3m41lvo4.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3m41lvo4.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3m41lvo4.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3m41lvo4.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3m41lvo4.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3m41lvo4.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3m41lvo4.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut i = string.len();\n    while\
    \ i > 0 {\n        suffix.push(string.chars().nth(i - 1).unwrap());\n        prefix.push(string.chars().nth(string.len()\
    \ - i).unwrap());\n        if suffix == prefix {\n            break;\n       \
    \ }\n        i -= 1;\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa8dfay55.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa8dfay55.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa8dfay55.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa8dfay55.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa8dfay55.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa8dfay55.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa8dfay55.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa8dfay55.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa8dfay55.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa8dfay55.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    let mut longest_palindrome_start = 0;\n\
    \    let mut longest_palindrome_end = 0;\n    let mut i = 0;\n    let mut j =\
    \ 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut\
    \ n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let\
    \ mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n   \
    \ let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc\
    \ = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let\
    \ mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n\
    \    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn\
    \ = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let\
    \ mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n\
    \    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy\
    \ = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let mut bbb = 0;\n    let\
    \ mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee = 0;\n    let mut fff =\
    \ 0;\n    let mut g\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqynqeb88.rs:69:14\n   |\n\
    69 |     let mut g\n   |              ^ help: add `;` here\n70 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqynqeb88.rs:74:17\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqynqeb88.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqynqeb88.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqynqeb88.rs:75:25\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqynqeb88.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqynqeb88.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqynqeb88.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqynqeb88.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqynqeb88.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqynqeb88.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpqynqe"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut reversed = string.clone();\n    reversed.reverse();\n\
    \    let mut longest_palindrome = String::new();\n    for i in 0..string.len()\
    \ {\n        let prefix = &string[..i];\n        let postfix = &string[i..];\n\
    \        if postfix == reversed[..postfix.len()] {\n            longest_palindrome\
    \ = postfix.to_string();\n        }\n    }\n    string.push_str(&reversed[..longest_palindrome.len()].chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0zpk0se6.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zpk0se6.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0zpk0se6.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0zpk0se6.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0zpk0se6.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0zpk0se6.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0zpk0se6.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0zpk0se6.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0zpk0se6.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0zpk0se6.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `reverse` found for struct `String` in the current scope\n  --> /tmp/tmp0zpk0se6.rs:14:14\n\
    \   |\n14 |     reversed.reverse();\n   |              ^^^^^^^ help: there is\
    \ an associated "
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    for i in 0..string.len() {\n        let (palindrome_suffix, palindrome_suffix_length)\
    \ = find_palindrome_suffix(&string, i);\n        if palindrome_suffix_length >\
    \ longest_palindrome_suffix_length {\n            longest_palindrome_suffix =\
    \ palindrome_suffix;\n            longest_palindrome_suffix_length = palindrome_suffix_length;\n\
    \            longest_palindrome_suffix_index = i;\n        }\n    }\n    let prefix\
    \ = &string[0..longest_palindrome_suffix_index];\n    let prefix_reversed = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `find_palindrome_suffix` in this scope\n\
    \  --> /tmp/tmpmumhfmg3.rs:17:61\n   |\n17 |         let (palindrome_suffix, palindrome_suffix_length)\
    \ = find_palindrome_suffix(&string, i);\n   |                                \
    \                             ^^^^^^^^^^^^^^^^^^^^^^ help: a local variable with\
    \ a similar name exists: `longest_palindrome_suffix`\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpmumhfmg3.rs:32:17\n   |\n32 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmumhfmg3.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmumhfmg3.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmumhfmg3.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmumhfmg3.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmumhfmg3.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmumhfmg3.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmumhfmg3.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmumhfmg3.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: can"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        prefix.push(string.chars().nth(i).unwrap());\n        suffix.push(string.chars().nth(string.len()\
    \ - i - 1).unwrap());\n        if prefix == suffix {\n            result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \            break;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpntot3pya.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpntot3pya.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpntot3pya.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpntot3pya.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpntot3pya.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpntot3pya.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpntot3pya.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpntot3pya.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpntot3pya.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpntot3pya.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    string.push_str(&reverse(prefix));\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpt7kxz5yd.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:25:22\n   |\n\
    25 |     string.push_str(&reverse(prefix));\n   |                      ^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt7kxz5yd.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt7kxz5yd.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt7kxz5yd.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt7kxz5yd.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt7kxz5yd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\ne"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    for i in 0..string.len() {\n        let\
    \ (prefix_length, suffix_length) = (i, string.len() - i - 1);\n        if prefix_length\
    \ <= suffix_length {\n            let (prefix_slice, suffix_slice) = string.split_at(prefix_length);\n\
    \            if prefix_slice == suffix_slice.chars().rev().collect::<String>()\
    \ {\n                if prefix_length > longest_palindrome_length {\n        \
    \            longest_palindrome_length = prefix_length;\n                    longest_palindrome_index\
    \ = i;\n                }\n            }\n        } else {\n            let (prefix_slice,\
    \ suffix_slice) = string.split_at(suffix_length);\n            if prefix_slice\
    \ == suffix_slice.chars().rev().collect::<String>() {\n                if suffix_length\
    \ > longest_palindrome_length {\n                    longest_palindrome_length\
    \ = suffix_length;\n                    longest_palindrome_index = i;\n      \
    \          }\n            }\n        }\n    }\n    let (prefix, suffix) = string.split_at(longest_palindrome_index);\n\
    \    string.push_str(prefix.chars().rev().collect::<String>().as_str());\n   \
    \ string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp68jk5j1r.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68jk5j1r.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68jk5j1r.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68jk5j1r.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68jk5j1r.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68jk5j1r.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68jk5j1r.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68jk5j1r.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68jk5j1r.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68jk5j1r.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_index = 0;\n    for i in 0..string.len() {\n        let\
    \ (mut left, mut right) = (i, i);\n        while left >= 0 && right < string.len()\
    \ && string.chars().nth(left) == string.chars().nth(right) {\n            left\
    \ -= 1;\n            right += 1;\n        }\n        if right - left - 1 > longest_palindrome_length\
    \ {\n            longest_palindrome_length = right - left - 1;\n            longest_palindrome_index\
    \ = left + 1;\n        }\n        left = i;\n        right = i + 1;\n        while\
    \ left >= 0 && right < string.len() && string.chars().nth(left) == string.chars().nth(right)\
    \ {\n            left -= 1;\n            right += 1;\n        }\n        if right\
    \ - left - 1 > longest_palindrome_length {\n            longest_palindrome_length\
    \ = right - left - 1;\n            longest_palindrome_index = left + 1;\n    \
    \    }\n    }\n    suffix = string.chars().skip(longest_palindrome_index).take(longest_palindrome_length).collect();\n\
    \    prefix = string.chars().take(longest_palindrome_index).collect();\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnaj2uufl.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnaj2uufl.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnaj2uufl.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnaj2uufl.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnaj2uufl.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnaj2uufl.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnaj2uufl.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnaj2uufl.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnaj2uufl.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnaj2uufl.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_suffix_len = 0;\n  \
    \  for i in 0..string.len() {\n        let suffix_len = string.len() - i;\n  \
    \      let prefix_len = i;\n        let suffix_str = string.get(i..).unwrap();\n\
    \        let prefix_str = string.get(..i).unwrap();\n        if is_palindrome(suffix_str)\
    \ && suffix_len > longest_palindrome_suffix_len {\n            longest_palindrome_suffix_len\
    \ = suffix_len;\n            suffix = suffix_str.to_string();\n            prefix\
    \ = prefix_str.to_string();\n        }\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp7jhi73xq.rs:21:12\n   |\n21 |         if is_palindrome(suffix_str) &&\
    \ suffix_len > longest_palindrome_suffix_len {\n   |            ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7jhi73xq.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7jhi73xq.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7jhi73xq.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7jhi73xq.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7jhi73xq.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jhi73xq.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7jhi73xq.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7jhi73xq.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7jhi73xq.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7jhi73xq.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                 "
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = string.split_off(string.len()\
    \ - i);\n        if is_palindrome(&suffix) {\n            longest_palindrome_suffix\
    \ = suffix;\n            break;\n        }\n    }\n    let prefix = string.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:16:12\n   |\n16 |         if is_palindrome(&suffix) {\n\
    \   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8jqse45b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8jqse45b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8jqse45b.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abo"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut i = 0;\n    let mut j = string.len() -\
    \ 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            suffix.push(string.chars().nth(i).unwrap());\n            i +=\
    \ 1;\n            j -= 1;\n        } else {\n            i = 0;\n            j\
    \ -= 1;\n            prefix.push(string.chars().nth(j + 1).unwrap());\n      \
    \  }\n    }\n    string.push_str(&prefix);\n    string.push_str(&suffix);\n  \
    \  string.push_str(&suffix.chars().rev().collect::<String>());\n    string\n}\n\
    \nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3rh_x2fq.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3rh_x2fq.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3rh_x2fq.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3rh_x2fq.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3rh_x2fq.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3rh_x2fq.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3rh_x2fq.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3rh_x2fq.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3rh_x2fq.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3rh_x2fq.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut longest_palindrome_len = 0;\n\
    \    let mut longest_palindrome_end = 0;\n    let mut longest_palindrome_start\
    \ = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut\
    \ l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let\
    \ mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n   \
    \ let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n\
    \    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut aa =\
    \ 0;\n    let mut bb = 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut\
    \ ee = 0;\n    let mut ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n   \
    \ let mut ii = 0;\n    let mut jj = 0;\n    let mut kk = 0;\n    let mut ll =\
    \ 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut\
    \ pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n   \
    \ let mut tt = 0;\n    let mut uu = 0;\n    let mut vv = 0;\n    let mut ww =\
    \ 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut\
    \ aaa = 0;\n    let mut bbb = 0;\n    let mut ccc = 0;\n    let mut ddd = 0;\n\
    \    let mut eee = 0;\n    let mut fff = 0;\n    let mut ggg = 0;\n    let mut\
    \ hhh = 0\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmppanql2zc.rs:69:20\n   |\n\
    69 |     let mut hhh = 0\n   |                    ^ help: add `;` here\n70 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppanql2zc.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppanql2zc.rs:74:25\n   |\n74 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppanql2zc.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppanql2zc.rs:75:25\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppanql2zc.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppanql2zc.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppanql2zc.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppanql2zc.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppanql2zc.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppanql2zc.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  --> /"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut palindrome = String::new();\n    let mut\
    \ i = 0;\n    let mut j = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i)\
    \ == string.chars().nth(j) {\n            suffix.push(string.chars().nth(i).unwrap());\n\
    \            prefix.push(string.chars().nth(j).unwrap());\n            i += 1;\n\
    \            j -= 1;\n        } else {\n            break;\n        }\n    }\n\
    \    if i == j {\n        palindrome.push_str(&string);\n        palindrome.push(string.chars().nth(i).unwrap());\n\
    \    } else {\n        palindrome.push_str(&string);\n        palindrome.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    }\n    palindrome\n}\n\nfn main() {\n    let candidate = make_palindrome;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnh35j4u5.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnh35j4u5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnh35j4u5.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnh35j4u5.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnh35j4u5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnh35j4u5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnh35j4u5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnh35j4u5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnh35j4u5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnh35j4u5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut prefix = String::new();\n    let mut\
    \ suffix = String::new();\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let (prefix_chars, suffix_chars) = string.split_at(i);\n        prefix\
    \ = prefix_chars.to_string();\n        suffix = suffix_chars.to_string();\n  \
    \      if is_palindrome(&suffix) && suffix.len() > longest_palindrome_suffix_length\
    \ {\n            longest_palindrome_suffix = suffix.clone();\n            longest_palindrome_suffix_length\
    \ = suffix.len();\n        }\n    }\n    let mut reversed_prefix = prefix.chars().rev().collect::<String>();\n\
    \    reversed_prefix.push_str(&longest_palindrome_suffix);\n    reversed_prefix\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpcg3fy1ha.rs:21:12\n   |\n21 |         if is_palindrome(&suffix) && suffix.len()\
    \ > longest_palindrome_suffix_length {\n   |            ^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcg3fy1ha.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcg3fy1ha.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcg3fy1ha.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcg3fy1ha.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcg3fy1ha.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcg3fy1ha.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcg3fy1ha.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcg3fy1ha.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcg3fy1ha.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcg3fy1ha.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |               "
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    for i in 0..string.len() {\n        let suffix = &string[i..];\n        if\
    \ is_palindrome(suffix) {\n            longest_palindrome_suffix = suffix.to_string();\n\
    \            break;\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix.len()];\n    let mut prefix_reversed = prefix.chars().rev().collect::<String>();\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmp3nblimr9.rs:16:12\n   |\n16 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3nblimr9.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3nblimr9.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3nblimr9.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3nblimr9.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3nblimr9.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3nblimr9.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3nblimr9.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_length = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_length {\n          \
    \      longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_length\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_length];\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv7ixwbgj.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv7ixwbgj.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv7ixwbgj.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror: abor"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    for i in 0..string.len()\
    \ {\n        let suffix = &string[i..];\n        if is_palindrome(suffix) {\n\
    \            if suffix.len() > longest_palindrome_suffix_len {\n             \
    \   longest_palindrome_suffix = suffix.to_string();\n                longest_palindrome_suffix_len\
    \ = suffix.len();\n            }\n        }\n    }\n    let prefix = &string[..string.len()\
    \ - longest_palindrome_suffix_len];\n    let prefix_reversed = reverse(prefix);\n\
    \    string.push_str(&prefix_reversed);\n    string\n}\n\nfn main() {\n    let\
    \ candidate = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:17:12\n   |\n17 |         if is_palindrome(suffix) {\n \
    \  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `reverse` in this scope\n  --> /tmp/tmplpbxi_la.rs:25:27\n   |\n\
    25 |     let prefix_reversed = reverse(prefix);\n   |                        \
    \   ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmplpbxi_la.rs:32:17\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:32:25\n \
    \  |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplpbxi_la.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplpbxi_la.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplpbxi_la.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplpbxi_la.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplpbxi_la.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    let\
    \ mut longest_palindrome_start = 0;\n    let mut longest_palindrome_end = 0;\n\
    \    let mut i = 0;\n    let mut j = string.len() - 1;\n    while i < j {\n  \
    \      if string.chars().nth(i) == string.chars().nth(j) {\n            if i ==\
    \ j {\n                longest_palindrome_length = i + 1;\n                longest_palindrome_start\
    \ = i;\n                longest_palindrome_end = j;\n            } else {\n  \
    \              longest_palindrome_length = j - i + 1;\n                longest_palindrome_start\
    \ = i;\n                longest_palindrome_end = j;\n            }\n        }\n\
    \        i += 1;\n        j -= 1;\n    }\n    if longest_palindrome_length > 0\
    \ {\n        suffix = string[longest_palindrome_start..longest_palindrome_end\
    \ + 1].to_string();\n        prefix = string[0..longest_palindrome_start].to_string();\n\
    \    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n    string.push_str(&suffix);\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp068nd5wj.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp068nd5wj.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp068nd5wj.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp068nd5wj.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp068nd5wj.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp068nd5wj.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp068nd5wj.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp068nd5wj.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp068nd5wj.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp068nd5wj.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut palindrome_suffix = String::new();\n\
    \    let mut palindrome_prefix = String::new();\n    let mut longest_palindrome_suffix_len\
    \ = 0;\n    let mut longest_palindrome_suffix_start = 0;\n    let mut longest_palindrome_suffix_end\
    \ = 0;\n    let mut longest_palindrome_prefix_len = 0;\n    let mut longest_palindrome_prefix_start\
    \ = 0;\n    let mut longest_palindrome_prefix_end = 0;\n    let mut longest_palindrome_len\
    \ = 0;\n    let mut longest_palindrome_start = 0;\n    let mut longest_palindrome_end\
    \ = 0;\n    let mut longest_palindrome_mid = 0;\n    let mut longest_palindrome_mid_len\
    \ = 0;\n    let mut longest_palindrome_mid_start = 0;\n    let mut longest_palindrome_mid_end\
    \ = 0;\n    let mut longest_palindrome_mid_is_odd = false;\n    let mut longest_palindrome_mid_is_even\
    \ = false;\n    let mut longest_palindrome_mid_is_even_start = 0;\n    let mut\
    \ longest_palindrome_mid_is_even_end = 0;\n    let mut longest_palindrome_mid_is_odd_start\
    \ = 0;\n    let mut longest_palindrome_mid_is_odd_end = 0;\n    let mut longest_palindrome_mid_is_even_len\
    \ = 0;\n    let mut longest_palindrome_mid_is_odd_len = 0;\n    let mut longest_palindrome_mid_is_even_mid\
    \ = 0;\n    let mut longest_palindrome_mid_is_odd_mid = 0;\n    let mut longest_palindrome_mid_is_even_mid_start\
    \ = 0;\n    let mut longest_palindrome_mid_is_even_mid_end = 0;\n    let mut longest_palindrome_mid_is_odd_mid_start\
    \ = 0;\n    let mut longest_palindrome_\n}\n\nfn main() {\n    let candidate =\
    \ make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqa0jgyc0.rs:41:32\n   |\n\
    41 |     let mut longest_palindrome_\n   |                                ^ help:\
    \ add `;` here\n42 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:46:17\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:46:25\n \
    \  |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqa0jgyc0.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqa0jgyc0.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa0jgyc0.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqa0jgyc0.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0308]: "
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut suffix = String::new();\n \
    \   let mut prefix = String::new();\n    let mut longest_palindrome_length = 0;\n\
    \    let mut longest_palindrome_index = 0;\n    let mut i = 0;\n    let mut j\
    \ = string.len() - 1;\n    while i < j {\n        if string.chars().nth(i) ==\
    \ string.chars().nth(j) {\n            if i == j {\n                longest_palindrome_length\
    \ = i + 1;\n                longest_palindrome_index = i;\n            } else\
    \ {\n                longest_palindrome_length = i + 2;\n                longest_palindrome_index\
    \ = i + 1;\n            }\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    for i in longest_palindrome_index..string.len() {\n        suffix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    for i in 0..longest_palindrome_index {\n        prefix.push(string.chars().nth(i).unwrap());\n\
    \    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n    result\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyom4kyzd.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyom4kyzd.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyom4kyzd.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyom4kyzd.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyom4kyzd.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyom4kyzd.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyom4kyzd.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyom4kyzd.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyom4kyzd.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyom4kyzd.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    if string.is_empty() {\n        return string;\n    }\n    let mut prefix\
    \ = String::new();\n    let mut suffix = String::new();\n    let mut longest_palindrome_length\
    \ = 0;\n    for i in 0..string.len() {\n        if is_palindrome(&string[i..])\
    \ && string.len() - i > longest_palindrome_length {\n            longest_palindrome_length\
    \ = string.len() - i;\n            suffix = string[i..].to_string();\n       \
    \     prefix = string[..i].to_string();\n        }\n    }\n    suffix + prefix.chars().rev().collect::<String>().as_str()\n\
    }\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_palindrome` in this scope\n  -->\
    \ /tmp/tmpa_v7ibvj.rs:19:12\n   |\n19 |         if is_palindrome(&string[i..])\
    \ && string.len() - i > longest_palindrome_length {\n   |            ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa_v7ibvj.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa_v7ibvj.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa_v7ibvj.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa_v7ibvj.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa_v7ibvj.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa_v7ibvj.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa_v7ibvj.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa_v7ibvj.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa_v7ibvj.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa_v7ibvj.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |             "
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut suffix = String::new();\n    let mut\
    \ prefix = String::new();\n    let mut longest_palindrome_length = 0;\n    for\
    \ i in 0..string.len() {\n        let (mut suffix_length, mut prefix_length) =\
    \ (0, 0);\n        for j in 0..i {\n            if string.chars().nth(j) == string.chars().nth(string.len()\
    \ - 1 - i + j) {\n                suffix_length += 1;\n            } else {\n\
    \                break;\n            }\n        }\n        for j in 0..string.len()\
    \ - i {\n            if string.chars().nth(j) == string.chars().nth(string.len()\
    \ - 1 - i + j) {\n                prefix_length += 1;\n            } else {\n\
    \                break;\n            }\n        }\n        if suffix_length +\
    \ prefix_length > longest_palindrome_length {\n            longest_palindrome_length\
    \ = suffix_length + prefix_length;\n            suffix = string.chars().skip(i\
    \ - suffix_length).take(suffix_length).collect();\n            prefix = string.chars().take(prefix_length).collect();\n\
    \        }\n    }\n    string.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    string.push_str(&suffix);\n    string\n}\n\nfn main() {\n    let candidate\
    \ = make_palindrome;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp485_khgf.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp485_khgf.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp485_khgf.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp485_khgf.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp485_khgf.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp485_khgf.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp485_khgf.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp485_khgf.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp485_khgf.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp485_khgf.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    while i < string.len()\
    \ {\n        let (p, s) = get_palindrome_suffix(&string, i);\n        if p.len()\
    \ > prefix.len() {\n            prefix = p;\n            suffix = s;\n       \
    \ }\n        i += 1;\n    }\n    result.push_str(&suffix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_palindrome_suffix` in this scope\n\
    \  --> /tmp/tmplvhrnlmq.rs:17:22\n   |\n17 |         let (p, s) = get_palindrome_suffix(&string,\
    \ i);\n   |                      ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplvhrnlmq.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplvhrnlmq.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplvhrnlmq.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplvhrnlmq.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplvhrnlmq.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplvhrnlmq.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplvhrnlmq.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplvhrnlmq.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplvhrnlmq.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplvhrnlmq.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                    "
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut result = string.clone();\n    let mut prefix = String::new();\n \
    \   let mut suffix = String::new();\n    let mut i = 0;\n    let mut j = string.len()\
    \ - 1;\n    while i < j {\n        if string.chars().nth(i) == string.chars().nth(j)\
    \ {\n            prefix.push(string.chars().nth(i).unwrap());\n            suffix.push(string.chars().nth(j).unwrap());\n\
    \            i += 1;\n            j -= 1;\n        } else {\n            i = 0;\n\
    \            j -= 1;\n            prefix.clear();\n            suffix.clear();\n\
    \        }\n    }\n    result.push_str(&prefix.chars().rev().collect::<String>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4l_2y__g.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4l_2y__g.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4l_2y__g.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4l_2y__g.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4l_2y__g.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4l_2y__g.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4l_2y__g.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4l_2y__g.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4l_2y__g.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4l_2y__g.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "/// Find the shortest palindrome that begins with a supplied string.\n\
    /// Algorithm idea is simple:\n/// - Find the longest postfix of supplied string\
    \ that is a palindrome.\n/// - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n/// >>> make_palindrome(String::from(\"\
    \"))\n/// String::from(\"\")\n/// >>> make_palindrome(String::from(\"cat\"))\n\
    /// String::from(\"catac\")\n/// >>> make_palindrome(String::from(\"cata\"))\n\
    /// String::from(\"catac\")\nfn make_palindrome(string: String) -> String {\n\
    \    let mut string = string;\n    let mut longest_palindrome_suffix = String::new();\n\
    \    let mut longest_palindrome_suffix_len = 0;\n    let mut longest_palindrome_suffix_index\
    \ = 0;\n    let mut i = 0;\n    while i < string.len() {\n        let mut j =\
    \ 0;\n        while i + j < string.len() && string.chars().nth(i + j) == string.chars().nth(string.len()\
    \ - 1 - j) {\n            j += 1;\n        }\n        if j > longest_palindrome_suffix_len\
    \ {\n            longest_palindrome_suffix_len = j;\n            longest_palindrome_suffix_index\
    \ = i;\n        }\n        i += 1;\n    }\n    if longest_palindrome_suffix_len\
    \ > 0 {\n        longest_palindrome_suffix = string.chars().skip(longest_palindrome_suffix_index).take(longest_palindrome_suffix_len).collect();\n\
    \        string.truncate(longest_palindrome_suffix_index);\n    }\n    string.push_str(&longest_palindrome_suffix);\n\
    \    string.push_str(&longest_palindrome_suffix.chars().rev().collect::<String>());\n\
    \    string\n}\n\nfn main() {\n    let candidate = make_palindrome;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxo7qd6y9.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxo7qd6y9.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxo7qd6y9.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxo7qd6y9.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxo7qd6y9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxo7qd6y9.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxo7qd6y9.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxo7qd6y9.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxo7qd6y9.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxo7qd6y9.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659805710

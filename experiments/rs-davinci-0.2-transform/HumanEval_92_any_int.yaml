name: HumanEval_92_any_int
language: rs
prompt: "/// Create a function that takes 3 numbers.\n/// Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(5, 2, 7)\n\
  /// true\n/// >>> any_int(3, 2, 2)\n/// false\n/// >>> any_int(3, -2, 1)\n/// true\n\
  /// >>> any_int(3.6, -2.2, 2)\n/// false\nfn any_int(x: f64, y: f64, z: f64) ->\
  \ bool {\n"
tests: "}\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut result = false;\n    if x.is_integer() && y.is_integer()\
    \ && z.is_integer() {\n        if x == y + z || y == x + z || z == x + y {\n \
    \           result = true;\n        }\n    }\n    result", "    let x = x.round();\n\
    \    let y = y.round();\n    let z = z.round();\n    x == y + z || y == x + z\
    \ || z == x + y", "    let mut v = vec![x, y, z];\n    v.sort_by(|a, b| a.partial_cmp(b).unwrap());\n\
    \    if v[0].fract() == 0.0 && v[1].fract() == 0.0 && v[2].fract() == 0.0 {\n\
    \        if v[0] + v[1] == v[2] {\n            return true;\n        }\n    }\n\
    \    false", "    let x = x.round();\n    let y = y.round();\n    let z = z.round();\n\
    \    x == y + z || y == x + z || z == x + y", "    if x.is_integer() && y.is_integer()\
    \ && z.is_integer() {\n        if x == y + z || y == x + z || z == x + y {\n \
    \           return true;\n        }\n    }\n    false", "    if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n        if x == y + z || y == x + z ||\
    \ z == x + y {\n            return true;\n        }\n    }\n    false", "    let\
    \ x = x.round();\n    let y = y.round();\n    let z = z.round();\n    x == y +\
    \ z || y == x + z || z == x + y", "    if x.is_integer() && y.is_integer() &&\
    \ z.is_integer() {\n        if x == y + z || y == x + z || z == x + y {\n    \
    \        return true;\n        }\n    }\n    false", "    if x.is_integer() &&\
    \ y.is_integer() && z.is_integer() {\n        if x == y + z || y == x + z || z\
    \ == x + y {\n            return true;\n        }\n    }\n    false", "    if\
    \ x.is_integer() && y.is_integer() && z.is_integer() {\n        if x == y + z\
    \ || y == x + z || z == x + y {\n            return true;\n        }\n    }\n\
    \    false", "    let x = x.round();\n    let y = y.round();\n    let z = z.round();\n\
    \    x == y + z || y == x + z || z == x + y", "    (x.is_integer() && y.is_integer()\
    \ && z.is_integer()) &&\n        ((x == y + z) || (y == x + z) || (z == x + y))",
  "    if x.is_integer() && y.is_integer() && z.is_integer() {\n        if x == y\
    \ + z || y == x + z || z == x + y {\n            return true;\n        }\n   \
    \ }\n    false", "    let mut result = false;\n    if x.is_integer() && y.is_integer()\
    \ && z.is_integer() {\n        if x == y + z || y == x + z || z == x + y {\n \
    \           result = true;\n        }\n    }\n    result", "    if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n        if x == y + z || y == x + z ||\
    \ z == x + y {\n            return true;\n        }\n    }\n    false", "    let\
    \ x = x.round();\n    let y = y.round();\n    let z = z.round();\n    if x ==\
    \ y + z || y == x + z || z == x + y {\n        true\n    } else {\n        false\n\
    \    }", "    if x.is_integer() && y.is_integer() && z.is_integer() {\n      \
    \  if x == y + z || y == x + z || z == x + y {\n            return true;\n   \
    \     }\n    }\n    false", "    (x.is_integer() && y.is_integer() && z.is_integer())\
    \ &&\n        ((x == y + z) || (y == x + z) || (z == x + y))", "    if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n        if x == y + z || y == x + z ||\
    \ z == x + y {\n            return true;\n        }\n    }\n    false", "    let\
    \ x = x.round();\n    let y = y.round();\n    let z = z.round();\n    x == y +\
    \ z || y == x + z || z == x + y"]
stop_tokens:
- "\n}"

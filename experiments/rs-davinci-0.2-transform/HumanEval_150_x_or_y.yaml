name: HumanEval_150_x_or_y
language: rs
prompt: "/// A simple program which should return the value of x if n is \n/// a prime\
  \ number and should return the value of y otherwise.\n/// Examples:\n/// >>> x_or_y(7,\
  \ 34, 12)\n/// 34\n/// >>> x_or_y(15, 8, 5)\n/// 5\nfn x_or_y(n: isize, x: isize,\
  \ y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    if is_prime(n) {\n        x\n    } else {\n        y\n    }", " \
    \   if is_prime(n) {\n        x\n    } else {\n        y\n    }", "    if is_prime(n)\
    \ {\n        x\n    } else {\n        y\n    }", "    if is_prime(n) {\n     \
    \   x\n    } else {\n        y\n    }", "    if is_prime(n) {\n        x\n   \
    \ } else {\n        y\n    }", "    if is_prime(n) {\n        x\n    } else {\n\
    \        y\n    }", "    if is_prime(n) {\n        x\n    } else {\n        y\n\
    \    }", "    if is_prime(n) {\n        x\n    } else {\n        y\n    }", " \
    \   if is_prime(n) {\n        x\n    } else {\n        y\n    }", "    if is_prime(n)\
    \ {\n        x\n    } else {\n        y\n    }", "    if is_prime(n) {\n     \
    \   x\n    } else {\n        y\n    }", "    if is_prime(n) {\n        x\n   \
    \ } else {\n        y\n    }", "    if is_prime(n) {\n        x\n    } else {\n\
    \        y\n    }", "    if is_prime(n) {\n        x\n    } else {\n        y\n\
    \    }", "    if is_prime(n) {\n        x\n    } else {\n        y\n    }", " \
    \   if is_prime(n) {\n        x\n    } else {\n        y\n    }", "    if is_prime(n)\
    \ {\n        x\n    } else {\n        y\n    }", "    if is_prime(n) {\n     \
    \   x\n    } else {\n        y\n    }", "    if is_prime(n) {\n        x\n   \
    \ } else {\n        y\n    }", "    if is_prime(n) {\n        x\n    } else {\n\
    \        y\n    }"]
stop_tokens:
- "\n}"

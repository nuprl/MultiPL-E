name: HumanEval_161_solve
language: lua
prompt: "-- You are given a string s.\n-- if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n-- otherwise keep it as it is.\n-- If the string\
  \ contains no letters, reverse the string.\n-- The function should return the resulted\
  \ string.\n-- Examples\n-- solve(\"1234\") = \"4321\"\n-- solve(\"ab\") = \"AB\"\
  \n-- solve(\"#a@C\") = \"#A@c\"\nlocal function solve(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate('AsDf'), 'aSdF')\n    lu.assertEquals(candidate('1234'),\
  \ '4321')\n    lu.assertEquals(candidate('ab'), 'AB')\n    lu.assertEquals(candidate('#a@C'),\
  \ '#A@c')\n    lu.assertEquals(candidate('#AsdfW^45'), '#aSDFw^45')\n    lu.assertEquals(candidate('#6@2'),\
  \ '2@6#')\n    lu.assertEquals(candidate('#$a^D'), '#$A^d')\n    lu.assertEquals(candidate('#ccc'),\
  \ '#CCC')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c\
    \ and c:upper() or c:lower()\n        else\n            t[#t + 1] = c\n      \
    \  end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend", " \
    \   local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  if c:match(\"%a\") then\n            if c:match(\"%u\") then\n            \
    \    t[#t + 1] = c:lower()\n            else\n                t[#t + 1] = c:upper()\n\
    \            end\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "  local t = {}\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"%a\") then\n\
    \      if c:match(\"%u\") then\n        t[#t + 1] = c:lower()\n      else\n  \
    \      t[#t + 1] = c:upper()\n      end\n    else\n      t[#t + 1] = c\n    end\n\
    \  end\n  return #t > 0 and table.concat(t) or s:reverse()\nend", "    local res\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%l\") then\n                res = res ..\
    \ c:upper()\n            else\n                res = res .. c:lower()\n      \
    \      end\n        else\n            res = res .. c\n        end\n    end\n \
    \   return res\nend", "  local t = {}\n  for i = 1, #s do\n    local c = s:sub(i,\
    \ i)\n    if c:match(\"%a\") then\n      if c:match(\"%u\") then\n        c =\
    \ c:lower()\n      else\n        c = c:upper()\n      end\n    end\n    t[#t +\
    \ 1] = c\n  end\n  return #t > 0 and table.concat(t) or s:reverse()\nend", " \
    \   local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n  \
    \      if c:match(\"%a\") then\n            if c:match(\"%u\") then\n        \
    \        res = res .. c:lower()\n            else\n                res = res ..\
    \ c:upper()\n            end\n        else\n            res = res .. c\n     \
    \   end\n    end\n    return res\nend", "    local t = {}\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if\
    \ c:match(\"%u\") then\n                c = c:lower()\n            else\n    \
    \            c = c:upper()\n            end\n        end\n        t[#t + 1] =\
    \ c\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend", "  \
    \  local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n     \
    \   if c:match(\"%a\") then\n            if c:match(\"%u\") then\n           \
    \     res[#res + 1] = c:lower()\n            else\n                res[#res +\
    \ 1] = c:upper()\n            end\n        else\n            res[#res + 1] = c\n\
    \        end\n    end\n    if #res == 0 then\n        return s:reverse()\n   \
    \ end\n    return table.concat(res)\nend", "    local t = {}\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n       \
    \     if c:match(\"%u\") then\n                t[#t + 1] = c:lower()\n       \
    \     else\n                t[#t + 1] = c:upper()\n            end\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "  local res = \"\"\n  for i = 1, #s do\n    local ch\
    \ = s:sub(i, i)\n    if ch:match(\"%a\") then\n      if ch:match(\"%l\") then\n\
    \        res = res .. ch:upper()\n      else\n        res = res .. ch:lower()\n\
    \      end\n    else\n      res = res .. ch\n    end\n  end\n  return #res > 0\
    \ and res or s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if\
    \ c:match(\"%l\") then\n                res = res .. c:upper()\n            else\n\
    \                res = res .. c:lower()\n            end\n        else\n     \
    \       res = res .. c\n        end\n    end\n    return res\nend", "    local\
    \ res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                c = c:lower()\n\
    \            else\n                c = c:upper()\n            end\n        end\n\
    \        res[#res + 1] = c\n    end\n    return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "    local res = ''\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match('%a') then\n            if c:match('%u')\
    \ then\n                res = res .. c:lower()\n            else\n           \
    \     res = res .. c:upper()\n            end\n        else\n            res =\
    \ res .. c\n        end\n    end\n    return res\nend", "    local result = \"\
    \"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        if char:match(\"\
    %a\") then\n            if char:match(\"%u\") then\n                result = result\
    \ .. char:lower()\n            else\n                result = result .. char:upper()\n\
    \            end\n        else\n            result = result .. char\n        end\n\
    \    end\n    return result\nend", "    local t = {}\n    for i = 1, #s do\n \
    \       local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if\
    \ c:match(\"%l\") then\n                t[#t + 1] = c:upper()\n            else\n\
    \                t[#t + 1] = c:lower()\n            end\n        else\n      \
    \      t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %l\") then\n                res[#res + 1] = c:upper()\n            else\n    \
    \            res[#res + 1] = c:lower()\n            end\n        else\n      \
    \      res[#res + 1] = c\n        end\n    end\n    return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                c = c:lower()\n            else\n                c\
    \ = c:upper()\n            end\n        end\n        t[#t + 1] = c\n    end\n\
    \    return table.concat(t)\nend", "    local res = \"\"\n    for i=1,#s do\n\
    \        local c = s:sub(i,i)\n        if c:match(\"%a\") then\n            if\
    \ c:match(\"%u\") then\n                res = res .. c:lower()\n            else\n\
    \                res = res .. c:upper()\n            end\n        else\n     \
    \       res = res .. c\n        end\n    end\n    return res\nend", "    local\
    \ res = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a')\
    \ then\n            if c:match('%u') then\n                res = res .. c:lower()\n\
    \            else\n                res = res .. c:upper()\n            end\n \
    \       else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local t = {}\n    for i = 1, #s do\n        if s[i]:match(\"%a\") then\n\
    \            t[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n  \
    \      else\n            t[i] = s[i]\n        end\n    end\n    return #t > 0\
    \ and table.concat(t) or s:reverse()\nend", "    local res = \"\"\n    for i =\
    \ 1, #s do\n        if s[i]:match(\"%a\") then\n            res = res .. s[i]:lower()\
    \ == s[i] and s[i]:upper() or s[i]:lower()\n        else\n            res = res\
    \ .. s[i]\n        end\n    end\n    return res\nend", "    local t = {}\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\")\
    \ then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local r = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        r[#r + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            r[#r + 1] = c\n        end\n    end\n    return #r > 0 and table.concat(r)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        if s[i]:match(\"\
    %a\") then\n            t[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n\
    \        else\n            t[i] = s[i]\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res = res .. c:lower()\n            else\n       \
    \         res = res .. c:upper()\n            end\n        else\n            res\
    \ = res .. c\n        end\n    end\n    return res\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%l\") then\n                c = c:upper()\n \
    \           else\n                c = c:lower()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local\
    \ t = {}\n    for i = 1, #s do\n        if s[i]:match(\"%a\") then\n         \
    \   t[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n        else\n\
    \            t[i] = s[i]\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t + 1] = c:lower()\
    \ == c and c:upper() or c:lower()\n        else\n            t[#t + 1] = c\n \
    \       end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend",
  "  local res = \"\"\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"\
    %a\") then\n      if c:match(\"%l\") then\n        res = res .. c:upper()\n  \
    \    else\n        res = res .. c:lower()\n      end\n    else\n      res = res\
    \ .. c\n    end\n  end\n  return res\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        if c:match(\"%u\") then\n                c = c:lower()\n            else\n\
    \                c = c:upper()\n            end\n        end\n        t[#t + 1]\
    \ = c\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend", " \
    \   local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n    \
    \    if c:match(\"%a\") then\n            if c:match(\"%l\") then\n          \
    \      c = c:upper()\n            else\n                c = c:lower()\n      \
    \      end\n        end\n        res[#res + 1] = c\n    end\n    return #res >\
    \ 0 and table.concat(res) or s:reverse()\nend", "    local res = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%u\") then\n                res[#res + 1] = c:lower()\n\
    \            else\n                res[#res + 1] = c:upper()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\")\
    \ then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n      \
    \  else\n            res[#res + 1] = c\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "  local res = {}\n  for i =\
    \ 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"%a\") then\n      if c:match(\"\
    %u\") then\n        c = c:lower()\n      else\n        c = c:upper()\n      end\n\
    \    end\n    res[#res + 1] = c\n  end\n  return table.concat(res)\nend", "  \
    \  local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n     \
    \   if c:match(\"%a\") then\n            if c:match(\"%l\") then\n           \
    \     c = c:upper()\n            else\n                c = c:lower()\n       \
    \     end\n        end\n        res[#res + 1] = c\n    end\n    return #res >\
    \ 0 and table.concat(res) or s:reverse()\nend", "    local res = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%u\") then\n                c = c:lower()\n        \
    \    else\n                c = c:upper()\n            end\n        end\n     \
    \   res[#res + 1] = c\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        if c:match(\"%u\") then\n                c = c:lower()\n            else\n\
    \                c = c:upper()\n            end\n        end\n        t[#t + 1]\
    \ = c\n    end\n    return table.concat(t)\nend", "    local t = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t + 1] = c:lower()\
    \ == c and c:upper() or c:lower()\n        else\n            t[#t + 1] = c\n \
    \       end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend",
  "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n     \
    \   if c:match(\"%a\") then\n            if c:match(\"%u\") then\n           \
    \     res[#res + 1] = c:lower()\n            else\n                res[#res +\
    \ 1] = c:upper()\n            end\n        else\n            res[#res + 1] = c\n\
    \        end\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%l\") then\n      \
    \          c = c:upper()\n            else\n                c = c:lower()\n  \
    \          end\n        end\n        t[#t + 1] = c\n    end\n    return #t > 0\
    \ and table.concat(t) or s:reverse()\nend", "    local res = \"\"\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           if c:match(\"%u\") then\n                res = res .. c:lower()\n\
    \            else\n                res = res .. c:upper()\n            end\n \
    \       else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local res = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match('%a') then\n            res = res .. c:gsub('%a', function(c)\n\
    \                return c:lower() == c and c:upper() or c:lower()\n          \
    \  end)\n        else\n            res = res .. c\n        end\n    end\n    return\
    \ res\nend", "    local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n \
    \               res = res .. c:lower()\n            else\n                res\
    \ = res .. c:upper()\n            end\n        else\n            res = res ..\
    \ c\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ i = 1, #s do\n        if s[i]:match(\"%a\") then\n            res[i] = s[i]:upper()\
    \ == s[i] and s[i]:lower() or s[i]:upper()\n        else\n            res[i] =\
    \ s[i]\n        end\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match('%a') then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local res =\
    \ {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                c = c:lower()\n\
    \            else\n                c = c:upper()\n            end\n        end\n\
    \        res[#res + 1] = c\n    end\n    return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "  local t = {}\n  for i = 1, #s do\n    local c = s:sub(i,\
    \ i)\n    if c:match('%a') then\n      t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n    else\n      t[#t + 1] = c\n    end\n  end\n  return #t ==\
    \ 0 and s:reverse() or table.concat(t)\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res = res .. c:lower()\n            else\n       \
    \         res = res .. c:upper()\n            end\n        else\n            res\
    \ = res .. c\n        end\n    end\n    return res\nend", "    local res = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                res[#res + 1] = c:lower()\n\
    \            else\n                res[#res + 1] = c:upper()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\")\
    \ then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t ==\
    \ 0 and s:reverse() or table.concat(t)\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        if s[i]:match(\"%a\") then\n            res[i] = s[i]:lower()\
    \ == s[i] and s[i]:upper() or s[i]:lower()\n        else\n            res[i] =\
    \ s[i]\n        end\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n \
    \               res = res .. c:lower()\n            else\n                res\
    \ = res .. c:upper()\n            end\n        else\n            res = res ..\
    \ c\n        end\n    end\n    return res\nend", "    local t = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%l\") then\n                t[#t + 1] = c:upper()\n\
    \            else\n                t[#t + 1] = c:lower()\n            end\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ #s, 1, -1 do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n     \
    \   else\n            res[#res + 1] = c\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local res = {}\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%l\") then\n                res[#res + 1] = c:upper()\n\
    \            else\n                res[#res + 1] = c:lower()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    if #res\
    \ == 0 then\n        return s:reverse()\n    end\n    return table.concat(res)\n\
    end", "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        res[#res + 1] = c\n    end\n    return table.concat(res)\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        t[#t + 1] = c\n    end\n    return table.concat(t)\n\
    end", "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        res[#res + 1] = c\n    end\n    return table.concat(res)\n\
    end", "    local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            if c:match(\"%l\") then\n \
    \               res = res .. c:upper()\n            else\n                res\
    \ = res .. c:lower()\n            end\n        else\n            res = res ..\
    \ c\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n     \
    \   else\n            res[#res + 1] = c\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a') then\n \
    \           t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res = res .. c:lower()\n            else\n       \
    \         res = res .. c:upper()\n            end\n        else\n            res\
    \ = res .. c\n        end\n    end\n    return res\nend", "    local res = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a')\
    \ then\n            res = res .. c:gsub('%a', function(x) return x:upper() ==\
    \ x and x:lower() or x:upper() end)\n        else\n            res = res .. c\n\
    \        end\n    end\n    return #res == 0 and s:reverse() or res\nend", "  local\
    \ t = {}\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"%a\"\
    ) then\n      if c:match(\"%u\") then\n        t[#t + 1] = c:lower()\n      else\n\
    \        t[#t + 1] = c:upper()\n      end\n    else\n      t[#t + 1] = c\n   \
    \ end\n  end\n  return #t > 0 and table.concat(t) or s:reverse()\nend", "    local\
    \ t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                c = c:lower()\n\
    \            else\n                c = c:upper()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\n\
    end", "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%l\") then\n      \
    \          c = c:upper()\n            else\n                c = c:lower()\n  \
    \          end\n        end\n        res[#res + 1] = c\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%u\") then\n                c = c:lower()\n        \
    \    else\n                c = c:upper()\n            end\n        end\n     \
    \   t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local res =\
    \ \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                res = res ..\
    \ c:lower()\n            else\n                res = res .. c:upper()\n      \
    \      end\n        else\n            res = res .. c\n        end\n    end\n \
    \   return res\nend", "    local t = {}\n    for i = 1, #s do\n        local c\
    \ = s:sub(i, i)\n        if c:match(\"%a\") then\n            c = c:lower() ==\
    \ c and c:upper() or c:lower()\n        end\n        t[#t + 1] = c\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local res =\
    \ \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                res = res ..\
    \ c:lower()\n            else\n                res = res .. c:upper()\n      \
    \      end\n        else\n            res = res .. c\n        end\n    end\n \
    \   return res\nend", "    local res = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            res[#res + 1]\
    \ = c:lower() == c and c:upper() or c:lower()\n        else\n            res[#res\
    \ + 1] = c\n        end\n    end\n    return #res > 0 and table.concat(res) or\
    \ s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res = res .. c:lower()\n            else\n       \
    \         res = res .. c:upper()\n            end\n        else\n            res\
    \ = res .. c\n        end\n    end\n    return res\nend", "    local res = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%l\") then\n                res[#res + 1] = c:upper()\n\
    \            else\n                res[#res + 1] = c:lower()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\")\
    \ then\n            t[#t + 1] = c:upper() == c and c:lower() or c:upper()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "  local t = {}\n  for i = 1, #s\
    \ do\n    local c = s:sub(i, i)\n    if c:match(\"%a\") then\n      c = c:lower()\
    \ == c and c:upper() or c:lower()\n    end\n    t[#t + 1] = c\n  end\n  return\
    \ #t > 0 and table.concat(t) or s:reverse()\nend", "    local r = ''\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a') then\n\
    \            if c:match('%u') then\n                r = r .. c:lower()\n     \
    \       else\n                r = r .. c:upper()\n            end\n        else\n\
    \            r = r .. c\n        end\n    end\n    return #r > 0 and r or s:reverse()\n\
    end", "    local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n \
    \               res = res .. c:lower()\n            else\n                res\
    \ = res .. c:upper()\n            end\n        else\n            res = res ..\
    \ c\n        end\n    end\n    return res\nend", "    local res = ''\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a') then\n\
    \            res = res .. c:gsub('%a', function(c)\n                return c:lower()\
    \ == c and c:upper() or c:lower()\n            end)\n        else\n          \
    \  res = res .. c\n        end\n    end\n    return res\nend", "    local t =\
    \ {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n\
    \        else\n            t[#t + 1] = c\n        end\n    end\n    return #t\
    \ > 0 and table.concat(t) or s:reverse()\nend", "    local res = \"\"\n    for\
    \ i = 1, #s do\n        if s[i]:match(\"%a\") then\n            res = res .. s[i]:gsub(\"\
    %a\", function(c) return c:lower() == c and c:upper() or c:lower() end)\n    \
    \    else\n            res = res .. s[i]\n        end\n    end\n    return res\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        t[#t + 1] = c\n    end\n    return table.concat(t)\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        t[#t + 1] = c\n    end\n    return table.concat(t)\n\
    end", "    local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            if c:match(\"%l\") then\n \
    \               res = res .. c:upper()\n            else\n                res\
    \ = res .. c:lower()\n            end\n        else\n            res = res ..\
    \ c\n        end\n    end\n    return #res > 0 and res or s:reverse()\nend", " \
    \   local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t == 0 and s:reverse() or table.concat(t)\nend", "  local res = {}\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"%a\") then\n\
    \      res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n    else\n \
    \     res[#res + 1] = c\n    end\n  end\n  return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                c = c:lower()\n            else\n                c\
    \ = c:upper()\n            end\n        end\n        t[#t + 1] = c\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%l\") then\n                t[#t + 1] = c:upper()\n\
    \            else\n                t[#t + 1] = c:lower()\n            end\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           if c:match(\"%u\") then\n                res[#res + 1] = c:lower()\n\
    \            else\n                res[#res + 1] = c:upper()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local res = {}\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                res[#res + 1] = c:lower()\n\
    \            else\n                res[#res + 1] = c:upper()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\")\
    \ then\n            if c:match(\"%u\") then\n                c = c:lower()\n \
    \           else\n                c = c:upper()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local\
    \ t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%l\") then\n                c = c:upper()\n\
    \            else\n                c = c:lower()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local\
    \ res = {}\n    for i = 1, #s do\n        if s[i]:match(\"%a\") then\n       \
    \     res[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n       \
    \ else\n            res[i] = s[i]\n        end\n    end\n    return #res > 0 and\
    \ table.concat(res) or s:reverse()\nend", "    local res = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            res[#res + 1] = c\n        end\n    end\n    return #res > 0 and\
    \ table.concat(res) or s:reverse()\nend", "    local res = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        if c:match(\"%l\") then\n                c = c:upper()\n            else\n\
    \                c = c:lower()\n            end\n        end\n        res[#res\
    \ + 1] = c\n    end\n    return table.concat(res)\nend", "    local res = {}\n\
    \    local isLetter = false\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            isLetter = true\n         \
    \   if c:match(\"%u\") then\n                c = c:lower()\n            else\n\
    \                c = c:upper()\n            end\n        end\n        res[#res\
    \ + 1] = c\n    end\n    if isLetter then\n        return table.concat(res)\n\
    \    else\n        return table.concat(res):reverse()\n    end\nend", "    local\
    \ res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if\
    \ c:match(\"%a\") then\n            if c:match(\"%u\") then\n                res\
    \ = res .. c:lower()\n            else\n                res = res .. c:upper()\n\
    \            end\n        else\n            res = res .. c\n        end\n    end\n\
    \    return res\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t + 1] = c:lower()\
    \ == c and c:upper() or c:lower()\n        else\n            t[#t + 1] = c\n \
    \       end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend",
  "  local t = {}\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"\
    %a\") then\n      if c:match(\"%l\") then\n        t[#t + 1] = c:upper()\n   \
    \   else\n        t[#t + 1] = c:lower()\n      end\n    else\n      t[#t + 1]\
    \ = c\n    end\n  end\n  return #t > 0 and table.concat(t) or s:reverse()\nend",
  "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n     \
    \   if c:match(\"%a\") then\n            if c:match(\"%u\") then\n           \
    \     res[#res + 1] = c:lower()\n            else\n                res[#res +\
    \ 1] = c:upper()\n            end\n        else\n            res[#res + 1] = c\n\
    \        end\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        t[#t + 1] = c\n    end\n    return #t > 0\
    \ and table.concat(t) or s:reverse()\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        if c:match(\"%u\") then\n                t[#t + 1] = c:lower()\n    \
    \        else\n                t[#t + 1] = c:upper()\n            end\n      \
    \  else\n            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and\
    \ table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n       \
    \     res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            res[#res + 1] = c\n        end\n    end\n    return #res > 0 and\
    \ table.concat(res) or s:reverse()\nend", "    local t = {}\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n       \
    \     t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n  \
    \          t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t + 1] = c:lower()\
    \ == c and c:upper() or c:lower()\n        else\n            t[#t + 1] = c\n \
    \       end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend",
  "    local res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n   \
    \     if c:match(\"%a\") then\n            res = res .. c:gsub(\"%l\", string.upper):gsub(\"\
    %u\", string.lower)\n        else\n            res = res .. c\n        end\n \
    \   end\n    return res\nend", "    local t = {}\n    for i = 1, #s do\n     \
    \   local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t +\
    \ 1] = c:lower() == c and c:upper() or c:lower()\n        else\n            t[#t\
    \ + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\n\
    end", "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          c = c:lower()\n            else\n                c = c:upper()\n  \
    \          end\n        end\n        res[#res + 1] = c\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local res = {}\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n     \
    \   else\n            res[#res + 1] = c\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n    for i\
    \ = 1, #s do\n        if string.match(s[i], \"[a-zA-Z]\") then\n            t[i]\
    \ = string.lower(s[i]) == s[i] and string.upper(s[i]) or string.lower(s[i])\n\
    \        else\n            t[i] = s[i]\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or string.reverse(s)\nend", "    local t = {}\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                c = c:lower()\n            else\n                c\
    \ = c:upper()\n            end\n        end\n        t[#t + 1] = c\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        if c:match(\"%u\") then\n                t[#t + 1] = c:lower()\n    \
    \        else\n                t[#t + 1] = c:upper()\n            end\n      \
    \  else\n            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and\
    \ table.concat(t) or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if\
    \ c:match(\"%u\") then\n                c = c:lower()\n            else\n    \
    \            c = c:upper()\n            end\n        end\n        t[#t + 1] =\
    \ c\n    end\n    return table.concat(t)\nend", "    local res = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n     \
    \   else\n            res[#res + 1] = c\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local result = \"\"\n \
    \   local is_letter = false\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:match(\"%a\") then\n            is_letter = true\n        \
    \    if c:match(\"%l\") then\n                c = c:upper()\n            else\n\
    \                c = c:lower()\n            end\n        end\n        result =\
    \ result .. c\n    end\n    if not is_letter then\n        result = result:reverse()\n\
    \    end\n    return result\nend", "    local res = \"\"\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if\
    \ c:match(\"%u\") then\n                res = res .. c:lower()\n            else\n\
    \                res = res .. c:upper()\n            end\n        else\n     \
    \       res = res .. c\n        end\n    end\n    return res\nend", "    local\
    \ res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                c = c:lower()\n\
    \            else\n                c = c:upper()\n            end\n        end\n\
    \        res[#res + 1] = c\n    end\n    return table.concat(res)\nend", "   \
    \ local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  if c:match(\"%a\") then\n            if c:match(\"%u\") then\n            \
    \    c = c:lower()\n            else\n                c = c:upper()\n        \
    \    end\n        end\n        res[#res + 1] = c\n    end\n    return #res > 0\
    \ and table.concat(res) or s:reverse()\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t == 0 and s:reverse()\
    \ or table.concat(t)\nend", "    local res = {}\n    for i = 1, #s do\n      \
    \  local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res[#res + 1] = c:lower()\n            else\n    \
    \            res[#res + 1] = c:upper()\n            end\n        else\n      \
    \      res[#res + 1] = c\n        end\n    end\n    return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        if s[i]:match(\"\
    %a\") then\n            t[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n\
    \        else\n            t[i] = s[i]\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           if c:match(\"%u\") then\n                c = c:lower()\n         \
    \   else\n                c = c:upper()\n            end\n        end\n      \
    \  res[#res + 1] = c\n    end\n    return table.concat(res)\nend", "  local t\
    \ = {}\n  for i = 1, #s do\n    if s:sub(i, i):match(\"%a\") then\n      t[i]\
    \ = s:sub(i, i):lower() == s:sub(i, i) and s:sub(i, i):upper() or s:sub(i, i):lower()\n\
    \    else\n      t[i] = s:sub(i, i)\n    end\n  end\n  return #s:gsub(\"%a\",\
    \ \"\") == #s and s:reverse() or table.concat(t)\nend", "    local res = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local res = {}\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%l\") then\n                c = c:upper()\n \
    \           else\n                c = c:lower()\n            end\n        end\n\
    \        res[#res + 1] = c\n    end\n    return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "    local res = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %l\") then\n                c = c:upper()\n            else\n                c\
    \ = c:lower()\n            end\n        end\n        res[#res + 1] = c\n    end\n\
    \    return #res > 0 and table.concat(res) or s:reverse()\nend", "    local res\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%l\") then\n                res = res ..\
    \ c:upper()\n            else\n                res = res .. c:lower()\n      \
    \      end\n        else\n            res = res .. c\n        end\n    end\n \
    \   return res\nend", "    local t = {}\n    for i = 1, #s do\n        local c\
    \ = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"%u\"\
    ) then\n                t[#t + 1] = c:lower()\n            else\n            \
    \    t[#t + 1] = c:upper()\n            end\n        else\n            t[#t +\
    \ 1] = c\n        end\n    end\n    return #t == 0 and s:reverse() or table.concat(t)\n\
    end", "  local t = {}\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"\
    %a\") then\n      if c:match(\"%l\") then\n        c = c:upper()\n      else\n\
    \        c = c:lower()\n      end\n    end\n    t[#t + 1] = c\n  end\n  return\
    \ #t > 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            res[#res + 1] = c:upper() == c and c:lower() or c:upper()\n     \
    \   else\n            res[#res + 1] = c\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local res = \"\"\n    for\
    \ i = 1, #s do\n        if s[i]:match(\"%a\") then\n            res = res .. s[i]:gsub(\"\
    %a\", {[\"a\"] = \"A\", [\"b\"] = \"B\", [\"c\"] = \"C\", [\"d\"] = \"D\", [\"\
    e\"] = \"E\", [\"f\"] = \"F\", [\"g\"] = \"G\", [\"h\"] = \"H\", [\"i\"] = \"\
    I\", [\"j\"] = \"J\", [\"k\"] = \"K\", [\"l\"] = \"L\", [\"m\"] = \"M\", [\"n\"\
    ] = \"N\", [\"o\"] = \"O\", [\"p\"] = \"P\", [\"q\"] = \"Q\", [\"r\"] = \"R\"\
    , [\"s\"] = \"S\", [\"t\"] = \"T\", [\"u\"] = \"U\", [\"v\"] = \"V\", [\"w\"]\
    \ = \"W\", [\"x\"] = \"X\", [\"y\"] = \"Y\", [\"z\"] = \"Z\", [\"A\"] = \"a\"\
    , [\"B\"] = \"b\", [\"C\"] = \"c\", [\"D\"] = \"d\", [\"E\"] = \"e\", [\"F\"]\
    \ = \"f\", [\"G\"] = \"g\", [\"H\"] = \"h\", [\"I\"] = \"i\", [\"J\"] = \"j\"\
    , [\"K\"] = \"k\", [\"L\"] = \"l\", [\"M\"] = \"m\", [\"N\"] = \"n\", [\"O\"]\
    \ = \"o\", [\"P\"] = \"p\", [\"Q\"] = \"q\", [\"R\"] = \"r\", [\"S\"] = \"s\"\
    , [\"T\"] = \"t\", [\"U\"] = \"u\", [\"V\"] = \"v\", [\"W\"] = \"w\", [\"X\"]\
    \ = \"x\", [\"Y\"] = \"y\", [\"Z\"] = \"z\"})\n        else\n            res =\
    \ res .. s[i]\n        end\n    end\n    return res\nend", "    local res = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "  local t = {}\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match(\"%a\") then\n     \
    \ if c:match(\"%u\") then\n        t[#t + 1] = c:lower()\n      else\n       \
    \ t[#t + 1] = c:upper()\n      end\n    else\n      t[#t + 1] = c\n    end\n \
    \ end\n  return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t\
    \ = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                c = c:lower()\n\
    \            else\n                c = c:upper()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\n\
    end", "    local s1 = s:gsub(\"%a\", function(c) return c:lower() == c and c:upper()\
    \ or c:lower() end)\n    return s1 == s and s:reverse() or s1\nend", "    local\
    \ res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            res[#res + 1] = c:lower() == c and c:upper() or c:lower()\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a') then\n\
    \            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            res = res .. (c:lower()\
    \ == c and c:upper() or c:lower())\n        else\n            res = res .. c\n\
    \        end\n    end\n    return #res > 0 and res or s:reverse()\nend", "   \
    \ local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  if c:match(\"%a\") then\n            if c:match(\"%u\") then\n            \
    \    res[#res + 1] = c:lower()\n            else\n                res[#res + 1]\
    \ = c:upper()\n            end\n        else\n            res[#res + 1] = c\n\
    \        end\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local res = \"\"\n    for i=1,#s do\n        local c = s:sub(i,i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          res = res .. c:lower()\n            else\n                res = res\
    \ .. c:upper()\n            end\n        else\n            res = res .. c\n  \
    \      end\n    end\n    return res\nend", "    local t = {}\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n       \
    \     if c:match(\"%u\") then\n                c = c:lower()\n            else\n\
    \                c = c:upper()\n            end\n        end\n        t[#t + 1]\
    \ = c\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend", " \
    \   local res = {}\n    for i = 1, #s do\n        if s[i]:match(\"%a\") then\n\
    \            res[i] = s[i]:upper() == s[i] and s[i]:lower() or s[i]:upper()\n\
    \        else\n            res[i] = s[i]\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local res = \"\"\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%u\") then\n                res = res .. c:lower()\n\
    \            else\n                res = res .. c:upper()\n            end\n \
    \       else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          t[#t + 1] = c:lower()\n            else\n                t[#t + 1]\
    \ = c:upper()\n            end\n        else\n            t[#t + 1] = c\n    \
    \    end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend",
  "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n     \
    \   if c:match(\"%a\") then\n            if c:match(\"%l\") then\n           \
    \     c = c:upper()\n            else\n                c = c:lower()\n       \
    \     end\n        end\n        res[#res + 1] = c\n    end\n    return #res >\
    \ 0 and table.concat(res) or s:reverse()\nend", "    local res = ''\n    for i\
    \ = 1, #s do\n        if s[i]:match('%a') then\n            res = res .. s[i]:gsub('%a',\
    \ function(c)\n                return c:upper() == c and c:lower() or c:upper()\n\
    \            end)\n        else\n            res = res .. s[i]\n        end\n\
    \    end\n    return res\nend", "    local res = ''\n    for i = 1, #s do\n  \
    \      local c = s:sub(i, i)\n        if c:match('%a') then\n            if c:match('%u')\
    \ then\n                res = res .. c:lower()\n            else\n           \
    \     res = res .. c:upper()\n            end\n        else\n            res =\
    \ res .. c\n        end\n    end\n    return res\nend", "    local res = {}\n\
    \    for i = 1, #s do\n        if s[i]:match(\"%a\") then\n            res[i]\
    \ = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n        else\n    \
    \        res[i] = s[i]\n        end\n    end\n    return #res > 0 and table.concat(res)\
    \ or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        if s[i]:match(\"\
    %a\") then\n            t[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n\
    \        else\n            t[i] = s[i]\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local r = ''\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match('%a') then\n      \
    \      r = r .. c:lower() == c and c:upper() or c:lower()\n        else\n    \
    \        r = r .. c\n        end\n    end\n    return r\nend", "    local t =\
    \ {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            if c:match(\"%u\") then\n                c = c:lower()\n\
    \            else\n                c = c:upper()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local\
    \ t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            t[#t + 1] = c:upper() == c and c:lower() or c:upper()\n\
    \        else\n            t[#t + 1] = c\n        end\n    end\n    return #t\
    \ > 0 and table.concat(t) or s:reverse()\nend", "  local res = {}\n  for i = 1,\
    \ #s do\n    local c = s:sub(i, i)\n    if c:match('%a') then\n      res[#res\
    \ + 1] = c:lower() == c and c:upper() or c:lower()\n    else\n      res[#res +\
    \ 1] = c\n    end\n  end\n  return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        if s[i]:match(\"%a\") then\n\
    \            t[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n  \
    \      else\n            t[i] = s[i]\n        end\n    end\n    return #t > 0\
    \ and table.concat(t) or s:reverse()\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n    \
    \        t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %l\") then\n                c = c:upper()\n            else\n                c\
    \ = c:lower()\n            end\n        end\n        res[#res + 1] = c\n    end\n\
    \    return table.concat(res)\nend", "    local res = {}\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            res[#res\
    \ + 1] = c:upper() == c and c:lower() or c:upper()\n        else\n           \
    \ res[#res + 1] = c\n        end\n    end\n    return #res == 0 and s:reverse()\
    \ or table.concat(res)\nend", "  return s:gsub(\"%a\", function(c) return c:lower()\
    \ == c and c:upper() or c:lower() end)\nend", "    local t = {}\n    for i = 1,\
    \ #s do\n        if s[i]:match(\"%a\") then\n            t[i] = s[i]:lower() ==\
    \ s[i] and s[i]:upper() or s[i]:lower()\n        else\n            t[i] = s[i]\n\
    \        end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\n\
    end", "  local t = {}\n  for i = 1, #s do\n    if s:sub(i, i):match(\"%a\") then\n\
    \      t[i] = s:sub(i, i):gsub(\"%a\", function(c) return c == c:upper() and c:lower()\
    \ or c:upper() end)\n    else\n      t[i] = s:sub(i, i)\n    end\n  end\n  return\
    \ #s:gsub(\"%a\", \"\") == #s and s:reverse() or table.concat(t)\nend", "    local\
    \ res = \"\"\n    for i = 1, #s do\n        if string.match(s[i], \"[a-zA-Z]\"\
    ) then\n            if string.match(s[i], \"[a-z]\") then\n                res\
    \ = res .. string.upper(s[i])\n            else\n                res = res ..\
    \ string.lower(s[i])\n            end\n        else\n            res = res ..\
    \ s[i]\n        end\n    end\n    return res\nend", "    local res = \"\"\n  \
    \  for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                res = res .. c:lower()\n\
    \            else\n                res = res .. c:upper()\n            end\n \
    \       else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           if c:match(\"%u\") then\n                c = c:lower()\n         \
    \   else\n                c = c:upper()\n            end\n        end\n      \
    \  res[#res + 1] = c\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            res[#res + 1] = c:lower() == c and\
    \ c:upper() or c:lower()\n        else\n            res[#res + 1] = c\n      \
    \  end\n    end\n    return #res == 0 and s:reverse() or table.concat(res)\nend",
  "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n       \
    \ if c:match(\"%a\") then\n            c = c:lower() == c and c:upper() or c:lower()\n\
    \        end\n        t[#t + 1] = c\n    end\n    return #t > 0 and table.concat(t)\
    \ or s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res = res .. c:lower()\n            else\n       \
    \         res = res .. c:upper()\n            end\n        else\n            res\
    \ = res .. c\n        end\n    end\n    return res\nend", "    local res = \"\"\
    \n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                res = res .. c:lower()\n\
    \            else\n                res = res .. c:upper()\n            end\n \
    \       else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local res = {}\n    for i = 1, #s do\n        if s[i]:match(\"%a\"\
    ) then\n            res[i] = s[i]:lower() == s[i] and s[i]:upper() or s[i]:lower()\n\
    \        else\n            res[i] = s[i]\n        end\n    end\n    return #res\
    \ > 0 and table.concat(res) or s:reverse()\nend", "    local t = {}\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n\
    \            if c:match(\"%u\") then\n                c = c:lower()\n        \
    \    else\n                c = c:upper()\n            end\n        end\n     \
    \   t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            t[#t + 1] = c:lower() == c and c:upper() or c:lower()\n  \
    \      else\n            t[#t + 1] = c\n        end\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           if c:match(\"%l\") then\n                res[#res + 1] = c:upper()\n\
    \            else\n                res[#res + 1] = c:lower()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local res = \"\"\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            res = res .. c:gsub(\"%a\", function(c)\n                return\
    \ c:lower() == c and c:upper() or c:lower()\n            end)\n        else\n\
    \            res = res .. c\n        end\n    end\n    return #res > 0 and res\
    \ or s:reverse()\nend", "    local str = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c == c:upper()\
    \ then\n                str = str .. c:lower()\n            else\n           \
    \     str = str .. c:upper()\n            end\n        else\n            str =\
    \ str .. c\n        end\n    end\n    return str\nend", "    local str = \"\"\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c == c:upper() then\n                str = str .. c:lower()\n\
    \            else\n                str = str .. c:upper()\n            end\n \
    \       else\n            str = str .. c\n        end\n    end\n    return #str\
    \ > 0 and str or s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t\
    \ + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n           \
    \ t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t) or\
    \ s:reverse()\nend", "    local t = {}\n    for i = 1, #s do\n        local c\
    \ = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"%u\"\
    ) then\n                c = c:lower()\n            else\n                c = c:upper()\n\
    \            end\n        end\n        t[#t + 1] = c\n    end\n    return #t >\
    \ 0 and table.concat(t) or s:reverse()\nend", "    local res = {}\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\") then\n \
    \           if c:match(\"%l\") then\n                res[#res + 1] = c:upper()\n\
    \            else\n                res[#res + 1] = c:lower()\n            end\n\
    \        else\n            res[#res + 1] = c\n        end\n    end\n    return\
    \ #res > 0 and table.concat(res) or s:reverse()\nend", "    local r = \"\"\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                r = r .. c:lower()\n\
    \            else\n                r = r .. c:upper()\n            end\n     \
    \   else\n            r = r .. c\n        end\n    end\n    return r\nend", " \
    \   local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local res =\
    \ \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"\
    %a\") then\n            res = res .. (c:lower() == c and c:upper() or c:lower())\n\
    \        else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                c = c:lower()\n \
    \           else\n                c = c:upper()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            t[#t + 1] = c:lower() == c and c:upper()\
    \ or c:lower()\n        else\n            t[#t + 1] = c\n        end\n    end\n\
    \    return #t > 0 and table.concat(t) or s:reverse()\nend", "    local t = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            if c:match(\"%u\") then\n                c = c:lower()\n \
    \           else\n                c = c:upper()\n            end\n        end\n\
    \        t[#t + 1] = c\n    end\n    return table.concat(t)\nend", "    local\
    \ res = \"\"\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if\
    \ c:match(\"%a\") then\n            if c:match(\"%u\") then\n                res\
    \ = res .. c:lower()\n            else\n                res = res .. c:upper()\n\
    \            end\n        else\n            res = res .. c\n        end\n    end\n\
    \    return res\nend", "    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %l\") then\n                c = c:upper()\n            else\n                c\
    \ = c:lower()\n            end\n        end\n        t[#t + 1] = c\n    end\n\
    \    return table.concat(t)\nend", "    local t = {}\n    for i = 1, #s do\n \
    \       local c = s:sub(i, i)\n        if c:match(\"%a\") then\n            t[#t\
    \ + 1] = c:lower() == c and c:upper() or c:lower()\n        else\n           \
    \ t[#t + 1] = c\n        end\n    end\n    return #t > 0 and table.concat(t) or\
    \ s:reverse()\nend", "    local res = \"\"\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match(\"%a\") then\n            if c:match(\"\
    %u\") then\n                res = res .. c:lower()\n            else\n       \
    \         res = res .. c:upper()\n            end\n        else\n            res\
    \ = res .. c\n        end\n    end\n    return res\nend", "    local res = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%a')\
    \ then\n            if c:match('%u') then\n                res = res .. c:lower()\n\
    \            else\n                res = res .. c:upper()\n            end\n \
    \       else\n            res = res .. c\n        end\n    end\n    return res\n\
    end", "    local res = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%u\") then\n      \
    \          res[#res + 1] = c:lower()\n            else\n                res[#res\
    \ + 1] = c:upper()\n            end\n        else\n            res[#res + 1] =\
    \ c\n        end\n    end\n    return #res > 0 and table.concat(res) or s:reverse()\n\
    end", "    local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match(\"%a\") then\n            if c:match(\"%l\") then\n      \
    \          t[#t + 1] = c:upper()\n            else\n                t[#t + 1]\
    \ = c:lower()\n            end\n        else\n            t[#t + 1] = c\n    \
    \    end\n    end\n    return #t > 0 and table.concat(t) or s:reverse()\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_106_f
language: lua
results:
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum_n(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzd_wlc76.lua:14:\
    \ attempt to call global 'sum_n' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzd_wlc76.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpzd_wlc76.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpdqxq5pq5.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdqxq5pq5.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpdqxq5pq5.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpaskbyc6v.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpaskbyc6v.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpaskbyc6v.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_0pp5drf.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_0pp5drf.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_0pp5drf.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp98hfdf9h.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp98hfdf9h.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp98hfdf9h.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfdect1v4.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfdect1v4.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpfdect1v4.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzmrqm5wg.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzmrqm5wg.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpzmrqm5wg.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp0if30sb1.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp0if30sb1.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp0if30sb1.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp60bp7aet.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp60bp7aet.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp60bp7aet.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4w7w3m0t.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4w7w3m0t.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp4w7w3m0t.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4pefvaig.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4pefvaig.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp4pefvaig.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyx0wb118.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyx0wb118.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpyx0wb118.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpl_d07_af.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpl_d07_af.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpl_d07_af.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpnbhj4sjb.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnbhj4sjb.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpnbhj4sjb.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3u9w9zou.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3u9w9zou.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp3u9w9zou.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpn24h06vp.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpn24h06vp.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpn24h06vp.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpz7mxgp_u.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpz7mxgp_u.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpz7mxgp_u.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5oi6hkf5.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5oi6hkf5.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5oi6hkf5.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp80712o0m.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp80712o0m.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp80712o0m.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpunqoh810.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpunqoh810.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpunqoh810.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmptaauwip2.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmptaauwip2.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmptaauwip2.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpwje8b78t.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwje8b78t.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpwje8b78t.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum_to(i)\n    end\n \
    \ end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpltqt05j3.lua:14:\
    \ attempt to call global 'sum_to' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpltqt05j3.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpltqt05j3.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpebqsuv46.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpebqsuv46.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpebqsuv46.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppd_9i1wc.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppd_9i1wc.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmppd_9i1wc.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyhw55wej.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyhw55wej.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpyhw55wej.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp8uu5kkxv.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8uu5kkxv.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp8uu5kkxv.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5znasphj.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5znasphj.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5znasphj.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfpxgut9s.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfpxgut9s.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpfpxgut9s.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpd4w2bf5u.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd4w2bf5u.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpd4w2bf5u.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp0d_9yi2c.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp0d_9yi2c.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp0d_9yi2c.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpupm2h36e.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpupm2h36e.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpupm2h36e.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfuch6hsn.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfuch6hsn.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpfuch6hsn.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp1b6qzat2.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1b6qzat2.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp1b6qzat2.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpt6knc6gp.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpt6knc6gp.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpt6knc6gp.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpg0qwmsb0.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpg0qwmsb0.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpg0qwmsb0.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2f02xdx9.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2f02xdx9.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp2f02xdx9.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpcp9pfspu.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcp9pfspu.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpcp9pfspu.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp37qrzgs1.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp37qrzgs1.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp37qrzgs1.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4z5amsv6.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4z5amsv6.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp4z5amsv6.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpgbes52w1.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgbes52w1.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpgbes52w1.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp509sle46.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp509sle46.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp509sle46.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpszob5f13.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpszob5f13.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpszob5f13.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmph2z9pus5.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmph2z9pus5.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmph2z9pus5.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpiqnuf1zr.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpiqnuf1zr.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpiqnuf1zr.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp08kvlgc3.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp08kvlgc3.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp08kvlgc3.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmplfudrj1d.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplfudrj1d.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmplfudrj1d.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpsgvn5n5n.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsgvn5n5n.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpsgvn5n5n.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_4jiqycx.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_4jiqycx.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_4jiqycx.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpn9sjnxjd.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpn9sjnxjd.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpn9sjnxjd.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjtfjgsqz.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjtfjgsqz.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjtfjgsqz.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3o29yv88.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3o29yv88.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp3o29yv88.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpnsnr5epz.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnsnr5epz.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpnsnr5epz.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpvnp_tr58.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvnp_tr58.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpvnp_tr58.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpcz0degda.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcz0degda.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpcz0degda.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppvbq96g4.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppvbq96g4.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmppvbq96g4.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpd59k61kj.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd59k61kj.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpd59k61kj.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpk69dpvme.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpk69dpvme.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpk69dpvme.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_t61eprf.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_t61eprf.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_t61eprf.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpwqxbeaii.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwqxbeaii.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpwqxbeaii.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpz22bcvwa.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpz22bcvwa.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpz22bcvwa.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6vuabpdo.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6vuabpdo.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp6vuabpdo.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpn4_q38wf.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpn4_q38wf.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpn4_q38wf.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyzkpyq3l.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyzkpyq3l.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpyzkpyq3l.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ local factorial = 1\n      for j = 1, i do\n        factorial = factorial *\
    \ j\n      end\n      result[i] = factorial\n    else\n      local sum = 0\n \
    \     for j = 1, i do\n        sum = sum + j\n      end\n      result[i] = sum\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.001 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpe0929abk.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpe0929abk.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpe0929abk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9nls01xs.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9nls01xs.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp9nls01xs.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp18f1mcx3.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp18f1mcx3.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp18f1mcx3.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpxfn2awa5.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxfn2awa5.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpxfn2awa5.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5rvemy_9.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5rvemy_9.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5rvemy_9.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9hcinz7l.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9hcinz7l.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp9hcinz7l.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4g4fhxs9.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4g4fhxs9.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp4g4fhxs9.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjzg8b1eg.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjzg8b1eg.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjzg8b1eg.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyk_curma.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyk_curma.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpyk_curma.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp7lyf5psi.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7lyf5psi.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp7lyf5psi.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp1yfoue4g.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1yfoue4g.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp1yfoue4g.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpflrnydhm.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpflrnydhm.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpflrnydhm.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmsc6403c.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmsc6403c.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpmsc6403c.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphyu6u1oi.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphyu6u1oi.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmphyu6u1oi.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5fuouop9.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5fuouop9.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5fuouop9.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_13azmkn.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_13azmkn.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_13azmkn.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzirdyu3t.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzirdyu3t.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpzirdyu3t.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ local factorial = 1\n      for j = 1, i do\n        factorial = factorial *\
    \ j\n      end\n      result[i] = factorial\n    else\n      local sum = 0\n \
    \     for j = 1, i do\n        sum = sum + j\n      end\n      result[i] = sum\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmph62w8qld.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmph62w8qld.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmph62w8qld.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpkn62rd5h.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpkn62rd5h.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpkn62rd5h.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpumfnhlrx.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpumfnhlrx.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpumfnhlrx.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpr4ytsska.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpr4ytsska.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpr4ytsska.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpvmcpstcp.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvmcpstcp.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpvmcpstcp.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpy_nra71_.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpy_nra71_.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpy_nra71_.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpd05k3qdh.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd05k3qdh.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpd05k3qdh.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpg8bcvcw_.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpg8bcvcw_.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpg8bcvcw_.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            res[i] = factorial(i)\n        else\n            res[i] = sum(i)\n\
    \        end\n    end\n    return res\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpdh2i5k8g.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdh2i5k8g.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpdh2i5k8g.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphbrie33s.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphbrie33s.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmphbrie33s.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4_pysua7.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4_pysua7.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp4_pysua7.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpsszywxmg.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsszywxmg.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpsszywxmg.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphgm1bee6.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphgm1bee6.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmphgm1bee6.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_58ngtvf.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_58ngtvf.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_58ngtvf.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfd41_fnw.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfd41_fnw.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpfd41_fnw.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphxlnkvvt.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphxlnkvvt.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmphxlnkvvt.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2i21xw61.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2i21xw61.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp2i21xw61.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmprt4uj_7o.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprt4uj_7o.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmprt4uj_7o.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2zetkua0.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2zetkua0.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp2zetkua0.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5zqm1w68.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5zqm1w68.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5zqm1w68.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2p79p6ra.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2p79p6ra.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp2p79p6ra.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpx7kslx3x.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpx7kslx3x.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpx7kslx3x.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5kqrancv.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5kqrancv.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5kqrancv.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      local\
    \ fact = 1\n      for j = 1, i do\n        fact = fact * j\n      end\n      res[i]\
    \ = fact\n    else\n      local sum = 0\n      for j = 1, i do\n        sum =\
    \ sum + j\n      end\n      res[i] = sum\n    end\n  end\n  return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n  \
    \  lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpo354pqay.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo354pqay.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpo354pqay.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp1vil93to.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1vil93to.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp1vil93to.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpd__xqxdv.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd__xqxdv.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpd__xqxdv.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpcqhh1ekk.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcqhh1ekk.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpcqhh1ekk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjeui_7ix.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjeui_7ix.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjeui_7ix.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpydhf2igj.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpydhf2igj.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpydhf2igj.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local list = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            local factorial = 1\n            for j = 1, i do\n              \
    \  factorial = factorial * j\n            end\n            list[i] = factorial\n\
    \        else\n            local sum = 0\n            for j = 1, i do\n      \
    \          sum = sum + j\n            end\n            list[i] = sum\n       \
    \ end\n    end\n    return list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfxqa8wsw.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfxqa8wsw.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpfxqa8wsw.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpoy53_x1x.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpoy53_x1x.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpoy53_x1x.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpms2h0fig.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpms2h0fig.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpms2h0fig.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmps978gd0e.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmps978gd0e.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmps978gd0e.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpy7qt0dzf.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpy7qt0dzf.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpy7qt0dzf.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpssq7r3f1.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpssq7r3f1.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpssq7r3f1.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp38jmbwl_.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp38jmbwl_.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp38jmbwl_.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum_to(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3aibkkng.lua:14:\
    \ attempt to call global 'sum_to' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3aibkkng.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp3aibkkng.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjn9jsjwr.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjn9jsjwr.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjn9jsjwr.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum_numbers(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5c4xf26b.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5c4xf26b.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp5c4xf26b.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpqp9fz4m7.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqp9fz4m7.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpqp9fz4m7.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpi_qrcvyt.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpi_qrcvyt.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpi_qrcvyt.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp58vdx_l5.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp58vdx_l5.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp58vdx_l5.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum_numbers(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp8e_75w7p.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8e_75w7p.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp8e_75w7p.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpb9gvlyzr.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpb9gvlyzr.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpb9gvlyzr.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpwaqzsgpi.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwaqzsgpi.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpwaqzsgpi.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpdz2s5xda.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdz2s5xda.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpdz2s5xda.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpon3hq31m.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpon3hq31m.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpon3hq31m.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpi9n3stez.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpi9n3stez.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpi9n3stez.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            local factorial = 1\n            for j = 1, i do\n              \
    \  factorial = factorial * j\n            end\n            result[i] = factorial\n\
    \        else\n            local sum = 0\n            for j = 1, i do\n      \
    \          sum = sum + j\n            end\n            result[i] = sum\n     \
    \   end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpg7ax9yt9.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpg7ax9yt9.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpg7ax9yt9.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpqsgtpld0.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqsgtpld0.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpqsgtpld0.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpu2ve9yda.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu2ve9yda.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpu2ve9yda.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpvlz32mjl.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvlz32mjl.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpvlz32mjl.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpuf6p12_n.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpuf6p12_n.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpuf6p12_n.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpj1ybosih.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpj1ybosih.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpj1ybosih.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpnze5a1vl.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnze5a1vl.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpnze5a1vl.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum_numbers(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpx6c_e_iy.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpx6c_e_iy.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpx6c_e_iy.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpp_ozu9fi.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpp_ozu9fi.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpp_ozu9fi.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpm159p28o.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpm159p28o.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpm159p28o.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpea8tlb7y.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpea8tlb7y.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpea8tlb7y.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            res[i] = factorial(i)\n        else\n            res[i] = sum(i)\n\
    \        end\n    end\n    return res\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpwf3ck8xz.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwf3ck8xz.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpwf3ck8xz.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum_numbers(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp90hy4r6s.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp90hy4r6s.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp90hy4r6s.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp23u6e5uq.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp23u6e5uq.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp23u6e5uq.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmproghdjbk.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmproghdjbk.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmproghdjbk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjeg_7xy4.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjeg_7xy4.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjeg_7xy4.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpf2wl491p.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpf2wl491p.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpf2wl491p.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2ukzctf2.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2ukzctf2.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp2ukzctf2.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6ztxzm5s.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6ztxzm5s.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp6ztxzm5s.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp12w5fkcx.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp12w5fkcx.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp12w5fkcx.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphonwtsg2.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphonwtsg2.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmphonwtsg2.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp8metm7uk.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8metm7uk.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp8metm7uk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            local fact = 1\n            for j = 1, i do\n                fact\
    \ = fact * j\n            end\n            res[i] = fact\n        else\n     \
    \       local sum = 0\n            for j = 1, i do\n                sum = sum\
    \ + j\n            end\n            res[i] = sum\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.001 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpv8psj1yj.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpv8psj1yj.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpv8psj1yj.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpassg2544.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpassg2544.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpassg2544.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4ahi7rts.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4ahi7rts.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp4ahi7rts.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpkqxvwyyq.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpkqxvwyyq.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpkqxvwyyq.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum_numbers(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp59rk1nez.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp59rk1nez.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp59rk1nez.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            res[i] = factorial(i)\n        else\n            res[i] = sum(i)\n\
    \        end\n    end\n    return res\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpu6o6jexz.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu6o6jexz.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpu6o6jexz.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjbbaksr0.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjbbaksr0.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjbbaksr0.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpq4z7znyi.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpq4z7znyi.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpq4z7znyi.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_kowic21.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_kowic21.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_kowic21.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = math.factorial(i)\n    else\n      t[i] = i * (i + 1) / 2\n    end\n  end\n\
    \  return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9g8_s6vo.lua:12:\
    \ attempt to call field 'factorial' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9g8_s6vo.lua:12:\
    \ in function 'candidate'\\n\\t/tmp/tmp9g8_s6vo.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppa6r4c_l.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppa6r4c_l.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmppa6r4c_l.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          local factorial = 1\n            for j = 1, i do\n                factorial\
    \ = factorial * j\n            end\n            t[i] = factorial\n        else\n\
    \            local sum = 0\n            for j = 1, i do\n                sum =\
    \ sum + j\n            end\n            t[i] = sum\n        end\n    end\n   \
    \ return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpuz6wlezl.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpuz6wlezl.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpuz6wlezl.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmptdhjikvk.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmptdhjikvk.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmptdhjikvk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjj8um3f1.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjj8um3f1.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpjj8um3f1.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum_numbers(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_i18nc8x.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_i18nc8x.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_i18nc8x.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpselnlm4h.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpselnlm4h.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpselnlm4h.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum_numbers(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpp8hbt58c.lua:14:\
    \ attempt to call global 'sum_numbers' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpp8hbt58c.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpp8hbt58c.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp7z7qhn_m.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7z7qhn_m.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp7z7qhn_m.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpc3oe9gyy.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpc3oe9gyy.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpc3oe9gyy.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp054tabm8.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp054tabm8.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp054tabm8.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp833qbve6.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp833qbve6.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp833qbve6.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2_bi0sa9.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2_bi0sa9.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp2_bi0sa9.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_fzwpmvk.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_fzwpmvk.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp_fzwpmvk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpo4tztrmr.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo4tztrmr.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpo4tztrmr.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpgit5mk12.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgit5mk12.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpgit5mk12.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            local factorial = 1\n            for j = 1, i do\n              \
    \  factorial = factorial * j\n            end\n            result[i] = factorial\n\
    \        else\n            local sum = 0\n            for j = 1, i do\n      \
    \          sum = sum + j\n            end\n            result[i] = sum\n     \
    \   end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpgk3ogz0f.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgk3ogz0f.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpgk3ogz0f.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local res = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      res[i]\
    \ = factorial(i)\n    else\n      res[i] = sum(i)\n    end\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpysla6cdj.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpysla6cdj.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpysla6cdj.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzrvsar4y.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzrvsar4y.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpzrvsar4y.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp8xu40z0q.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8xu40z0q.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmp8xu40z0q.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpktm0_cfi.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpktm0_cfi.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpktm0_cfi.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmps1t6hk09.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmps1t6hk09.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmps1t6hk09.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n     \
    \ result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpieouk67t.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpieouk67t.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpieouk67t.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n    \
    \    end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpek5kvxb4.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpek5kvxb4.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpek5kvxb4.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmps_j99qt7.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmps_j99qt7.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmps_j99qt7.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            result[i] = factorial(i)\n        else\n            result[i] = sum(i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpwhaghqe2.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwhaghqe2.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpwhaghqe2.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            local factorial = 1\n            for j = 1, i do\n              \
    \  factorial = factorial * j\n            end\n            result[i] = factorial\n\
    \        else\n            local sum = 0\n            for j = 1, i do\n      \
    \          sum = sum + j\n            end\n            result[i] = sum\n     \
    \   end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpk_afh5ra.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpk_afh5ra.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpk_afh5ra.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpcn9t0gqa.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcn9t0gqa.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpcn9t0gqa.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmy1aedy6.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmy1aedy6.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpmy1aedy6.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppn6ugtbe.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppn6ugtbe.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmppn6ugtbe.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- f(5) == [1, 2, 6, 24, 15]\nlocal function\
    \ f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      t[i]\
    \ = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
    \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpwxu17x3n.lua:14:\
    \ attempt to call global 'sum' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwxu17x3n.lua:14:\
    \ in function 'candidate'\\n\\t/tmp/tmpwxu17x3n.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception

name: HumanEval_62_derivative
language: lua
results:
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_4i3o4gp.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp_4i3o4gp.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = (i + 1) * xs[i + 1]\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt3r1yn1m.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpt3r1yn1m.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbopomnzb.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpbopomnzb.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2_5g7nr1.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp2_5g7nr1.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpse5fx64m.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpse5fx64m.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpdml6ysxh.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpdml6ysxh.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = (i + 1) * xs[i + 1]\n    end\n    return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9rlaf1sq.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp9rlaf1sq.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = (i + 1) * xs[i + 1]\n  end\n  return\
    \ ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpp43s4vqu.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpp43s4vqu.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp37pggj2h.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp37pggj2h.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 1, #xs - 1 do\n        ys[i] = xs[i] * i\n    end\n    return ys\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnc7wjhif.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpnc7wjhif.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7ifr71y3.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp7ifr71y3.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpljq578y2.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpljq578y2.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0yuuz5jt.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp0yuuz5jt.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpog6mm8l_.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpog6mm8l_.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmps23z58ss.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmps23z58ss.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5w36g3qv.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp5w36g3qv.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6mjg_c7g.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp6mjg_c7g.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = (i + 1) * xs[i + 1]\n  end\n  return\
    \ ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7f04jn8q.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp7f04jn8q.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqv273amq.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpqv273amq.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcwb5kx92.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpcwb5kx92.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        table.insert(result, xs[i] * i)\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpc0l2z4mg.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpc0l2z4mg.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 2, #xs do\n        dxs[i - 1] = xs[i] * (i - 1)\n    end\n    return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.001 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0ay6ocnv.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp0ay6ocnv.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0v5agy9p.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp0v5agy9p.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppv1ahjw2.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmppv1ahjw2.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphhad4one.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmphhad4one.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp71v95cfg.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp71v95cfg.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 2, #xs do\n        ys[i - 1] = xs[i] * (i - 1)\n    end\n    return ys\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmvq95ill.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpmvq95ill.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpa34b2zl6.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpa34b2zl6.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        table.insert(result, xs[i] * i)\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxjxjmj0l.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpxjxjmj0l.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = (i + 1) * xs[i + 1]\n    end\n    return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpo4m_6mtq.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpo4m_6mtq.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 2, #xs do\n        result[i - 1] = xs[i] * (i - 1)\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 1, #xs - 1 do\n        ys[i] = xs[i] * i\n    end\n    return ys\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpitpdgh1f.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpitpdgh1f.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpx4g7sgya.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpx4g7sgya.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp95yaw3dk.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp95yaw3dk.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3vknn93q.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp3vknn93q.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpeu9gxotn.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpeu9gxotn.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp57jp4864.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp57jp4864.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjaebdv08.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpjaebdv08.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 2, n do\n        ys[i - 1] = xs[i] * (i - 1)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1q34pxev.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp1q34pxev.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = (i + 1) * xs[i + 1]\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpj5tpdubo.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpj5tpdubo.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpvyajaumt.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpvyajaumt.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu89geupf.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpu89geupf.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    if n ==\
    \ 0 then\n        return {}\n    end\n    local dxs = {}\n    for i = 1, n - 1\
    \ do\n        dxs[i] = xs[i + 1] * i\n    end\n    return dxs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 2, #xs do\n        dxs[i - 1] = xs[i] * (i - 1)\n    end\n    return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxm0zm6sj.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpxm0zm6sj.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmps7bpzaou.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmps7bpzaou.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 2, #xs do\n        result[i - 1] = xs[i] * (i - 1)\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpy8mgf79x.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpy8mgf79x.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpj3kn9npp.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpj3kn9npp.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8z9j0_20.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp8z9j0_20.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ dxs = {}\n    for i = 1, n - 1 do\n        dxs[i] = xs[i] * (n - i)\n    end\n\
    \    return dxs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjbxe18_k.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpjbxe18_k.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 1, #xs - 1 do\n        ys[i] = xs[i] * i\n    end\n    return ys\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnqy6x3_n.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpnqy6x3_n.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = (i + 1) * xs[i + 1]\n  end\n  return\
    \ ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpctw8hnze.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpctw8hnze.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0fzv07ht.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp0fzv07ht.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6sddy_1a.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp6sddy_1a.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsvfhpo7n.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpsvfhpo7n.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6mou7fjr.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp6mou7fjr.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * (i)\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4pe9f7gt.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp4pe9f7gt.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpuv8lkbi0.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpuv8lkbi0.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 2, n do\n    ys[i - 1] = (i - 1) * xs[i]\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9kxaj9_p.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp9kxaj9_p.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwpnsi3vk.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpwpnsi3vk.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwn1qb5c1.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpwn1qb5c1.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpb9ct80hx.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpb9ct80hx.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz4hrjlb2.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpz4hrjlb2.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 2, #xs do\n        table.insert(result, xs[i] * (i - 1))\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.001 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpg5gzufa4.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpg5gzufa4.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpn11poag6.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpn11poag6.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_qqo3tkq.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp_qqo3tkq.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpb1la1oy2.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpb1la1oy2.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprksf_9n6.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmprksf_9n6.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqnou8pld.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpqnou8pld.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0_rd68cz.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp0_rd68cz.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = xs[i] * i\n    end\n    return dxs\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp645fhuqx.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp645fhuqx.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7qdqq5af.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp7qdqq5af.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp96z9pqxj.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp96z9pqxj.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpuxyjr5bl.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpuxyjr5bl.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmehtytua.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpmehtytua.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxtz34pw0.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpxtz34pw0.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwutuf4wp.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpwutuf4wp.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  if n == 0\
    \ then\n    return {}\n  end\n  local ys = {}\n  for i = 1, n - 1 do\n    ys[i]\
    \ = xs[i + 1] * i\n  end\n  return ys\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpk3lb0kl9.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpk3lb0kl9.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ dxs = {}\n    for i = 1, n - 1 do\n        dxs[i] = xs[i] * (n - i)\n    end\n\
    \    return dxs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptpis7m4c.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmptpis7m4c.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpq5_krrny.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpq5_krrny.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7d8p7qyu.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp7d8p7qyu.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpkt4mj1am.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpkt4mj1am.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppgrk79ef.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmppgrk79ef.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmshxe_ii.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpmshxe_ii.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppu5feygr.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmppu5feygr.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgok7s05_.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpgok7s05_.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppmx526hl.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmppmx526hl.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = xs[i] * (i)\n    end\n    return dxs\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgd4synds.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpgd4synds.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw9wsxgi_.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpw9wsxgi_.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = xs[i] * i\n    end\n    return dxs\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpzqkq_63b.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpzqkq_63b.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpp15ws01p.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpp15ws01p.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_d5l_mwq.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp_d5l_mwq.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5mjpagkm.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp5mjpagkm.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6broilo8.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp6broilo8.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 1, #xs - 1 do\n        ys[i] = xs[i] * i\n    end\n    return ys\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfgzbzvii.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpfgzbzvii.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_k1cq5ni.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp_k1cq5ni.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local dxs\
    \ = {}\n  for i = 1, n - 1 do\n    dxs[i] = xs[i] * (n - i)\n  end\n  return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpze0hurt8.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpze0hurt8.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphic2ymdf.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmphic2ymdf.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpschrx4j5.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpschrx4j5.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmw73cygy.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpmw73cygy.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptegda4x5.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmptegda4x5.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpamakjvrl.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpamakjvrl.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpkwgowc8d.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpkwgowc8d.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqkyzzfr4.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpqkyzzfr4.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5oi5vf24.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp5oi5vf24.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpx774xiym.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpx774xiym.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * (i)\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3cvfi46n.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp3cvfi46n.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfapesx6e.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpfapesx6e.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnn5dbldv.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpnn5dbldv.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpklv19cbg.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpklv19cbg.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpp1kkxtc5.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpp1kkxtc5.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = xs[i] * i\n    end\n    return dxs\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfcn_uqup.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpfcn_uqup.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu0z47atq.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpu0z47atq.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp188p_1cq.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp188p_1cq.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ dxs = {}\n    for i = 1, n - 1 do\n        dxs[i] = xs[i] * (n - i)\n    end\n\
    \    return dxs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw9_nm5z_.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpw9_nm5z_.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8rblb0iv.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp8rblb0iv.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ret = {}\n    for i\
    \ = 1, #xs - 1 do\n        ret[i] = xs[i] * i\n    end\n    return ret\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpifuq_yd5.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpifuq_yd5.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgkoxa07t.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpgkoxa07t.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  if n == 0\
    \ then\n    return {}\n  end\n  local ys = {}\n  for i = 1, n - 1 do\n    ys[i]\
    \ = xs[i + 1] * i\n  end\n  return ys\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw3mbe_ca.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpw3mbe_ca.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_p58edfp.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp_p58edfp.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local res\
    \ = {}\n  for i = 1, n - 1 do\n    res[i] = xs[i] * (n - i)\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpkhotnj1h.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpkhotnj1h.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8u_uoj8t.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp8u_uoj8t.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgrsoewiv.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpgrsoewiv.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppfhiavki.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmppfhiavki.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp808jdp9i.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp808jdp9i.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 2, #xs do\n        result[i - 1] = xs[i] * (i - 1)\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = xs[i] * (i)\n    end\n    return dxs\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpps_7ks3s.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpps_7ks3s.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 2, n do\n        ys[i - 1] = xs[i] * (i - 1)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local result = {}\n  for i\
    \ = 1, #xs - 1 do\n    result[i] = xs[i] * i\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2pcu1f0t.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp2pcu1f0t.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplo5ndbmo.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmplo5ndbmo.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpp38zxbnv.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpp38zxbnv.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbsgmylrq.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpbsgmylrq.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpq76m3yo1.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpq76m3yo1.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 2, n do\n        ys[i - 1] = (i - 1) * xs[i]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.001 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjm1xjbnb.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpjm1xjbnb.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = xs[i] * (i)\n    end\n    return dxs\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmputrh4lxz.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmputrh4lxz.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ dxs = {}\n    for i = 1, n - 1 do\n        dxs[i] = xs[i] * (n - i)\n    end\n\
    \    return dxs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbnyj6q52.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpbnyj6q52.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpg4kyapqo.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpg4kyapqo.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ dxs = {}\n    for i = 1, n - 1 do\n        dxs[i] = xs[i] * (n - i)\n    end\n\
    \    return dxs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpyi8r890a.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpyi8r890a.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ result = {}\n    for i = 1, n - 1 do\n        result[i] = xs[i] * (n - i)\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpceyzptpy.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpceyzptpy.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpv1hdohjx.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpv1hdohjx.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptm46i96l.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmptm46i96l.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3bg1plcb.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp3bg1plcb.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpy18c7eku.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpy18c7eku.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcuih55tf.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpcuih55tf.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz93si1l4.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpz93si1l4.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs - 1\n    local\
    \ ys = {}\n    for i = 1, n do\n        ys[i] = xs[i + 1] * i\n    end\n    return\
    \ ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp642iilge.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp642iilge.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjd_avjix.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpjd_avjix.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpiftq92__.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpiftq92__.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpdvbilipt.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpdvbilipt.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = (i + 1) * xs[i + 1]\n  end\n  return\
    \ ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprrq7oaev.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmprrq7oaev.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3okx__yh.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmp3okx__yh.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3h8fjgm9.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp3h8fjgm9.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpselhsulo.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpselhsulo.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp83rd7j45.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp83rd7j45.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7egz116f.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmp7egz116f.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwdavnrar.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpwdavnrar.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ result = {}\n    for i = 1, n - 1 do\n        result[i] = xs[i] * (n - i)\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpri0w8gw3.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpri0w8gw3.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = (i + 1) * xs[i + 1]\n    end\n    return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxa1cvx1o.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpxa1cvx1o.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnnd_8x3r.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpnnd_8x3r.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ res = {}\n    for i = 1, n - 1 do\n        res[i] = xs[i] * (n - i)\n    end\n\
    \    return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpr7q48jfe.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpr7q48jfe.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3x7yoxh9.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp3x7yoxh9.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9gggau69.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp9gggau69.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcxklacw4.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpcxklacw4.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbu5dm43n.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpbu5dm43n.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpai92o3o5.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpai92o3o5.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 1, #xs - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n    return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppypk8b3f.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmppypk8b3f.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_t1z0m3c.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp_t1z0m3c.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpl90takul.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpl90takul.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpv36w96zs.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpv36w96zs.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local res = {}\n    for i\
    \ = 1, #xs - 1 do\n        res[i] = xs[i] * i\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpr_3rm02p.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpr_3rm02p.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4k2ro7rc.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp4k2ro7rc.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp22v9c9h7.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp22v9c9h7.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 2, n do\n        ys[i - 1] = xs[i] * (i - 1)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpar83qq4l.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpar83qq4l.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpojo42ef4.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpojo42ef4.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpn7gnszzq.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpn7gnszzq.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local result = {}\n    for\
    \ i = 1, #xs - 1 do\n        result[i] = xs[i] * i\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmps65smokb.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmps65smokb.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local dxs = {}\n    for i\
    \ = 1, #xs - 1 do\n        dxs[i] = (i + 1) * xs[i + 1]\n    end\n    return dxs\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpzqdde0qc.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpzqdde0qc.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz4aerxtg.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpz4aerxtg.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_7o9nhl1.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp_7o9nhl1.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnhvwo9iv.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpnhvwo9iv.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpk4bq9ulk.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpk4bq9ulk.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprfe8cy_j.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmprfe8cy_j.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpky0e3gkl.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpky0e3gkl.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp38lbh69j.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmp38lbh69j.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs - 1\n  local\
    \ ys = {}\n  for i = 1, n do\n    ys[i] = xs[i + 1] * i\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local ys = {}\n    for i\
    \ = 1, #xs - 1 do\n        ys[i] = xs[i] * i\n    end\n    return ys\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpho9g1jdq.lua:19:\
    \ expected: {1, 4, 12, 20}\\nactual: {3, 2, 6, 16}\\nstack traceback:\\n\\t/tmp/tmpho9g1jdq.lua:19:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  local ys =\
    \ {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return ys\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpuorn1voo.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {12, 3, 4, 4}\\nstack traceback:\\n\\t/tmp/tmpuorn1voo.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt61inyxs.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpt61inyxs.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n    local n = #xs\n    local\
    \ ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n\
    \    return ys\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpflu23ara.lua:20:\
    \ expected: {1, 4, 12, 20}\\nactual: {2, 6, 16, 25}\\nstack traceback:\\n\\t/tmp/tmpflu23ara.lua:20:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception

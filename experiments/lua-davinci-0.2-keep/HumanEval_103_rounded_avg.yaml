name: HumanEval_103_rounded_avg
language: lua
prompt: "-- You are given two positive integers n and m, and your task is to compute\
  \ the\n-- average of the integers from n through m (including n and m). \n-- Round\
  \ the answer to the nearest integer and convert that to binary.\n-- If n is greater\
  \ than m, return -1.\n-- Example:\n-- rounded_avg(1, 5) => \"0b11\"\n-- rounded_avg(7,\
  \ 5) => -1\n-- rounded_avg(10, 20) => \"0b1111\"\n-- rounded_avg(20, 33) => \"0b11010\"\
  \nlocal function rounded_avg(n, m)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rounded_avg\n\
  \    lu.assertEquals(candidate(1, 5), '0b11')\n    lu.assertEquals(candidate(7,\
  \ 13), '0b1010')\n    lu.assertEquals(candidate(964, 977), '0b1111001010')\n   \
  \ lu.assertEquals(candidate(996, 997), '0b1111100100')\n    lu.assertEquals(candidate(560,\
  \ 851), '0b1011000010')\n    lu.assertEquals(candidate(185, 546), '0b101101110')\n\
  \    lu.assertEquals(candidate(362, 496), '0b110101101')\n    lu.assertEquals(candidate(350,\
  \ 902), '0b1001110010')\n    lu.assertEquals(candidate(197, 233), '0b11010111')\n\
  \    lu.assertEquals(candidate(7, 5), -1)\n    lu.assertEquals(candidate(5, 1),\
  \ -1)\n    lu.assertEquals(candidate(5, 5), '0b101')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local\
    \ avg = math.floor(sum / (m - n + 1))\n  return avg == 0 and 0 or \"0b\" .. tostring(avg)\n\
    end", "    if n > m then\n        return -1\n    end\n    local sum = 0\n    for\
    \ i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = sum / (m - n + 1)\n  return string.format(\"0b%s\"\
    , tostring(math.floor(avg + 0.5)))\nend", "    if n > m then\n        return -1\n\
    \    end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n\
    \    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\" .. tostring(avg)\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. string.format(\"%b\", avg)\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", " \
    \ if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "    if n > m then return -1 end\n    local sum = 0\n\
    \    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1))\n  return avg\nend", "  if n > m then\n    return -1\n  end\n\
    \  local avg = math.floor((n + m) / 2)\n  return \"0b\" .. tostring(avg)\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "    if n > m then return -1 end\n    local sum = 0\n\
    \    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return string.format(\"0b%s\", tostring(avg))\nend",
  "  local avg = math.floor((n + m) / 2)\n  if n > m then\n    return -1\n  else\n\
    \    return \"0b\" .. tostring(avg)\n  end\nend", "    if n > m then return -1\
    \ end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n\
    \    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "    if n > m\
    \ then\n        return -1\n    end\n    local sum = 0\n    for i = n, m do\n \
    \       sum = sum + i\n    end\n    local avg = sum / (m - n + 1)\n    return\
    \ string.format(\"0b%s\", tostring(avg))\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", " \
    \   if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n    \
    \    sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n\
    \    return \"0b\" .. tostring(avg)\nend", "    if n > m then return -1 end\n\
    \    local avg = math.floor((n + m) / 2)\n    return string.format(\"0b%s\", tostring(avg))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  return string.format(\"0b%s\", tostring(bit32.rshift(sum, (m - n + 1))))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. string.format(\"%b\", avg)\nend", "    if n > m then\n        return\
    \ -1\n    end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n\
    \    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\"\
    \ .. string.format(\"%b\", avg)\nend", "    if n > m then return -1 end\n    local\
    \ sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    return string.format(\"\
    0b%s\", tostring(bit32.bnot(bit32.lshift(bit32.rshift(sum, m - n + 1), 1))))\n\
    end", "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1)\
    \ + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend", "  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1))\n  return avg\nend", "  if n > m then return -1 end\n  local\
    \ sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = sum / (m\
    \ - n + 1)\n  return string.format(\"0b%s\", tostring(math.floor(avg + 0.5)))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  return \"0b\" .. tostring(math.floor(sum / (m - n +\
    \ 1)))\nend", "    if n > m then return -1 end\n    local sum = 0\n    for i =\
    \ n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum / (m\
    \ - n + 1) + 0.5)\n    return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  return string.format(\"0b%s\", tostring(bit32.rshift(sum / (m - n + 1) + 0.5,\
    \ 0)))\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n +\
    \ 1))\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n\
    \  local avg = math.floor((n + m) / 2)\n  return string.format(\"0b%s\", tostring(avg))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. string.format(\"%b\", avg)\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  -- your code\
    \ here\nend", "    if n > m then\n        return -1\n    end\n    local sum =\
    \ 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg = sum\
    \ / (m - n + 1)\n    return string.format(\"0b%s\", tostring(avg))\nend", "  if\
    \ n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "    if n > m then return -1 end\n    local sum = 0\n\
    \    for i = n, m do\n        sum = sum + i\n    end\n    return string.format(\"\
    0b%s\", dec2bin(math.floor(sum / (m - n + 1))))\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local\
    \ avg = math.floor(sum / (m - n + 1))\n  return \"0b\" .. avg\nend", "    if n\
    \ > m then return -1 end\n    local sum = 0\n    for i = n, m do\n        sum\
    \ = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n  \
    \  return \"0b\" .. tostring(avg)\nend", "    if n > m then\n        return -1\n\
    \    end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n\
    \    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  -- your code here\nend", "    if n > m then return -1 end\n\
    \    local avg = math.floor((n + m) / 2)\n    return string.format(\"0b%s\", tostring(avg))\n\
    end", "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    return string.format(\"0b%s\", tostring(bit32.rshift(sum\
    \ / (m - n + 1) + 0.5, 0)))\nend", "    if n > m then return -1 end\n    local\
    \ sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg\
    \ = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\" .. tostring(avg)\n\
    end", "  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg\
    \ = math.floor(sum / (m - n + 1))\n  if n > m then\n    return -1\n  else\n  \
    \  return \"0b\" .. tostring(avg)\n  end\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "    if n > m\
    \ then\n        return -1\n    end\n    local sum = 0\n    for i = n, m do\n \
    \       sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n    return string.format(\"0b%s\", tostring(avg))\nend", "  -- your code\
    \ here\nend", "  -- your code here\nend", "  -- your code here\nend", "  -- your\
    \ code here\nend", "    if n > m then\n        return -1\n    end\n    local sum\
    \ = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  -- your code here\nend", "  if n > m then return -1 end\n  local avg = math.floor((n\
    \ + m) / 2)\n  return string.format(\"0b%s\", tostring(avg))\nend", "    if n\
    \ > m then\n        return -1\n    end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1)\
    \ + 0.5)\n    return string.format(\"0b%s\", tostring(avg))\nend", "    if n >\
    \ m then\n        return -1\n    end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1)\
    \ + 0.5)\n    return \"0b\" .. tostring(avg)\nend", "  -- your code here\nend",
  "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n     \
    \   sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n\
    \    return \"0b\" .. tostring(avg)\nend", "    if n > m then\n        return\
    \ -1\n    end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n\
    \    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\"\
    \ .. string.format(\"%b\", avg)\nend", "  local sum = 0\n  for i = n, m do\n \
    \   sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1))\n  return\
    \ avg >= 0 and \"0b\" .. tostring(avg) or -1\nend", "  -- your code here\nend",
  "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n     \
    \   sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n\
    \    return string.format(\"0b%s\", tostring(avg))\nend", "    local sum = 0\n\
    \    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1))\n    return string.format(\"0b%s\", tostring(avg))\nend", " \
    \   if n > m then\n        return -1\n    end\n    local sum = 0\n    for i =\
    \ n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum / (m\
    \ - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend", "  if\
    \ n > m then return -1 end\n  local avg = math.floor((n + m) / 2)\n  return string.format(\"\
    0b%s\", tostring(avg))\nend", "    if n > m then return -1 end\n    local sum\
    \ = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    return string.format(\"\
    0b%s\", tostring(bit32.rshift(sum, (m - n + 1))))\nend", "  local avg = math.floor((n\
    \ + m) / 2)\n  return (n > m) and -1 or string.format(\"0b%s\", tostring(avg))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. string.format(\"%b\", avg)\nend", "    if n > m then return -1 end\n\
    \    local sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local\
    \ avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\" .. tostring(avg)\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. tostring(avg):reverse():gsub(\"(%d%d%d)\",\"%1,\"):reverse():gsub(\"\
    ,$\",\"\"):reverse()\nend", "  if n > m then return -1 end\n  local avg = math.floor((n\
    \ + m) / 2)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1\
    \ end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg\
    \ = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"%b\"\
    , avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  return string.format(\"0b%s\", tostring(bit32.rshift(sum\
    \ / (m - n + 1) + 0.5, 0)))\nend", "    if n > m then return -1 end\n    local\
    \ avg = math.floor((n + m) / 2)\n    return string.format(\"0b%s\", tostring(avg))\n\
    end", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n\
    \  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n  local\
    \ sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", " \
    \ if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "  -- your code here\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ \"0b\" .. tostring(math.floor(sum / (m - n + 1)))\nend", "    if n > m then\
    \ return -1 end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n\
    \    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\"\
    \ .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1) + 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", "    if n\
    \ > m then\n        return -1\n    end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1)\
    \ + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(math.floor(sum /\
    \ (m - n + 1)))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local\
    \ avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  return string.format(\"0b%s\", tostring(bit32.rshift(sum,\
    \ m - n + 1)))\nend", "  -- your code here\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return string.format(\"\
    0b%s\", tostring(bit32.bnot(bit32.rshift(bit32.band(sum, bit32.lshift(1, math.ceil(math.log(sum)\
    \ / math.log(2))) - 1), 1))))\nend", "  -- your code here\nend", "    local avg\
    \ = math.floor((n + m) / 2)\n    if n > m then\n        return -1\n    else\n\
    \        return string.format(\"0b%s\", tostring(avg))\n    end\nend", "  if n\
    \ > m then return -1 end\n  return string.format(\"0b%s\", math.tointeger(math.floor((n\
    \ + m) / 2)))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n +\
    \ 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1\
    \ end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ string.format(\"0b%s\", tostring(bit32.rshift(sum / (m - n + 1) + 0.5, 0)))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n  return string.format(\"\
    0b%s\", tostring(math.floor((n + m) / 2)))\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  return (n +\
    \ m) / 2\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", "    if n > m then\
    \ return -1 end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n\
    \    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\"\
    \ .. tostring(avg)\nend", "  if n > m then return -1 end\n  local avg = math.floor((n\
    \ + m) / 2)\n  return string.format(\"0b%s\", tostring(avg))\nend", "    if n\
    \ > m then return -1 end\n    local sum = 0\n    for i = n, m do\n        sum\
    \ = sum + i\n    end\n    return string.format(\"0b%s\", tostring(bit32.rshift(sum\
    \ / (m - n + 1) + 0.5, 0)))\nend", "  if n > m then return -1 end\n  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "    if n > m\
    \ then return -1 end\n    local sum = 0\n    for i = n, m do\n        sum = sum\
    \ + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return\
    \ \"0b\" .. string.format(\"%b\", avg)\nend", "  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1))\n\
    \  return avg == 0 and 0 or (\"0b\" .. tostring(avg))\nend", "  -- your code here\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  return \"0b\" .. dec2bin(math.floor(sum / (m - n + 1)))\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "    local avg\
    \ = math.floor((n + m) / 2)\n    if n > m then\n        return -1\n    else\n\
    \        return \"0b\" .. tostring(avg)\n    end\nend", "  -- your code here\n\
    end", "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1)\
    \ + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend", "    if n > m\
    \ then\n        return -1\n    end\n    local sum = 0\n    for i = n, m do\n \
    \       sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n    return string.format(\"0b%s\", tostring(avg))\nend", "  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  sum = sum / (m - n + 1)\n\
    \  sum = math.floor(sum + 0.5)\n  return string.format(\"0b%s\", tostring(sum))\n\
    end", "    if n > m then\n        return -1\n    end\n    local sum = 0\n    for\
    \ i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  local avg = math.floor((n + m) / 2)\n  if n > m then\n    return -1\n  else\n\
    \    return \"0b\" .. tostring(avg)\n  end\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return string.format(\"0b%s\", tostring(avg))\nend",
  "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = sum / (m - n + 1)\n  local rounded = math.floor(avg\
    \ + 0.5)\n  return \"0b\" .. tostring(rounded)\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local\
    \ avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n\
    \  end\n  local avg = sum / (m - n + 1)\n  return string.format(\"0b%s\", tostring(math.floor(avg\
    \ + 0.5)))\nend", "    if n > m then\n        return -1\n    end\n    local sum\
    \ = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. string.format(\"%b\", avg)\nend", "  if n > m then return -1 end\n  local\
    \ sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\n\
    end", "  local avg = math.floor((n + m) / 2)\n  if n > m then\n    return -1\n\
    \  else\n    return \"0b\" .. tostring(avg)\n  end\nend", "  local avg = math.floor((n\
    \ + m) / 2)\n  if n > m then\n    return -1\n  else\n    return \"0b\" .. tostring(avg)\n\
    \  end\nend", "    if n > m then return -1 end\n    local sum = 0\n    for i =\
    \ n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum / (m\
    \ - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend", "  if\
    \ n > m then return -1 end\n  local avg = math.floor((n + m) / 2)\n  return string.format(\"\
    0b%s\", tostring(avg))\nend", "  if n > m then return -1 end\n  local sum = 0\n\
    \  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m\
    \ - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ string.format(\"0b%s\", tostring(math.floor(sum / (m - n + 1))))\nend", "  if\
    \ n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  return string.format(\"0b%s\", tostring(bit32.rshift(sum, m -\
    \ n)))\nend", "    if n > m then\n        return -1\n    end\n    local sum =\
    \ 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return string.format(\"0b%s\", to_binary(avg))\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return\
    \ -1 end\n  local avg = math.floor((n + m) / 2)\n  return string.format(\"0b%s\"\
    , tostring(avg))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "    if n > m then\n  \
    \      return -1\n    end\n    local sum = 0\n    for i = n, m do\n        sum\
    \ = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n  \
    \  return string.format(\"0b%s\", tostring(avg))\nend", "  -- your code here\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return\
    \ \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(bit32.rshift(sum,\
    \ m - n))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  return string.format(\"0b%s\", tostring(bit32.rshift(sum\
    \ / (m - n + 1) + 0.5, 0)))\nend", "  if n > m then return -1 end\n  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n  return \"0b\" .. string.format(\"%b\", avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n + 1) +\
    \ 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n\
    \  return string.format(\"0b%s\", dec2bin(math.floor((n + m) / 2)))\nend", " \
    \ if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  local avg = math.floor((n\
    \ + m) / 2)\n  if n > m then\n    return -1\n  else\n    return \"0b\" .. string.format(\"\
    %b\", avg)\n  end\nend", "    if n > m then\n        return -1\n    end\n    local\
    \ sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    return string.format(\"\
    0b%s\", dec2bin(math.floor(sum / (m - n + 1))))\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ string.format(\"0b%s\", tostring(bit32.rshift(sum, m - n)))\nend", "  if n >\
    \ m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n\
    \  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" ..\
    \ tostring(avg)\nend", "  -- your code here\nend", "  if n > m then return -1\
    \ end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ \"0b\" .. tostring(math.floor(sum / (m - n + 1)))\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n\
    \  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" ..\
    \ tostring(avg)\nend", "    if n > m then return -1 end\n    local sum = 0\n \
    \   for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. tostring(avg)\nend", "  if n > m then\n    return -1\n  end\n  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  return \"0b\" .. tostring(math.floor(sum / (m - n + 1)))\nend", "    if n >\
    \ m then return -1 end\n    local sum = 0\n    for i = n, m do\n        sum =\
    \ sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return\
    \ \"0b\" .. tostring(avg)\nend", "  if n > m then return -1 end\n  local sum =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  return \"0b\" .. tostring(math.floor(sum / (m - n + 1)))\nend", "  -- your\
    \ code here\nend", "  if n > m then return -1 end\n  return string.format(\"0b%s\"\
    , dec2bin(math.floor((n + m) / 2)))\nend", "    if n > m then return -1 end\n\
    \    local avg = math.floor((n + m) / 2)\n    return string.format(\"0b%s\", tostring(avg))\n\
    end", "    if n > m then\n        return -1\n    end\n    local sum = 0\n    for\
    \ i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n     \
    \   sum = sum + i\n    end\n    return string.format(\"0b%s\", tostring(bit32.bnot(bit32.lshift(bit32.rshift(sum,\
    \ m - n + 1), 1))))\nend", "  if n > m then return -1 end\n  local sum = 0\n \
    \ for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m\
    \ - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ \"0b\" .. tostring(math.floor(sum / (m - n + 1)))\nend", "  if n > m then return\
    \ -1 end\n  local avg = math.floor((n + m) / 2)\n  return string.format(\"0b%s\"\
    , tostring(avg))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(math.floor(sum\
    \ / (m - n + 1)))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(math.floor(sum\
    \ / (m - n + 1)))\nend", "    if n > m then return -1 end\n    local sum = 0\n\
    \    for i = n, m do\n        sum = sum + i\n    end\n    return string.format(\"\
    0b%s\", tostring(bit32.rshift(sum, m - n)))\nend", "    if n > m then\n      \
    \  return -1\n    end\n    local sum = 0\n    for i = n, m do\n        sum = sum\
    \ + i\n    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return\
    \ \"0b\" .. string.format(\"%b\", avg)\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then\
    \ return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n\
    \  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\n\
    end", "    if n > m then return -1 end\n    local sum = 0\n    for i = n, m do\n\
    \        sum = sum + i\n    end\n    local avg = math.floor(sum / (m - n + 1)\
    \ + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend", "  -- your code\
    \ here\nend", "  -- your code here\nend", "  -- your code here\nend", "  -- your\
    \ code here\nend", "    if n > m then\n        return -1\n    end\n    local sum\
    \ = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"%b\", avg)\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  local avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\"\
    \ .. string.format(\"%b\", avg)\nend", "    if n > m then return -1 end\n    local\
    \ sum = 0\n    for i = n, m do\n        sum = sum + i\n    end\n    local avg\
    \ = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\" .. string.format(\"\
    %b\", avg)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1))\n  return string.format(\"0b%s\", tostring(avg))\nend", "    if n > m\
    \ then return -1 end\n    local sum = 0\n    for i = n, m do\n        sum = sum\
    \ + i\n    end\n    return string.format(\"0b%s\", tostring(bit32.rshift(sum,\
    \ (m - n + 1))))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum / (m - n\
    \ + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend", "  if n > m then return\
    \ -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local\
    \ avg = math.floor(sum / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\n\
    end", "  -- your code here\nend", "  -- your code here\nend", "    if n > m then\
    \ return -1 end\n    local sum = 0\n    for i = n, m do\n        sum = sum + i\n\
    \    end\n    local avg = math.floor(sum / (m - n + 1) + 0.5)\n    return \"0b\"\
    \ .. string.format(\"%b\", avg)\nend", "  if n > m then return -1 end\n  local\
    \ sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = math.floor(sum\
    \ / (m - n + 1) + 0.5)\n  return \"0b\" .. tostring(avg)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

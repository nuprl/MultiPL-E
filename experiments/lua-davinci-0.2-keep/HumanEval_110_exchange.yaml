name: HumanEval_110_exchange
language: lua
prompt: "-- In this problem, you will implement a function that takes two lists of\
  \ numbers,\n-- and determines whether it is possible to perform an exchange of elements\n\
  -- between them to make lst1 a list of only even numbers.\n-- There is no limit\
  \ on the number of exchanged elements between lst1 and lst2.\n-- If it is possible\
  \ to exchange elements between the lst1 and lst2 to make\n-- all the elements of\
  \ lst1 to be even, return \"YES\".\n-- Otherwise, return \"NO\".\n-- For example:\n\
  -- exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n-- exchange([1, 2, 3, 4], [1,\
  \ 5, 3, 4]) => \"NO\"\n-- It is assumed that the input lists will be non-empty.\n\
  local function exchange(lst1, lst2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = exchange\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4}, {1, 2, 3, 4}), 'YES')\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4}, {1, 5, 3, 4}), 'NO')\n    lu.assertEquals(candidate({1, 2, 3, 4}, {2,\
  \ 1, 4, 3}), 'YES')\n    lu.assertEquals(candidate({5, 7, 3}, {2, 6, 4}), 'YES')\n\
  \    lu.assertEquals(candidate({5, 7, 3}, {2, 6, 3}), 'NO')\n    lu.assertEquals(candidate({3,\
  \ 2, 6, 1, 8, 9}, {3, 5, 5, 1, 1, 1}), 'NO')\n    lu.assertEquals(candidate({100,\
  \ 200}, {200, 200}), 'YES')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- TODO: implement this function\nend", "  local even = {}\n  local\
    \ odd = {}\n  for i, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(even,\
    \ v)\n    else\n      table.insert(odd, v)\n    end\n  end\n  for i, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(even, v)\n    else\n      table.insert(odd,\
    \ v)\n    end\n  end\n  if #even == #lst1 then\n    return \"YES\"\n  else\n \
    \   return \"NO\"\n  end\nend", "  local odd_count = 0\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 1 then\n      odd_count = odd_count + 1\n    end\n  end\n\
    \  for _, v in ipairs(lst2) do\n    if v % 2 == 1 then\n      odd_count = odd_count\
    \ - 1\n    end\n  end\n  return odd_count == 0 and \"YES\" or \"NO\"\nend", " \
    \   -- your code here\nend", "  local evens = {}\n  local odds = {}\n  for _,\
    \ v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n\
    \    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "  local function is_even(n)\n    return n %\
    \ 2 == 0\n  end", "  -- your code here\nend", "  -- your code here\nend", "  local\
    \ function is_even(n)\n    return n % 2 == 0\n  end", "    local evens = {}\n\
    \    local odds = {}\n    for i, v in ipairs(lst1) do\n        if v % 2 == 0 then\n\
    \            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    for i, v in ipairs(lst2) do\n        if v % 2\
    \ == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    if #evens >= #odds then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end", "    -- TODO: Implement this function.\nend",
  "    local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n  \
    \      if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n\
    \            table.insert(odds, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #odds\
    \ == 0 then\n        return \"YES\"\n    elseif #evens == 0 then\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end", "    local function is_even(x)\n        return\
    \ x % 2 == 0\n    end\n    local function is_odd(x)\n        return x % 2 == 1\n\
    \    end\n    local function is_all_even(lst)\n        for _, x in ipairs(lst)\
    \ do\n            if is_odd(x) then\n                return false\n          \
    \  end\n        end\n        return true\n    end\n    if is_all_even(lst1) then\n\
    \        return \"YES\"\n    end\n    for i, x in ipairs(lst1) do\n        if\
    \ is_odd(x) then\n            for j, y in ipairs(lst2) do\n                if\
    \ is_even(y) then\n                    lst1[i], lst2[j] = lst2[j], lst1[i]\n \
    \                   if is_all_even(lst1) then\n                        return\
    \ \"YES\"\n                    end\n                    lst1[i], lst2[j] = lst2[j],\
    \ lst1[i]\n                end\n            end\n        end\n    end\n    return\
    \ \"NO\"\nend", "  local function is_even(n)\n    return n % 2 == 0\n  end", " \
    \ local function is_even(n)\n    return n % 2 == 0\n  end", "    -- TODO: implement\
    \ this function\nend", "  local function is_even(n)\n    return n % 2 == 0\n \
    \ end", "  local evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1) do\n\
    \    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\
    \n  end\nend", "  -- TODO: Implement this function\nend", "  -- your code here\n\
    end", "  -- your code here\nend", "  local even_count = 0\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      even_count = even_count + 1\n    end\n  end\n\
    \  local odd_count = #lst1 - even_count\n  for _, v in ipairs(lst2) do\n    if\
    \ v % 2 == 0 then\n      even_count = even_count - 1\n    else\n      odd_count\
    \ = odd_count - 1\n    end\n  end\n  return even_count <= 0 and odd_count <= 0\
    \ and \"YES\" or \"NO\"\nend", "  local function is_even(n)\n    return n % 2\
    \ == 0\n  end", "    local evens = 0\n    local odds = 0\n    for i = 1, #lst1\
    \ do\n        if lst1[i] % 2 == 0 then\n            evens = evens + 1\n      \
    \  else\n            odds = odds + 1\n        end\n    end\n    for i = 1, #lst2\
    \ do\n        if lst2[i] % 2 == 0 then\n            evens = evens + 1\n      \
    \  else\n            odds = odds + 1\n        end\n    end\n    if evens % 2 ==\
    \ 0 and odds % 2 == 0 then\n        return \"YES\"\n    else\n        return \"\
    NO\"\n    end\nend", "  -- your code here\nend", "  local evens = {}\n  local\
    \ odds = {}\n  for _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens,\
    \ v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "    -- TODO: Implement this function\nend",
  "    -- Write your code here\nend", "  local evens = {}\n  local odds = {}\n  for\
    \ i, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n\
    \    else\n      table.insert(odds, v)\n    end\n  end\n  for i, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "  local function is_even(n)\n    return n %\
    \ 2 == 0\n  end", "  local evens = 0\n  local odds = 0\n  for i, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      evens = evens + 1\n    else\n      odds =\
    \ odds + 1\n    end\n  end\n  for i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n  if\
    \ evens > odds then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend",
  "    local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n    \
    \    if v % 2 == 0 then\n            evens = evens + 1\n        else\n       \
    \     odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2) do\n\
    \        if v % 2 == 0 then\n            evens = evens + 1\n        else\n   \
    \         odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 and odds\
    \ % 2 == 0 then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "  local evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  return #evens >= #odds and \"YES\" or \"NO\"\nend", "  local even_count\
    \ = 0\n  for i = 1, #lst1 do\n    if lst1[i] % 2 == 0 then\n      even_count =\
    \ even_count + 1\n    end\n  end\n  local odd_count = #lst1 - even_count\n  for\
    \ i = 1, #lst2 do\n    if lst2[i] % 2 == 0 then\n      even_count = even_count\
    \ - 1\n    else\n      odd_count = odd_count - 1\n    end\n  end\n  if even_count\
    \ == 0 and odd_count >= 0 then\n    return \"YES\"\n  else\n    return \"NO\"\n\
    \  end\nend", "    local evens = 0\n    local odds = 0\n    for i, v in ipairs(lst1)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    for i, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n     \
    \   if v % 2 == 0 then\n            evens = evens + 1\n        else\n        \
    \    odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2) do\n\
    \        if v % 2 == 0 then\n            evens = evens + 1\n        else\n   \
    \         odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ local function is_even(n)\n        return n % 2 == 0\n    end", "  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end", "  -- TODO: Implement this function.\n\
    end", "  -- your code here\nend", "    local evens = 0\n    local odds = 0\n \
    \   for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n            evens\
    \ = evens + 1\n        else\n            odds = odds + 1\n        end\n    end\n\
    \    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            evens\
    \ = evens + 1\n        else\n            odds = odds + 1\n        end\n    end\n\
    \    if evens % 2 == 0 then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    local evens = {}\n    local odds = {}\n    for _,\
    \ v in ipairs(lst1) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #odds == 0 then\n        return \"YES\"\n    elseif #evens == 0 then\n\
    \        return \"NO\"\n    else\n        return \"YES\"\n    end\nend", "  local\
    \ evens = {}\n  local odds = {}\n  for i, v in ipairs(lst1) do\n    if v % 2 ==\
    \ 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n\
    \    end\n  end\n  for i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n     \
    \ table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n  end\n\
    \  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\n\
    end", "  -- Your code here\nend", "    local evens = {}\n    local odds = {}\n\
    \    for i, v in ipairs(lst1) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    for i, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #evens >= #odds then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "  -- your code here\nend", "    local even = 0\n   \
    \ local odd = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    if even % 2 == 0 then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    local evens = 0\n    local odds =\
    \ 0\n    for i, v in ipairs(lst1) do\n        if v % 2 == 0 then\n           \
    \ evens = evens + 1\n        else\n            odds = odds + 1\n        end\n\
    \    end\n    for i, v in ipairs(lst2) do\n        if v % 2 == 0 then\n      \
    \      evens = evens + 1\n        else\n            odds = odds + 1\n        end\n\
    \    end\n    if evens % 2 == 0 then\n        return \"YES\"\n    else\n     \
    \   return \"NO\"\n    end\nend", "  -- TODO: Implement this function.\nend",
  "    local even_count = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 ==\
    \ 0 then\n            even_count = even_count + 1\n        end\n    end\n    local\
    \ odd_count = #lst1 - even_count\n    local odd_count_in_lst2 = 0\n    for _,\
    \ v in ipairs(lst2) do\n        if v % 2 == 1 then\n            odd_count_in_lst2\
    \ = odd_count_in_lst2 + 1\n        end\n    end\n    if odd_count_in_lst2 >= odd_count\
    \ then\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    local function is_even(n)\n        return n % 2 == 0\n    end", "    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end", "    local evens =\
    \ 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 ==\
    \ 0 then\n            evens = evens + 1\n        else\n            odds = odds\
    \ + 1\n        end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2\
    \ == 0 then\n            evens = evens + 1\n        else\n            odds = odds\
    \ + 1\n        end\n    end\n    if evens % 2 == 0 then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend", "  -- your code here\nend",
  "  -- TODO: Implement this function.\nend", "  local even_count = 0\n  for _, v\
    \ in ipairs(lst1) do\n    if v % 2 == 0 then\n      even_count = even_count +\
    \ 1\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n \
    \     even_count = even_count - 1\n    end\n  end\n  return even_count == 0 and\
    \ \"YES\" or \"NO\"\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end", "  -- your code here\nend", "  local function is_even(n)\n    return\
    \ n % 2 == 0\n  end", "    local function is_even(n)\n        return n % 2 ==\
    \ 0\n    end", "    local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 and\
    \ odds % 2 == 0 then\n        return \"YES\"\n    else\n        return \"NO\"\n\
    \    end\nend", "  local evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  return #evens >= #odds and \"YES\" or \"NO\"\nend", "    local evens\
    \ = 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 ==\
    \ 0 then\n            evens = evens + 1\n        else\n            odds = odds\
    \ + 1\n        end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2\
    \ == 0 then\n            evens = evens + 1\n        else\n            odds = odds\
    \ + 1\n        end\n    end\n    if evens % 2 == 0 then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend", "    local evens = 0\n    local\
    \ odds = 0\n    for i, v in ipairs(lst1) do\n        if v % 2 == 0 then\n    \
    \        evens = evens + 1\n        else\n            odds = odds + 1\n      \
    \  end\n    end\n    for i, v in ipairs(lst2) do\n        if v % 2 == 0 then\n\
    \            evens = evens + 1\n        else\n            odds = odds + 1\n  \
    \      end\n    end\n    if evens > odds then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    local evens = 0\n    local odds =\
    \ 0\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n            evens\
    \ = evens + 1\n        else\n            odds = odds + 1\n        end\n    end\n\
    \    for i = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n            evens\
    \ = evens + 1\n        else\n            odds = odds + 1\n        end\n    end\n\
    \    if evens % 2 == 0 then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    -- TODO: implement this function\nend", "  local\
    \ evens = 0\n  local odds = 0\n  for i = 1, #lst1 do\n    if lst1[i] % 2 == 0\
    \ then\n      evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n\
    \  for i = 1, #lst2 do\n    if lst2[i] % 2 == 0 then\n      evens = evens + 1\n\
    \    else\n      odds = odds + 1\n    end\n  end\n  if evens % 2 == 0 then\n \
    \   return \"YES\"\n  else\n    return \"NO\"\n  end\nend", "    local evens =\
    \ {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n        if v % 2 ==\
    \ 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2\
    \ == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    if #evens >= #odds then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend", "    local function is_even(num)\n\
    \        return num % 2 == 0\n    end", "    local function is_even(n)\n     \
    \   return n % 2 == 0\n    end", "  local function is_even(n)\n    return n %\
    \ 2 == 0\n  end", "  -- your code here\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end", "  -- TODO: Implement this function.\nend",
  "  local lst1_odd = {}\n  local lst2_even = {}\n  for i, v in ipairs(lst1) do\n\
    \    if v % 2 == 1 then\n      table.insert(lst1_odd, v)\n    end\n  end\n  for\
    \ i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n      table.insert(lst2_even,\
    \ v)\n    end\n  end\n  if #lst1_odd == #lst2_even then\n    return \"YES\"\n\
    \  else\n    return \"NO\"\n  end\nend", "  -- your code here\nend", "  local\
    \ evens = 0\n  local odds = 0\n  for i = 1, #lst1 do\n    if lst1[i] % 2 == 0\
    \ then\n      evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n\
    \  for i = 1, #lst2 do\n    if lst2[i] % 2 == 0 then\n      evens = evens + 1\n\
    \    else\n      odds = odds + 1\n    end\n  end\n  if evens % 2 == 0 then\n \
    \   return \"YES\"\n  else\n    return \"NO\"\n  end\nend", "  -- your code here\n\
    end", "    local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    for _, v\
    \ in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #evens >= #odds then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "  local evens = {}\n  local odds = {}\n  for i, v in\
    \ ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n\
    \      table.insert(odds, v)\n    end\n  end\n  for i, v in ipairs(lst2) do\n\
    \    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "    local evens = 0\n    local odds = 0\n  \
    \  for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n            evens\
    \ = evens + 1\n        else\n            odds = odds + 1\n        end\n    end\n\
    \    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            evens\
    \ = evens + 1\n        else\n            odds = odds + 1\n        end\n    end\n\
    \    if evens % 2 == 0 then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "  -- TODO: Your code here\nend", "  local evens = {}\n\
    \  local odds = {}\n  for i, v in ipairs(lst1) do\n    if v % 2 == 0 then\n  \
    \    table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  for i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n      table.insert(evens,\
    \ v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  if #evens >= #odds\
    \ then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend", "    local\
    \ evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n        if\
    \ v % 2 == 0 then\n            table.insert(evens, v)\n        else\n        \
    \    table.insert(odds, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #evens\
    \ >= #odds then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "  -- your code here\nend", "  -- your code here\nend", "  -- TODO:\
    \ Implement this function\nend", "    local function is_even(x)\n        return\
    \ x % 2 == 0\n    end\n    local function is_odd(x)\n        return x % 2 == 1\n\
    \    end\n    local function exchange_elements(lst1, lst2)\n        local lst1_odd_indices\
    \ = {}\n        local lst2_even_indices = {}\n        for i, v in ipairs(lst1)\
    \ do\n            if is_odd(v) then\n                table.insert(lst1_odd_indices,\
    \ i)\n            end\n        end\n        for i, v in ipairs(lst2) do\n    \
    \        if is_even(v) then\n                table.insert(lst2_even_indices, i)\n\
    \            end\n        end\n        if #lst1_odd_indices == #lst2_even_indices\
    \ then\n            for i, v in ipairs(lst1_odd_indices) do\n                lst1[v]\
    \ = lst2[lst2_even_indices[i]]\n            end\n            return true\n   \
    \     else\n            return false\n        end\n    end\n    if exchange_elements(lst1,\
    \ lst2) then\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    local function is_even(n)\n        return n % 2 == 0\n    end", " \
    \   local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n   \
    \     if v % 2 == 0 then\n            evens = evens + 1\n        else\n      \
    \      odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2) do\n\
    \        if v % 2 == 0 then\n            evens = evens + 1\n        else\n   \
    \         odds = odds + 1\n        end\n    end\n    if evens > odds then\n  \
    \      return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "  local\
    \ function is_even(num)\n    return num % 2 == 0\n  end", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end", "  -- TODO: implement the function here\n\
    end", "  local evens = 0\n  local odds = 0\n  for _, v in ipairs(lst1) do\n  \
    \  if v % 2 == 0 then\n      evens = evens + 1\n    else\n      odds = odds +\
    \ 1\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n \
    \     evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n  return\
    \ evens % 2 == 0 and \"YES\" or \"NO\"\nend", "  -- TODO: Implement this function.\n\
    end", "    local even_count = 0\n    for _, v in ipairs(lst1) do\n        if v\
    \ % 2 == 0 then\n            even_count = even_count + 1\n        end\n    end\n\
    \    local odd_count = #lst1 - even_count\n    local even_count2 = 0\n    for\
    \ _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            even_count2\
    \ = even_count2 + 1\n        end\n    end\n    local odd_count2 = #lst2 - even_count2\n\
    \    if even_count2 >= odd_count and odd_count2 >= even_count then\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "  local evens = 0\n\
    \  local odds = 0\n  for i = 1, #lst1 do\n    if lst1[i] % 2 == 0 then\n     \
    \ evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n  for i\
    \ = 1, #lst2 do\n    if lst2[i] % 2 == 0 then\n      evens = evens + 1\n    else\n\
    \      odds = odds + 1\n    end\n  end\n  if evens % 2 == 0 then\n    return \"\
    YES\"\n  else\n    return \"NO\"\n  end\nend", "  -- TODO: Implement this function.\n\
    end", "    local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n\
    \        if v % 2 == 0 then\n            evens = evens + 1\n        else\n   \
    \         odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 and\
    \ odds % 2 == 0 then\n        return \"YES\"\n    else\n        return \"NO\"\n\
    \    end\nend", "  local evens = {}\n  local odds = {}\n  for i, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\
    \n  end\nend", "  local evens = {}\n  local odds = {}\n  for i, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\
    \n  end\nend", "  local function is_even(num)\n    return num % 2 == 0\n  end",
  "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(lst1) do\n  \
    \      if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n\
    \            table.insert(odds, v)\n        end\n    end\n    for i, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #odds\
    \ == 0 then\n        return \"YES\"\n    elseif #evens == 0 then\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend", "    local even = 0\n\
    \    local odd = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    if even % 2 == 0 then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "  -- your code here\nend", "  -- your\
    \ code here\nend", "    local evens = {}\n    local odds = {}\n    for i, v in\
    \ ipairs(lst1) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    for i, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #odds == 0 then\n        return \"YES\"\n    elseif #evens == 0 then\n\
    \        return \"NO\"\n    else\n        return \"YES\"\n    end\nend", "  local\
    \ function is_even(n)\n    return n % 2 == 0\n  end", "    local even_count =\
    \ 0\n    for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n           \
    \ even_count = even_count + 1\n        end\n    end\n    if even_count == #lst1\
    \ then\n        return \"YES\"\n    end\n    for _, v in ipairs(lst2) do\n   \
    \     if v % 2 == 0 then\n            even_count = even_count + 1\n        end\n\
    \    end\n    if even_count == #lst1 + #lst2 then\n        return \"YES\"\n  \
    \  end\n    return \"NO\"\nend", "  local function is_even(n)\n    return n %\
    \ 2 == 0\n  end", "  local evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\
    \n  end\nend", "  local function is_even(n)\n    return n % 2 == 0\n  end", " \
    \ -- your code here\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end", "    local function is_even(n)\n        return n % 2 == 0\n    end",
  "  -- your code here\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end", "  -- YOUR CODE HERE\n  local even_count = 0\n  local odd_count = 0\n\
    \  for i, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      even_count = even_count\
    \ + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  for i, v in\
    \ ipairs(lst2) do\n    if v % 2 == 0 then\n      even_count = even_count + 1\n\
    \    else\n      odd_count = odd_count + 1\n    end\n  end\n  if even_count ==\
    \ #lst1 + #lst2 then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend",
  "  local even_count = 0\n  for _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n\
    \      even_count = even_count + 1\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      even_count = even_count - 1\n    end\n  end\n\
    \  return even_count == 0 and \"YES\" or \"NO\"\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end", "  local evens = {}\n  local odds = {}\n  for\
    \ _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n\
    \    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "  local function is_even(n)\n    return n %\
    \ 2 == 0\n  end", "    local evens = {}\n    local odds = {}\n    for _, v in\
    \ ipairs(lst1) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #odds == 0 then\n        return \"YES\"\n    elseif #evens == 0 then\n\
    \        return \"NO\"\n    else\n        return \"YES\"\n    end\nend", "   \
    \ local even = {}\n    local odd = {}\n    for _, v in ipairs(lst1) do\n     \
    \   if v % 2 == 0 then\n            table.insert(even, v)\n        else\n    \
    \        table.insert(odd, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n\
    \            table.insert(odd, v)\n        end\n    end\n    if #even >= #odd\
    \ then\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "  local function is_even(n)\n    return n % 2 == 0\n  end", "  -- TODO: Implement\
    \ this function.\nend", "    local even_count = 0\n    for _, v in ipairs(lst1)\
    \ do\n        if v % 2 == 0 then\n            even_count = even_count + 1\n  \
    \      end\n    end\n    local odd_count = #lst1 - even_count\n    for _, v in\
    \ ipairs(lst2) do\n        if v % 2 == 0 then\n            even_count = even_count\
    \ - 1\n        else\n            odd_count = odd_count - 1\n        end\n    end\n\
    \    return even_count == 0 and odd_count == 0 and \"YES\" or \"NO\"\nend", " \
    \   local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n \
    \       if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n\
    \            table.insert(odds, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #evens\
    \ >= #odds then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "  local evens = 0\n  local odds = 0\n  for i = 1, #lst1 do\n   \
    \ if lst1[i] % 2 == 0 then\n      evens = evens + 1\n    else\n      odds = odds\
    \ + 1\n    end\n  end\n  for i = 1, #lst2 do\n    if lst2[i] % 2 == 0 then\n \
    \     evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n  if\
    \ evens > odds then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend",
  "    local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n  \
    \      if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n\
    \            table.insert(odds, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    return #odds\
    \ == 0 and \"YES\" or \"NO\"\nend", "    local evens = {}\n    local odds = {}\n\
    \    for i, v in ipairs(lst1) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    for i, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #evens >= #odds then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    local function is_even(x)\n        return x % 2\
    \ == 0\n    end\n    local function is_odd(x)\n        return x % 2 == 1\n   \
    \ end\n    local function is_all_even(lst)\n        for _, v in ipairs(lst) do\n\
    \            if is_odd(v) then\n                return false\n            end\n\
    \        end\n        return true\n    end\n    local function is_all_odd(lst)\n\
    \        for _, v in ipairs(lst) do\n            if is_even(v) then\n        \
    \        return false\n            end\n        end\n        return true\n   \
    \ end\n    if is_all_even(lst1) then\n        return \"YES\"\n    end\n    if\
    \ is_all_odd(lst2) then\n        return \"NO\"\n    end\n    for i, v in ipairs(lst1)\
    \ do\n        if is_odd(v) then\n            for j, w in ipairs(lst2) do\n   \
    \             if is_even(w) then\n                    lst1[i], lst2[j] = lst2[j],\
    \ lst1[i]\n                    return exchange(lst1, lst2)\n                end\n\
    \            end\n        end\n    end\n    return \"NO\"\nend", "  -- your code\
    \ here\nend", "    local function is_even(n)\n        return n % 2 == 0\n    end",
  "    -- your code here\nend", "  -- TODO: Implement this function.\nend", "    local\
    \ evens = {}\n    local odds = {}\n    for i, v in ipairs(lst1) do\n        if\
    \ v % 2 == 0 then\n            table.insert(evens, v)\n        else\n        \
    \    table.insert(odds, v)\n        end\n    end\n    for i, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #evens\
    \ >= #odds then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "    local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    for _, v\
    \ in ipairs(lst2) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ v)\n        else\n            table.insert(odds, v)\n        end\n    end\n\
    \    if #evens >= #odds then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    -- your code here\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end", "  local function is_even(x)\n    return\
    \ x % 2 == 0\n  end\n  local function is_odd(x)\n    return x % 2 == 1\n  end\n\
    \  local function is_even_list(lst)\n    for _, x in ipairs(lst) do\n      if\
    \ is_odd(x) then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  if is_even_list(lst1) then\n    return \"YES\"\n  end\n  for i, x in\
    \ ipairs(lst1) do\n    if is_odd(x) then\n      for j, y in ipairs(lst2) do\n\
    \        if is_even(y) then\n          lst1[i], lst2[j] = lst2[j], lst1[i]\n \
    \         if is_even_list(lst1) then\n            return \"YES\"\n          end\n\
    \          lst1[i], lst2[j] = lst2[j], lst1[i]\n        end\n      end\n    end\n\
    \  end\n  return \"NO\"\nend", "  local evens = {}\n  local odds = {}\n  for _,\
    \ v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n\
    \    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "    local even = 0\n    local odd = 0\n    for\
    \ _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n            even = even\
    \ + 1\n        else\n            odd = odd + 1\n        end\n    end\n    for\
    \ _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            even = even\
    \ + 1\n        else\n            odd = odd + 1\n        end\n    end\n    if even\
    \ % 2 == 0 then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "  local evens = 0\n  local odds = 0\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      evens = evens + 1\n    else\n      odds =\
    \ odds + 1\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n  return\
    \ evens % 2 == 0 and \"YES\" or \"NO\"\nend", "    local even_count = 0\n    for\
    \ _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n            even_count\
    \ = even_count + 1\n        end\n    end\n    local odd_count = #lst1 - even_count\n\
    \    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n            even_count\
    \ = even_count - 1\n        else\n            odd_count = odd_count - 1\n    \
    \    end\n    end\n    return even_count == 0 and odd_count == 0 and \"YES\" or\
    \ \"NO\"\nend", "  local evens = 0\n  local odds = 0\n  for _, v in ipairs(lst1)\
    \ do\n    if v % 2 == 0 then\n      evens = evens + 1\n    else\n      odds =\
    \ odds + 1\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      evens = evens + 1\n    else\n      odds = odds + 1\n    end\n  end\n  return\
    \ evens % 2 == 0 and \"YES\" or \"NO\"\nend", "  local function is_even(x)\n \
    \   return x % 2 == 0\n  end\n  local function is_odd(x)\n    return x % 2 ==\
    \ 1\n  end\n  local function is_all_even(lst)\n    for _, x in ipairs(lst) do\n\
    \      if is_odd(x) then\n        return false\n      end\n    end\n    return\
    \ true\n  end\n  local function exchange_one(lst1, lst2)\n    for i, x in ipairs(lst1)\
    \ do\n      if is_odd(x) then\n        for j, y in ipairs(lst2) do\n         \
    \ if is_even(y) then\n            lst1[i] = y\n            lst2[j] = x\n     \
    \       return true\n          end\n        end\n      end\n    end\n    return\
    \ false\n  end\n  while not is_all_even(lst1) do\n    if not exchange_one(lst1,\
    \ lst2) then\n      return \"NO\"\n    end\n  end\n  return \"YES\"\nend", " \
    \   local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n \
    \       if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n\
    \            table.insert(odds, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #evens\
    \ >= #odds then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "    local even_numbers = {}\n    local odd_numbers = {}\n    for\
    \ i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n            table.insert(even_numbers,\
    \ lst1[i])\n        else\n            table.insert(odd_numbers, lst1[i])\n   \
    \     end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n\
    \            table.insert(even_numbers, lst2[i])\n        else\n            table.insert(odd_numbers,\
    \ lst2[i])\n        end\n    end\n    if #even_numbers >= #odd_numbers then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "  local\
    \ evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1) do\n    if v % 2 ==\
    \ 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n\
    \    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n     \
    \ table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n  end\n\
    \  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\n\
    end", "  -- your code here\nend", "  local evens = {}\n  local odds = {}\n  for\
    \ _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n\
    \    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "  -- TODO: implement this function\nend", " \
    \   local evens = 0\n    local odds = 0\n    for i = 1, #lst1 do\n        if lst1[i]\
    \ % 2 == 0 then\n            evens = evens + 1\n        else\n            odds\
    \ = odds + 1\n        end\n    end\n    for i = 1, #lst2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            evens = evens + 1\n        else\n            odds\
    \ = odds + 1\n        end\n    end\n    if evens % 2 == 0 and odds % 2 == 0 then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1) do\n     \
    \   if v % 2 == 0 then\n            evens = evens + 1\n        else\n        \
    \    odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2) do\n\
    \        if v % 2 == 0 then\n            evens = evens + 1\n        else\n   \
    \         odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "  --\
    \ your code here\nend", "  -- your code here\nend", "    local evens = {}\n  \
    \  local odds = {}\n    for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n\
    \            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2\
    \ == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    if #evens >= #odds then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend", "    local even_count = 0\n\
    \    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n            even_count\
    \ = even_count + 1\n        end\n    end\n    for i = 1, #lst2 do\n        if\
    \ lst2[i] % 2 == 0 then\n            even_count = even_count - 1\n        end\n\
    \    end\n    if even_count == 0 then\n        return \"YES\"\n    else\n    \
    \    return \"NO\"\n    end\nend", "  local function is_even(n)\n    return n\
    \ % 2 == 0\n  end", "    local evens = 0\n    local odds = 0\n    for _, v in\
    \ ipairs(lst1) do\n        if v % 2 == 0 then\n            evens = evens + 1\n\
    \        else\n            odds = odds + 1\n        end\n    end\n    for _, v\
    \ in ipairs(lst2) do\n        if v % 2 == 0 then\n            evens = evens +\
    \ 1\n        else\n            odds = odds + 1\n        end\n    end\n    if evens\
    \ % 2 == 0 and odds % 2 == 0 then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "  -- your code here\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end", "  local evens = 0\n  local odds = 0\n  for _,\
    \ v in ipairs(lst1) do\n    if v % 2 == 0 then\n      evens = evens + 1\n    else\n\
    \      odds = odds + 1\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if\
    \ v % 2 == 0 then\n      evens = evens + 1\n    else\n      odds = odds + 1\n\
    \    end\n  end\n  return evens % 2 == 0 and odds % 2 == 0 and \"YES\" or \"NO\"\
    \nend", "    local evens = 0\n    local odds = 0\n    for _, v in ipairs(lst1)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ -- TODO: implement the function here\nend", "    local evens = 0\n    local\
    \ odds = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n    \
    \        evens = evens + 1\n        else\n            odds = odds + 1\n      \
    \  end\n    end\n    for _, v in ipairs(lst2) do\n        if v % 2 == 0 then\n\
    \            evens = evens + 1\n        else\n            odds = odds + 1\n  \
    \      end\n    end\n    if evens % 2 == 0 then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "  local evens = {}\n  local odds = {}\n\
    \  for i, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens,\
    \ v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  for i, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "  local evens = {}\n  local odds = {}\n  for\
    \ _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n\
    \    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "  -- your code here\nend", "  local evens =\
    \ {}\n  local odds = {}\n  for _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n      table.insert(evens,\
    \ v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  if #evens >= #odds\
    \ then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend", "    local\
    \ evens = {}\n    local odds = {}\n    for i, v in ipairs(lst1) do\n        if\
    \ v % 2 == 0 then\n            table.insert(evens, v)\n        else\n        \
    \    table.insert(odds, v)\n        end\n    end\n    for i, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #evens\
    \ >= #odds then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "    -- TODO: Implement this function.\nend", "    local evens =\
    \ {}\n    local odds = {}\n    for i, v in ipairs(lst1) do\n        if v % 2 ==\
    \ 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    for i, v in ipairs(lst2) do\n        if v % 2\
    \ == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds,\
    \ v)\n        end\n    end\n    if #evens >= #odds then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend", "  local function is_even(x)\n\
    \    return x % 2 == 0\n  end\n  local function is_odd(x)\n    return x % 2 ==\
    \ 1\n  end\n  local function exchange_elements(lst1, lst2)\n    local function\
    \ exchange_elements_helper(lst1, lst2, acc)\n      if #lst1 == 0 then\n      \
    \  return acc\n      elseif is_even(lst1[1]) then\n        return exchange_elements_helper(lst1:sub(2),\
    \ lst2, acc)\n      elseif is_odd(lst1[1]) then\n        local index = lst2:find(function(x)\
    \ return is_even(x) end)\n        if index then\n          local new_lst1 = lst1:sub(2)\n\
    \          new_lst1[index] = lst1[1]\n          return exchange_elements_helper(new_lst1,\
    \ lst2:sub(1, index - 1) .. lst2:sub(index + 1), acc + 1)\n        else\n    \
    \      return -1\n        end\n      end\n    end\n    return exchange_elements_helper(lst1,\
    \ lst2, 0)\n  end\n  local result = exchange_elements(lst1, lst2)\n  if result\
    \ == -1 then\n    return \"NO\"\n  else\n    return \"YES\"\n  end\nend", "  \
    \  local evens = {}\n    local odds = {}\n    for _, v in ipairs(lst1) do\n  \
    \      if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n\
    \            table.insert(odds, v)\n        end\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n       \
    \ else\n            table.insert(odds, v)\n        end\n    end\n    if #evens\
    \ >= #odds then\n        return \"YES\"\n    else\n        return \"NO\"\n   \
    \ end\nend", "    local evens = 0\n    local odds = 0\n    for i = 1, #lst1 do\n\
    \        if lst1[i] % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    for i = 1, #lst2 do\n\
    \        if lst2[i] % 2 == 0 then\n            evens = evens + 1\n        else\n\
    \            odds = odds + 1\n        end\n    end\n    if evens % 2 == 0 then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "  local\
    \ evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1) do\n    if v % 2 ==\
    \ 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n\
    \    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n     \
    \ table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n  end\n\
    \  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\n\
    end", "  -- TODO: Implement this function\nend", "  local even_count = 0\n  for\
    \ _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      even_count = even_count\
    \ + 1\n    end\n  end\n  local odd_count = #lst1 - even_count\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      even_count = even_count - 1\n    else\n  \
    \    odd_count = odd_count - 1\n    end\n  end\n  return even_count <= 0 and odd_count\
    \ <= 0 and \"YES\" or \"NO\"\nend", "  -- your code here\nend", "    -- TODO:\
    \ Implement this function.\nend", "  -- your code here\nend", "    local even_count\
    \ = 0\n    for _, v in ipairs(lst1) do\n        if v % 2 == 0 then\n         \
    \   even_count = even_count + 1\n        end\n    end\n    if even_count == #lst1\
    \ then\n        return \"YES\"\n    end\n    for _, v in ipairs(lst2) do\n   \
    \     if v % 2 == 0 then\n            return \"YES\"\n        end\n    end\n \
    \   return \"NO\"\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end", "  local function is_even(x)\n    return x % 2 == 0\n  end\n  local function\
    \ is_odd(x)\n    return x % 2 == 1\n  end\n  local function is_all_even(lst)\n\
    \    for _, x in ipairs(lst) do\n      if is_odd(x) then\n        return false\n\
    \      end\n    end\n    return true\n  end\n  local function is_all_odd(lst)\n\
    \    for _, x in ipairs(lst) do\n      if is_even(x) then\n        return false\n\
    \      end\n    end\n    return true\n  end\n  if is_all_even(lst1) then\n   \
    \ return \"YES\"\n  end\n  if is_all_odd(lst1) then\n    return \"NO\"\n  end\n\
    \  for i, x in ipairs(lst1) do\n    if is_odd(x) then\n      for j, y in ipairs(lst2)\
    \ do\n        if is_even(y) then\n          lst1[i], lst2[j] = lst2[j], lst1[i]\n\
    \          return exchange(lst1, lst2)\n        end\n      end\n    end\n  end\n\
    \  return \"NO\"\nend", "  local evens = {}\n  local odds = {}\n  local evens_count\
    \ = 0\n  local odds_count = 0\n  for _, v in ipairs(lst1) do\n    if v % 2 ==\
    \ 0 then\n      evens_count = evens_count + 1\n      evens[v] = true\n    else\n\
    \      odds_count = odds_count + 1\n      odds[v] = true\n    end\n  end\n  for\
    \ _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n      if odds[v] then\n   \
    \     odds_count = odds_count - 1\n        odds[v] = nil\n      else\n       \
    \ evens_count = evens_count + 1\n        evens[v] = true\n      end\n    else\n\
    \      if evens[v] then\n        evens_count = evens_count - 1\n        evens[v]\
    \ = nil\n      else\n        odds_count = odds_count + 1\n        odds[v] = true\n\
    \      end\n    end\n  end\n  return evens_count == 0 and \"YES\" or \"NO\"\n\
    end", "  local evens = {}\n  local odds = {}\n  for _, v in ipairs(lst1) do\n\
    \    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  for _, v in ipairs(lst2) do\n    if v % 2 == 0 then\n\
    \      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n    return \"NO\"\
    \n  end\nend", "  -- your code here\nend", "  local function is_even(n)\n    return\
    \ n % 2 == 0\n  end", "    -- TODO: Implement this function.\nend", "    local\
    \ even = {}\n    local odd = {}\n    for i, v in ipairs(lst1) do\n        if v\
    \ % 2 == 0 then\n            table.insert(even, v)\n        else\n           \
    \ table.insert(odd, v)\n        end\n    end\n    for i, v in ipairs(lst2) do\n\
    \        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n\
    \            table.insert(odd, v)\n        end\n    end\n    if #odd == 0 then\n\
    \        return \"YES\"\n    elseif #even == 0 then\n        return \"NO\"\n \
    \   else\n        return \"YES\"\n    end\nend", "  local evens = {}\n  local\
    \ odds = {}\n  for _, v in ipairs(lst1) do\n    if v % 2 == 0 then\n      table.insert(evens,\
    \ v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds,\
    \ v)\n    end\n  end\n  if #evens >= #odds then\n    return \"YES\"\n  else\n\
    \    return \"NO\"\n  end\nend", "    -- TODO: Implement this function\nend",
  "  local function is_even(n)\n    return n % 2 == 0\n  end", "  local evens = {}\n\
    \  local odds = {}\n  for i, v in ipairs(lst1) do\n    if v % 2 == 0 then\n  \
    \    table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n\
    \  end\n  for i, v in ipairs(lst2) do\n    if v % 2 == 0 then\n      table.insert(evens,\
    \ v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  if #evens >= #odds\
    \ then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend", "  -- TODO:\
    \ Implement this function\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

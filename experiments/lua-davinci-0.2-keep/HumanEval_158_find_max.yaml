name: HumanEval_158_find_max
language: lua
prompt: "-- Write a function that accepts a list of strings.\n-- The list contains\
  \ different words. Return the word with maximum number\n-- of unique characters.\
  \ If multiple strings have maximum number of unique\n-- characters, return the one\
  \ which comes first in lexicographical order.\n-- find_max([\"name\", \"of\", \"\
  string\"]) == \"string\"\n-- find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\
  \n-- find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\nlocal function find_max(words)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_max\n\
  \    lu.assertEquals(candidate({'name', 'of', 'string'}), 'string')\n    lu.assertEquals(candidate({'name',\
  \ 'enam', 'game'}), 'enam')\n    lu.assertEquals(candidate({'aaaaaaa', 'bb', 'cc'}),\
  \ 'aaaaaaa')\n    lu.assertEquals(candidate({'abc', 'cba'}), 'abc')\n    lu.assertEquals(candidate({'play',\
  \ 'this', 'game', 'of', 'footbott'}), 'footbott')\n    lu.assertEquals(candidate({'we',\
  \ 'are', 'gonna', 'rock'}), 'gonna')\n    lu.assertEquals(candidate({'we', 'are',\
  \ 'a', 'mad', 'nation'}), 'nation')\n    lu.assertEquals(candidate({'this', 'is',\
  \ 'a', 'prrk'}), 'this')\n    lu.assertEquals(candidate({'b'}), 'b')\n    lu.assertEquals(candidate({'play',\
  \ 'play', 'play'}), 'play')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local max_word = words[1]\n    local max_count = 0\n    for _,\
    \ word in ipairs(words) do\n        local count = 0\n        for i = 1, #word\
    \ do\n            local c = word:sub(i, i)\n            if word:find(c, i + 1)\
    \ == nil then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n\
    \        local count = 0\n        for _, char in ipairs(word:split(\"\")) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n\
    \    for _, word in ipairs(words) do\n        local count = 0\n        for _,\
    \ char in utf8.codes(word) do\n            count = count + 1\n        end\n  \
    \      if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = \"\"\n    local\
    \ max_count = 0\n    for _, word in ipairs(words) do\n        local count = 0\n\
    \        for i = 1, #word do\n            if word:sub(i, i) ~= word:sub(i + 1,\
    \ i + 1) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "  local\
    \ max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n\
    \    local count = 0\n    for _, char in ipairs(word:split(\"\")) do\n      if\
    \ not max_word:find(char) then\n        count = count + 1\n      end\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in\
    \ utf8.codes(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ ipairs(word:split(\"\")) do\n            if not max_word:find(char) then\n \
    \               count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_unique_chars = 0\n    for _, word in ipairs(words) do\n       \
    \ local unique_chars = 0\n        for i = 1, #word do\n            local char\
    \ = word:sub(i, i)\n            if word:find(char, i + 1) == nil then\n      \
    \          unique_chars = unique_chars + 1\n            end\n        end\n   \
    \     if unique_chars > max_unique_chars then\n            max_unique_chars =\
    \ unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n  for _, word\
    \ in ipairs(words) do\n    local count = 0\n    for i = 1, #word do\n      local\
    \ c = word:sub(i, i)\n      if not word:find(c, i + 1) then\n        count = count\
    \ + 1\n      end\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for i = 1, #word do\n      if word:sub(i, i) ~= word:sub(i +\
    \ 1, i + 1) then\n        count = count + 1\n      end\n    end\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count =\
    \ 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in\
    \ ipairs(word:split(\"\")) do\n      if not max_word:find(char) then\n       \
    \ count = count + 1\n      end\n    end\n    if count > max_count then\n     \
    \ max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n   \
    \         if not string.find(max_word, word:sub(i, i)) then\n                count\
    \ = count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            if not string.find(max_word, word:sub(i, i)) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in utf8.codes(word) do\n            count = count +\
    \ 1\n        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_len = 0\n    for _, word in ipairs(words)\
    \ do\n        local len = #word\n        if len > max_len then\n            max_len\
    \ = len\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(\"\
    \")) do\n            if not max_word:find(char) then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      if word:sub(i, i) ~= word:sub(i + 1, i + 1) then\n        count\
    \ = count + 1\n      end\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, c in utf8.codes(word) do\n     \
    \       count = count + 1\n        end\n        if count > max_count then\n  \
    \          max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = \"\"\n    local max_count =\
    \ 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split(\"\")) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max = 0\n\
    \  local max_word = \"\"\n  for _, word in ipairs(words) do\n    local unique_chars\
    \ = {}\n    for i = 1, #word do\n      unique_chars[word:sub(i, i)] = true\n \
    \   end\n    if #unique_chars > max then\n      max = #unique_chars\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n  \
    \  if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in\
    \ utf8.codes(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n  for _, word\
    \ in ipairs(words) do\n    local count = 0\n    for _, char in utf8.codes(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for i = 1, #word do\n            if not\
    \ string.find(max_word, word:sub(i, i)) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n\
    \    for _, word in ipairs(words) do\n        local count = 0\n        for _,\
    \ char in utf8.codes(word) do\n            count = count + 1\n        end\n  \
    \      if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for i = 1, #word do\n      local c = word:sub(i, i)\n      if not word:find(c,\
    \ i + 1) then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ utf8.codes(word) do\n            count = count + 1\n        end\n        if\
    \ count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for _, c in ipairs(word:gmatch(\"\
    .\")) do\n            if word:find(c, count + 1) == nil then\n               \
    \ count = count + 1\n            end\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in utf8.codes(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, c in ipairs(word:split(\"\")) do\n       \
    \     if not max_word:find(c) then\n                count = count + 1\n      \
    \      end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(\"\
    \")) do\n            if not max_word:find(char) then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            if word:sub(i, i) ~= word:sub(i + 1, i + 1) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_word_unique_chars = 0\n    for _, word in ipairs(words) do\n  \
    \      local unique_chars = 0\n        for i = 1, #word do\n            local\
    \ char = word:sub(i, i)\n            if word:find(char, i + 1) == nil then\n \
    \               unique_chars = unique_chars + 1\n            end\n        end\n\
    \        if unique_chars > max_word_unique_chars then\n            max_word =\
    \ word\n            max_word_unique_chars = unique_chars\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = \"\"\n    local max_count =\
    \ 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in utf8.codes(word) do\n            count = count + 1\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "  local\
    \ max_word = words[1]\n  local max_len = #max_word\n  for i = 2, #words do\n \
    \   local word = words[i]\n    local len = #word\n    if len > max_len then\n\
    \      max_word = word\n      max_len = len\n    end\n  end\n  return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n   \
    \         local c = word:sub(i, i)\n            if word:find(c, i + 1) == nil\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_unique_chars = 0\n    for _, word in ipairs(words) do\n\
    \        local unique_chars = {}\n        for i = 1, #word do\n            unique_chars[word:sub(i,\
    \ i)] = true\n        end\n        local unique_chars_count = 0\n        for _\
    \ in pairs(unique_chars) do\n            unique_chars_count = unique_chars_count\
    \ + 1\n        end\n        if unique_chars_count > max_unique_chars then\n  \
    \          max_unique_chars = unique_chars_count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word, max_count\
    \ = nil, 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _\
    \ in pairs(unique_chars(word)) do\n      count = count + 1\n    end\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            if word:sub(i, i) ~= word:sub(i + 1, i + 1) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_unique_chars = 0\n    for i, word in ipairs(words) do\n       \
    \ local unique_chars = 0\n        for j, char in ipairs(word) do\n           \
    \ if not string.find(max_word, char) then\n                unique_chars = unique_chars\
    \ + 1\n            end\n        end\n        if unique_chars > max_unique_chars\
    \ then\n            max_unique_chars = unique_chars\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in utf8.codes(word) do\n            count = count +\
    \ 1\n        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in utf8.codes(word) do\n  \
    \          count = count + 1\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = \"\"\n  local max_chars\
    \ = 0\n  for _, word in ipairs(words) do\n    local chars = {}\n    for i = 1,\
    \ #word do\n      local char = word:sub(i, i)\n      if not chars[char] then\n\
    \        chars[char] = true\n      end\n    end\n    local num_chars = 0\n   \
    \ for _ in pairs(chars) do\n      num_chars = num_chars + 1\n    end\n    if num_chars\
    \ > max_chars then\n      max_chars = num_chars\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      local c = word:sub(i, i)\n      if word:find(c, i + 1) == nil\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for i = 1, #word do\n            if word:sub(i, i)\
    \ ~= word:sub(i + 1, i + 1) then\n                count = count + 1\n        \
    \    end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n   \
    \         local c = word:sub(i, i)\n            if not word:sub(1, i - 1):find(c)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in ipairs(word:split(\"\")) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ utf8.codes(word) do\n            count = count + 1\n        end\n        if\
    \ count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = 0\n    for i = 1, #words do\n        local word = words[i]\n\
    \        local count = 0\n        for j = 1, #word do\n            local char\
    \ = word:sub(j, j)\n            if word:find(char, j + 1) == nil then\n      \
    \          count = count + 1\n            end\n        end\n        if count >\
    \ max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in utf8.codes(word) do\n            count = count +\
    \ 1\n        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "\tlocal max_word = words[1]\n\tlocal max_count = 0\n\tfor _, word in ipairs(words)\
    \ do\n\t\tlocal count = 0\n\t\tfor i = 1, #word do\n\t\t\tlocal c = word:sub(i,\
    \ i)\n\t\t\tif not word:find(c, i + 1) then\n\t\t\t\tcount = count + 1\n\t\t\t\
    end\n\t\tend\n\t\tif count > max_count then\n\t\t\tmax_count = count\n\t\t\tmax_word\
    \ = word\n\t\tend\n\tend\n\treturn max_word\nend", "  local max_word = \"\"\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for i = 1, #word do\n      local c = word:sub(i, i)\n      if word:find(c,\
    \ i + 1) == nil then\n        count = count + 1\n      end\n    end\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in utf8.codes(word) do\n            count = count + 1\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n\
    \        local count = 0\n        for _, char in ipairs(word:split(\"\")) do\n\
    \            count = count + 1\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for i = 1, #words do\n    local word = words[i]\n    local count = 0\n\
    \    for j = 1, #word do\n      local c = word:sub(j, j)\n      if not word:sub(1,\
    \ j - 1):find(c) then\n        count = count + 1\n      end\n    end\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            if word:sub(i, i) ~= word:sub(i + 1, i + 1) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for i = 1, #word do\n            if word:sub(i, i) ~= word:sub(i\
    \ + 1, i + 1) then\n                count = count + 1\n            end\n     \
    \   end\n        if count > max_count then\n            max_count = count\n  \
    \          max_word = word\n        end\n    end\n    return max_word\nend", " \
    \ local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split(\"\")) do\n  \
    \    if not max_word:find(char) then\n        count = count + 1\n      end\n \
    \   end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_unique_chars = 0\n  for i = 1, #words do\n    local word = words[i]\n\
    \    local unique_chars = 0\n    for j = 1, #word do\n      local char = word:sub(j,\
    \ j)\n      if word:find(char, j + 1) == nil then\n        unique_chars = unique_chars\
    \ + 1\n      end\n    end\n    if unique_chars > max_unique_chars then\n     \
    \ max_unique_chars = unique_chars\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word, max_count = nil, 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _ in word:gmatch(\".\") do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in pairs(word:gmatch(\".\")) do\n   \
    \         if not word:find(char, 2) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split(\"\")) do\n            count = count + 1\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "  local\
    \ max_word = \"\"\n  local max_len = 0\n  for _, word in ipairs(words) do\n  \
    \  local len = #word\n    if len > max_len then\n      max_len = len\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for i = 1, #word do\n      local c = word:sub(i, i)\n      if word:find(c,\
    \ i + 1) == nil then\n        count = count + 1\n      end\n    end\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            local c = word:sub(i, i)\n            if word:find(c,\
    \ i + 1) == nil then\n                count = count + 1\n            end\n   \
    \     end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_unique_chars = 0\n    for _, word\
    \ in ipairs(words) do\n        local unique_chars = 0\n        for _, char in\
    \ ipairs(word) do\n            if not string.find(max_word, char) then\n     \
    \           unique_chars = unique_chars + 1\n            end\n        end\n  \
    \      if unique_chars > max_unique_chars then\n            max_unique_chars =\
    \ unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for i = 1, #word\
    \ do\n            if not string.find(max_word, word:sub(i, i)) then\n        \
    \        count = count + 1\n            end\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      local c = word:sub(i, i)\n      if not word:sub(1, i - 1):find(c)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_unique_chars = 0\n\
    \  for _, word in ipairs(words) do\n    local unique_chars = 0\n    for i = 1,\
    \ #word do\n      local char = word:sub(i, i)\n      if word:find(char, i + 1)\
    \ == nil then\n        unique_chars = unique_chars + 1\n      end\n    end\n \
    \   if unique_chars > max_unique_chars then\n      max_unique_chars = unique_chars\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_unique_chars = 0\n    for _, word in ipairs(words) do\n\
    \        local unique_chars = 0\n        for _, char in utf8.codes(word) do\n\
    \            unique_chars = unique_chars + 1\n        end\n        if unique_chars\
    \ > max_unique_chars then\n            max_unique_chars = unique_chars\n     \
    \       max_word = word\n        end\n    end\n    return max_word\nend", "  local\
    \ max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n\
    \    local count = 0\n    for i = 1, #word do\n      local char = word:sub(i,\
    \ i)\n      if not word:find(char, i + 1) then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = #max_word\n  for i = 2, #words do\n    local\
    \ word = words[i]\n    local count = #word\n    if count > max_count then\n  \
    \    max_word = word\n      max_count = count\n    end\n  end\n  return max_word\n\
    end", "    local max_word = words[1]\n    local max_len = #max_word\n    for i\
    \ = 2, #words do\n        local word = words[i]\n        local len = #word\n \
    \       if len > max_len then\n            max_word = word\n            max_len\
    \ = len\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for i = 1, #word do\n      if word:sub(i, i) ~= word:sub(i + 1, i +\
    \ 1) then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split(\"\")) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n\
    \    for _, word in ipairs(words) do\n        local count = 0\n        for _,\
    \ char in ipairs(word:split(\"\")) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_unique_chars = 0\n    for _, word in ipairs(words)\
    \ do\n        local unique_chars = 0\n        for i = 1, #word do\n          \
    \  local char = word:sub(i, i)\n            if word:find(char, i + 1) == nil then\n\
    \                unique_chars = unique_chars + 1\n            end\n        end\n\
    \        if unique_chars > max_unique_chars then\n            max_unique_chars\
    \ = unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ ipairs(word:split(\"\")) do\n            if not max_word:find(char) then\n \
    \               count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split(\"\")) do\n            if not\
    \ max_word:find(char) then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for i = 1, #word do\n      local c = word:sub(i,\
    \ i)\n      if word:find(c, i + 1) == nil then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in utf8.codes(word) do\n      count = count + 1\n\
    \    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n  \
    \  if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      local char = word:sub(i, i)\n      if not word:find(char, i\
    \ + 1) then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ utf8.codes(word) do\n            count = count + 1\n        end\n        if\
    \ count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in ipairs(word:split(\"\")) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ ipairs(word:split(\"\")) do\n            if not max_word:find(char) then\n \
    \               count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = \"\"\n \
    \ local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in ipairs(word:split(\"\")) do\n      if word:find(char) == 1\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_chars = 0\n  for _, word\
    \ in ipairs(words) do\n    local chars = {}\n    for _, char in ipairs(word) do\n\
    \      chars[char] = true\n    end\n    local num_chars = 0\n    for _ in pairs(chars)\
    \ do\n      num_chars = num_chars + 1\n    end\n    if num_chars > max_chars then\n\
    \      max_chars = num_chars\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n  for _, word\
    \ in ipairs(words) do\n    local count = 0\n    for _, char in utf8.codes(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split(\"\")) do\n  \
    \    if not max_word:find(char) then\n        count = count + 1\n      end\n \
    \   end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "    local max_word = \"\"\n\
    \    local max_len = 0\n    for _, word in ipairs(words) do\n        local len\
    \ = 0\n        for _ in pairs(word:gsub(\"(.)\", \"%1 \"):gsub(\"%s+\", \" \"\
    ):gsub(\"%s$\", \"\")) do\n            len = len + 1\n        end\n        if\
    \ len > max_len then\n            max_len = len\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split(\"\")) do\n            if not\
    \ max_word:find(char) then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in utf8.codes(word) do\n      if not\
    \ word:find(utf8.char(char), 2) then\n        count = count + 1\n      end\n \
    \   end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in utf8.codes(word) do\n            count = count +\
    \ 1\n        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split(\"\"))\
    \ do\n            if not max_word:find(char) then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            local c = word:sub(i, i)\n            if not word:find(c,\
    \ i + 1) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n\
    \        local count = 0\n        for _, char in utf8.codes(word) do\n       \
    \     if not string.find(max_word, utf8.char(char)) then\n                count\
    \ = count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max = 0\n    local max_word = \"\"\
    \n    for _, word in ipairs(words) do\n        local unique_chars = {}\n     \
    \   for i = 1, #word do\n            unique_chars[word:sub(i, i)] = true\n   \
    \     end\n        local unique_chars_count = 0\n        for _ in pairs(unique_chars)\
    \ do\n            unique_chars_count = unique_chars_count + 1\n        end\n \
    \       if unique_chars_count > max then\n            max = unique_chars_count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max = 0\n    local max_word = \"\"\n    for _, word in ipairs(words)\
    \ do\n        local unique_chars = {}\n        for i = 1, #word do\n         \
    \   unique_chars[word:sub(i, i)] = true\n        end\n        local count = 0\n\
    \        for _ in pairs(unique_chars) do\n            count = count + 1\n    \
    \    end\n        if count > max then\n            max = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in utf8.codes(word) do\n        \
    \    count = count + 1\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split(\"\
    \")) do\n      if not max_word:find(char) then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_unique_chars = 0\n  for _, word in ipairs(words) do\n\
    \    local unique_chars = 0\n    for i = 1, #word do\n      local char = word:sub(i,\
    \ i)\n      if word:find(char, i + 1) == nil then\n        unique_chars = unique_chars\
    \ + 1\n      end\n    end\n    if unique_chars > max_unique_chars then\n     \
    \ max_unique_chars = unique_chars\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for i = 1, #word do\n            local char =\
    \ word:sub(i, i)\n            if not word:sub(1, i - 1):find(char) then\n    \
    \            count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for i = 1, #word do\n            if not string.find(max_word, word:sub(i,\
    \ i)) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "  local\
    \ max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n\
    \    local count = 0\n    for i = 1, #word do\n      local c = word:sub(i, i)\n\
    \      if word:find(c, i + 1) == nil then\n        count = count + 1\n      end\n\
    \    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split(\"\")) do\n            if not\
    \ max_word:find(char) then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = words[1]\n  local max_unique_chars = 0\n  for _, word in ipairs(words)\
    \ do\n    local unique_chars = 0\n    for i = 1, #word do\n      if word:find(word:sub(i,\
    \ i), i + 1) == nil then\n        unique_chars = unique_chars + 1\n      end\n\
    \    end\n    if unique_chars > max_unique_chars or\n       (unique_chars == max_unique_chars\
    \ and word < max_word) then\n      max_word = word\n      max_unique_chars = unique_chars\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      local c = word:sub(i, i)\n      if word:find(c, i + 1) == nil\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ utf8.codes(word) do\n            count = count + 1\n        end\n        if\
    \ count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in ipairs(word:split(\"\")) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ utf8.codes(word) do\n            count = count + 1\n        end\n        if\
    \ count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for i = 1, #word do\n      if word:sub(i, i) ~= word:sub(i + 1, i +\
    \ 1) then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for i = 1, #word do\n   \
    \   if not string.find(max_word, word:sub(i, i)) then\n        count = count +\
    \ 1\n      end\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for i = 1, #word do\n      local char = word:sub(i, i)\n    \
    \  if not word:sub(1, i - 1):find(char) then\n        count = count + 1\n    \
    \  end\n    end\n    if count > max_count then\n      max_count = count\n    \
    \  max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(\"\
    \")) do\n            if not max_word:find(char) then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      if not word:find(word:sub(i, i), i + 1) then\n        count\
    \ = count + 1\n      end\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in utf8.codes(word) do\n      count\
    \ = count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for i = 1, #word do\n      local c = word:sub(i, i)\n      if\
    \ not word:find(c, i + 1) then\n        count = count + 1\n      end\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = \"\"\n    local\
    \ max_unique_chars = 0\n    for _, word in ipairs(words) do\n        local unique_chars\
    \ = 0\n        for i = 1, #word do\n            local char = word:sub(i, i)\n\
    \            if not word:find(char, i + 1) then\n                unique_chars\
    \ = unique_chars + 1\n            end\n        end\n        if unique_chars >\
    \ max_unique_chars then\n            max_unique_chars = unique_chars\n       \
    \     max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n\
    \        local count = 0\n        for _, c in utf8.codes(word) do\n          \
    \  count = count + 1\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n\
    \    for _, word in ipairs(words) do\n        local count = 0\n        for i =\
    \ 1, #word do\n            if not string.find(max_word, word:sub(i, i)) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = \"\"\n \
    \ local max_len = 0\n  for _, word in ipairs(words) do\n    local len = #word\n\
    \    if len > max_len then\n      max_len = len\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count =\
    \ 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in\
    \ utf8.codes(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for c in word:gmatch(\".\"\
    ) do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = \"\"\n    local max_unique_chars = 0\n    for _, word in\
    \ ipairs(words) do\n        local unique_chars = 0\n        for i = 1, #word do\n\
    \            local char = word:sub(i, i)\n            if word:find(char, i + 1)\
    \ == nil then\n                unique_chars = unique_chars + 1\n            end\n\
    \        end\n        if unique_chars > max_unique_chars then\n            max_unique_chars\
    \ = unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n  for _, word\
    \ in ipairs(words) do\n    local count = 0\n    for i = 1, #word do\n      if\
    \ word:sub(i, i) ~= word:sub(i + 1, i + 1) then\n        count = count + 1\n \
    \     end\n    end\n    if count > max_count then\n      max_count = count\n \
    \     max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n   \
    \         local c = word:sub(i, i)\n            if word:find(c, i + 1) == nil\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in ipairs(word:split(\"\")) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ ipairs(word:split(\"\")) do\n            if not max_word:find(char) then\n \
    \               count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n  \
    \  if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      if not word:find(word:sub(i, i), i + 1) then\n        count\
    \ = count + 1\n      end\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in utf8.codes(word) do\n      count\
    \ = count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for i = 1, #word do\n            local char = word:sub(i,\
    \ i)\n            if word:find(char, i + 1) == nil then\n                count\
    \ = count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = \"\"\n  local max_unique_chars\
    \ = 0\n  for _, word in ipairs(words) do\n    local unique_chars = 0\n    for\
    \ i = 1, #word do\n      local char = word:sub(i, i)\n      if word:find(char,\
    \ i + 1) == nil then\n        unique_chars = unique_chars + 1\n      end\n   \
    \ end\n    if unique_chars > max_unique_chars then\n      max_unique_chars = unique_chars\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split(\"\")) do\n  \
    \    if not max_word:find(char) then\n        count = count + 1\n      end\n \
    \   end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n\
    \  local max_unique_chars = 0\n  for _, word in ipairs(words) do\n    local unique_chars\
    \ = 0\n    for i = 1, #word do\n      local char = word:sub(i, i)\n      if word:find(char,\
    \ i + 1) == nil then\n        unique_chars = unique_chars + 1\n      end\n   \
    \ end\n    if unique_chars > max_unique_chars then\n      max_unique_chars = unique_chars\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in utf8.codes(word) do\n        \
    \    count = count + 1\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, letter in ipairs(word) do\n            if not string.find(max_word, letter)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for i = 1, #word do\n            local c = word:sub(i,\
    \ i)\n            if word:find(c, i + 1) == nil then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1,\
    \ #word do\n      local c = word:sub(i, i)\n      if not word:sub(1, i-1):find(c)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, c in ipairs(word:split(\"\
    \")) do\n            if not max_word:find(c) then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            if not word:find(word:sub(i, i), i + 1) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = \"\"\n \
    \ local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n  \
    \  if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n  local max_unique_chars\
    \ = 0\n  for _, word in ipairs(words) do\n    local unique_chars = {}\n    for\
    \ i = 1, #word do\n      local char = word:sub(i, i)\n      if not unique_chars[char]\
    \ then\n        unique_chars[char] = true\n      end\n    end\n    local unique_chars_count\
    \ = 0\n    for _ in pairs(unique_chars) do\n      unique_chars_count = unique_chars_count\
    \ + 1\n    end\n    if unique_chars_count > max_unique_chars then\n      max_unique_chars\
    \ = unique_chars_count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for i = 1, #word do\n      local c = word:sub(i,\
    \ i)\n      if word:find(c, i + 1) == nil then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = \"\"\n  local max_unique_chars = 0\n  for _, word in\
    \ ipairs(words) do\n    local unique_chars = {}\n    for i = 1, #word do\n   \
    \   unique_chars[word:sub(i, i)] = true\n    end\n    local num_unique_chars =\
    \ 0\n    for _ in pairs(unique_chars) do\n      num_unique_chars = num_unique_chars\
    \ + 1\n    end\n    if num_unique_chars > max_unique_chars then\n      max_unique_chars\
    \ = num_unique_chars\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n   \
    \         local c = word:sub(i, i)\n            if word:find(c, i + 1) == nil\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, c in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in utf8.codes(word) do\n      count\
    \ = count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, c in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_count = 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(\"\
    \")) do\n            if not max_word:find(char) then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = \"\"\n  local max_len =\
    \ 0\n  for _, word in ipairs(words) do\n    local len = #word\n    if len > max_len\
    \ then\n      max_len = len\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "    local max_word = words[1]\n    local max_unique_chars = #unique_chars(max_word)\n\
    \    for i = 2, #words do\n        local word = words[i]\n        local unique_chars\
    \ = #unique_chars(word)\n        if unique_chars > max_unique_chars then\n   \
    \         max_word = word\n            max_unique_chars = unique_chars\n     \
    \   end\n    end\n    return max_word\nend", "    local max_word = \"\"\n    local\
    \ max_count = 0\n    for _, word in ipairs(words) do\n        local count = 0\n\
    \        for i = 1, #word do\n            local c = word:sub(i, i)\n         \
    \   if not max_word:find(c) then\n                count = count + 1\n        \
    \    end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, char in utf8.codes(word)\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "    local max_word = words[1]\n    local\
    \ max_unique_chars = #unique_chars(max_word)\n    for i = 2, #words do\n     \
    \   local word = words[i]\n        local unique_chars = #unique_chars(word)\n\
    \        if unique_chars > max_unique_chars then\n            max_word = word\n\
    \            max_unique_chars = unique_chars\n        end\n    end\n    return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n  for _, word\
    \ in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split(\"\
    \")) do\n      if not max_word:find(char) then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, char in ipairs(word:split(\"\")) do\n    \
    \        if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "  local max_word = \"\"\n  local max_count = 0\n  for _, word\
    \ in ipairs(words) do\n    local count = 0\n    for _, char in utf8.codes(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = nil\n    local max_chars = 0\n    for _, word in ipairs(words)\
    \ do\n        local chars = {}\n        for _, char in ipairs(word) do\n     \
    \       chars[char] = true\n        end\n        local num_chars = 0\n       \
    \ for _ in pairs(chars) do\n            num_chars = num_chars + 1\n        end\n\
    \        if num_chars > max_chars then\n            max_chars = num_chars\n  \
    \          max_word = word\n        end\n    end\n    return max_word\nend", " \
    \   local max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in utf8.codes(word) do\n  \
    \          count = count + 1\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            if not string.find(max_word, word:sub(i, i)) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for i = 1, #word do\n            if not string.find(max_word, word:sub(i,\
    \ i)) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n\
    \        local count = 0\n        for i = 1, #word do\n            local c = word:sub(i,\
    \ i)\n            if not word:find(c, i + 1) then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "  local max_word = words[1]\n  local max_count =\
    \ 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for i = 1, #word\
    \ do\n      if word:find(word:sub(i, i), i + 1) == nil then\n        count = count\
    \ + 1\n      end\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for i, word in ipairs(words) do\n     \
    \   local count = 0\n        for j = 1, #word do\n            local c = word:sub(j,\
    \ j)\n            if word:find(c, j + 1) == nil then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = \"\"\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split(\"\")) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max = 0\n\
    \  local max_word = \"\"\n  for _, word in ipairs(words) do\n    local unique_chars\
    \ = {}\n    for i = 1, #word do\n      unique_chars[word:sub(i, i)] = true\n \
    \   end\n    if #unique_chars > max then\n      max = #unique_chars\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "    local max_word = \"\"\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for i = 1, #word do\n            local char = word:sub(i, i)\n\
    \            if word:find(char, i + 1) == nil then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = \"\"\n    local max_count =\
    \ 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, c in utf8.codes(word) do\n            count = count + 1\n        end\n  \
    \      if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, c in utf8.codes(word) do\n            if not\
    \ word:find(utf8.char(c), 2) then\n                count = count + 1\n       \
    \     end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = \"\"\n    local max_unique_chars = 0\n    for _, word\
    \ in ipairs(words) do\n        local unique_chars = 0\n        for _, char in\
    \ ipairs(word:split(\"\")) do\n            if not max_word:find(char) then\n \
    \               unique_chars = unique_chars + 1\n            end\n        end\n\
    \        if unique_chars > max_unique_chars then\n            max_unique_chars\
    \ = unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for i = 1, #word\
    \ do\n            local char = word:sub(i, i)\n            if word:find(char,\
    \ i + 1) == nil then\n                count = count + 1\n            end\n   \
    \     end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = \"\"\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split(\"\"))\
    \ do\n            if not max_word:find(char) then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = \"\"\n    local max_count =\
    \ 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            local c = word:sub(i, i)\n            if not word:sub(1,\
    \ i - 1):find(c) then\n                count = count + 1\n            end\n  \
    \      end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for i = 1, #word do\n      local c = word:sub(i,\
    \ i)\n      if word:find(c, i + 1) == nil then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for i = 1, #word do\n            local c = word:sub(i,\
    \ i)\n            if word:find(c, i + 1) == nil then\n                count =\
    \ count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "  local max_word = \"\"\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in ipairs(word:split(\"\")) do\n      if not max_word:find(char) then\n    \
    \    count = count + 1\n      end\n    end\n    if count > max_count then\n  \
    \    max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split(\"\")) do\n  \
    \    if not max_word:find(char) then\n        count = count + 1\n      end\n \
    \   end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = \"\"\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in ipairs(word:split(\"\")) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = \"\"\n    local max_count = 0\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ utf8.codes(word) do\n            count = count + 1\n        end\n        if\
    \ count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for i = 1, #word do\n      local c = word:sub(i, i)\n      if not max_word:find(c)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for i = 1, #word do\n            if word:sub(i,\
    \ i) ~= word:sub(i + 1, i + 1) then\n                count = count + 1\n     \
    \       end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in utf8.codes(word) do\n      count\
    \ = count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = \"\"\n    local max_count = 0\n    for _, word in ipairs(words) do\n     \
    \   local count = 0\n        for _, c in utf8.codes(word) do\n            count\
    \ = count + 1\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = \"\"\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for i = 1, #word do\n      local c = word:sub(i,\
    \ i)\n      if word:find(c, i + 1) == nil then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = \"\"\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for i = 1, #word do\n      local c = word:sub(i, i)\n      if\
    \ word:find(c, i + 1) == nil then\n        count = count + 1\n      end\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in utf8.codes(word) do\n            count = count +\
    \ 1\n        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

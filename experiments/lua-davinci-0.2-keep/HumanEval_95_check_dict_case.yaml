name: HumanEval_95_check_dict_case
language: lua
prompt: "-- Given a dictionary, return True if all keys are strings in lower \n--\
  \ case or all keys are strings in upper case, else return False.\n-- The function\
  \ should return False is the given dictionary is empty.\n-- Examples:\n-- check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n-- check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n-- check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n-- check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n--\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  local function check_dict_case(dict)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_dict_case\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['b'] = 'banana'}), true)\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['A'] = 'banana', ['B'] = 'banana'}),\
  \ false)\n    lu.assertEquals(candidate({['p'] = 'pineapple', ['5'] = 'banana',\
  \ ['a'] = 'apple'}), false)\n    lu.assertEquals(candidate({['Name'] = 'John', ['Age']\
  \ = '36', ['City'] = 'Houston'}), false)\n    lu.assertEquals(candidate({['STATE']\
  \ = 'NC', ['ZIP'] = '12345'}), true)\n    lu.assertEquals(candidate({['fruit'] =\
  \ 'Orange', ['taste'] = 'Sweet'}), true)\n    lu.assertEquals(candidate({}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if #dict == 0 then\n        return false\n    end\n    local is_lower\
    \ = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if string.lower(k) == k then\n \
    \               is_lower = true\n            elseif string.upper(k) == k then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    if (dict == nil) then\n        return\
    \ false\n    end\n    if (next(dict) == nil) then\n        return false\n    end\n\
    \    local is_lower = false\n    local is_upper = false\n    for k,v in pairs(dict)\
    \ do\n        if (type(k) == \"string\") then\n            if (k == string.lower(k))\
    \ then\n                is_lower = true\n            elseif (k == string.upper(k))\
    \ then\n                is_upper = true\n            else\n                return\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    if (is_lower and is_upper) then\n        return false\n    end\n\
    \    return true\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and k ~= k:lower() then\n            lower\
    \ = false\n        end\n        if upper and k ~= k:upper() then\n           \
    \ upper = false\n        end\n    end\n    return lower or upper\nend", "    local\
    \ lower_case = true\n    local upper_case = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) ~= \"string\" then\n            return false\n    \
    \    end\n        if lower_case then\n            lower_case = string.lower(key)\
    \ == key\n        end\n        if upper_case then\n            upper_case = string.upper(key)\
    \ == key\n        end\n    end\n    return lower_case or upper_case\nend", " \
    \   if dict == nil or next(dict) == nil then\n        return false\n    end\n\
    \    local is_lower = false\n    local is_upper = false\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == \"string\" then\n            if k:lower() == k then\n\
    \                is_lower = true\n            elseif k:upper() == k then\n   \
    \             is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower ~= is_upper\nend", "    if type(dict) ~= \"table\" then\n\
    \        return false\n    end\n    if #dict == 0 then\n        return false\n\
    \    end\n    local is_lower = false\n    local is_upper = false\n    for k, v\
    \ in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k == string.lower(k) then\n            is_lower\
    \ = true\n        elseif k == string.upper(k) then\n            is_upper = true\n\
    \        else\n            return false\n        end\n    end\n    return is_lower\
    \ ~= is_upper\nend", "    if not dict then\n        return false\n    end\n  \
    \  local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if lower and k ~= k:lower() then\n            lower = false\n       \
    \ end\n        if upper and k ~= k:upper() then\n            upper = false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if lower and\
    \ k ~= k:lower() then\n            lower = false\n        end\n        if upper\
    \ and k ~= k:upper() then\n            upper = false\n        end\n    end\n \
    \   return lower or upper\nend", "    -- TODO: Implement this function.\nend",
  "    if #dict == 0 then\n        return false\n    end\n    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if string.lower(k)\
    \ ~= k then\n            lower = false\n        end\n        if string.upper(k)\
    \ ~= k then\n            upper = false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower = true\n    local upper = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and k ~= k:lower() then\n            lower\
    \ = false\n        end\n        if upper and k ~= k:upper() then\n           \
    \ upper = false\n        end\n    end\n    return lower or upper\nend", "    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) ~= \"string\" then\n            return false\n        end\n   \
    \     if k ~= k:lower() then\n            lower = false\n        end\n       \
    \ if k ~= k:upper() then\n            upper = false\n        end\n    end\n  \
    \  return lower or upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local is_lower = false\n    local is_upper = false\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if string.lower(k)\
    \ == k then\n                is_lower = true\n            elseif string.upper(k)\
    \ == k then\n                is_upper = true\n            else\n             \
    \   return false\n            end\n        else\n            return false\n  \
    \      end\n    end\n    return is_lower or is_upper\nend", "    if #dict == 0\
    \ then\n        return false\n    end\n    local upper = true\n    local lower\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if k ~= string.upper(k) then\n\
    \            upper = false\n        end\n        if k ~= string.lower(k) then\n\
    \            lower = false\n        end\n    end\n    return upper or lower\n\
    end", "  local lower, upper = true, true\n  for k, v in pairs(dict) do\n    if\
    \ type(k) ~= \"string\" then\n      return false\n    end\n    if lower and k\
    \ ~= k:lower() then\n      lower = false\n    end\n    if upper and k ~= k:upper()\
    \ then\n      upper = false\n    end\n  end\n  return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if k ~= k:lower() then\n            lower = false\n        end\n    \
    \    if k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    if not dict then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if lower and k ~= k:lower() then\n            lower = false\n\
    \        end\n        if upper and k ~= k:upper() then\n            upper = false\n\
    \        end\n    end\n    return lower or upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for key, value in pairs(dict) do\n\
    \        if type(key) ~= \"string\" then\n            return false\n        end\n\
    \        if key:lower() ~= key then\n            lower_case = false\n        end\n\
    \        if key:upper() ~= key then\n            upper_case = false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if lower and\
    \ k ~= k:lower() then\n            lower = false\n        end\n        if upper\
    \ and k ~= k:upper() then\n            upper = false\n        end\n    end\n \
    \   return lower or upper\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n\
    \            lower_case = lower_case and (k == string.lower(k))\n            upper_case\
    \ = upper_case and (k == string.upper(k))\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    if #dict\
    \ == 0 then\n        return false\n    end\n    local is_lower = false\n    local\
    \ is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\"\
    \ then\n            if k == string.lower(k) then\n                is_lower = true\n\
    \            elseif k == string.upper(k) then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower_keys = 0\n    local upper_keys = 0\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == \"string\" then\n            if k == string.lower(k)\
    \ then\n                lower_keys = lower_keys + 1\n            elseif k == string.upper(k)\
    \ then\n                upper_keys = upper_keys + 1\n            end\n       \
    \ end\n    end\n    return lower_keys > 0 and upper_keys == 0 or lower_keys ==\
    \ 0 and upper_keys > 0\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if string.lower(k) ~= k then\n            lower = false\n    \
    \    end\n        if string.upper(k) ~= k then\n            upper = false\n  \
    \      end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if k ~= k:lower()\
    \ then\n            lower = false\n        end\n        if k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    if not dict then return false end\n    local is_lower = false\n   \
    \ local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ \"string\" then\n            if k:match(\"^%l+$\") then\n                is_lower\
    \ = true\n            elseif k:match(\"^%u+$\") then\n                is_upper\
    \ = true\n            else\n                return false\n            end\n  \
    \      else\n            return false\n        end\n    end\n    return is_lower\
    \ or is_upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k ~= k:lower() then\n            lower = false\n\
    \        end\n        if k ~= k:upper() then\n            upper = false\n    \
    \    end\n    end\n    return lower or upper\nend", "    if not dict then return\
    \ false end\n    if not next(dict) then return false end", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k,v in pairs(dict) do\n       \
    \ if type(k) ~= \"string\" then\n            return false\n        end\n     \
    \   if lower_case then\n            lower_case = k == string.lower(k)\n      \
    \  end\n        if upper_case then\n            upper_case = k == string.upper(k)\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "  local lower\
    \ = true\n  local upper = true\n  for k, v in pairs(dict) do\n    if type(k) ~=\
    \ \"string\" then\n      return false\n    end\n    if lower and k ~= k:lower()\
    \ then\n      lower = false\n    end\n    if upper and k ~= k:upper() then\n \
    \     upper = false\n    end\n  end\n  return lower or upper\nend", "    if not\
    \ dict then\n        return false\n    end\n    local is_lower = false\n    local\
    \ is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\"\
    \ then\n            if k:lower() == k then\n                is_lower = true\n\
    \            elseif k:upper() == k then\n                is_upper = true\n   \
    \         else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local upper = true\n    local lower = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == \"string\" then\n            if k:match(\"%u\") then\n\
    \                lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return upper or lower\nend", "    if not dict then\n        return false\n\
    \    end\n    local lower_case = true\n    local upper_case = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower_case and k ~= string.lower(k) then\n  \
    \          lower_case = false\n        end\n        if upper_case and k ~= string.upper(k)\
    \ then\n            upper_case = false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "  local lower = true\n  local upper = true\n  for k, v\
    \ in pairs(dict) do\n    if type(k) ~= \"string\" then\n      return false\n \
    \   end\n    if k ~= k:lower() then\n      lower = false\n    end\n    if k ~=\
    \ k:upper() then\n      upper = false\n    end\n  end\n  return lower or upper\n\
    end", "    if #dict == 0 then\n        return false\n    end\n    local is_lower\
    \ = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if string.lower(k) == k then\n \
    \               is_lower = true\n            elseif string.upper(k) == k then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    if type(dict) ~= \"table\" then\n\
    \        return false\n    end\n    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if string.lower(k) ~= k then\n            lower = false\n    \
    \    end\n        if string.upper(k) ~= k then\n            upper = false\n  \
    \      end\n    end\n    return lower or upper\nend", "    if #dict == 0 then\n\
    \        return false\n    end\n    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n     \
    \       return false\n        end\n        if k ~= string.lower(k) then\n    \
    \        lower = false\n        end\n        if k ~= string.upper(k) then\n  \
    \          upper = false\n        end\n    end\n    return lower or upper\nend",
  "    if not dict then\n        return false\n    end\n    local is_lower = true\n\
    \    local is_upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if is_lower\
    \ and k ~= k:lower() then\n            is_lower = false\n        end\n       \
    \ if is_upper and k ~= k:upper() then\n            is_upper = false\n        end\n\
    \    end\n    return is_lower or is_upper\nend", "    if dict == nil or next(dict)\
    \ == nil then\n        return false\n    end\n    local is_lower = false\n   \
    \ local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ \"string\" then\n            if k:lower() == k then\n                is_lower\
    \ = true\n            elseif k:upper() == k then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    if not dict then return false end\n    local is_lower = true\n    local\
    \ is_upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then return false end\n        if k:lower() ~= k then is_lower = false end\n\
    \        if k:upper() ~= k then is_upper = false end\n    end\n    return is_lower\
    \ or is_upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k:lower() ~= k then\n            lower = false\n\
    \        end\n        if k:upper() ~= k then\n            upper = false\n    \
    \    end\n    end\n    return lower or upper\nend", "    if next(dict) == nil\
    \ then\n        return false\n    end\n    local lower = true\n    local upper\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if k ~= string.lower(k) then\n\
    \            lower = false\n        end\n        if k ~= string.upper(k) then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if not string.match(k, \"^%l+$\") then\n            lower = false\n\
    \        end\n        if not string.match(k, \"^%u+$\") then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for key, value in pairs(dict) do\n\
    \        if type(key) ~= \"string\" then\n            return false\n        end\n\
    \        if key:lower() ~= key then\n            lower_case = false\n        end\n\
    \        if key:upper() ~= key then\n            upper_case = false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    if not dict then\n \
    \       return false\n    end\n    local is_lower = false\n    local is_upper\
    \ = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n\
    \            if k:lower() == k then\n                is_lower = true\n       \
    \     elseif k:upper() == k then\n                is_upper = true\n          \
    \  else\n                return false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return is_lower or is_upper\nend",
  "    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if lower and k ~= k:lower() then\n            lower = false\n       \
    \ end\n        if upper and k ~= k:upper() then\n            upper = false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if k:lower()\
    \ ~= k then\n            lower = false\n        end\n        if k:upper() ~= k\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if string.lower(k)\
    \ ~= k then\n                lower_case = false\n            end\n           \
    \ if string.upper(k) ~= k then\n                upper_case = false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower_case or upper_case\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n\
    \            if k:lower() ~= k then\n                lower_case = false\n    \
    \        end\n            if k:upper() ~= k then\n                upper_case =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower_count =\
    \ 0\n    local upper_count = 0\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if k == string.lower(k) then\n             \
    \   lower_count = lower_count + 1\n            elseif k == string.upper(k) then\n\
    \                upper_count = upper_count + 1\n            end\n        end\n\
    \    end\n    if lower_count == 0 and upper_count == 0 then\n        return false\n\
    \    elseif lower_count > 0 and upper_count == 0 then\n        return true\n \
    \   elseif lower_count == 0 and upper_count > 0 then\n        return true\n  \
    \  else\n        return false\n    end\nend", "  -- your code here\n  local lower\
    \ = true\n  local upper = true\n  for k,v in pairs(dict) do\n    if type(k) ==\
    \ \"string\" then\n      if k:lower() ~= k then\n        lower = false\n     \
    \ end\n      if k:upper() ~= k then\n        upper = false\n      end\n    else\n\
    \      return false\n    end\n  end\n  if lower or upper then\n    return true\n\
    \  else\n    return false\n  end\nend", "    local is_lower = false\n    local\
    \ is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\"\
    \ then\n            if k == string.lower(k) then\n                is_lower = true\n\
    \            elseif k == string.upper(k) then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    -- TODO: Implement this function.\nend", "  local lower = true\n  local\
    \ upper = true\n  for k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n\
    \      return false\n    end\n    if lower and k ~= k:lower() then\n      lower\
    \ = false\n    end\n    if upper and k ~= k:upper() then\n      upper = false\n\
    \    end\n  end\n  return lower or upper\nend", "    if not dict then return false\
    \ end\n    if next(dict) == nil then return false end\n    local is_lower = true\n\
    \    local is_upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then return false end\n        if k ~= string.lower(k) then is_lower\
    \ = false end\n        if k ~= string.upper(k) then is_upper = false end\n   \
    \ end\n    return is_lower or is_upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            return false\n        end\n        if k:lower() ~= k then\n\
    \            lower = false\n        end\n        if k:upper() ~= k then\n    \
    \        upper = false\n        end\n    end\n    return lower or upper\nend",
  "    local lower = true\n    local upper = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) ~= \"string\" then\n            return false\n    \
    \    end\n        if lower and string.lower(key) ~= key then\n            lower\
    \ = false\n        end\n        if upper and string.upper(key) ~= key then\n \
    \           upper = false\n        end\n    end\n    return lower or upper\nend",
  "    -- your code here\n    local count = 0\n    for k, v in pairs(dict) do\n  \
    \      if type(k) == \"string\" then\n            if k == string.lower(k) then\n\
    \                count = count + 1\n            end\n        end\n    end\n  \
    \  if count == #dict then\n        return true\n    else\n        return false\n\
    \    end\nend", "    if #dict == 0 then\n        return false\n    end\n    local\
    \ is_lower = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n\
    \        if type(k) == \"string\" then\n            if string.lower(k) == k then\n\
    \                is_lower = true\n            elseif string.upper(k) == k then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    if not dict then\n        return\
    \ false\n    end\n    local is_lower = false\n    local is_upper = false\n   \
    \ for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n        \
    \    if k:lower() == k then\n                is_lower = true\n            elseif\
    \ k:upper() == k then\n                is_upper = true\n            else\n   \
    \             return false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return is_lower or is_upper\nend", "    if\
    \ not dict then\n        return false\n    end\n    local is_lower = true\n  \
    \  local is_upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if is_lower\
    \ then\n            is_lower = is_lower and k == string.lower(k)\n        end\n\
    \        if is_upper then\n            is_upper = is_upper and k == string.upper(k)\n\
    \        end\n    end\n    return is_lower or is_upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if k ~= string.lower(k) then\n \
    \               lower_case = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper_case = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    if #dict == 0 then\n        return false\n    end\n    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) ~= \"string\" then\n            return false\n        end\n    \
    \    if k ~= string.lower(k) then\n            lower_case = false\n        end\n\
    \        if k ~= string.upper(k) then\n            upper_case = false\n      \
    \  end\n    end\n    return lower_case or upper_case\nend", "    local lower =\
    \ true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if k ~= k:lower()\
    \ then\n            lower = false\n        end\n        if k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "  local lower_count = 0\n  local upper_count = 0\n  for k, v in pairs(dict)\
    \ do\n    if type(k) == \"string\" then\n      if k == string.lower(k) then\n\
    \        lower_count = lower_count + 1\n      elseif k == string.upper(k) then\n\
    \        upper_count = upper_count + 1\n      end\n    end\n  end\n  if lower_count\
    \ == 0 and upper_count == 0 then\n    return false\n  elseif lower_count == 0\
    \ and upper_count > 0 then\n    return true\n  elseif lower_count > 0 and upper_count\
    \ == 0 then\n    return true\n  else\n    return false\n  end\nend", "    if #dict\
    \ == 0 then\n        return false\n    end\n    local is_lower = false\n    local\
    \ is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\"\
    \ then\n            if k == string.lower(k) then\n                is_lower = true\n\
    \            elseif k == string.upper(k) then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if k ~=\
    \ string.lower(k) then\n                lower_case = false\n            end\n\
    \            if k ~= string.upper(k) then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    if not dict then return false\
    \ end\n    if next(dict) == nil then return false end\n    local is_upper = nil\n\
    \    for k, v in pairs(dict) do\n        if is_upper == nil then\n           \
    \ is_upper = string.upper(k) == k\n        else\n            if is_upper ~= (string.upper(k)\
    \ == k) then\n                return false\n            end\n        end\n   \
    \ end\n    return true\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if lower_case and string.upper(k)\
    \ == k then\n            lower_case = false\n        end\n        if upper_case\
    \ and string.lower(k) == k then\n            upper_case = false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower_case = true\n\
    \    local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if string.find(k, \"[A-Z]\") then\n        \
    \        lower_case = false\n            elseif string.find(k, \"[a-z]\") then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    if not dict then\n        return false\n    end\n    local is_lower\
    \ = true\n    local is_upper = true\n    for k, v in pairs(dict) do\n        if\
    \ type(k) ~= \"string\" then\n            return false\n        end\n        if\
    \ is_lower and not k:lower() == k then\n            is_lower = false\n       \
    \ end\n        if is_upper and not k:upper() == k then\n            is_upper =\
    \ false\n        end\n    end\n    return is_lower or is_upper\nend", "  local\
    \ lower_case = true\n  local upper_case = true\n  for k, v in pairs(dict) do\n\
    \    if type(k) ~= \"string\" then\n      return false\n    end\n    if lower_case\
    \ then\n      lower_case = lower_case and k == string.lower(k)\n    end\n    if\
    \ upper_case then\n      upper_case = upper_case and k == string.upper(k)\n  \
    \  end\n  end\n  return lower_case or upper_case\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if lower and\
    \ k ~= k:lower() then\n            lower = false\n        end\n        if upper\
    \ and k ~= k:upper() then\n            upper = false\n        end\n    end\n \
    \   return lower or upper\nend", "    local lower, upper = true, true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k ~= k:lower() then\n            lower = false\n\
    \        end\n        if k ~= k:upper() then\n            upper = false\n    \
    \    end\n    end\n    return lower or upper\nend", "    if #dict == 0 then\n\
    \        return false\n    end\n    local upper = true\n    local lower = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n     \
    \       return false\n        end\n        if string.lower(k) ~= k then\n    \
    \        lower = false\n        end\n        if string.upper(k) ~= k then\n  \
    \          upper = false\n        end\n    end\n    return upper or lower\nend",
  "    if not dict then\n        return false\n    end\n    local is_lower = false\n\
    \    local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if k:lower() == k then\n                is_lower\
    \ = true\n            elseif k:upper() == k then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    if #dict == 0 then\n        return false\n    end\n    local is_lower\
    \ = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if k == string.lower(k) then\n \
    \               is_lower = true\n            elseif k == string.upper(k) then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    if type(dict) ~= \"table\" then\n\
    \        return false\n    end\n    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if k:lower() ~= k then\n            lower = false\n        end\n\
    \        if k:upper() ~= k then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n     \
    \       return false\n        end\n        if lower and k ~= k:lower() then\n\
    \            lower = false\n        end\n        if upper and k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    if not dict then return false end\n    if next(dict) == nil then return\
    \ false end\n    local lower_case = true\n    local upper_case = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then return false end\n\
    \        if k ~= string.lower(k) then lower_case = false end\n        if k ~=\
    \ string.upper(k) then upper_case = false end\n    end\n    return lower_case\
    \ or upper_case\nend", "    if not dict then\n        return false\n    end\n\
    \    if not next(dict) then\n        return false\n    end\n    local lower =\
    \ true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if k:lower()\
    \ ~= k then\n            lower = false\n        end\n        if k:upper() ~= k\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "  if not dict then return false end\n  if next(dict) == nil then return\
    \ false end\n  local is_lower = true\n  local is_upper = true\n  for k, v in pairs(dict)\
    \ do\n    if type(k) ~= \"string\" then return false end\n    if is_lower and\
    \ string.lower(k) ~= k then is_lower = false end\n    if is_upper and string.upper(k)\
    \ ~= k then is_upper = false end\n  end\n  return is_lower or is_upper\nend",
  "    if (dict == nil) then\n        return false\n    end\n    if (next(dict) ==\
    \ nil) then\n        return false\n    end\n    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if (type(k) ~= \"string\"\
    ) then\n            return false\n        end\n        if (lower and (k ~= string.lower(k)))\
    \ then\n            lower = false\n        end\n        if (upper and (k ~= string.upper(k)))\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    if dict == nil or next(dict) == nil then\n        return false\n  \
    \  end\n    local is_lower = false\n    local is_upper = false\n    for k, v in\
    \ pairs(dict) do\n        if type(k) == \"string\" then\n            if k:lower()\
    \ == k then\n                is_lower = true\n            elseif k:upper() ==\
    \ k then\n                is_upper = true\n            else\n                return\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return is_lower ~= is_upper\nend", "    local all_lower = true\n\
    \    local all_upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if k ~= k:lower() then\n                all_lower\
    \ = false\n            end\n            if k ~= k:upper() then\n             \
    \   all_upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return all_lower or all_upper\nend", "    if not dict\
    \ then\n        return false\n    end\n    local all_lower = true\n    local all_upper\
    \ = true\n    for k, v in pairs(dict) do\n        if not (type(k) == \"string\"\
    ) then\n            return false\n        end\n        if not (k == string.lower(k))\
    \ then\n            all_lower = false\n        end\n        if not (k == string.upper(k))\
    \ then\n            all_upper = false\n        end\n    end\n    return all_lower\
    \ or all_upper\nend", "    if not dict then\n        return false\n    end\n \
    \   local is_upper = false\n    local is_lower = false\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == \"string\" then\n            if string.upper(k) ==\
    \ k then\n                is_upper = true\n            elseif string.lower(k)\
    \ == k then\n                is_lower = true\n            else\n             \
    \   return false\n            end\n        else\n            return false\n  \
    \      end\n    end\n    return is_upper ~= is_lower\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if k ~= string.lower(k) then\n \
    \               lower_case = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper_case = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if lower and k ~= k:lower() then\n            lower = false\n\
    \        end\n        if upper and k ~= k:upper() then\n            upper = false\n\
    \        end\n    end\n    return lower or upper\nend", "    if not dict then\
    \ return false end\n    if not next(dict) then return false end\n    local is_lower\
    \ = true\n    local is_upper = true\n    for k, v in pairs(dict) do\n        if\
    \ type(k) ~= \"string\" then return false end\n        if is_lower and k ~= k:lower()\
    \ then is_lower = false end\n        if is_upper and k ~= k:upper() then is_upper\
    \ = false end\n    end\n    return is_lower or is_upper\nend", "    if #dict ==\
    \ 0 then\n        return false\n    end\n    local is_lower = false\n    local\
    \ is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\"\
    \ then\n            if k == string.lower(k) then\n                is_lower = true\n\
    \            elseif k == string.upper(k) then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    if next(dict) == nil then\n        return false\n    end\n    local\
    \ is_lower = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n\
    \        if type(k) == \"string\" then\n            if k == string.lower(k) then\n\
    \                is_lower = true\n            elseif k == string.upper(k) then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local is_lower = true\n    local is_upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k:lower() ~= k then\n            is_lower = false\n\
    \        end\n        if k:upper() ~= k then\n            is_upper = false\n \
    \       end\n    end\n    return is_lower or is_upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if k ~= k:lower()\
    \ then\n            lower = false\n        end\n        if k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if k ~= k:lower() then\n            lower = false\n        end\n\
    \        if k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    if next(dict) == nil then\n        return\
    \ false\n    end\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k ~= string.lower(k) then\n            lower\
    \ = false\n        end\n        if k ~= string.upper(k) then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "    if #dict\
    \ == 0 then\n        return false\n    end\n    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            return false\n        end\n        if k ~= string.lower(k)\
    \ then\n            lower = false\n        end\n        if k ~= string.upper(k)\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "  if not dict then return false end\n  local is_lower = true\n  local is_upper\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then return\
    \ false end\n    if k:lower() ~= k then is_lower = false end\n    if k:upper()\
    \ ~= k then is_upper = false end\n  end\n  return is_lower or is_upper\nend",
  "    local lower = true\n    local upper = true\n    for k,v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if lower and k ~= string.lower(k) then\n            lower = false\n \
    \       end\n        if upper and k ~= string.upper(k) then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k,v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if lower\
    \ and k ~= string.lower(k) then\n            lower = false\n        end\n    \
    \    if upper and k ~= string.upper(k) then\n            upper = false\n     \
    \   end\n    end\n    return lower or upper\nend", "    local lower = true\n \
    \   local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            return false\n        end\n        if lower and\
    \ k ~= string.lower(k) then\n            lower = false\n        end\n        if\
    \ upper and k ~= string.upper(k) then\n            upper = false\n        end\n\
    \    end\n    return lower or upper\nend", "    if not dict then return false\
    \ end\n    if not next(dict) then return false end\n    local is_lower = nil\n\
    \    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then return false\
    \ end\n        if is_lower == nil then\n            is_lower = k == k:lower()\n\
    \        else\n            if is_lower and k ~= k:lower() then return false end\n\
    \            if not is_lower and k ~= k:upper() then return false end\n      \
    \  end\n    end\n    return true\nend", "  if #dict == 0 then\n    return false\n\
    \  end\n  local lower = true\n  local upper = true\n  for k, v in pairs(dict)\
    \ do\n    if type(k) ~= \"string\" then\n      return false\n    end\n    if k\
    \ ~= string.lower(k) then\n      lower = false\n    end\n    if k ~= string.upper(k)\
    \ then\n      upper = false\n    end\n  end\n  return lower or upper\nend", " \
    \   if #dict == 0 then\n        return false\n    end\n    local is_lower = false\n\
    \    local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if k == string.lower(k) then\n             \
    \   is_lower = true\n            elseif k == string.upper(k) then\n          \
    \      is_upper = true\n            else\n                return false\n     \
    \       end\n        else\n            return false\n        end\n    end\n  \
    \  return is_lower or is_upper\nend", "    if not dict then return false end\n\
    \    if not next(dict) then return false end\n    local is_lower = false\n   \
    \ local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ \"string\" then\n            if k:lower() == k then\n                is_lower\
    \ = true\n            elseif k:upper() == k then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "  local lower = true\n  local upper = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) == \"string\" then\n      if k ~= string.lower(k) then\n     \
    \   lower = false\n      end\n      if k ~= string.upper(k) then\n        upper\
    \ = false\n      end\n    else\n      return false\n    end\n  end\n  return lower\
    \ or upper\nend", "    if #dict == 0 then\n        return false\n    end\n   \
    \ local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if k ~= string.lower(k) then\n            lower = false\n        end\n\
    \        if k ~= string.upper(k) then\n            upper = false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            return false\n        end\n        if lower and k ~= k:lower()\
    \ then\n            lower = false\n        end\n        if upper and k ~= k:upper()\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for key,\
    \ value in pairs(dict) do\n        if type(key) ~= \"string\" then\n         \
    \   return false\n        end\n        if string.lower(key) ~= key then\n    \
    \        lower_case = false\n        end\n        if string.upper(key) ~= key\
    \ then\n            upper_case = false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    if #dict == 0 then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if k ~= string.lower(k) then\n            lower = false\n        end\n\
    \        if k ~= string.upper(k) then\n            upper = false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k,v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            return false\n        end\n        if lower and k ~= string.lower(k)\
    \ then\n            lower = false\n        end\n        if upper and k ~= string.upper(k)\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "  -- your code here\n  local lower = true\n  local upper = true\n  for\
    \ key, value in pairs(dict) do\n    if type(key) == \"string\" then\n      if\
    \ key:match(\"%u\") then\n        lower = false\n      else\n        upper = false\n\
    \      end\n    else\n      return false\n    end\n  end\n  return lower or upper\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if k ~= k:lower() then\n            lower = false\n        end\n\
    \        if k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local is_lower = true\n    local is_upper = true\n    for k, v in\
    \ pairs(dict) do\n        if type(k) ~= \"string\" then\n            return false\n\
    \        end\n        if k ~= string.lower(k) then\n            is_lower = false\n\
    \        end\n        if k ~= string.upper(k) then\n            is_upper = false\n\
    \        end\n    end\n    return is_lower or is_upper\nend", "    if not dict\
    \ then\n        return false\n    end\n    local is_lower = false\n    local is_upper\
    \ = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n\
    \            if k:lower() == k then\n                is_lower = true\n       \
    \     elseif k:upper() == k then\n                is_upper = true\n          \
    \  else\n                return false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return is_lower or is_upper\nend",
  "    if type(dict) ~= \"table\" then\n        return false\n    end\n    if #dict\
    \ == 0 then\n        return false\n    end\n    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"\
    string\" then\n            return false\n        end\n        if k:lower() ~=\
    \ k then\n            lower_case = false\n        end\n        if k:upper() ~=\
    \ k then\n            upper_case = false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for key, value in pairs(dict) do\n        if type(key) ~= \"string\" then\n\
    \            return false\n        end\n        if key:match(\"%u\") then\n  \
    \          lower_case = false\n        end\n        if key:match(\"%l\") then\n\
    \            upper_case = false\n        end\n    end\n    return lower_case or\
    \ upper_case\nend", "    local lower = true\n    local upper = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and not k:lower() == k then\n         \
    \   lower = false\n        end\n        if upper and not k:upper() == k then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    if #dict == 0 then\n        return false\n    end\n    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if k:match(\"\
    %u\") then\n            lower = false\n        end\n        if k:match(\"%l\"\
    ) then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if not\
    \ string.match(k, \"^%l+$\") then\n                lower_case = false\n      \
    \      end\n            if not string.match(k, \"^%u+$\") then\n             \
    \   upper_case = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if lower\
    \ and k ~= k:lower() then\n            lower = false\n        end\n        if\
    \ upper and k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    if dict == nil or next(dict) == nil then\n\
    \        return false\n    end\n    local upper = true\n    local lower = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n     \
    \       return false\n        end\n        if k:match(\"%u\") then\n         \
    \   lower = false\n        end\n        if k:match(\"%l\") then\n            upper\
    \ = false\n        end\n    end\n    return upper or lower\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for key, value in pairs(dict) do\n\
    \        if type(key) ~= \"string\" then\n            return false\n        end\n\
    \        if string.lower(key) ~= key then\n            lower_case = false\n  \
    \      end\n        if string.upper(key) ~= key then\n            upper_case =\
    \ false\n        end\n    end\n    return lower_case or upper_case\nend", "  \
    \  if next(dict) == nil then\n        return false\n    end\n    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if not string.match(k, \"^%l+$\") then\n            lower_case = false\n  \
    \      end\n        if not string.match(k, \"^%u+$\") then\n            upper_case\
    \ = false\n        end\n    end\n    return lower_case or upper_case\nend", " \
    \   local upper = true\n    local lower = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == \"string\" then\n            if k:match(\"%u\") then\n\
    \                lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return upper or lower\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n     \
    \       return false\n        end\n        if lower and k ~= k:lower() then\n\
    \            lower = false\n        end\n        if upper and k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for key,\
    \ value in pairs(dict) do\n        if type(key) ~= \"string\" then\n         \
    \   return false\n        end\n        if key:lower() ~= key then\n          \
    \  lower_case = false\n        end\n        if key:upper() ~= key then\n     \
    \       upper_case = false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    if #dict == 0 then return false end\n    local is_lower = false\n \
    \   local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if string.lower(k) == k then\n             \
    \   is_lower = true\n            elseif string.upper(k) == k then\n          \
    \      is_upper = true\n            else\n                return false\n     \
    \       end\n        else\n            return false\n        end\n    end\n  \
    \  return is_lower or is_upper\nend", "    if next(dict) == nil then\n       \
    \ return false\n    end\n    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k ~= string.lower(k) then\n            lower\
    \ = false\n        end\n        if k ~= string.upper(k) then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "    if next(dict)\
    \ == nil then\n        return false\n    end\n    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            return false\n        end\n        if k ~= string.lower(k)\
    \ then\n            lower = false\n        end\n        if k ~= string.upper(k)\
    \ then\n            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for key,\
    \ value in pairs(dict) do\n        if type(key) ~= \"string\" then\n         \
    \   return false\n        end\n        if lower_case and string.lower(key) ~=\
    \ key then\n            lower_case = false\n        end\n        if upper_case\
    \ and string.upper(key) ~= key then\n            upper_case = false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    if not dict then return\
    \ false end\n    if not next(dict) then return false end\n    local is_lower =\
    \ false\n    local is_upper = false\n    for k,v in pairs(dict) do\n        if\
    \ type(k) == \"string\" then\n            if k:lower() == k then\n           \
    \     is_lower = true\n            elseif k:upper() == k then\n              \
    \  is_upper = true\n            else\n                return false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ is_lower or is_upper\nend", "    local lower_case_keys = true\n    local upper_case_keys\
    \ = true\n    for key, value in pairs(dict) do\n        if type(key) ~= \"string\"\
    \ then\n            return false\n        end\n        if lower_case_keys and\
    \ key ~= string.lower(key) then\n            lower_case_keys = false\n       \
    \ end\n        if upper_case_keys and key ~= string.upper(key) then\n        \
    \    upper_case_keys = false\n        end\n    end\n    return lower_case_keys\
    \ or upper_case_keys\nend", "    local is_lower = true\n    local is_upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n     \
    \       if not string.match(k, \"%l+\") then\n                is_lower = false\n\
    \            end\n            if not string.match(k, \"%u+\") then\n         \
    \       is_upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return is_lower or is_upper\nend", "  local is_lower\
    \ = nil\n  for k, v in pairs(dict) do\n    if type(k) == \"string\" then\n   \
    \   if is_lower == nil then\n        is_lower = k == string.lower(k)\n      else\n\
    \        if is_lower ~= (k == string.lower(k)) then\n          return false\n\
    \        end\n      end\n    else\n      return false\n    end\n  end\n  return\
    \ true\nend", "    if #dict == 0 then\n        return false\n    end\n    local\
    \ is_lower = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n\
    \        if type(k) == \"string\" then\n            if string.lower(k) == k then\n\
    \                is_lower = true\n            elseif string.upper(k) == k then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local all_lower = true\n    local all_upper = true\n   \
    \ for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n        \
    \    return false\n        end\n        all_lower = all_lower and k == string.lower(k)\n\
    \        all_upper = all_upper and k == string.upper(k)\n    end\n    return all_lower\
    \ or all_upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and k ~= k:lower() then\n            lower\
    \ = false\n        end\n        if upper and k ~= k:upper() then\n           \
    \ upper = false\n        end\n    end\n    return lower or upper\nend", "    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) ~= \"string\" then\n            return false\n        end\n   \
    \     if lower and k ~= k:lower() then\n            lower = false\n        end\n\
    \        if upper and k ~= k:upper() then\n            upper = false\n       \
    \ end\n    end\n    return lower or upper\nend", "  local lower = true\n  local\
    \ upper = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n\
    \      return false\n    end\n    if lower and k ~= k:lower() then\n      lower\
    \ = false\n    end\n    if upper and k ~= k:upper() then\n      upper = false\n\
    \    end\n  end\n  return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            return false\n        end\n        if k ~= k:lower() then\n\
    \            lower = false\n        end\n        if k ~= k:upper() then\n    \
    \        upper = false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == \"string\" then\n            if k ~= string.lower(k)\
    \ then\n                lower_case = false\n            end\n            if k\
    \ ~= string.upper(k) then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if k ~= k:lower() then\n            lower = false\n\
    \        end\n        if k ~= k:upper() then\n            upper = false\n    \
    \    end\n    end\n    return lower or upper\nend", "    if #dict == 0 then\n\
    \        return false\n    end\n    local is_lower = true\n    local is_upper\
    \ = true\n    for k, v in pairs(dict) do\n        if not string.match(k, \"^%l+$\"\
    ) then\n            is_lower = false\n        end\n        if not string.match(k,\
    \ \"^%u+$\") then\n            is_upper = false\n        end\n    end\n    return\
    \ is_lower or is_upper\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n\
    \            if k:lower() ~= k then\n                lower_case = false\n    \
    \        end\n            if k:upper() ~= k then\n                upper_case =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    if not dict then return\
    \ false end\n    if not next(dict) then return false end\n    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then return false end\n        if k:match(\"%u\") then lower = false\
    \ end\n        if k:match(\"%l\") then upper = false end\n    end\n    return\
    \ lower or upper\nend", "    if not dict then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if lower and not string.match(k, \"^%l+$\") then\n            lower =\
    \ false\n        end\n        if upper and not string.match(k, \"^%u+$\") then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    -- code here\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n     \
    \       return false\n        end\n        if lower and k ~= k:lower() then\n\
    \            lower = false\n        end\n        if upper and k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if lower and k ~= string.lower(k) then\n            lower = false\n\
    \        end\n        if upper and k ~= string.upper(k) then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "    if #dict\
    \ == 0 then\n        return false\n    end\n    local is_lower = false\n    local\
    \ is_upper = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\"\
    \ then\n            if string.lower(k) == k then\n                is_lower = true\n\
    \            elseif string.upper(k) == k then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if k:lower()\
    \ ~= k then\n                lower_case = false\n            end\n           \
    \ if k:upper() ~= k then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    if #dict == 0 then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if not string.match(k, \"^%l+$\") then\n            lower = false\n \
    \       end\n        if not string.match(k, \"^%u+$\") then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k,v in pairs(dict) do\n       \
    \ if type(k) ~= \"string\" then\n            return false\n        end\n     \
    \   if lower_case and string.upper(k) == k then\n            lower_case = false\n\
    \        end\n        if upper_case and string.lower(k) == k then\n          \
    \  upper_case = false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for key,\
    \ value in pairs(dict) do\n        if type(key) ~= \"string\" then\n         \
    \   return false\n        end\n        if key ~= string.lower(key) then\n    \
    \        lower_case = false\n        end\n        if key ~= string.upper(key)\
    \ then\n            upper_case = false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    if #dict == 0 then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            return false\n        end\n\
    \        if string.lower(k) ~= k then\n            lower = false\n        end\n\
    \        if string.upper(k) ~= k then\n            upper = false\n        end\n\
    \    end\n    return lower or upper\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local is_lower = false\n    local is_upper = false\n   \
    \ for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n        \
    \    if k == string.lower(k) then\n                is_lower = true\n         \
    \   elseif k == string.upper(k) then\n                is_upper = true\n      \
    \      else\n                return false\n            end\n        else\n   \
    \         return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if lower and string.lower(k) ~= k then\n            lower = false\n\
    \        end\n        if upper and string.upper(k) ~= k then\n            upper\
    \ = false\n        end\n    end\n    return lower or upper\nend", "  if table.getn(dict)\
    \ == 0 then\n    return false\n  end\n  local lower_case = true\n  local upper_case\
    \ = true\n  for k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n  \
    \    return false\n    end\n    if string.lower(k) ~= k then\n      lower_case\
    \ = false\n    end\n    if string.upper(k) ~= k then\n      upper_case = false\n\
    \    end\n  end\n  return lower_case or upper_case\nend", "    if not dict then\n\
    \        return false\n    end\n    local is_lower = true\n    local is_upper\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if is_lower and k ~= k:lower()\
    \ then\n            is_lower = false\n        end\n        if is_upper and k ~=\
    \ k:upper() then\n            is_upper = false\n        end\n    end\n    return\
    \ is_lower or is_upper\nend", "  local lower = true\n  local upper = true\n  for\
    \ k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      return false\n\
    \    end\n    if lower and k ~= k:lower() then\n      lower = false\n    end\n\
    \    if upper and k ~= k:upper() then\n      upper = false\n    end\n  end\n \
    \ return lower or upper\nend", "    if dict == nil or #dict == 0 then\n      \
    \  return false\n    end\n    local lower_case = true\n    local upper_case =\
    \ true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if lower_case and not k:match(\"\
    ^%l+$\") then\n            lower_case = false\n        end\n        if upper_case\
    \ and not k:match(\"^%u+$\") then\n            upper_case = false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    if #dict == 0 then\n\
    \        return false\n    end\n    local is_lower = false\n    local is_upper\
    \ = false\n    for key, value in pairs(dict) do\n        if type(key) == \"string\"\
    \ then\n            if string.lower(key) == key then\n                is_lower\
    \ = true\n            elseif string.upper(key) == key then\n                is_upper\
    \ = true\n            else\n                return false\n            end\n  \
    \      else\n            return false\n        end\n    end\n    return is_lower\
    \ or is_upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and not string.match(k, \"^%l+$\") then\n\
    \            lower = false\n        end\n        if upper and not string.match(k,\
    \ \"^%u+$\") then\n            upper = false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and k ~= string.lower(k) then\n       \
    \     lower = false\n        end\n        if upper and k ~= string.upper(k) then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if k:match(\"\
    %u\") then\n                lower_case = false\n            else\n           \
    \     upper_case = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if k ~= k:lower()\
    \ then\n            lower = false\n        end\n        if k ~= k:upper() then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    if #dict == 0 then\n        return false\n    end\n    local is_lower\
    \ = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if string.lower(k) == k then\n \
    \               is_lower = true\n            elseif string.upper(k) == k then\n\
    \                is_upper = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_lower or is_upper\nend", "    -- check if the dictionary is empty\n\
    \    if (next(dict) == nil) then\n        return false\n    end\n    -- check\
    \ if all keys are in lower case\n    local lower_case = true\n    for k, v in\
    \ pairs(dict) do\n        if (not string.match(k, \"%l+\")) then\n           \
    \ lower_case = false\n            break\n        end\n    end\n    -- check if\
    \ all keys are in upper case\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if (not string.match(k, \"%u+\")) then\n            upper_case =\
    \ false\n            break\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    if not dict then\n        return false\n    end\n    local lower =\
    \ true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if lower\
    \ and k ~= k:lower() then\n            lower = false\n        end\n        if\
    \ upper and k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "  local lower = true\n  local upper = true\n\
    \  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      return\
    \ false\n    end\n    if lower and string.lower(k) ~= k then\n      lower = false\n\
    \    end\n    if upper and string.upper(k) ~= k then\n      upper = false\n  \
    \  end\n  end\n  return lower or upper\nend", "    local lower_case = true\n \
    \   local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if string.lower(k) ~= k then\n             \
    \   lower_case = false\n            end\n            if string.upper(k) ~= k then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    if dict == nil or next(dict) == nil then\n        return false\n  \
    \  end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if lower and string.match(k, \"%u\") then\n            lower =\
    \ false\n        end\n        if upper and string.match(k, \"%l\") then\n    \
    \        upper = false\n        end\n    end\n    return lower or upper\nend",
  "    if not dict then return false end\n    if not next(dict) then return false\
    \ end\n    local is_lower = false\n    local is_upper = false\n    for k, v in\
    \ pairs(dict) do\n        if type(k) == \"string\" then\n            if k:lower()\
    \ == k then\n                is_lower = true\n            elseif k:upper() ==\
    \ k then\n                is_upper = true\n            else\n                return\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return is_lower or is_upper\nend", "    if not dict then\n     \
    \   return false\n    end\n    local is_lower = false\n    local is_upper = false\n\
    \    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n     \
    \       if string.lower(k) == k then\n                is_lower = true\n      \
    \      elseif string.upper(k) == k then\n                is_upper = true\n   \
    \         else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower_case and string.upper(k) == k then\n  \
    \          lower_case = false\n        end\n        if upper_case and string.lower(k)\
    \ == k then\n            upper_case = false\n        end\n    end\n    return\
    \ lower_case or upper_case\nend", "    local lower = 0\n    local upper = 0\n\
    \    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n     \
    \       if k == string.lower(k) then\n                lower = lower + 1\n    \
    \        elseif k == string.upper(k) then\n                upper = upper + 1\n\
    \            end\n        end\n    end\n    if lower == 0 and upper == 0 then\n\
    \        return false\n    elseif lower == 0 and upper ~= 0 then\n        return\
    \ true\n    elseif lower ~= 0 and upper == 0 then\n        return true\n    else\n\
    \        return false\n    end\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) ~= \"string\" then\n            return\
    \ false\n        end\n        if lower and k ~= string.lower(k) then\n       \
    \     lower = false\n        end\n        if upper and k ~= string.upper(k) then\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    local is_lower = false\n    local is_upper = false\n    for k, v in\
    \ pairs(dict) do\n        if type(k) == \"string\" then\n            if k == string.lower(k)\
    \ then\n                is_lower = true\n            elseif k == string.upper(k)\
    \ then\n                is_upper = true\n            else\n                return\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return is_lower or is_upper\nend", "    local is_lower = true\n\
    \    local is_upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if k:lower() ~= k then\n                is_lower\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   is_upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return is_lower or is_upper\nend", "    local all_lower\
    \ = true\n    local all_upper = true\n    for k, v in pairs(dict) do\n       \
    \ if type(k) == \"string\" then\n            if k:lower() ~= k then\n        \
    \        all_lower = false\n            end\n            if k:upper() ~= k then\n\
    \                all_upper = false\n            end\n        else\n          \
    \  return false\n        end\n    end\n    return all_lower or all_upper\nend",
  "    if type(dict) ~= \"table\" then\n        return false\n    end\n    local is_upper\
    \ = false\n    local is_lower = false\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == \"string\" then\n            if k == string.upper(k) then\n \
    \               is_upper = true\n            elseif k == string.lower(k) then\n\
    \                is_lower = true\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return is_upper ~= is_lower\nend", "    local lower = true\n    local upper\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if k ~= k:lower() then\n     \
    \       lower = false\n        end\n        if k ~= k:upper() then\n         \
    \   upper = false\n        end\n    end\n    return lower or upper\nend", "  \
    \  if not dict then return false end\n    if not next(dict) then return false\
    \ end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then return false end\n        if lower\
    \ and k ~= k:lower() then lower = false end\n        if upper and k ~= k:upper()\
    \ then upper = false end\n    end\n    return lower or upper\nend", "    local\
    \ lower_case = true\n    local upper_case = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) ~= \"string\" then\n            return false\n    \
    \    end\n        if lower_case and string.lower(key) ~= key then\n          \
    \  lower_case = false\n        end\n        if upper_case and string.upper(key)\
    \ ~= key then\n            upper_case = false\n        end\n    end\n    return\
    \ lower_case or upper_case\nend", "    if dict == nil or next(dict) == nil then\n\
    \        return false\n    end\n    local is_lower = false\n    local is_upper\
    \ = false\n    for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n\
    \            if k:lower() == k then\n                is_lower = true\n       \
    \     elseif k:upper() == k then\n                is_upper = true\n          \
    \  else\n                return false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return is_lower or is_upper\nend",
  "\tlocal lower = true\n\tlocal upper = true\n\tfor k, v in pairs(dict) do\n\t\t\
    if type(k) ~= \"string\" then\n\t\t\treturn false\n\t\tend\n\t\tif k:lower() ~=\
    \ k then\n\t\t\tlower = false\n\t\tend\n\t\tif k:upper() ~= k then\n\t\t\tupper\
    \ = false\n\t\tend\n\tend\n\treturn lower or upper\nend", "  local lower = true\n\
    \  local upper = true\n  for k, v in pairs(dict) do\n    if type(k) ~= \"string\"\
    \ then\n      return false\n    end\n    if k ~= k:lower() then\n      lower =\
    \ false\n    end\n    if k ~= k:upper() then\n      upper = false\n    end\n \
    \ end\n  return lower or upper\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local is_lower = false\n    local is_upper = false\n   \
    \ for k, v in pairs(dict) do\n        if type(k) == \"string\" then\n        \
    \    if k == string.lower(k) then\n                is_lower = true\n         \
    \   elseif k == string.upper(k) then\n                is_upper = true\n      \
    \      else\n                return false\n            end\n        else\n   \
    \         return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if k ~= k:lower() then\n            lower = false\n        end\n\
    \        if k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for key, value in\
    \ pairs(dict) do\n        if type(key) ~= \"string\" then\n            return\
    \ false\n        end\n        if key:lower() ~= key then\n            lower =\
    \ false\n        end\n        if key:upper() ~= key then\n            upper =\
    \ false\n        end\n    end\n    return lower or upper\nend", "    if not dict\
    \ then\n        return false\n    end\n    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"\
    string\" then\n            return false\n        end\n        if lower_case and\
    \ k ~= k:lower() then\n            lower_case = false\n        end\n        if\
    \ upper_case and k ~= k:upper() then\n            upper_case = false\n       \
    \ end\n    end\n    return lower_case or upper_case\nend", "    if not dict then\n\
    \        return false\n    end\n    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            return false\n        end\n        if lower_case and string.upper(k)\
    \ == k then\n            lower_case = false\n        end\n        if upper_case\
    \ and string.lower(k) == k then\n            upper_case = false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    if not dict then return\
    \ false end\n    if not next(dict) then return false end\n    local is_lower =\
    \ false\n    local is_upper = false\n    for k, v in pairs(dict) do\n        if\
    \ type(k) == \"string\" then\n            if k:lower() == k then\n           \
    \     is_lower = true\n            elseif k:upper() == k then\n              \
    \  is_upper = true\n            else\n                return false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ is_lower or is_upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local is_lower = false\n    local is_upper = false\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == \"string\" then\n            if string.lower(k)\
    \ == k then\n                is_lower = true\n            elseif string.upper(k)\
    \ == k then\n                is_upper = true\n            else\n             \
    \   return false\n            end\n        else\n            return false\n  \
    \      end\n    end\n    return is_lower or is_upper\nend", "    if #dict == 0\
    \ then return false end\n    local upper = true\n    local lower = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) ~= \"string\" then return false end\n\
    \        if k:lower() ~= k then lower = false end\n        if k:upper() ~= k then\
    \ upper = false end\n    end\n    return upper or lower\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            return false\n        end\n        if lower\
    \ and k ~= k:lower() then\n            lower = false\n        end\n        if\
    \ upper and k ~= k:upper() then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for key, value in pairs(dict) do\n        if type(key) ~= \"string\"\
    \ then\n            return false\n        end\n        if key:lower() ~= key then\n\
    \            lower_case = false\n        end\n        if key:upper() ~= key then\n\
    \            upper_case = false\n        end\n    end\n    return lower_case or\
    \ upper_case\nend", "  local lower = true\n  local upper = true\n  for k,v in\
    \ pairs(dict) do\n    if type(k) ~= \"string\" then\n      return false\n    end\n\
    \    if lower and k ~= k:lower() then\n      lower = false\n    end\n    if upper\
    \ and k ~= k:upper() then\n      upper = false\n    end\n  end\n  return lower\
    \ or upper\nend", "    if next(dict) == nil then\n        return false\n    end\n\
    \    local all_lower = true\n    local all_upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            return false\n      \
    \  end\n        if k ~= string.lower(k) then\n            all_lower = false\n\
    \        end\n        if k ~= string.upper(k) then\n            all_upper = false\n\
    \        end\n    end\n    return all_lower or all_upper\nend", "  -- your code\
    \ here\n  local keys = {}\n  local lower = true\n  local upper = true\n  for k,v\
    \ in pairs(dict) do\n    keys[#keys+1] = k\n  end\n  if #keys == 0 then\n    return\
    \ false\n  end\n  for i,v in ipairs(keys) do\n    if v ~= string.lower(v) then\n\
    \      lower = false\n    end\n    if v ~= string.upper(v) then\n      upper =\
    \ false\n    end\n  end\n  if lower or upper then\n    return true\n  else\n \
    \   return false\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_155_even_odd_count
language: lua
prompt: "-- Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n-- Example:\n-- even_odd_count(-12) ==> (1, 1)\n-- even_odd_count(123)\
  \ ==> (1, 2)\nlocal function even_odd_count(num)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = even_odd_count\n\
  \    lu.assertEquals(candidate(7), {0, 1})\n    lu.assertEquals(candidate(-78),\
  \ {1, 1})\n    lu.assertEquals(candidate(3452), {2, 2})\n    lu.assertEquals(candidate(346211),\
  \ {3, 3})\n    lu.assertEquals(candidate(-345821), {3, 3})\n    lu.assertEquals(candidate(-2),\
  \ {1, 0})\n    lu.assertEquals(candidate(-45347), {2, 3})\n    lu.assertEquals(candidate(0),\
  \ {1, 0})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n    \
    \    if (num % 10) % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n        num = math.floor(num / 10)\n\
    \    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1,\
    \ #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return\
    \ even, odd\nend", "    local even, odd = 0, 0\n    for i in tostring(num):gmatch(\"\
    %d\") do\n        if tonumber(i) % 2 == 0 then\n            even = even + 1\n\
    \        else\n            odd = odd + 1\n        end\n    end\n    return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local\
    \ digit = num % 10\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n\
    \      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return\
    \ even, odd\nend", "    local even, odd = 0, 0\n    while num ~= 0 do\n      \
    \  if num % 2 == 0 then\n            even = even + 1\n        else\n         \
    \   odd = odd + 1\n        end\n        num = math.floor(num / 10)\n    end\n\
    \    return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "    local even = 0\n    local odd = 0\n    for i\
    \ = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 ==\
    \ 0 then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "  local even_count = 0\n \
    \ local odd_count = 0\n  local num_str = tostring(num)\n  for i = 1, #num_str\
    \ do\n    local digit = tonumber(num_str:sub(i, i))\n    if digit % 2 == 0 then\n\
    \      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n\
    \    end\n  end\n  return even_count, odd_count\nend", "    local even = 0\n \
    \   local odd = 0\n    for i = 1, #tostring(num) do\n        local digit = tonumber(tostring(num):sub(i,\
    \ i))\n        if digit % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    while num ~= 0 do\n        if num % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if (num % 10) % 2\
    \ == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n \
    \   num = math.floor(num / 10)\n  end\n  return even, odd\nend", "  local even,\
    \ odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for\
    \ i = 1, #tostring(num) do\n        if (num % 10) % 2 == 0 then\n            even\
    \ = even + 1\n        else\n            odd = odd + 1\n        end\n        num\
    \ = math.floor(num / 10)\n    end\n    return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #tostring(num) do\n        local digit = tonumber(tostring(num):sub(i,\
    \ i))\n        if digit % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i))\
    \ % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n\
    \  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1,\
    \ #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n\
    \  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1,\
    \ #tostring(num) do\n        if (num % 2 == 0) then\n            even = even +\
    \ 1\n        else\n            odd = odd + 1\n        end\n    end\n    return\
    \ even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n\
    \    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "  \
    \  local even, odd = 0, 0\n    for i in tostring(num):gmatch(\"%d\") do\n    \
    \    if tonumber(i) % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "  local even = 0\n  local odd = 0\n  for i = 1, #tostring(num) do\n    if (num\
    \ % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n\
    \    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend", " \
    \ local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for d in tostring(num):gmatch(\"%d\") do\n    if tonumber(d) % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return\
    \ even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n\
    \    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd =\
    \ odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\n\
    end", "    local even_count = 0\n    local odd_count = 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even_count = even_count + 1\n        else\n            odd_count = odd_count\
    \ + 1\n        end\n    end\n    return even_count, odd_count\nend", "    local\
    \ even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if (num % 10) %\
    \ 2 == 0 then\n            even = even + 1\n        else\n            odd = odd\
    \ + 1\n        end\n        num = num / 10\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for c in tostring(num):gmatch(\".\") do\n    if tonumber(c)\
    \ % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n\
    \  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1,\
    \ #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ _, v in ipairs(to_digits(num)) do\n    if v % 2 == 0 then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend",
  "    local even, odd = 0, 0\n    while num > 0 do\n        if num % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for digit in tostring(num):gmatch(\"%d\") do\n    if\
    \ tonumber(digit) % 2 == 0 then\n      even = even + 1\n    else\n      odd =\
    \ odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n\
    \  for i = 1, #tostring(num) do\n    if num % 2 == 0 then\n      even = even +\
    \ 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n\
    \  end\n  return even, odd\nend", "  local even = 0\n  local odd = 0\n  for i\
    \ = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return\
    \ even, odd\nend", "    local even, odd = 0, 0\n    for _, v in ipairs(to_digits(num))\
    \ do\n        if v % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "    local even, odd =\
    \ 0, 0\n    for i = 1, #tostring(num) do\n        if (num % 2 == 0) then\n   \
    \         even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \    end\n    return even, odd\nend", "    local even, odd = 0, 0\n    for i =\
    \ 1, #tostring(num) do\n        local digit = tonumber(tostring(num):sub(i, i))\n\
    \        if digit % 2 == 0 then\n            even = even + 1\n        else\n \
    \           odd = odd + 1\n        end\n    end\n    return even, odd\nend", " \
    \ local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if num % 2 == 0\
    \ then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n    num\
    \ = math.floor(num / 10)\n  end\n  return even, odd\nend", "    local even, odd\
    \ = 0, 0\n    for _, v in ipairs(split(num)) do\n        if v % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n\
    \  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1,\
    \ #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i, i))\n\
    \    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd\
    \ + 1\n    end\n  end\n  return even, odd\nend", "    local even_count = 0\n \
    \   local odd_count = 0\n    for i = 1, #tostring(num) do\n        local digit\
    \ = tonumber(tostring(num):sub(i, i))\n        if digit % 2 == 0 then\n      \
    \      even_count = even_count + 1\n        else\n            odd_count = odd_count\
    \ + 1\n        end\n    end\n    return even_count, odd_count\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i =\
    \ 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n     \
    \ odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd +\
    \ 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even_count\
    \ = 0\n  local odd_count = 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count\
    \ = odd_count + 1\n    end\n  end\n  return even_count, odd_count\nend", "  local\
    \ even_count = 0\n  local odd_count = 0\n  for i = 1, #tostring(num) do\n    local\
    \ digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 == 0 then\n    \
    \  even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n  \
    \  end\n  end\n  return even_count, odd_count\nend", "    local even_count = 0\n\
    \    local odd_count = 0\n    local num_str = tostring(num)\n    for i = 1, #num_str\
    \ do\n        local digit = tonumber(num_str:sub(i, i))\n        if digit % 2\
    \ == 0 then\n            even_count = even_count + 1\n        else\n         \
    \   odd_count = odd_count + 1\n        end\n    end\n    return even_count, odd_count\n\
    end", "    local even, odd = 0, 0\n    while num ~= 0 do\n        local digit\
    \ = num % 10\n        if digit % 2 == 0 then\n            even = even + 1\n  \
    \      else\n            odd = odd + 1\n        end\n        num = math.floor(num\
    \ / 10)\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ _, v in ipairs(num_to_digits(num)) do\n    if v % 2 == 0 then\n      even =\
    \ even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\n\
    end", "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if\
    \ tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n            even = even + 1\n\
    \        else\n            odd = odd + 1\n        end\n    end\n    return even,\
    \ odd\nend", "  local even = 0\n  local odd = 0\n  for i = 1, #tostring(num) do\n\
    \    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd =\
    \ odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\n\
    end", "  local even, odd = 0, 0\n  for i in tostring(num):gmatch('%d') do\n  \
    \  if tonumber(i) % 2 == 0 then\n      even = even + 1\n    else\n      odd =\
    \ odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n\
    \  for i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even =\
    \ even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num /\
    \ 10)\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    while\
    \ num > 0 do\n        local digit = num % 10\n        if digit % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        local digit\
    \ = tonumber(tostring(num):sub(i, i))\n        if digit % 2 == 0 then\n      \
    \      even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1,\
    \ #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return\
    \ even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n\
    \    local digit = num % 10\n    if digit % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n\
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for digit in tostring(num):gmatch(\"\
    %d\") do\n        if tonumber(digit) % 2 == 0 then\n            even = even +\
    \ 1\n        else\n            odd = odd + 1\n        end\n    end\n    return\
    \ even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n\
    \    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd =\
    \ odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\n\
    end", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if (num %\
    \ 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend", "   \
    \ local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if (tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0) then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #tostring(num) do\n        local digit = tonumber(tostring(num):sub(i,\
    \ i))\n        if digit % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for _, v in ipairs(to_digits(num)) do\n       \
    \ if v % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "    local even_count\
    \ = 0\n    local odd_count = 0\n    for i = 1, #tostring(num) do\n        local\
    \ digit = tonumber(string.sub(tostring(num), i, i))\n        if digit % 2 == 0\
    \ then\n            even_count = even_count + 1\n        else\n            odd_count\
    \ = odd_count + 1\n        end\n    end\n    return even_count, odd_count\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i =\
    \ 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i, i))\n\
    \    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd\
    \ + 1\n    end\n  end\n  return even, odd\nend", "    local even_count = 0\n \
    \   local odd_count = 0\n    local num_str = tostring(num)\n    for i = 1, #num_str\
    \ do\n        local digit = tonumber(num_str:sub(i, i))\n        if digit % 2\
    \ == 0 then\n            even_count = even_count + 1\n        else\n         \
    \   odd_count = odd_count + 1\n        end\n    end\n    return even_count, odd_count\n\
    end", "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if\
    \ tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n            even = even + 1\n\
    \        else\n            odd = odd + 1\n        end\n    end\n    return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even + 1\n   \
    \ else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i =\
    \ 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n\
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        local digit = num % 10\n        if digit % 2 == 0 then\n       \
    \     even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \        num = math.floor(num / 10)\n    end\n    return even, odd\nend", "  \
    \  local even, odd = 0, 0\n    for _, v in ipairs(to_digits(num)) do\n       \
    \ if v % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even,\
    \ odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for i = 1, #tostring(num) do\n    if (num % 2 == 0) then\n      even =\
    \ even + 1\n    else\n      odd = odd + 1\n    end\n    num = num / 10\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    local digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 ==\
    \ 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if (num % 10) % 2\
    \ == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n \
    \   num = math.floor(num / 10)\n  end\n  return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even =\
    \ 0\n  local odd = 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i))\
    \ % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n\
    \  end\n  return even, odd\nend", "  local even_count = 0\n  local odd_count =\
    \ 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(string.sub(tostring(num),\
    \ i, i))\n    if digit % 2 == 0 then\n      even_count = even_count + 1\n    else\n\
    \      odd_count = odd_count + 1\n    end\n  end\n  return even_count, odd_count\n\
    end", "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if\
    \ tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n            even = even + 1\n\
    \        else\n            odd = odd + 1\n        end\n    end\n    return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd +\
    \ 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "    local even = 0\n \
    \   local odd = 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even_count\
    \ = 0\n  local odd_count = 0\n  local abs_num = math.abs(num)\n  while abs_num\
    \ > 0 do\n    local digit = abs_num % 10\n    if digit % 2 == 0 then\n      even_count\
    \ = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n    abs_num\
    \ = math.floor(abs_num / 10)\n  end\n  return even_count, odd_count\nend", " \
    \ local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for\
    \ i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 ==\
    \ 0 then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "    local even, odd = 0, 0\n\
    \    for i = 1, #tostring(num) do\n        if math.fmod(num % (10 ^ i), 10) %\
    \ 2 == 0 then\n            even = even + 1\n        else\n            odd = odd\
    \ + 1\n        end\n    end\n    return even, odd\nend", "  local even, odd =\
    \ 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even\
    \ = even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num\
    \ / 10)\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i =\
    \ 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return\
    \ even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n\
    \    if num % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd +\
    \ 1\n    end\n    num = num / 10\n  end\n  return even, odd\nend", "    local\
    \ even, odd = 0, 0\n    while num ~= 0 do\n        local digit = num % 10\n  \
    \      if digit % 2 == 0 then\n            even = even + 1\n        else\n   \
    \         odd = odd + 1\n        end\n        num = math.floor(num / 10)\n   \
    \ end\n    return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1,\
    \ #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i, i))\n\
    \    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd\
    \ + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n \
    \ for i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even =\
    \ even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num /\
    \ 10)\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  num = math.abs(num)\n\
    \  while num > 0 do\n    if num % 2 == 0 then\n      even = even + 1\n    else\n\
    \      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return\
    \ even, odd\nend", "    local even = 0\n    local odd = 0\n    while num ~= 0\
    \ do\n        local digit = num % 10\n        if digit % 2 == 0 then\n       \
    \     even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \        num = math.floor(num / 10)\n    end\n    return even, odd\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if num % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num\
    \ / 10)\n  end\n  return even, odd\nend", "    local even_count = 0\n    local\
    \ odd_count = 0\n    if num < 0 then\n        num = -num\n    end\n    while num\
    \ > 0 do\n        if num % 2 == 0 then\n            even_count = even_count +\
    \ 1\n        else\n            odd_count = odd_count + 1\n        end\n      \
    \  num = math.floor(num / 10)\n    end\n    return even_count, odd_count\nend",
  "  local even, odd = 0, 0\n  for c in tostring(num):gmatch(\".\") do\n    if tonumber(c)\
    \ % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n\
    \  end\n  return even, odd\nend", "  local even = 0\n  local odd = 0\n  for i\
    \ = 1, #tostring(num) do\n    if (tonumber(tostring(num):sub(i, i)) % 2 == 0)\
    \ then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if num % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num\
    \ / 10)\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for\
    \ i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 ==\
    \ 0 then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n\
    \  for i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even =\
    \ even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num /\
    \ 10)\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1,\
    \ #tostring(num) do\n    local digit = num % 10\n    if digit % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num\
    \ / 10)\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for\
    \ i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 ==\
    \ 0 then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n\
    \  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2\
    \ == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n \
    \ end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        local digit = tonumber(tostring(num):sub(i, i))\n        if digit\
    \ % 2 == 0 then\n            even = even + 1\n        else\n            odd =\
    \ odd + 1\n        end\n    end\n    return even, odd\nend", "  local even, odd\
    \ = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i =\
    \ 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    local digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 ==\
    \ 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    local digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 ==\
    \ 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "  local even = 0\n  local odd = 0\n  for i = 1, #tostring(num)\
    \ do\n    local digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 ==\
    \ 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "  local even, odd = 0, 0\n  for digit in tostring(num):gmatch(\"\
    %d\") do\n    if tonumber(digit) % 2 == 0 then\n      even = even + 1\n    else\n\
    \      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #tostring(num) do\n        if (num % 10) % 2 == 0\
    \ then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n        num = math.floor(num / 10)\n    end\n    return even, odd\n\
    end", "  local even = 0\n  local odd = 0\n  for i = 1, #tostring(num) do\n   \
    \ if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "  \
    \  local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        local digit\
    \ = tonumber(tostring(num):sub(i, i))\n        if digit % 2 == 0 then\n      \
    \      even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \    end\n    return even, odd\nend", "    local even, odd = 0, 0\n    for i =\
    \ 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0\
    \ then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n\
    \  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "    local even, odd =\
    \ 0, 0\n    for i = 1, #tostring(num) do\n        local digit = tonumber(tostring(num):sub(i,\
    \ i))\n        if digit % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    while num ~= 0 do\n        if num % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if (num %\
    \ 10) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n        num = math.floor(num / 10)\n    end\n    return\
    \ even, odd\nend", "  local even_count = 0\n  local odd_count = 0\n  while num\
    \ ~= 0 do\n    local digit = num % 10\n    if digit % 2 == 0 then\n      even_count\
    \ = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n    num\
    \ = math.floor(num / 10)\n  end\n  return even_count, odd_count\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "    local even, odd =\
    \ 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even,\
    \ odd = 0, 0\n  for _, v in ipairs(string.split(tostring(num), '')) do\n    if\
    \ tonumber(v) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd\
    \ + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n \
    \ for i = 1, #tostring(num) do\n    local digit = tonumber(tostring(num):sub(i,\
    \ i))\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i))\
    \ % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n\
    \  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    local digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 ==\
    \ 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if (num % 2 == 0) then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for c in tostring(num):gmatch(\".\") do\n     \
    \   if tonumber(c) % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    while num ~= 0 do\n        local digit = num %\
    \ 10\n        if digit % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n        num = math.floor(num / 10)\n\
    \    end\n    return even, odd\nend", "    local even, odd = 0, 0\n    for i =\
    \ 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0\
    \ then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "    local even_count = 0\n\
    \    local odd_count = 0\n    for i = 1, #tostring(num) do\n        if tonumber(string.sub(tostring(num),\
    \ i, i)) % 2 == 0 then\n            even_count = even_count + 1\n        else\n\
    \            odd_count = odd_count + 1\n        end\n    end\n    return even_count,\
    \ odd_count\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if (num % 10) % 2 == 0 then\n            even = even + 1\n     \
    \   else\n            odd = odd + 1\n        end\n        num = math.floor(num\
    \ / 10)\n    end\n    return even, odd\nend", "  local even_count = 0\n  local\
    \ odd_count = 0\n  while num ~= 0 do\n    local digit = num % 10\n    if digit\
    \ % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count\
    \ = odd_count + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even_count,\
    \ odd_count\nend", "  local even = 0\n  local odd = 0\n  for i = 1, #tostring(num)\
    \ do\n    if (tonumber(tostring(num):sub(i, i)) % 2 == 0) then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if (tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0) then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even,\
    \ odd = 0, 0\n  for c in tostring(num):gmatch(\".\") do\n    if tonumber(c) %\
    \ 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n\
    \  end\n  return even, odd\nend", "    local even_count = 0\n    local odd_count\
    \ = 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even_count = even_count + 1\n        else\n \
    \           odd_count = odd_count + 1\n        end\n    end\n    return even_count,\
    \ odd_count\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n     \
    \ odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd +\
    \ 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend",
  "    local even = 0\n    local odd = 0\n    for i = 1, #tostring(num) do\n     \
    \   if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n            even = even\
    \ + 1\n        else\n            odd = odd + 1\n        end\n    end\n    return\
    \ even, odd\nend", "  local even = 0\n  local odd = 0\n  while num ~= 0 do\n \
    \   local digit = num % 10\n    if digit % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n\
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "    local even = 0\n    local odd = 0\n    while\
    \ num ~= 0 do\n        local digit = num % 10\n        if digit % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    while\
    \ num ~= 0 do\n        local digit = num % 10\n        if digit % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if (num % 2 == 0)\
    \ then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n    num\
    \ = math.floor(num / 10)\n  end\n  return even, odd\nend", "    local even, odd\
    \ = 0, 0\n    for i = 1, #tostring(num) do\n        if num % 2 == 0 then\n   \
    \         even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1,\
    \ #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n\
    \    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    local digit = tonumber(tostring(num):sub(i, i))\n    if digit % 2 ==\
    \ 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if (num % 10) % 2 == 0 then\n            even = even + 1\n     \
    \   else\n            odd = odd + 1\n        end\n        num = math.floor(num\
    \ / 10)\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ i = 1, #tostring(num) do\n    if (num % 10) % 2 == 0 then\n      even = even\
    \ + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num / 10)\n\
    \  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1,\
    \ #tostring(num) do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for\
    \ i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0\
    \ then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 0\n  for i in tostring(num):gmatch(\"\
    %d\") do\n    if tonumber(i) % 2 == 0 then\n      even = even + 1\n    else\n\
    \      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "    local even\
    \ = 0\n    local odd = 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    while num ~= 0 do\n        if num % 2 == 0 then\n          \
    \  even = even + 1\n        else\n            odd = odd + 1\n        end\n   \
    \     num = math.floor(num / 10)\n    end\n    return even, odd\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = num % 10\n\
    \    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd\
    \ + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend",
  "    local even_count = 0\n    local odd_count = 0\n    local num_str = tostring(num)\n\
    \    for i = 1, #num_str do\n        local digit = tonumber(num_str:sub(i, i))\n\
    \        if digit % 2 == 0 then\n            even_count = even_count + 1\n   \
    \     else\n            odd_count = odd_count + 1\n        end\n    end\n    return\
    \ even_count, odd_count\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n     \
    \ odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even + 1\n   \
    \ else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    while\
    \ num ~= 0 do\n        local digit = num % 10\n        if digit % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n        num = math.floor(num / 10)\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "  local even,\
    \ odd = 0, 0\n  for i in tostring(num):gmatch('%d') do\n    if tonumber(i) % 2\
    \ == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n    end\n \
    \ end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n     \
    \ odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n      even = even + 1\n   \
    \ else\n      odd = odd + 1\n    end\n  end\n  return even, odd\nend", "  local\
    \ even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd + 1\n  \
    \  end\n  end\n  return even, odd\nend", "  local even, odd = 0, 0\n  for i =\
    \ 1, #tostring(num) do\n    local digit = num % 10\n    if digit % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n    num = math.floor(num\
    \ / 10)\n  end\n  return even, odd\nend", "    local even, odd = 0, 0\n    for\
    \ i = 1, #tostring(num) do\n        local digit = tonumber(tostring(num):sub(i,\
    \ i))\n        if digit % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    local digit = num\
    \ % 10\n    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\n\
    end", "    local even, odd = 0, 0\n    for _, d in ipairs(to_digits(num)) do\n\
    \        if d % 2 == 0 then\n            even = even + 1\n        else\n     \
    \       odd = odd + 1\n        end\n    end\n    return even, odd\nend", "   \
    \ local even, odd = 0, 0\n    for i = 1, #tostring(num) do\n        if tonumber(tostring(num):sub(i,\
    \ i)) % 2 == 0 then\n            even = even + 1\n        else\n            odd\
    \ = odd + 1\n        end\n    end\n    return even, odd\nend", "\tlocal even,\
    \ odd = 0, 0\n\tfor i in tostring(num):gmatch(\"%d\") do\n\t\tif tonumber(i) %\
    \ 2 == 0 then\n\t\t\teven = even + 1\n\t\telse\n\t\t\todd = odd + 1\n\t\tend\n\
    \tend\n\treturn even, odd\nend", "  local even = 0\n  local odd = 0\n  for i =\
    \ 1, #tostring(num) do\n    if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n\
    \      even = even + 1\n    else\n      odd = odd + 1\n    end\n  end\n  return\
    \ even, odd\nend", "    local even, odd = 0, 0\n    while num ~= 0 do\n      \
    \  if num % 2 == 0 then\n            even = even + 1\n        else\n         \
    \   odd = odd + 1\n        end\n        num = math.floor(num / 10)\n    end\n\
    \    return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #tostring(num)\
    \ do\n        if tonumber(tostring(num):sub(i, i)) % 2 == 0 then\n           \
    \ even = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return even, odd\nend", "    local even, odd = 0, 0\n    while num ~= 0 do\n\
    \        if num % 2 == 0 then\n            even = even + 1\n        else\n   \
    \         odd = odd + 1\n        end\n        num = math.floor(num / 10)\n   \
    \ end\n    return even, odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num)\
    \ do\n    if (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n     \
    \ odd = odd + 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even,\
    \ odd\nend", "  local even, odd = 0, 0\n  for i = 1, #tostring(num) do\n    if\
    \ (num % 10) % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd +\
    \ 1\n    end\n    num = math.floor(num / 10)\n  end\n  return even, odd\nend",
  "    local even_count = 0\n    local odd_count = 0\n    local num_str = tostring(num)\n\
    \    for i = 1, #num_str do\n        local digit = tonumber(num_str:sub(i, i))\n\
    \        if digit % 2 == 0 then\n            even_count = even_count + 1\n   \
    \     else\n            odd_count = odd_count + 1\n        end\n    end\n    return\
    \ even_count, odd_count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_58_common
language: lua
results:
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpbg8tgw82.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbg8tgw82.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpbg8tgw82.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpg_c_fsc4.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpg_c_fsc4.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpg_c_fsc4.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpa582p627.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpa582p627.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpa582p627.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppt8arbqq.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppt8arbqq.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmppt8arbqq.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp52x91_4w.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp52x91_4w.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp52x91_4w.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3jimkjkk.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3jimkjkk.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp3jimkjkk.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4m3o_k_h.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4m3o_k_h.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp4m3o_k_h.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6031ujcb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6031ujcb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6031ujcb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpsvk4k8cu.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsvk4k8cu.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpsvk4k8cu.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5tmnouwu.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5tmnouwu.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp5tmnouwu.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfsa3kb5e.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfsa3kb5e.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpfsa3kb5e.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6j61jvh5.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6j61jvh5.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6j61jvh5.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp34946tr6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp34946tr6.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp34946tr6.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmplgqr9iu7.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplgqr9iu7.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmplgqr9iu7.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyd8pay_2.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyd8pay_2.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpyd8pay_2.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp53dgk06l.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp53dgk06l.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp53dgk06l.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzqh4az5g.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzqh4az5g.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpzqh4az5g.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpoq_f16ey.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpoq_f16ey.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpoq_f16ey.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9oke0x2p.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9oke0x2p.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp9oke0x2p.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpb056pveb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpb056pveb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpb056pveb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpp7q433xo.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpp7q433xo.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpp7q433xo.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmph_ntrgrb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmph_ntrgrb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmph_ntrgrb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfaph52gt.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfaph52gt.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpfaph52gt.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2yezagdo.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2yezagdo.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp2yezagdo.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpq3k6vwq_.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpq3k6vwq_.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpq3k6vwq_.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmplrw4s86t.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplrw4s86t.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmplrw4s86t.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6qk7vj46.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6qk7vj46.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6qk7vj46.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmptdtnakt6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmptdtnakt6.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmptdtnakt6.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp46g8reen.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp46g8reen.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp46g8reen.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local r = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      r[#r + 1] = v\n\
    \    end\n  end\n  return sort(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfgncvw_t.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfgncvw_t.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpfgncvw_t.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyvchxh84.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyvchxh84.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpyvchxh84.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmprvf_w08l.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprvf_w08l.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmprvf_w08l.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpb5vmd6f1.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpb5vmd6f1.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpb5vmd6f1.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp38eeexq4.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp38eeexq4.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp38eeexq4.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6b_e4wvh.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6b_e4wvh.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6b_e4wvh.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphaqnilmj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphaqnilmj.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmphaqnilmj.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    t[v] = true\n  end\n  local r = {}\n  for _,\
    \ v in ipairs(l2) do\n    if t[v] then\n      r[#r + 1] = v\n    end\n  end\n\
    \  return sort(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4glxcqqk.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4glxcqqk.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmp4glxcqqk.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmph6p2r5y9.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmph6p2r5y9.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmph6p2r5y9.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpgp3tiz6o.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgp3tiz6o.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpgp3tiz6o.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpw_ad97e0.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpw_ad97e0.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpw_ad97e0.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpn8fkihbq.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpn8fkihbq.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpn8fkihbq.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpsc5albqu.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsc5albqu.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpsc5albqu.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_ozwllyb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_ozwllyb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp_ozwllyb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpdnxuwi2e.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpdnxuwi2e.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_pzm3wx6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_pzm3wx6.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp_pzm3wx6.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjedcuq7h.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjedcuq7h.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpjedcuq7h.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_2uwazni.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_2uwazni.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp_2uwazni.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmzzt4vbi.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmzzt4vbi.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpmzzt4vbi.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmplx7cfttk.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplx7cfttk.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmplx7cfttk.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpyyjtv8pl.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyyjtv8pl.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpyyjtv8pl.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpn62u04va.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpn62u04va.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpn62u04va.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    t[v] = true\n  end\n  local res = {}\n  for\
    \ _, v in ipairs(l2) do\n    if t[v] then\n      table.insert(res, v)\n    end\n\
    \  end\n  table.sort(res)\n  return res\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt2vaz3v1.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpt2vaz3v1.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpodthym0n.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpodthym0n.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpodthym0n.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpj0gbjmuw.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpj0gbjmuw.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpj0gbjmuw.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5y20z5qn.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5y20z5qn.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp5y20z5qn.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            table.insert(r,\
    \ v)\n        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpa0iudl9g.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpa0iudl9g.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpweod8lvz.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpweod8lvz.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpweod8lvz.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpa2i3y82s.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpa2i3y82s.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpa2i3y82s.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpca7zrqi3.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpca7zrqi3.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpca7zrqi3.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpkxmkyws3.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpkxmkyws3.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.002 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpybdv5dsg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpybdv5dsg.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpybdv5dsg.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpuhlfujnn.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpuhlfujnn.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpuhlfujnn.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp69nmj_y0.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp69nmj_y0.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp69nmj_y0.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpkqk9nrgr.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpkqk9nrgr.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpkqk9nrgr.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpamkpe97y.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpamkpe97y.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpamkpe97y.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp0wiaf7bo.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp0wiaf7bo.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp0wiaf7bo.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpa2kz4iuy.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpa2kz4iuy.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpa2kz4iuy.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpbd1x2z9p.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbd1x2z9p.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpbd1x2z9p.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9nhi2lu2.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9nhi2lu2.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp9nhi2lu2.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for i = 1, #l1 do\n    local v = l1[i]\n    if contains(l2, v) and not contains(t,\
    \ v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppn7plhps.lua:10:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppn7plhps.lua:10:\
    \ in function 'candidate'\\n\\t/tmp/tmppn7plhps.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp920g3_z0.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp920g3_z0.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp920g3_z0.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpo6ptke7z.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo6ptke7z.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpo6ptke7z.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_0wd5ebs.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_0wd5ebs.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp_0wd5ebs.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpui3whqaa.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpui3whqaa.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpui3whqaa.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6nrarxu_.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6nrarxu_.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6nrarxu_.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpvqdt1t27.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvqdt1t27.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpvqdt1t27.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6otkvwtg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6otkvwtg.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6otkvwtg.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjiq19qod.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjiq19qod.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpjiq19qod.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjc7m6jvl.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjc7m6jvl.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpjc7m6jvl.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpbovho8ly.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbovho8ly.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpbovho8ly.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzzzp8xmy.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzzzp8xmy.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpzzzp8xmy.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3zae3v_c.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3zae3v_c.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp3zae3v_c.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2brmrqv9.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2brmrqv9.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp2brmrqv9.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2t9g5wcu.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2t9g5wcu.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp2t9g5wcu.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpslir50cg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpslir50cg.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpslir50cg.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmptt15788g.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmptt15788g.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmptt15788g.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local l = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(l,\
    \ v)\n        end\n    end\n    return sort(l)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpaou76wkj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpaou76wkj.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpaou76wkj.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local set =\
    \ {}\n    for _, v in ipairs(l1) do\n        set[v] = true\n    end\n    local\
    \ res = {}\n    for _, v in ipairs(l2) do\n        if set[v] then\n          \
    \  res[#res + 1] = v\n        end\n    end\n    table.sort(res)\n    return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpc18vjmyi.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpc18vjmyi.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return sort(r)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmps49bv6ta.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmps49bv6ta.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmps49bv6ta.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp13ylrhhk.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp13ylrhhk.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp13ylrhhk.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpul5380v9.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpul5380v9.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpul5380v9.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpawazie5q.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpawazie5q.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpawazie5q.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzbto35oo.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzbto35oo.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpzbto35oo.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      res[#res + 1]\
    \ = v\n    end\n  end\n  return sort(res)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpgat730mj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgat730mj.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpgat730mj.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpovbozdq0.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpovbozdq0.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpovbozdq0.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpy28j5xv_.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpy28j5xv_.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpy28j5xv_.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  local r = {}\n  for _, v in ipairs(l1) do\n    t[v] = true\n  end\n  for _,\
    \ v in ipairs(l2) do\n    if t[v] then\n      r[#r + 1] = v\n    end\n  end\n\
    \  return sort(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpz_penldb.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpz_penldb.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmpz_penldb.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzuxmwemr.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzuxmwemr.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpzuxmwemr.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpaukjftyt.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpaukjftyt.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpaukjftyt.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2t7fiurg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2t7fiurg.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp2t7fiurg.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpo5iq2724.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo5iq2724.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpo5iq2724.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9usvs53x.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9usvs53x.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp9usvs53x.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpysxvmy1e.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpysxvmy1e.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpysxvmy1e.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpnn4zkmcr.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnn4zkmcr.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpnn4zkmcr.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpjmrowts_.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjmrowts_.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpjmrowts_.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpu3se_ki9.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu3se_ki9.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpu3se_ki9.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpao_gox5e.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpao_gox5e.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpao_gox5e.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3exrwt4h.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3exrwt4h.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp3exrwt4h.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5jylngyw.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5jylngyw.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp5jylngyw.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpqefynyj5.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqefynyj5.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpqefynyj5.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpypd2ykc2.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpypd2ykc2.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpypd2ykc2.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmps9egiwlk.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmps9egiwlk.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmps9egiwlk.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpuphltpii.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpuphltpii.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpuphltpii.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpl01_on1w.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpl01_on1w.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpl01_on1w.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp7_4kwiyq.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7_4kwiyq.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp7_4kwiyq.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpsjaics7b.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsjaics7b.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpsjaics7b.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpp7dcid5m.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpp7dcid5m.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpp7dcid5m.lua:20: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpovzm1v7x.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpovzm1v7x.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpovzm1v7x.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpu7an4zdp.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu7an4zdp.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpu7an4zdp.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local res =\
    \ {}\n    for _, v in ipairs(l2) do\n        if t[v] then\n            table.insert(res,\
    \ v)\n        end\n    end\n    table.sort(res)\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3tlk0jnv.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmp3tlk0jnv.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpya95t5fj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpya95t5fj.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpya95t5fj.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmiw7tnea.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmiw7tnea.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpmiw7tnea.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpunlo0s21.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpunlo0s21.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpunlo0s21.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpx7xbxxic.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpx7xbxxic.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpx7xbxxic.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpuzbw1kyr.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpuzbw1kyr.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpuzbw1kyr.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local s = {}\n\
    \    for _, v in ipairs(l1) do\n        s[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if s[v] then\n            r[#r+1] = v\n\
    \        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5i4ajvwz.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmp5i4ajvwz.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpi2iv4u90.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpi2iv4u90.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpi2iv4u90.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpisp9sacc.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpisp9sacc.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpisp9sacc.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpdg1j1gml.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdg1j1gml.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpdg1j1gml.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return sort(r)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphdrf4e7u.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphdrf4e7u.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmphdrf4e7u.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpal67vjmh.lua:23:\
    \ expected: {1, 5, 653}\\nactual: {5, 1, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpal67vjmh.lua:23:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpebnll8bs.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpebnll8bs.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpebnll8bs.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpe2ectj5j.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpe2ectj5j.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpe2ectj5j.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmunqa_6h.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmunqa_6h.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpmunqa_6h.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return sort(r)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpor9a1zk6.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpor9a1zk6.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmpor9a1zk6.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3_z_l4qo.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmp3_z_l4qo.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphab9h7qy.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphab9h7qy.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmphab9h7qy.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmrlza2nv.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmrlza2nv.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpmrlza2nv.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp44vohm4o.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp44vohm4o.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp44vohm4o.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpo1ve0fqu.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo1ve0fqu.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpo1ve0fqu.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp4jra5x7r.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4jra5x7r.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp4jra5x7r.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpzaj2jvwb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzaj2jvwb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpzaj2jvwb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfxdq3zyb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfxdq3zyb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpfxdq3zyb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpvckvgxwm.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvckvgxwm.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpvckvgxwm.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpopx7ciz4.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpopx7ciz4.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpopx7ciz4.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n\tlocal t = {}\n\
    \tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t + 1] = v\n\
    \t\tend\n\tend\n\treturn unique(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6a49m9k3.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6a49m9k3.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6a49m9k3.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpuy766q5v.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpuy766q5v.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpuy766q5v.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpergyi2tr.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpergyi2tr.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpergyi2tr.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpxgq4us4o.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxgq4us4o.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpxgq4us4o.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return sort(r)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpi6xnlwpq.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpi6xnlwpq.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmpi6xnlwpq.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t1 =\
    \ {}\n    local t2 = {}\n    for _, v in ipairs(l1) do\n        t1[v] = true\n\
    \    end\n    for _, v in ipairs(l2) do\n        t2[v] = true\n    end\n    local\
    \ t = {}\n    for k, _ in pairs(t1) do\n        if t2[k] then\n            t[#t\
    \ + 1] = k\n        end\n    end\n    table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpkqngbm99.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpkqngbm99.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpkqngbm99.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp7agbjk99.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7agbjk99.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp7agbjk99.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpt280j0fx.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpt280j0fx.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpt280j0fx.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for i = 1, #l1 do\n        for j = 1, #l2 do\n            if l1[i] == l2[j]\
    \ then\n                t[#t + 1] = l1[i]\n            end\n        end\n    end\n\
    \    return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpf4q1i7il.lua:15:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpf4q1i7il.lua:15:\
    \ in function 'candidate'\\n\\t/tmp/tmpf4q1i7il.lua:21: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpfq_v7y69.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfq_v7y69.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpfq_v7y69.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp78ez6b79.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp78ez6b79.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp78ez6b79.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpxt6x5ujp.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxt6x5ujp.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpxt6x5ujp.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmphnmr1sbf.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphnmr1sbf.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmphnmr1sbf.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp8dhmyibl.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8dhmyibl.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp8dhmyibl.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpcalvp80n.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcalvp80n.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpcalvp80n.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpq6athmu3.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpq6athmu3.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpq6athmu3.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmperg19bac.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmperg19bac.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmperg19bac.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpj3dbms66.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpj3dbms66.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpj3dbms66.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpx7uy67eb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpx7uy67eb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpx7uy67eb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpb99qluxc.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpb99qluxc.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpb99qluxc.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpz1m0e34t.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpz1m0e34t.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpz1m0e34t.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmppa4cv1wg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppa4cv1wg.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmppa4cv1wg.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpdehkuivs.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdehkuivs.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpdehkuivs.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpkcj4xu0t.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpkcj4xu0t.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpkcj4xu0t.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9lskqmy8.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9lskqmy8.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp9lskqmy8.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpx74uo0ku.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpx74uo0ku.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpx74uo0ku.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp08s424sl.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp08s424sl.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp08s424sl.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return unique(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpaennc39z.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpaennc39z.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpaennc39z.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2bhf7gt8.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2bhf7gt8.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp2bhf7gt8.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp88o6rl2d.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp88o6rl2d.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp88o6rl2d.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpghfvqgtm.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpghfvqgtm.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpghfvqgtm.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp003h8zay.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp003h8zay.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp003h8zay.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp1o2twxil.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1o2twxil.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp1o2twxil.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp7p75w9bk.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7p75w9bk.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp7p75w9bk.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpxqe2akfa.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxqe2akfa.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpxqe2akfa.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp3n2np4et.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3n2np4et.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp3n2np4et.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5ejgexkn.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5ejgexkn.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp5ejgexkn.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp12nmu6if.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp12nmu6if.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp12nmu6if.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp2t0x5une.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2t0x5une.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp2t0x5une.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for i = 1, #l1 do\n    t[l1[i]] = true\n  end\n  local r = {}\n  for i = 1,\
    \ #l2 do\n    if t[l2[i]] then\n      r[#r + 1] = l2[i]\n    end\n  end\n  return\
    \ sort(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpiqhrwffv.lua:17:\
    \ attempt to call global 'sort' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpiqhrwffv.lua:17:\
    \ in function 'candidate'\\n\\t/tmp/tmpiqhrwffv.lua:23: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp5ergjb4v.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5ergjb4v.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp5ergjb4v.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local res =\
    \ {}\n    for _, v in ipairs(l2) do\n        if t[v] then\n            table.insert(res,\
    \ v)\n        end\n    end\n    table.sort(res)\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpudyy__ul.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpudyy__ul.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local set =\
    \ {}\n    for _, v in ipairs(l1) do\n        set[v] = true\n    end\n    local\
    \ res = {}\n    for _, v in ipairs(l2) do\n        if set[v] then\n          \
    \  table.insert(res, v)\n        end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqs7fju0q.lua:24:\
    \ expected: {1, 5, 653}\\nactual: {1, 5, 5, 653}\\nstack traceback:\\n\\t/tmp/tmpqs7fju0q.lua:24:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.001 seconds, 0 successes,\
    \ 1 failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpgmlyubq8.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgmlyubq8.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpgmlyubq8.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpx97_yvdy.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpx97_yvdy.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpx97_yvdy.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp6jt3jzzb.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6jt3jzzb.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp6jt3jzzb.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp9kw46nkp.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9kw46nkp.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp9kw46nkp.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpmf9jtv_m.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmf9jtv_m.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpmf9jtv_m.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmpxeh8bse0.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxeh8bse0.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmpxeh8bse0.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp7yhtk3pj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7yhtk3pj.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp7yhtk3pj.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmplo96xh_v.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplo96xh_v.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmplo96xh_v.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp1iy8q2hv.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1iy8q2hv.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp1iy8q2hv.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp_m3jt1gz.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_m3jt1gz.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp_m3jt1gz.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
    \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nTests with errors:\\n------------------\\n1) test_humaneval\\n/tmp/tmp79hr56wi.lua:9:\
    \ attempt to call global 'contains' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp79hr56wi.lua:9:\
    \ in function 'candidate'\\n\\t/tmp/tmp79hr56wi.lua:19: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception

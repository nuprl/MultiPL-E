name: HumanEval_51_remove_vowels
language: lua
prompt: "-- remove_vowels is a function that takes string and returns string without\
  \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n-- 'bcdf'\n\
  -- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n-- 'B'\n--\
  \ >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
  nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
  \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
  \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
  \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  return text:gsub('[aeiou]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        local is_vowel = false\n        for _, vowel in ipairs(vowels) do\n\
    \            if char == vowel then\n                is_vowel = true\n        \
    \        break\n            end\n        end\n        if not is_vowel then\n \
    \           result = result .. char\n        end\n    end\n    return result\n\
    end", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        local is_vowel\
    \ = false\n        for _, vowel in ipairs(vowels) do\n            if char == vowel\
    \ then\n                is_vowel = true\n                break\n            end\n\
    \        end\n        if not is_vowel then\n            new_text = new_text ..\
    \ char\n        end\n    end\n    return new_text\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for\
    \ i = 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            new_text = new_text .. char\n        end\n    end\n\
    \    return new_text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", " \
    \   return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "  return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        local is_vowel\
    \ = false\n        for j = 1, #vowels do\n            if char == vowels[j] then\n\
    \                is_vowel = true\n                break\n            end\n   \
    \     end\n        if not is_vowel then\n            result = result .. char\n\
    \        end\n    end\n    return result\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n    for i =\
    \ 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            result = result .. char\n        end\n    end\n    return\
    \ result\nend", "  return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "  return string.gsub(text,\
    \ '[aeiouAEIOU]', '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1, #text do\n    \
    \    local char = text:sub(i, i)\n        local is_vowel = false\n        for\
    \ j = 1, #vowels do\n            if char == vowels[j] then\n                is_vowel\
    \ = true\n                break\n            end\n        end\n        if not\
    \ is_vowel then\n            new_text = new_text .. char\n        end\n    end\n\
    \    return new_text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ result = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    local text = text:gsub('[aeiouAEIOU]',\
    \ '')\n    return text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend",
  "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        local is_vowel = false\n        for _, vowel in ipairs(vowels) do\n\
    \            if char == vowel then\n                is_vowel = true\n        \
    \        break\n            end\n        end\n        if not is_vowel then\n \
    \           result = result .. char\n        end\n    end\n    return result\n\
    end", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for\
    \ i = 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            new_text = new_text .. char\n        end\n    end\n\
    \    return new_text\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'}\n    local result = ''\n    for i = 1, #text do\n      \
    \  local c = text:sub(i, i)\n        if not table.contains(vowels, c) then\n \
    \           result = result .. c\n        end\n    end\n    return result\nend",
  "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i\
    \ = 1, #text do\n        local c = text:sub(i, i)\n        if not table.contains(vowels,\
    \ c) then\n            new_text = new_text .. c\n        end\n    end\n    return\
    \ new_text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend", "    return string.gsub(text,\
    \ '[aeiouAEIOU]', '')\nend", "  return text:gsub('[aeiouAEIOU]', '')\nend", " \
    \   local vowels = 'aeiouAEIOU'\n    local result = ''\n    for i = 1, #text do\n\
    \        local c = text:sub(i, i)\n        if not vowels:find(c) then\n      \
    \      result = result .. c\n        end\n    end\n    return result\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ new_text = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        if not vowels[char] then\n            new_text = new_text .. char\n \
    \       end\n    end\n    return new_text\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        if not table.contains(vowels, char) then\n         \
    \   new_text = new_text .. char\n        end\n    end\n    return new_text\nend",
  "  return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local c = text:sub(i, i)\n        local is_vowel\
    \ = false\n        for _, v in ipairs(vowels) do\n            if c == v then\n\
    \                is_vowel = true\n                break\n            end\n   \
    \     end\n        if not is_vowel then\n            result = result .. c\n  \
    \      end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        local is_vowel = false\n        for _, v in ipairs(vowels) do\n\
    \            if char == v then\n                is_vowel = true\n            \
    \    break\n            end\n        end\n        if not is_vowel then\n     \
    \       result = result .. char\n        end\n    end\n    return result\nend",
  "    return string.gsub(text, '[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        local is_vowel = false\n        for _, vowel in ipairs(vowels)\
    \ do\n            if char == vowel then\n                is_vowel = true\n   \
    \             break\n            end\n        end\n        if not is_vowel then\n\
    \            new_text = new_text .. char\n        end\n    end\n    return new_text\n\
    end", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return string.gsub(text,\
    \ '[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ result = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    local vowels =\
    \ 'aeiouAEIOU'\n    local text_without_vowels = ''\n    for i = 1, #text do\n\
    \        local char = text:sub(i, i)\n        if not vowels:find(char) then\n\
    \            text_without_vowels = text_without_vowels .. char\n        end\n\
    \    end\n    return text_without_vowels\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not vowels[char] then\n            result = result .. char\n\
    \        end\n    end\n    return result\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i\
    \ = 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            new_text = new_text .. char\n        end\n    end\n\
    \    return new_text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ new_text = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        if not table.contains(vowels, char) then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n\
    \  local result = ''\n  for i = 1, #text do\n    local char = text:sub(i, i)\n\
    \    if not table.contains(vowels, char) then\n      result = result .. char\n\
    \    end\n  end\n  return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return string.gsub(text, '[aeiouAEIOU]', '')\nend", "    return\
    \ text:gsub('[aeiou]', '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1, #text do\n\
    \        local letter = text:sub(i, i)\n        if not table.contains(vowels,\
    \ letter) then\n            new_text = new_text .. letter\n        end\n    end\n\
    \    return new_text\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'}\n    local result = ''\n    for i = 1, #text do\n      \
    \  if not contains(vowels, text:sub(i, i)) then\n            result = result ..\
    \ text:sub(i, i)\n        end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiou]', '')\nend", "    local vowels = 'aeiouAEIOU'\n\
    \    local result = text:gsub('[aeiouAEIOU]', '')\n    return result\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ result = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    local vowels =\
    \ 'aeiouAEIOU'\n    local new_text = ''\n    for i = 1, #text do\n        local\
    \ char = text:sub(i, i)\n        if not vowels:find(char) then\n            new_text\
    \ = new_text .. char\n        end\n    end\n    return new_text\nend", "    return\
    \ string.gsub(text, '[aeiouAEIOU]', '')\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiou]', '')\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "  local result = ''\n  for i = 1, #text do\n    local c = text:sub(i,\
    \ i)\n    if not is_vowel(c) then\n      result = result .. c\n    end\n  end\n\
    \  return result\nend", "    local result = ''\n    for i = 1, #text do\n    \
    \    local c = text:sub(i, i)\n        if not is_vowel(c) then\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = 'aeiouAEIOU'\n    local new_text = ''\n    for\
    \ i = 1, #text do\n        local char = text:sub(i, i)\n        if not vowels:find(char)\
    \ then\n            new_text = new_text .. char\n        end\n    end\n    return\
    \ new_text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result\
    \ = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n       \
    \ if not table.contains(vowels, char) then\n            result = result .. char\n\
    \        end\n    end\n    return result\nend", "  local result = ''\n  for i\
    \ = 1, #text do\n    local char = text:sub(i, i)\n    if not is_vowel(char) then\n\
    \      result = result .. char\n    end\n  end\n  return result\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result\
    \ = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n       \
    \ if not vowels[char] then\n            result = result .. char\n        end\n\
    \    end\n    return result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1, #text do\n\
    \        local char = text:sub(i, i)\n        if not table.contains(vowels, char)\
    \ then\n            new_text = new_text .. char\n        end\n    end\n    return\
    \ new_text\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char\
    \ = text:sub(i, i)\n        if not table.contains(vowels, char) then\n       \
    \     result = result .. char\n        end\n    end\n    return result\nend",
  "    return text:gsub('[aeiou]', '')\nend", "    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1,\
    \ #text do\n        local char = text:sub(i, i)\n        local is_vowel = false\n\
    \        for _, vowel in ipairs(vowels) do\n            if char == vowel then\n\
    \                is_vowel = true\n                break\n            end\n   \
    \     end\n        if not is_vowel then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "  return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return string.gsub(text, '[aeiouAEIOU]', '')\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result\
    \ = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n       \
    \ if not table.contains(vowels, char) then\n            result = result .. char\n\
    \        end\n    end\n    return result\nend", "  local vowels = 'aeiouAEIOU'\n\
    \  local new_text = ''\n  for i = 1, #text do\n    local char = text:sub(i, i)\n\
    \    if not vowels:find(char) then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend",
  "  return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1,\
    \ #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            new_text = new_text .. char\n        end\n    end\n\
    \    return new_text\nend", "  return text:gsub('[aeiouAEIOU]', '')\nend", " \
    \   return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n    for i =\
    \ 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            result = result .. char\n        end\n    end\n    return\
    \ result\nend", "\treturn text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "\tlocal vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n\tlocal new_text = ''\n\tfor i = 1, #text\
    \ do\n\t\tlocal char = text:sub(i, i)\n\t\tlocal is_vowel = false\n\t\tfor j =\
    \ 1, #vowels do\n\t\t\tif char == vowels[j] then\n\t\t\t\tis_vowel = true\n\t\t\
    \t\tbreak\n\t\t\tend\n\t\tend\n\t\tif not is_vowel then\n\t\t\tnew_text = new_text\
    \ .. char\n\t\tend\n\tend\n\treturn new_text\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        if not table.contains(vowels, char) then\n         \
    \   new_text = new_text .. char\n        end\n    end\n    return new_text\nend",
  "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local ch = text:sub(i, i)\n        if not table.contains(vowels,\
    \ ch) then\n            result = result .. ch\n        end\n    end\n    return\
    \ result\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local result = ''\n    for i = 1, #text do\n        local char\
    \ = text:sub(i, i)\n        if not is_vowel(char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    local vowels =\
    \ {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    local result = ''\n    for i\
    \ = 1, #text do\n        local c = text:sub(i, i)\n        if not is_vowel(c)\
    \ then\n            result = result .. c\n        end\n    end\n    return result\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n\
    \    local new_text = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            new_text =\
    \ new_text .. char\n        end\n    end\n    return new_text\nend", "    return\
    \ text:gsub('[aeiouAEIOU]', '')\nend", "\tlocal vowels = {'a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U'}\n\tlocal new_text = ''\n\tfor i = 1, #text do\n\
    \t\tlocal char = text:sub(i, i)\n\t\tif not table.contains(vowels, char) then\n\
    \t\t\tnew_text = new_text .. char\n\t\tend\n\tend\n\treturn new_text\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ new_text = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        local is_vowel = false\n        for _, vowel in ipairs(vowels) do\n \
    \           if char == vowel then\n                is_vowel = true\n         \
    \       break\n            end\n        end\n        if not is_vowel then\n  \
    \          new_text = new_text .. char\n        end\n    end\n    return new_text\n\
    end", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n    for\
    \ i = 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            result = result .. char\n        end\n    end\n    return\
    \ result\nend", "    return string.gsub(text, '[aeiouAEIOU]', '')\nend", "   \
    \ return text:gsub('[aeiouAEIOU]', '')\nend", "    return string.gsub(text, '[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ contains(vowels, char) then\n            result = result .. char\n        end\n\
    \    end\n    return result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1, #text do\n\
    \        local char = text:sub(i, i)\n        if not table.contains(vowels, char)\
    \ then\n            new_text = new_text .. char\n        end\n    end\n    return\
    \ new_text\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char\
    \ = text:sub(i, i)\n        if not table.contains(vowels, char) then\n       \
    \     result = result .. char\n        end\n    end\n    return result\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local\
    \ result = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n\
    \        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    local vowels =\
    \ {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n\
    \    for i = 1, #text do\n        if not contains(vowels, text:sub(i, i)) then\n\
    \            new_text = new_text .. text:sub(i, i)\n        end\n    end\n   \
    \ return new_text\nend", "  return text:gsub('[aeiouAEIOU]', '')\nend", "    return\
    \ text:gsub('[aeiouAEIOU]', '')\nend", "  return text:gsub('[aeiouAEIOU]', '')\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n\
    \    local new_text = ''\n    for i = 1, #text do\n        local c = text:sub(i,\
    \ i)\n        if not table.contains(vowels, c) then\n            new_text = new_text\
    \ .. c\n        end\n    end\n    return new_text\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for\
    \ i = 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            new_text = new_text .. char\n        end\n    end\n\
    \    return new_text\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for i = 1, #text do\n    \
    \    local char = text:sub(i, i)\n        if not table.contains(vowels, char)\
    \ then\n            new_text = new_text .. char\n        end\n    end\n    return\
    \ new_text\nend", "    return text:gsub('[aeiou]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        if not vowels[char] then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local letter\
    \ = text:sub(i, i)\n        if not table.contains(vowels, letter) then\n     \
    \       new_text = new_text .. letter\n        end\n    end\n    return new_text\n\
    end", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels = 'aeiouAEIOU'\n\
    \    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not vowels:find(char) then\n            result = result .. char\n\
    \        end\n    end\n    return result\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

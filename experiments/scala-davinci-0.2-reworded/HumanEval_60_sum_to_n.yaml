name: HumanEval_60_sum_to_n
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // sum_to_n is a function that sums numbers from 1 to n.\n    // >>> sumToN((30l))\n\
  \    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n    // >>> sumToN((5l))\n\
  \    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n    // >>> sumToN((1l))\n\
  \    // (1l)\n    def sumToN(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sumToN((1l)) == (1l));\n\
  \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l))\
  \ == (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
completions: ['        return (n * (n + 1)) / 2', '        return (n * (n + 1)) /
    2', "        var sum : Long = 0\n        var i : Long = 1\n        while (i <=\
    \ n) {\n            sum = sum + i\n            i = i + 1\n        }\n        return\
    \ sum", '        return n * (n + 1) / 2', "        var sum = 0l\n        for (i\
    \ <- 1l to n) {\n            sum += i\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', '        return n * (n + 1) / 2', '        return (n * (n
    + 1)) / 2', "        var sum = 0l\n        for (i <- 1l to n) {\n            sum\
    \ += i\n        }\n        return sum", '        return (n * (n + 1)) / 2', '        n
    * (n + 1) / 2', "        var sum : Long = 0\n        var i : Long = 1\n      \
    \  while (i <= n) {\n            sum = sum + i\n            i = i + 1\n      \
    \  }\n        return sum", "        // BEGIN SOLUTION\n        n * (n + 1) / 2\n\
    \        // END SOLUTION", '        return n * (n + 1) / 2', "        if (n ==\
    \ 1) {\n            return 1\n        }\n        else {\n            return n\
    \ + sumToN(n - 1)\n        }", '        return (n * (n + 1)) / 2', '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', "        var sum : Long\
    \ = 0\n        var i : Long = 1\n        while (i <= n) {\n            sum = sum\
    \ + i\n            i = i + 1\n        }\n        return sum", "        var sum\
    \ : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n           \
    \ sum = sum + i\n            i = i + 1\n        }\n        return sum", "    \
    \    var sum : Long = 0l\n        for (i <- 1l to n) {\n            sum += i\n\
    \        }\n        return sum", '        return (n * (n + 1)) / 2', "       \
    \ // Insert your code here.\n        // Change the return value.\n        return\
    \ 0l", '        return (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2',
  "        var sum : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n\
    \            sum = sum + i\n            i = i + 1\n        }\n        return sum",
  "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum\
    \ += i\n        }\n        return sum", '        return (n * (n + 1)) / 2', " \
    \       var sum = 0l\n        for (i <- 1l to n) {\n            sum += i\n   \
    \     }\n        return sum", '        return n * (n + 1) / 2', '        return
    (n * (n + 1)) / 2', "        if (n == 1) {\n            return 1\n        }\n\
    \        else {\n            return n + sumToN(n - 1)\n        }", '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n
    + 1)) / 2', "        // BEGIN SOLUTION\n        n * (n + 1) / 2\n        // END\
    \ SOLUTION", '        return n * (n + 1) / 2', '        return n * (n + 1) / 2',
  '        return (n * (n + 1)) / 2', "        if (n == 1) 1\n        else n + sumToN(n\
    \ - 1)", '        return (n * (n + 1)) / 2', "        var sum = 0l\n        for\
    \ (i <- 1l to n) {\n            sum += i\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', "        if (n == 1) {\n            return 1\n        }\n\
    \        else {\n            return n + sumToN(n - 1)\n        }", "        var\
    \ sum : Long = 0l\n        var i : Long = 1l\n        while (i <= n) {\n     \
    \       sum = sum + i\n            i = i + 1l\n        }\n        return sum",
  '        n * (n + 1) / 2', '        return (n * (n + 1)) / 2', '        return (n
    * (n + 1)) / 2', '        return (n * (n + 1)) / 2', "        if (n == 1) {\n\
    \            1\n        } else {\n            n + sumToN(n - 1)\n        }", " \
    \       if (n == 1) {\n            return 1\n        }\n        else {\n     \
    \       return n + sumToN(n - 1)\n        }", '        return (n * (n + 1)) /
    2', '        return (n * (n + 1)) / 2', "        var sum : Long = 0\n        var\
    \ i : Long = 1\n        while (i <= n) {\n            sum = sum + i\n        \
    \    i = i + 1\n        }\n        return sum", "        if (n == 1) {\n     \
    \       return 1\n        }\n        else {\n            return n + sumToN(n -\
    \ 1)\n        }", '        return n * (n + 1) / 2', '        return n * (n + 1)
    / 2', "        var sum : Long = 0\n        var i : Long = 1\n        while (i\
    \ <= n) {\n            sum = sum + i\n            i = i + 1\n        }\n     \
    \   return sum", '        n * (n + 1) / 2', "        var sum : Long = 0\n    \
    \    for (i <- 1l to n) {\n            sum += i\n        }\n        return sum",
  '        return (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', "        var sum : Long\
    \ = 0\n        var i : Long = 1\n        while (i <= n) {\n            sum = sum\
    \ + i\n            i = i + 1\n        }\n        return sum", "        if (n ==\
    \ 1) {\n            return 1\n        }\n        else {\n            return n\
    \ + sumToN(n - 1)\n        }", "        if (n == 1) {\n            return 1\n\
    \        }\n        return n + sumToN(n - 1)", "        if (n == 1) {\n      \
    \      return 1\n        }\n        else {\n            return n + sumToN(n -\
    \ 1)\n        }", "        if (n == 1) {\n            return 1\n        }\n  \
    \      return n + sumToN(n - 1)", "        if (n == 1) {\n            return 1\n\
    \        }\n        else {\n            return n + sumToN(n - 1)\n        }",
  "        if (n == 1) {\n            return 1\n        }\n        else {\n      \
    \      return n + sumToN(n - 1)\n        }", '        return (n * (n + 1)) / 2',
  '        return n * (n + 1) / 2', '        return (n * (n + 1)) / 2', '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', '        n * (n + 1) /
    2', "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n         \
    \   sum += i\n        }\n        return sum", '        n * (n + 1) / 2', '        return
    (n * (n + 1)) / 2', "        var sum : Long = 0\n        var i : Long = 1\n  \
    \      while (i <= n) {\n            sum = sum + i\n            i = i + 1\n  \
    \      }\n        return sum", '        return n * (n + 1) / 2', '        return
    n * (n + 1) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n
    + 1)) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n + 1))
    / 2', '        return (n * (n + 1)) / 2', "        var sum = 0l\n        for (i\
    \ <- 1l to n) {\n            sum += i\n        }\n        return sum", '        n
    * (n + 1) / 2', '        return n * (n + 1) / 2', '        return (n * (n + 1))
    / 2', "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n       \
    \     sum += i\n        }\n        return sum", '        return (n * (n + 1))
    / 2', '        return (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2',
  '        return (n * (n + 1)) / 2', "        var sum = 0l\n        for (i <- 1l\
    \ to n) {\n            sum += i\n        }\n        return sum", '        return
    n * (n + 1) / 2', '        return (n * (n + 1)) / 2', "        var sum : Long\
    \ = 0\n        var i : Long = 1\n        while (i <= n) {\n            sum = sum\
    \ + i\n            i = i + 1\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', "        var sum : Long = 0l\n        var i : Long = 1l\n\
    \        while (i <= n) {\n            sum = sum + i\n            i = i + 1l\n\
    \        }\n        return sum", '        return n * (n + 1) / 2', "        if\
    \ (n == 1) {\n            return 1\n        }\n        else {\n            return\
    \ n + sumToN(n - 1)\n        }", '        return (n * (n + 1)) / 2', '        return
    n * (n + 1) / 2', '        return n * (n + 1) / 2', '        return (n * (n +
    1)) / 2', '        return (n * (n + 1)) / 2', "        var sum : Long = 0l\n \
    \       var i : Long = 1l\n        while (i <= n) {\n            sum = sum + i\n\
    \            i = i + 1l\n        }\n        return sum", '        return (n *
    (n + 1)) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n + 1))
    / 2', '        return (n * (n + 1)) / 2', "        var sum : Long = 0\n      \
    \  var i : Long = 1\n        while (i <= n) {\n            sum = sum + i\n   \
    \         i = i + 1\n        }\n        return sum", '        return (n * (n +
    1)) / 2', "        var sum : Long = 0\n        var i : Long = 1\n        while\
    \ (i <= n) {\n            sum = sum + i\n            i = i + 1\n        }\n  \
    \      return sum", "        if (n == 1) {\n            return 1\n        }\n\
    \        else {\n            return n + sumToN(n - 1)\n        }", "        if\
    \ (n == 1) {\n            return 1\n        }\n        else {\n            return\
    \ n + sumToN(n - 1)\n        }", "        var sum = 0l\n        for (i <- 1l to\
    \ n) {\n            sum += i\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', "        var sum : Long\
    \ = 0\n        var i : Long = 1\n        while (i <= n) {\n            sum = sum\
    \ + i\n            i = i + 1\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', '        return n * (n + 1) / 2', '        return n * (n +
    1) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2',
  '        return (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', "      \
    \  // BEGIN SOLUTION\n        n * (n + 1) / 2\n        // END SOLUTION", "   \
    \     var sum : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n\
    \            sum = sum + i\n            i = i + 1\n        }\n        return sum",
  '        return (n * (n + 1)) / 2', '        n * (n + 1) / 2', '        return n
    * (n + 1) / 2', '        return n * (n + 1) / 2', '        return (n * (n + 1))
    / 2', "        var sum = 0l\n        for (i <- 1l to n) {\n            sum +=\
    \ i\n        }\n        return sum", '        return (n * (n + 1)) / 2', '        return
    (n * (n + 1)) / 2', "        var sum : Long = 0\n        for (i <- 1l to n) {\n\
    \            sum += i\n        }\n        return sum", '        return (n * (n
    + 1)) / 2', "        val sum = (n * (n + 1)) / 2\n        return sum", "     \
    \   var sum : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n \
    \           sum = sum + i\n            i = i + 1\n        }\n        return sum",
  '        n * (n + 1) / 2', '        return (n * (n + 1)) / 2', "        var sum\
    \ : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n           \
    \ sum = sum + i\n            i = i + 1\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', "        var sum : Long = 0l\n        for (i <- 1l to n) {\n\
    \            sum += i\n        }\n        return sum", '        return (n * (n
    + 1)) / 2', '        return (n * (n + 1)) / 2', '        return n * (n + 1) /
    2', '        n * (n + 1) / 2', '        return n * (n + 1) / 2', '        return
    (n * (n + 1)) / 2', "        var sum : Long = 0\n        for (i <- 1l to n) {\n\
    \            sum += i\n        }\n        return sum", '        return (n * (n
    + 1)) / 2', '        return (n * (n + 1)) / 2', "        if (n == 1) {\n     \
    \       return 1\n        }\n        return n + sumToN(n - 1)", '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n
    + 1)) / 2', '        return (n * (n + 1)) / 2', "        var sum : Long = 0\n\
    \        var i : Long = 1\n        while (i <= n) {\n            sum = sum + i\n\
    \            i = i + 1\n        }\n        return sum", "        if (n == 1) {\n\
    \            return 1\n        }\n        return n + sumToN(n - 1)", '        return
    n * (n + 1) / 2', "        if (n == 1) {\n            return 1\n        }\n  \
    \      return n + sumToN(n - 1)", "        if (n == 1) {\n            return 1\n\
    \        }\n        else {\n            return n + sumToN(n - 1)\n        }",
  '        return (n * (n + 1)) / 2', "        var sum = 0l\n        for (i <- 1l\
    \ to n) {\n            sum += i\n        }\n        return sum", '        return
    n * (n + 1) / 2', '        return (n * (n + 1)) / 2', "        if (n == 1) {\n\
    \            return 1\n        }\n        else {\n            return n + sumToN(n\
    \ - 1)\n        }", "        var sum : Long = 0\n        var i : Long = 1\n  \
    \      while (i <= n) {\n            sum = sum + i\n            i = i + 1\n  \
    \      }\n        return sum", '        return (n * (n + 1)) / 2', "        var\
    \ sum : Long = 0\n        for (i <- 1l to n) {\n            sum += i\n       \
    \ }\n        return sum", '        return (n * (n + 1)) / 2', '        return
    n * (n + 1) / 2', '        return n * (n + 1) / 2', '        return (n * (n +
    1)) / 2', '        return (n * (n + 1)) / 2', '        return n * (n + 1) / 2',
  '        return (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', "      \
    \  if (n == 1) {\n            return 1\n        }\n        return n + sumToN(n\
    \ - 1)", '        return (n * (n + 1)) / 2', "        var sum : Long = 0\n   \
    \     var i : Long = 1\n        while (i <= n) {\n            sum = sum + i\n\
    \            i = i + 1\n        }\n        return sum", "        var sum : Long\
    \ = 0\n        var i : Long = 1\n        while (i <= n) {\n            sum = sum\
    \ + i\n            i = i + 1\n        }\n        return sum", "        var sum\
    \ = 0l\n        for (i <- 1l to n) {\n            sum += i\n        }\n      \
    \  return sum", "        val n_plus_1 = n + 1\n        n * n_plus_1 / 2", "  \
    \      var sum : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n\
    \            sum = sum + i\n            i = i + 1\n        }\n        return sum",
  '        return n * (n + 1) / 2', "        if (n == 1) {\n            return 1\n\
    \        }\n        else {\n            return n + sumToN(n - 1)\n        }",
  '        return n * (n + 1) / 2', '        return (n * (n + 1)) / 2', "        var\
    \ sum : Long = 0\n        var i : Long = 1\n        while (i <= n) {\n       \
    \     sum = sum + i\n            i = i + 1\n        }\n        return sum", '        return
    (n * (n + 1)) / 2', '        return (n * (n + 1)) / 2', '        return (n * (n
    + 1)) / 2']
stop_tokens:
- "\n    }\n"

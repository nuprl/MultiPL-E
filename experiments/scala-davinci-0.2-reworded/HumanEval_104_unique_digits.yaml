name: HumanEval_104_unique_digits
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of positive integers x. return a sorted list of all \n    //\
  \ elements that hasn't any even digit.\n    // Note: Returned list should be sorted\
  \ in increasing order.\n    // For example:\n    // >>> uniqueDigits((List[Long](15l.toLong,\
  \ 33l.toLong, 1422l.toLong, 1l.toLong)))\n    // (List[Long](1l.toLong, 15l.toLong,\
  \ 33l.toLong))\n    // >>> uniqueDigits((List[Long](152l.toLong, 323l.toLong, 1422l.toLong,\
  \ 10l.toLong)))\n    // (List[Long]())\n    def uniqueDigits(x : List[Long]) : List[Long]\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(uniqueDigits((List[Long](15l.toLong,\
  \ 33l.toLong, 1422l.toLong, 1l.toLong))).equals((List[Long](1l.toLong, 15l.toLong,\
  \ 33l.toLong))));\n    assert(uniqueDigits((List[Long](152l.toLong, 323l.toLong,\
  \ 1422l.toLong, 10l.toLong))).equals((List[Long]())));\n    assert(uniqueDigits((List[Long](12345l.toLong,\
  \ 2033l.toLong, 111l.toLong, 151l.toLong))).equals((List[Long](111l.toLong, 151l.toLong))));\n\
  \    assert(uniqueDigits((List[Long](135l.toLong, 103l.toLong, 31l.toLong))).equals((List[Long](31l.toLong,\
  \ 135l.toLong))));\n    }\n\n}\n"
completions: ["        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[Long]()\n        for\
    \ (i <- x) {\n            if (i.toString.filter(c => c == '2' || c == '4' || c\
    \ == '6' || c == '8').length == 0) {\n                result = result :+ i\n \
    \           }\n        }\n        result.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            if (i.toString.filter(c\
    \ => c.isDigit && c.asDigit % 2 == 0).isEmpty) {\n                result = result\
    \ :+ i\n            }\n        }\n        result.sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        val l = ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) l += i\n        }\n        l.toList.sorted", "     \
    \   // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var result = new ListBuffer[Long]()\n        for\
    \ (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n\
    \                result += i\n            }\n        }\n        result.toList.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(y => y.toString.forall(z => z % 2 !=\
    \ 0)).sorted", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var result = List[Long]()\n \
    \       for (i <- x) {\n            var flag = true\n            var temp = i\n\
    \            while (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n \
    \                   flag = false\n                    temp = 0\n             \
    \   }\n                else temp /= 10\n            }\n            if (flag) result\
    \ = result :+ i\n        }\n        result.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else temp /= 10\n           \
    \ }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        def isUnique(n : Long) : Boolean = {\n       \
    \     var m = n\n            while (m > 0) {\n                if (m % 2 == 0)\
    \ return false\n                m /= 10\n            }\n            true\n   \
    \     }\n        x.filter(isUnique).sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else temp /= 10\n           \
    \ }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        def isUnique(x : Long) : Boolean = {\n       \
    \     var isUnique = true\n            var xs = x.toString\n            for (i\
    \ <- 0 until xs.length) {\n                if (xs(i) % 2 == 0) {\n           \
    \         isUnique = false\n                }\n            }\n            isUnique\n\
    \        }\n        x.filter(isUnique).sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else temp /= 10\n           \
    \ }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else {\n                    temp /= 10\n                }\n            }\n\
    \            if (flag) {\n                result = result :+ i\n            }\n\
    \        }\n        result.sorted", "        // Fill up this function body\n \
    \       // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = new ListBuffer[Long]()\n        for (i <- x) {\n       \
    \     var flag = true\n            var temp = i\n            while (temp > 0)\
    \ {\n                if (temp % 10 % 2 == 0) {\n                    flag = false\n\
    \                    temp = 0\n                }\n                else {\n   \
    \                 temp /= 10\n                }\n            }\n            if\
    \ (flag) {\n                result += i\n            }\n        }\n        result.toList.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.exists(_.isDigit) && !i.toString.exists(_.isDigit\
    \ && _.asDigit % 2 == 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else {\n                    temp /=\
    \ 10\n                }\n            }\n            if (flag) {\n            \
    \    result = result :+ i\n            }\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(y => y.toString.forall(z => z.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var lst = List[Long]()\n\
    \        for (i <- x) {\n            var flag = true\n            var num = i\n\
    \            while (num > 0) {\n                if (num % 10 % 2 == 0) {\n   \
    \                 flag = false\n                    num = 0\n                }\n\
    \                else num /= 10\n            }\n            if (flag) lst = lst\
    \ :+ i\n        }\n        lst.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(i\
    \ => i.toString.forall(c => c.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else temp /= 10\n  \
    \          }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) result = result\
    \ :+ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        def isUnique(n\
    \ : Long) : Boolean = {\n            var num = n\n            while (num > 0)\
    \ {\n                if (num % 2 == 0) return false\n                num /= 10\n\
    \            }\n            true\n        }\n        x.filter(isUnique).sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else temp /= 10\n  \
    \          }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var l = List[Long]()\n        for (i <- x) {\n\
    \            var flag = true\n            var temp = i\n            while (temp\
    \ > 0) {\n                if (temp % 10 % 2 == 0) {\n                    flag\
    \ = false\n                    temp = 0\n                }\n                else\
    \ temp /= 10\n            }\n            if (flag) l = l :+ i\n        }\n   \
    \     l.sorted", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var result = new ListBuffer[Long]()\n\
    \        for (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2\
    \ != 0)) result += i\n        }\n        result.toList.sorted", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var j = i\n            while (j > 0) {\n               \
    \ if (j % 2 == 0) {\n                    flag = false\n                    j =\
    \ 0\n                }\n                j /= 10\n            }\n            if\
    \ (flag) result = result :+ i\n        }\n        result.sorted", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n                result\
    \ = result :+ i\n            }\n        }\n        result.sorted", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         var flag = true\n            var temp = i\n            while (temp >\
    \ 0) {\n                if (temp % 10 % 2 == 0) {\n                    flag =\
    \ false\n                    temp = 0\n                }\n                else\
    \ temp /= 10\n            }\n            if (flag) result = result :+ i\n    \
    \    }\n        result.sorted", "        // Fill up this function body\n     \
    \   // You can add another function as well, if required\n        var result =\
    \ List[Long]()\n        for (i <- x) {\n            var flag = true\n        \
    \    var temp = i\n            while (temp > 0) {\n                if (temp %\
    \ 10 % 2 == 0) {\n                    flag = false\n                    temp =\
    \ 0\n                }\n                else temp /= 10\n            }\n     \
    \       if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       x.filter(n => n.toString.forall(c => (c - '0') % 2 == 1)).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(_.asDigit % 2 != 0)) {\n              \
    \  result = result :+ i\n            }\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        def isUnique(n : Long) : Boolean = {\n       \
    \     var m = n\n            while (m > 0) {\n                if (m % 2 == 0)\
    \ return false\n                m /= 10\n            }\n            true\n   \
    \     }\n        x.filter(isUnique).sorted", '        x.filter(y => y.toString.forall(z
    => z.asDigit % 2 != 0)).sorted', "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", '        x.filter(y
    => y.toString.forall(z => z.toString.toInt % 2 != 0)).sorted', '        x.filter(i
    => i.toString.forall(j => j.toString.toInt % 2 != 0)).sorted', "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        x.filter(n => n.toString.forall(c => c.asDigit % 2 != 0)).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else {\n                    temp /= 10\n                }\n            }\n\
    \            if (flag) {\n                result = result :+ i\n            }\n\
    \        }\n        result.sorted", "        // Fill up this function body\n \
    \       // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else {\n                    temp\
    \ /= 10\n                }\n            }\n            if (flag) {\n         \
    \       result += i\n            }\n        }\n        result.sorted.toList",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) result = result\
    \ :+ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result:List[Long] = List()\n        for(i <- x){\n            if(i.toString.forall(x\
    \ => x.asDigit % 2 != 0)){\n                result = result :+ i\n           \
    \ }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var res = new ListBuffer[Long]()\n        for (i <- x) {\n          \
    \  if (i.toString.forall(c => c.asDigit % 2 != 0)) res += i\n        }\n     \
    \   res.toList.sorted", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        var result = new ListBuffer[Long]()\n\
    \        for (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2\
    \ != 0)) {\n                result += i\n            }\n        }\n        result.toList.sorted",
  '        x.filter(y => y.toString.forall(z => z.toString.toInt % 2 != 0)).sorted',
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) list = list :+ i\n\
    \        }\n        list.sorted", "        // Fill up this function body\n   \
    \     // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        val result\
    \ = x.filter(y => y.toString.forall(z => z.asDigit % 2 != 0))\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = new ListBuffer[Long]()\n        for\
    \ (i <- x) {\n            var flag = true\n            var temp = i\n        \
    \    while (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n         \
    \           flag = false\n                    temp = 0\n                }\n  \
    \              else temp /= 10\n            }\n            if (flag) result +=\
    \ i\n        }\n        result.toList.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var num = i\n            while (num > 0) {\n                if (num\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    num\
    \ = 0\n                }\n                else num /= 10\n            }\n    \
    \        if (flag) result = result :+ i\n        }\n        result.sorted", '        x.filter(y
    => !y.toString.exists(z => z % 2 == 0)).sorted', "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ x.filter(x => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", '        x.filter(y
    => !y.toString.exists(z => z.toString.toInt % 2 == 0)).sorted', "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var ans = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else temp /= 10\n  \
    \          }\n            if (flag) ans = ans :+ i\n        }\n        ans.sorted",
  '        x.filter(x => x.toString.forall(x => x.asDigit % 2 != 0)).sorted', "  \
    \      // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.filter(c => c % 2 == 0).length == 0) result =\
    \ result :+ i\n        }\n        result.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ val evenDigits = List(0, 2, 4, 6, 8)\n        val result = x.filter(y => !y.toString.exists(evenDigits.contains(_)))\n\
    \        result.sorted", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        var res = List[Long]()\n\
    \        for (i <- x) {\n            var flag = true\n            var num = i\n\
    \            while (num > 0) {\n                if (num % 10 % 2 == 0) {\n   \
    \                 flag = false\n                    num = 0\n                }\n\
    \                else num /= 10\n            }\n            if (flag) res = res\
    \ :+ i\n        }\n        res.sorted", '        x.filter(y => y.toString.forall(c
    => c.asDigit % 2 != 0)).sorted', "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var l = new\
    \ ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                l += i\n            }\n        }\n\
    \        l.toList.sorted", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        var result = List[Long]()\n\
    \        for (i <- x) {\n            var isUnique = true\n            var temp\
    \ = i\n            while (temp > 0) {\n                if (temp % 2 == 0) {\n\
    \                    isUnique = false\n                    temp = 0\n        \
    \        }\n                else {\n                    temp /= 10\n         \
    \       }\n            }\n            if (isUnique) {\n                result\
    \ = result :+ i\n            }\n        }\n        result.sorted", '        x.filter(y
    => y.toString.forall(z => z.asDigit % 2 != 0)).sorted', "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        x.filter(y => y.toString.forall(z => z.asDigit % 2 != 0)).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.contains(\"2\") || i.toString.contains(\"4\")\
    \ || i.toString.contains(\"6\") || i.toString.contains(\"8\") || i.toString.contains(\"\
    0\")) {\n                // do nothing\n            } else {\n               \
    \ result = result :+ i\n            }\n        }\n        result.sorted", "  \
    \      // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result : List[Long] = List()\n        for\
    \ (i <- x) {\n            if (i.toString.contains(\"2\") || i.toString.contains(\"\
    4\") || i.toString.contains(\"6\") || i.toString.contains(\"8\") || i.toString.contains(\"\
    0\")) {\n            } else {\n                result = result :+ i\n        \
    \    }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result += i\n            }\n    \
    \    }\n        result.toList.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", '        x.filter(y => y.toString.forall(z
    => z.toString.toInt % 2 != 0)).sorted', "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var ans\
    \ = new ListBuffer[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else temp /= 10\n           \
    \ }\n            if (flag) ans += i\n        }\n        ans.toList.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = new ListBuffer[Long]()\n        for\
    \ (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) result\
    \ += i\n        }\n        result.toList.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var l = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var j = i\n            while (j > 0) {\n                if (j % 2\
    \ == 0) {\n                    flag = false\n                    j = 0\n     \
    \           }\n                j /= 10\n            }\n            if (flag) l\
    \ = l :+ i\n        }\n        l.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(x\
    \ => x.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        def hasEvenDigit(x : Long) :\
    \ Boolean = {\n            var y = x\n            while (y > 0) {\n          \
    \      if (y % 2 == 0) return true\n                y /= 10\n            }\n \
    \           return false\n        }\n        x.filter(!hasEvenDigit(_)).sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val l = x.filter(a => a.toString.toList.forall(b\
    \ => b.toString.toInt % 2 != 0))\n        l.sorted", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var y = x.filter(x => x.toString.forall(x => x.asDigit % 2 != 0))\n \
    \       y.sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        x.filter(y => y.toString.forall(z\
    \ => z.asDigit % 2 != 0)).sorted", "        // Fill up this function body\n  \
    \      // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(y\
    \ => y.toString.forall(z => z.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        x.filter(x => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", '        x.filter(y
    => y.toString.forall(z => z.asDigit % 2 != 0)).sorted', '        x.filter(y =>
    y.toString.forall(z => z.asDigit % 2 != 0)).sorted', "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        x.filter(x => x.toString.forall(c => c.asDigit % 2 != 0)).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(x => x.toString.forall(x => x.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        def isUnique(n : Long) :\
    \ Boolean = {\n            var isUnique = true\n            var m = n\n      \
    \      while (m > 0) {\n                if (m % 2 == 0) {\n                  \
    \  isUnique = false\n                    m = 0\n                }\n          \
    \      m /= 10\n            }\n            isUnique\n        }\n        x.filter(isUnique).sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        def isUnique(n : Long) : Boolean\
    \ = {\n            var m = n\n            while (m > 0) {\n                if\
    \ (m % 2 == 0) return false\n                m /= 10\n            }\n        \
    \    return true\n        }\n        x.filter(isUnique).sorted", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else {\n           \
    \         temp /= 10\n                }\n            }\n            if (flag)\
    \ {\n                result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var res = List[Long]()\n        for (i <- x) {\n\
    \            if (i.toString.exists(c => c == '2' || c == '4' || c == '6' || c\
    \ == '8' || c == '0')) {\n            } else {\n                res = res :+ i\n\
    \            }\n        }\n        res.sorted", '        x.filter(x => x.toString.forall(x
    => x.asDigit % 2 != 0)).sorted', "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var n = i\n            while (n > 0) {\n               \
    \ if (n % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   n = 0\n                }\n                n /= 10\n            }\n       \
    \     if (flag) result = result :+ i\n        }\n        result.sorted", "   \
    \     // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var ans = List[Long]()\n        for (i <- x) {\n\
    \            var flag = true\n            var temp = i\n            while (temp\
    \ > 0) {\n                if (temp % 10 % 2 == 0) {\n                    flag\
    \ = false\n                    temp = 0\n                }\n                else\
    \ temp /= 10\n            }\n            if (flag) ans = ans :+ i\n        }\n\
    \        ans.sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[Long]()\n\
    \        for (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2\
    \ != 0)) {\n                result = result :+ i\n            }\n        }\n \
    \       result.sorted", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        def isUnique(n : Long)\
    \ : Boolean = {\n            var m = n\n            while (m > 0) {\n        \
    \        if (m % 2 == 0) return false\n                m /= 10\n            }\n\
    \            true\n        }\n        x.filter(isUnique).sorted", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         if (i.toString.forall(_.asDigit % 2 != 0)) result = result :+ i\n  \
    \      }\n        result.sorted", "        // Fill up this function body\n   \
    \     // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(x => !x.toString.exists(x => x.toString.toInt\
    \ % 2 == 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[Long]()\n\
    \        for (i <- x) {\n            var isUnique = true\n            var num\
    \ = i\n            while (num > 0) {\n                if (num % 2 == 0) {\n  \
    \                  isUnique = false\n                    num = 0\n           \
    \     }\n                else {\n                    num = num / 10\n        \
    \        }\n            }\n            if (isUnique) {\n                result\
    \ = result :+ i\n            }\n        }\n        result.sorted", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        def isUnique(n : Long) : Boolean = {\n            var temp\
    \ = n\n            while (temp > 0) {\n                if (temp % 2 == 0) return\
    \ false\n                temp /= 10\n            }\n            return true\n\
    \        }\n        return x.filter(isUnique).sorted", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var result = new ListBuffer[Long]()\n        for (i <- x) {\n       \
    \     var flag = true\n            var temp = i\n            while (temp > 0)\
    \ {\n                if (temp % 10 % 2 == 0) {\n                    flag = false\n\
    \                    temp = 0\n                }\n                else temp /=\
    \ 10\n            }\n            if (flag) result += i\n        }\n        result.toList.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        def isUnique(n\
    \ : Long) : Boolean = {\n            var m = n\n            while (m > 0) {\n\
    \                if (m % 2 == 0) return false\n                m /= 10\n     \
    \       }\n            true\n        }\n        x.filter(isUnique).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else {\n                    temp /=\
    \ 10\n                }\n            }\n            if (flag) {\n            \
    \    result = result :+ i\n            }\n        }\n        result.sorted", '        x.filter(y
    => y.toString.forall(z => z.toString.toInt % 2 != 0)).sorted', "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else temp /= 10\n  \
    \          }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  '        x.filter(y => !y.toString.exists(z => z % 2 == 0)).sorted', "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var res = new ListBuffer[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) res += i\n       \
    \ }\n        res.toList.sorted", "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val evenDigits = List(0, 2, 4, 6, 8)\n       \
    \ val uniqueDigits = x.filter(x => !x.toString.map(_.asDigit).exists(evenDigits.contains(_)))\n\
    \        uniqueDigits.sorted", "        // Fill up this function body\n      \
    \  // You can add another function as well, if required\n        var result =\
    \ new ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result += i\n            }\n    \
    \    }\n        result.toList.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(y => y.toString.forall(z => z.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[Long]()\n\
    \        for (i <- x) {\n            var flag = true\n            var temp = i\n\
    \            while (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n \
    \                   flag = false\n                    temp = 0\n             \
    \   }\n                else temp /= 10\n            }\n            if (flag) result\
    \ = result :+ i\n        }\n        result.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var l = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                l = l :+ i\n            }\n     \
    \   }\n        l.sorted", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        var result = List[Long]()\n\
    \        for (i <- x) {\n            var flag = true\n            var temp = i\n\
    \            while (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n \
    \                   flag = false\n                    temp = 0\n             \
    \   }\n                else temp /= 10\n            }\n            if (flag) result\
    \ = result :+ i\n        }\n        result.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result += i\n            }\n    \
    \    }\n        result.toList.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        def isUnique(n\
    \ : Long) : Boolean = {\n            var m = n\n            while (m > 0) {\n\
    \                if (m % 2 == 0) return false\n                m /= 10\n     \
    \       }\n            true\n        }\n        x.filter(isUnique).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", '        x.filter(y => y.toString.forall(z
    => z.toString.toInt % 2 != 0)).sorted', "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else temp /= 10\n           \
    \ }\n            if (flag) result += i\n        }\n        result.toList.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val l = x.filter(i => i.toString.forall(c => c.asDigit\
    \ % 2 != 0))\n        l.sorted", "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        x.filter(y\
    \ => y.toString.forall(z => z.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        x.filter(x\
    \ => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var res = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else temp /= 10\n  \
    \          }\n            if (flag) res = res :+ i\n        }\n        res.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(x => x.toString.forall(c => c.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = new ListBuffer[Long]()\n\
    \        for (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2\
    \ != 0)) {\n                result += i\n            }\n        }\n        result.toList.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(x => x.toString.forall(x => x.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        x.filter(x => x.toString.forall(x\
    \ => x.asDigit % 2 != 0)).sorted", "        // Fill up this function body\n  \
    \      // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.map(_.asDigit).filter(_\
    \ % 2 == 0).length == 0) {\n                result = result :+ i\n           \
    \ }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", '        x.filter(y => y.toString.forall(z
    => z.toString.toInt % 2 != 0)).sorted', "        def isUnique(n : Long) : Boolean\
    \ = {\n            def isUnique(n : Long, d : Long) : Boolean = {\n          \
    \      if (n == 0) true\n                else if (n % 10 == d) false\n       \
    \         else isUnique(n / 10, d)\n            }\n            isUnique(n, 2)\
    \ && isUnique(n, 4) && isUnique(n, 6) && isUnique(n, 8)\n        }\n        x.filter(isUnique).sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) result = result\
    \ :+ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.contains(\"\
    2\") || i.toString.contains(\"4\") || i.toString.contains(\"6\") || i.toString.contains(\"\
    8\") || i.toString.contains(\"0\")) {\n                result += i\n         \
    \   }\n        }\n        result.toList.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ x.filter(i => i.toString.forall(c => c.asDigit % 2 != 0)).sorted", "       \
    \ // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         var flag = true\n            var temp = i\n            while (temp >\
    \ 0) {\n                if (temp % 10 % 2 == 0) {\n                    flag =\
    \ false\n                    temp = 0\n                }\n                else\
    \ temp /= 10\n            }\n            if (flag) result = result :+ i\n    \
    \    }\n        result.sorted", "        // Fill up this function body\n     \
    \   // You can add another function as well, if required\n        var result =\
    \ List[Long]()\n        for (i <- x) {\n            var flag = true\n        \
    \    var j = i\n            while (j > 0) {\n                if (j % 2 == 0) {\n\
    \                    flag = false\n                    j = 0\n               \
    \ }\n                j /= 10\n            }\n            if (flag) result = result\
    \ :+ i\n        }\n        result.sorted", '        x.filter(y => y.toString.forall(z
    => z.asDigit % 2 != 0)).sorted', "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var res = new\
    \ ListBuffer[Long]()\n        for (i <- x) {\n            var flag = true\n  \
    \          var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else {\n                    temp /=\
    \ 10\n                }\n            }\n            if (flag) {\n            \
    \    res += i\n            }\n        }\n        res.toList.sorted", "       \
    \ // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        x.filter(x => x.toString.forall(x => x.asDigit % 2 != 0)).sorted",
  '        x.filter(y => y.toString.forall(z => z.toString.toInt % 2 != 0)).sorted',
  '        x.filter(y => y.toString.forall(z => z.asDigit % 2 != 0)).sorted', "  \
    \      // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        def hasEvenDigit(x : Long) : Boolean = {\n   \
    \         if (x == 0) false\n            else if (x % 2 == 0) true\n         \
    \   else hasEvenDigit(x / 10)\n        }\n        x.filter(!hasEvenDigit(_)).sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = new ListBuffer[Long]()\n        for\
    \ (i <- x) {\n            var flag = true\n            var temp = i\n        \
    \    while (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n         \
    \           flag = false\n                    temp = 0\n                }\n  \
    \              else temp /= 10\n            }\n            if (flag) result +=\
    \ i\n        }\n        result.toList.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var temp = i\n            while (temp > 0) {\n                if\
    \ (temp % 10 % 2 == 0) {\n                    flag = false\n                 \
    \   temp = 0\n                }\n                else temp /= 10\n           \
    \ }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        def isUnique(n : Long) : Boolean = {\n       \
    \     var i = n\n            while (i > 0) {\n                val d = i % 10\n\
    \                if (d % 2 == 0) return false\n                i = i / 10\n  \
    \          }\n            return true\n        }\n        x.filter(isUnique).sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.filter(x => x % 2 == 0).length == 0) {\n     \
    \           result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(x => x.toString.forall(x => x.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[Long]()\n\
    \        for (i <- x) {\n            var flag = true\n            var temp = i\n\
    \            while (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n \
    \                   flag = false\n                    temp = 0\n             \
    \   }\n                else temp /= 10\n            }\n            if (flag) result\
    \ = result :+ i\n        }\n        result.sorted", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var list = List[Long]()\n        for (i <- x) {\n            var flag = true\n\
    \            var num = i\n            while (num > 0) {\n                if (num\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    num\
    \ = 0\n                }\n                else num /= 10\n            }\n    \
    \        if (flag) list = list :+ i\n        }\n        list.sorted", "      \
    \  // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n                result\
    \ = result :+ i\n            }\n        }\n        result.sorted", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         var flag = true\n            var temp = i\n            while (temp >\
    \ 0) {\n                if (temp % 10 % 2 == 0) {\n                    flag =\
    \ false\n                    temp = 0\n                }\n                else\
    \ {\n                    temp /= 10\n                }\n            }\n      \
    \      if (flag) {\n                result = result :+ i\n            }\n    \
    \    }\n        result.sorted", "        // Fill up this function body\n     \
    \   // You can add another function as well, if required\n        var result =\
    \ new ListBuffer[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result += i\n            }\n    \
    \    }\n        result.toList.sorted", '        x.filter(x => x.toString.forall(x
    => x.toString.toInt % 2 != 0)).sorted', "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", '        x.filter(y
    => y.toString.forall(z => z.asDigit % 2 != 0)).sorted', "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        x.filter(x => x.toString.forall(x => x.asDigit % 2 != 0)).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n         \
    \       result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            if (i.toString.forall(c\
    \ => c.asDigit % 2 != 0)) {\n                result = result :+ i\n          \
    \  }\n        }\n        result.sorted", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[Long]()\n        for (i <- x) {\n            var flag = true\n      \
    \      var temp = i\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    flag = false\n                    temp\
    \ = 0\n                }\n                else temp /= 10\n            }\n   \
    \         if (flag) result = result :+ i\n        }\n        result.sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result : List[Long] = List()\n        for\
    \ (i <- x) {\n            if (i.toString.forall(c => c.asDigit % 2 != 0)) {\n\
    \                result = result :+ i\n            }\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else {\n                    temp /= 10\n                }\n            }\n\
    \            if (flag) result = result :+ i\n        }\n        result.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        return List[Long]()", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var result = List[Long]()\n        for (i <- x) {\n            var flag\
    \ = true\n            var temp = i\n            while (temp > 0) {\n         \
    \       if (temp % 10 % 2 == 0) {\n                    flag = false\n        \
    \            temp = 0\n                }\n                else temp /= 10\n  \
    \          }\n            if (flag) result = result :+ i\n        }\n        result.sorted",
  '        x.filter(y => y.toString.forall(z => z.toString.toInt % 2 != 0)).sorted',
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        x.filter(y => y.toString.forall(z => z.asDigit\
    \ % 2 != 0)).sorted", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        def isUnique(n : Long) :\
    \ Boolean = {\n            var m = n\n            while (m > 0) {\n          \
    \      if (m % 2 == 0) return false\n                m /= 10\n            }\n\
    \            true\n        }\n        x.filter(isUnique).sorted", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[Long]()\n        for (i <- x) {\n   \
    \         var flag = true\n            var temp = i\n            while (temp >\
    \ 0) {\n                if (temp % 10 % 2 == 0) {\n                    flag =\
    \ false\n                    temp = 0\n                }\n                else\
    \ {\n                    temp /= 10\n                }\n            }\n      \
    \      if (flag) {\n                result = result :+ i\n            }\n    \
    \    }\n        result.sorted", "        // Fill up this function body\n     \
    \   // You can add another function as well, if required\n        def isUnique(n\
    \ : Long) : Boolean = {\n            var m = n\n            while (m > 0) {\n\
    \                if (m % 2 == 0) return false\n                m /= 10\n     \
    \       }\n            true\n        }\n        x.filter(isUnique).sorted", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[Long]()\n        for (i <- x)\
    \ {\n            var flag = true\n            var temp = i\n            while\
    \ (temp > 0) {\n                if (temp % 10 % 2 == 0) {\n                  \
    \  flag = false\n                    temp = 0\n                }\n           \
    \     else temp /= 10\n            }\n            if (flag) result = result :+\
    \ i\n        }\n        result.sorted"]
stop_tokens:
- "\n    }\n"

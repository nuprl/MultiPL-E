name: HumanEval_134_check_if_last_char_is_a_letter
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that returns true if the last character\n    // of a given\
  \ string is an alphabetical character and is not\n    // a part of a word, and false\
  \ otherwise.\n    // Note: \"word\" is a group of characters separated by space.\n\
  \    // Examples:\n    // >>> checkIfLastCharIsALetter((\"apple pie\"))\n    //\
  \ (false)\n    // >>> checkIfLastCharIsALetter((\"apple pi e\"))\n    // (true)\n\
  \    // >>> checkIfLastCharIsALetter((\"apple pi e \"))\n    // (false)\n    //\
  \ >>> checkIfLastCharIsALetter((\"\"))\n    // (false)\n    def checkIfLastCharIsALetter(txt\
  \ : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(checkIfLastCharIsALetter((\"\
  apple\")) == (false));\n    assert(checkIfLastCharIsALetter((\"apple pi e\")) ==\
  \ (true));\n    assert(checkIfLastCharIsALetter((\"eeeee\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  A\")) == (true));\n    assert(checkIfLastCharIsALetter((\"Pumpkin pie \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"Pumpkin pie 1\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  \")) == (false));\n    assert(checkIfLastCharIsALetter((\"eeeee e \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"apple pie\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  apple pi e \")) == (false));\n    }\n\n}\n"
completions: ["        if (txt.length == 0) {\n            return false\n        }\n\
    \        val lastChar = txt.last\n        if (lastChar.isLetter) {\n         \
    \   val lastCharIndex = txt.length - 1\n            val lastCharIsNotPartOfAWord\
    \ = txt.lastIndexOf(\" \", lastCharIndex) == lastCharIndex\n            return\
    \ lastCharIsNotPartOfAWord\n        }\n        return false", "        if (txt.length\
    \ == 0) return false\n        if (txt.last.isLetter) {\n            if (txt.length\
    \ == 1) return true\n            if (txt(txt.length - 2) == ' ') return true\n\
    \        }\n        return false", "        if (txt.length == 0) return false\n\
    \        val lastChar = txt.last\n        if (lastChar.isLetter) {\n         \
    \   if (txt.length == 1) return true\n            val secondLastChar = txt(txt.length\
    \ - 2)\n            if (secondLastChar.isLetter) return false\n            return\
    \ true\n        }\n        return false", "        if (txt.length == 0) return\
    \ false\n        val lastChar = txt.last\n        if (lastChar.isLetter) {\n \
    \           if (txt.length == 1) return true\n            val secondLastChar =\
    \ txt(txt.length - 2)\n            if (secondLastChar.isLetter) return false\n\
    \            return true\n        }\n        return false", "        if (txt.isEmpty)\
    \ return false\n        val lastChar = txt.last\n        if (lastChar.isLetter)\
    \ {\n            if (txt.length == 1) return true\n            val secondLastChar\
    \ = txt(txt.length - 2)\n            if (secondLastChar.isSpaceChar) return true\n\
    \        }\n        return false", "        if (txt.length == 0) return false\n\
    \        val lastChar = txt.last\n        if (lastChar.isLetter) {\n         \
    \   if (txt.length == 1) return true\n            else if (txt(txt.length - 2)\
    \ == ' ') return true\n        }\n        return false", "        if (txt.length\
    \ == 0) return false\n        val lastChar = txt.last\n        if (!lastChar.isLetter)\
    \ return false\n        if (txt.length == 1) return true\n        val secondLastChar\
    \ = txt.charAt(txt.length - 2)\n        if (secondLastChar.isLetter) return false\n\
    \        return true", "        if (txt.length == 0) return false\n        val\
    \ lastChar = txt.last\n        if (lastChar.isLetter) {\n            if (txt.length\
    \ == 1) return true\n            val secondLastChar = txt(txt.length - 2)\n  \
    \          if (secondLastChar.isSpaceChar) return true\n        }\n        return\
    \ false", "        if (txt.length == 0) return false\n        val lastChar = txt.charAt(txt.length\
    \ - 1)\n        if (lastChar.isLetter) {\n            if (txt.length == 1) return\
    \ true\n            val secondLastChar = txt.charAt(txt.length - 2)\n        \
    \    if (secondLastChar.isLetter) return false\n            else return true\n\
    \        }\n        else return false", "        if (txt.length == 0) return false\n\
    \        val lastChar = txt.last\n        if (lastChar.isLetter) {\n         \
    \   if (txt.length == 1) return true\n            val secondLastChar = txt(txt.length\
    \ - 2)\n            if (secondLastChar.isLetter) return false\n            return\
    \ true\n        }\n        return false", "        if (txt.length == 0) return\
    \ false\n        val lastChar = txt.charAt(txt.length - 1)\n        if (lastChar.isLetter)\
    \ {\n            if (txt.length == 1) return true\n            val secondLastChar\
    \ = txt.charAt(txt.length - 2)\n            if (secondLastChar.isLetter) return\
    \ false\n            else return true\n        }\n        else return false",
  "        val lastChar = txt.last\n        if (lastChar.isLetter) {\n           \
    \ if (txt.length > 1) {\n                val secondLastChar = txt.charAt(txt.length\
    \ - 2)\n                if (secondLastChar.isLetter) {\n                    return\
    \ false\n                }\n            }\n            return true\n        }\n\
    \        return false", "        val lastChar = txt.last\n        if (lastChar.isLetter)\
    \ {\n            if (txt.length == 1) {\n                true\n            } else\
    \ {\n                val secondLastChar = txt.charAt(txt.length - 2)\n       \
    \         if (secondLastChar.isLetter) {\n                    false\n        \
    \        } else {\n                    true\n                }\n            }\n\
    \        } else {\n            false\n        }", "        if (txt.length == 0)\
    \ return false\n        val lastChar = txt.charAt(txt.length - 1)\n        if\
    \ (lastChar.isLetter) {\n            val lastCharIndex = txt.length - 1\n    \
    \        val lastCharIsNotAPartOfAWord = txt.lastIndexOf(\" \", lastCharIndex)\
    \ == lastCharIndex - 1\n            return lastCharIsNotAPartOfAWord\n       \
    \ }\n        return false", "        if (txt.length == 0) return false\n     \
    \   if (txt.last.isLetter) {\n            if (txt.length == 1) return true\n \
    \           if (txt(txt.length - 2) == ' ') return true\n        }\n        return\
    \ false", "        if (txt.length == 0) return false\n        val lastChar = txt.last\n\
    \        if (lastChar.isLetter) {\n            val lastCharIndex = txt.length\
    \ - 1\n            if (lastCharIndex == 0) return true\n            val prevChar\
    \ = txt(lastCharIndex - 1)\n            if (prevChar == ' ') return true\n   \
    \     }\n        return false", "        if (txt.isEmpty) return false\n     \
    \   val lastChar = txt.last\n        if (!lastChar.isLetter) return false\n  \
    \      if (txt.length == 1) return true\n        val lastCharIndex = txt.length\
    \ - 1\n        val prevChar = txt(lastCharIndex - 1)\n        if (prevChar.isLetter)\
    \ return false\n        return true", "        if (txt.length == 0) return false\n\
    \        val lastChar = txt.last\n        if (lastChar.isLetter) {\n         \
    \   val lastCharIndex = txt.length - 1\n            val lastCharIsNotPartOfAWord\
    \ = txt.indexOf(lastChar, lastCharIndex - 1) == -1\n            return lastCharIsNotPartOfAWord\n\
    \        }\n        false", "        if (txt.length == 0) return false\n     \
    \   val lastChar = txt.charAt(txt.length - 1)\n        if (lastChar.isLetter)\
    \ {\n            if (txt.length == 1) return true\n            val secondLastChar\
    \ = txt.charAt(txt.length - 2)\n            if (secondLastChar.isLetter) return\
    \ false\n            return true\n        }\n        return false", "        if\
    \ (txt.length == 0) return false\n        val lastChar = txt.last\n        if\
    \ (lastChar.isLetter) {\n            val lastCharIndex = txt.length - 1\n    \
    \        val lastCharIsPartOfAWord = txt.indexOf(\" \", lastCharIndex) == -1\n\
    \            return !lastCharIsPartOfAWord\n        }\n        return false"]
stop_tokens:
- "\n    }\n"

name: HumanEval_34_unique
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong,\
  \ 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n\
  \    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n\
  \    def unique(l : List[Long]) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(unique((List[Long](5l.toLong,\
  \ 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))).equals((List[Long](0l.toLong,\
  \ 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))));\n    }\n\n}\n"
completions: ['        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct',
  '        return l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.sortWith(_
    < _).distinct', '        l.distinct.sorted', '        l.sortWith(_ < _).distinct',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  "        val s = SortedSet[Long]()\n        for (x <- l) s += x\n        s.toList",
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  "        val s = SortedSet[Long]()\n        for (x <- l) s += x\n        s.toList",
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.sortWith(_
    < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.toSet.toList.sorted', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.sortWith(_
    < _).distinct', '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted',
  '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.toSet.toList.sorted', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct',
  '        l.distinct.sorted', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.toSet.toList.sorted', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', "        val s = SortedSet[Long]()\n     \
    \   for (x <- l) s += x\n        s.toList", '        l.sortWith(_ < _).distinct',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.sortWith(_
    < _).distinct', '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.toSet.toList.sorted', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted', '        l.sortWith(_
    < _).distinct', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct',
  '        l.toSet.toList.sorted', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.sortWith(_
    < _).distinct', '        l.sortWith(_ < _).distinct', '        l.sortWith(_ <
    _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted', '        l.distinct.sorted',
  '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        l.sortWith(_
    < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        return
    l.toSet.toList.sorted', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.sortWith(_ < _).distinct', '        l.distinct.sorted', '        l.toSet.toList.sorted',
  '        l.sortWith(_ < _).distinct', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.sortWith(_ < _).distinct', '        l.distinct.sorted',
  '        return l.toSet.toList.sorted', '        l.distinct.sorted', '        l.distinct.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted', '        return l.distinct.sorted',
  '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted',
  '        l.toSet.toList.sorted', '        l.sortWith(_ < _).distinct', '        l.sortWith(_
    < _).distinct', '        l.distinct.sorted', '        l.sortWith(_ < _).distinct',
  '        l.sortWith(_ < _).distinct', '        l.toSet.toList.sorted', '        l.toSet.toList.sorted',
  '        l.distinct.sorted', '        l.distinct.sorted']
stop_tokens:
- "\n    }\n"

name: HumanEval_64_vowels_count
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function vowels_count which takes a string representing\n    //\
  \ a word as input and returns the number of vowels in the string.\n    // Vowels\
  \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel, but\
  \ only when it is at the end of the given word.\n    // Example:\n    // >>> vowelsCount((\"\
  abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"ACEDY\"))\n    // (3l)\n    def\
  \ vowelsCount(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
  )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
  key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
  keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
  ACEDY\")) == (3l));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return 0", "        // Fill\
    \ in the code here\n        0", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val last = s.last\n        val s2 = s.toLowerCase\n        val\
    \ count = s2.count(vowels.contains(_))\n        if (vowels.contains(last)) count\
    \ + 1 else count", "        // Fill in the code here\n        return 0l", "  \
    \      // Write your code here\n        0", "        // TODO: Implement this function.\n\
    \        return 0l;", "        // Write your code here\n        return 0", " \
    \       // Your code here\n        return 0l", "        // Fill Up this function\
    \ body\n        // `s` contains only lower case letters\n        // 'y' is a vowel\
    \ only when it is at the end of the word\n        var count = 0\n        for (i\
    \ <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) ==\
    \ 'i' || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n         \
    \   }\n        }\n        if (s(s.length - 1) == 'y') {\n            count +=\
    \ 1\n        }\n        count", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val last = s.last\n        s.filter(vowels.contains(_)).length\
    \ + (if (vowels.contains(last)) 1 else 0)", "        // Fill in the code here\n\
    \        return 0l", "        s.toLowerCase().filter(c => c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' || c == 'y').size", "        // Fill in\
    \ the code here\n        return 0l", '        s.toLowerCase.filter(c => "aeiouy".contains(c)).length',
  "        // Fill Up this function body\n        // `s` contains only lower case\
    \ letters\n        // 'y' is a vowel only when it is at the end of the word\n\
    \        var count = 0\n        for (i <- 0 until s.length) {\n            if\
    \ (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n\
    \                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        count", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (vowels.contains(s(i))) count += 1\n\
    \        }\n        if (s.length > 0 && s(s.length - 1) == 'y') count += 1\n \
    \       return count", "        var count = 0\n        for (c <- s) {\n      \
    \      if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n     \
    \           count += 1\n            }\n        }\n        if (s.last == 'y') {\n\
    \            count += 1\n        }\n        return count", "        // TODO: Implement\
    \ this function\n        return 0l", "        // Fill in the code here\n     \
    \   return 0l", "        // Your code here\n        return 0", "        // Fill\
    \ in the code here\n        0l", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val last = s.last\n        val count = s.count(vowels.contains(_))\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill in\
    \ the code here\n        return 0l", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var count = 0\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ count += 1\n        }\n        if (s.last == 'y') count += 1\n        count",
  "        s.toLowerCase.filter(c => c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' || c == 'y').length", "        // Fill in the code here\n      \
    \  var count = 0\n        for (i <- 0 until s.length) {\n            if (s(i)\
    \ == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n    \
    \            count += 1\n            }\n        }\n        if (s(s.length - 1)\
    \ == 'y') {\n            count += 1\n        }\n        return count", "     \
    \   // Fill in the code here\n        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i)\
    \ == 'o' || s(i) == 'u') {\n                count += 1\n            }\n      \
    \  }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n\
    \        return count", "        // Fill in the code here\n        return 0l",
  "        // Fill in the code here\n        return 0l", "        // Fill in the code\
    \ here\n        0", "        // Fill in the code here\n        0", "        //\
    \ YOUR CODE HERE\n        return 0l", "        // TODO: Implement this function\n\
    \        return 0l", "        // TODO: Implement this function\n        return\
    \ 0l", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val last =\
    \ s.last\n        val count = s.filter(vowels.contains(_)).length\n        if\
    \ (vowels.contains(last)) count + 1 else count", "        // Fill in the code\
    \ here\n        return 0l", "        var count = 0l\n        for (c <- s) {\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c\
    \ == 'y') count += 1\n        }\n        if (s.length > 1 && s(s.length - 1) ==\
    \ 'y') count -= 1\n        count", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill in\
    \ the code here\n        return 0l", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        val chars = s.toLowerCase.toList\n        val count = chars.foldLeft(0l)((acc,\
    \ c) => if (vowels.contains(c)) acc + 1 else acc)\n        if (chars.last == 'y')\
    \ count + 1 else count", "        // TODO: Implement this function\n        return\
    \ 0l", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count =\
    \ 0\n        for (i <- 0 until s.length) {\n            if (vowels.contains(s(i)))\
    \ {\n                count += 1\n            }\n        }\n        if (s.length\
    \ > 1 && s(s.length - 1) == 'y') {\n            count += 1\n        }\n      \
    \  count", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val last\
    \ = s.last\n        val count = s.count(vowels.contains(_))\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // Fill in the code here\n        return 0l",
  "        // Fill in the body of this function\n        return 0l", "        // YOUR\
    \ CODE HERE\n        return 0l", "        // Fill in the code here\n        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        s.filter(vowels.contains(_)).length",
  "        // TODO: Implement this function.\n        return 0l;", "        // TODO:\
    \ Implement this function\n        return 0l", "        // Write your code here\n\
    \        return 0", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n    \
    \    val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill in\
    \ the code here\n        return 0l", "        // Fill in the code here\n     \
    \   return 0l", "        // TODO: Implement this function\n        return 0",
  "        // TODO: Implement this function\n        return 0", "        // TODO:\
    \ Implement this function\n        return 0l", "        // Fill in the code here\n\
    \        0l", "        // TODO: implement this function\n        0", "       \
    \ // Fill in the code here\n        0", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val last = s.last\n        val count = s.count(vowels.contains(_))\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill Up\
    \ this function body\n        // `s` contains only lower case letters\n      \
    \  var count = 0\n        for (i <- 0 until s.length) {\n            if (s(i)\
    \ == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n    \
    \            count += 1\n            }\n        }\n        if (s(s.length - 1)\
    \ == 'y') {\n            count += 1\n        }\n        count", "        // Write\
    \ your code here\n        return 0", "        var count = 0\n        for (i <-\
    \ 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i'\
    \ || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n            }\n\
    \        }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n  \
    \      }\n        return count", "        // Fill in the code here\n        0l",
  "        // TODO: Implement this function\n        0l", "        // Fill in the\
    \ code here\n        return 0l", "        // Fill in the code here\n        return\
    \ 0l", "        // Fill in the code here\n        return 0l", "        // YOUR\
    \ CODE HERE\n        return 0l", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val last = s.last\n        val count = s.count(vowels.contains(_))\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // TODO: Implement\
    \ me!\n        return 0l", "        // Fill in the code here\n        return 0l",
  "        var count = 0l\n        for (c <- s) {\n            if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n                count\
    \ += 1\n            }\n        }\n        return count", "        // Fill in the\
    \ code here\n        0l", "        // TODO: Implement this function\n        return\
    \ 0", "        // Fill in the code here\n        return 0", "        // Fill in\
    \ the code here\n        0", "        // Fill in the code here\n        0", " \
    \       // Fill in the code here\n        return 0l", "        // YOUR CODE HERE\n\
    \        return 0;", "        // Fill in the code here\n        return 0l", " \
    \       var count = 0l\n        for (c <- s) {\n            if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n                count\
    \ += 1\n            }\n        }\n        return count", "        // Fill Up this\
    \ function body\n        // `s` contains only lower case alphabets\n        var\
    \ count = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a'\
    \ || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n           \
    \     count += 1\n            }\n        }\n        if (s(s.length - 1) == 'y')\
    \ {\n            count += 1\n        }\n        count", "        // YOUR CODE\
    \ HERE\n        return 0", "        // your code here\n        0", "        //\
    \ Write your code here\n        return 0;", "        // Fill Up this function\
    \ body\n        // `s` is a string representing the word\n        // `return`\
    \ the number of vowels in the string\n        var count = 0\n        for (i <-\
    \ 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i'\
    \ || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n            }\n\
    \        }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n  \
    \      }\n        return count", "        // YOUR CODE HERE\n        return 0",
  "        // Fill in the code here\n        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i)\
    \ == 'o' || s(i) == 'u') {\n                count += 1\n            }\n      \
    \  }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n\
    \        return count", "        // YOUR CODE HERE\n        return 0", "     \
    \   // Fill in the code here\n        0", "        // Fill in the code here\n\
    \        return 0l", "        var count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o'\
    \ || s(i) == 'u') {\n                count += 1\n            }\n            if\
    \ (s(i) == 'y' && i == s.length - 1) {\n                count += 1\n         \
    \   }\n        }\n        return count", "        // your code here\n        0",
  "        // TODO: Implement this function.\n        return 0", "        var count\
    \ = 0l\n        for (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'y') {\n                count += 1\n       \
    \     }\n        }\n        count", "        // Fill in the code here\n      \
    \  return 0l", "        // Write your code here\n        return 0l", "       \
    \ // YOUR CODE HERE\n        return 0", "        // Fill Up this function body\n\
    \        // `s` contains only lower case characters\n        s.filter(x => x ==\
    \ 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u' || x == 'y').length", " \
    \       // YOUR CODE HERE\n        return 0", "        // YOUR CODE HERE\n   \
    \     return 0", "        // Fill Up this function body\n        // `s` contains\
    \ only lower case characters\n        // 'y' is a vowel only when it is at the\
    \ end of the word\n        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o'\
    \ || s(i) == 'u') {\n                count += 1\n            }\n        }\n  \
    \      if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n    \
    \    count", "        // TODO: Implement this function.\n        return 0l;",
  "        // Fill in the code here\n        return 0", "        // Fill in the code\
    \ here\n        var count = 0\n        for (i <- 0 until s.length) {\n       \
    \     if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) ==\
    \ 'u') {\n                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count", " \
    \       // Fill in the code here\n        0", "        // Fill Up this function\
    \ body\n        // `s` contains only lower case letters\n        var count = 0\n\
    \        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) ==\
    \ 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') count += 1\n        }\n  \
    \      if (s(s.length - 1) == 'y') count += 1\n        count", "        // Fill\
    \ in the code here\n        0l", "        // TODO: Implement this function\n \
    \       return 0", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n      \
    \  val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // TODO: Implement\
    \ this function.\n        return 0", "        // YOUR CODE HERE\n        return\
    \ 0", "        // Fill in the code here\n        0l", "        // Fill in the\
    \ code here\n        return 0l", "        // Fill in the body of this function\n\
    \        return 0", "        // TODO: Implement this function\n        0l", " \
    \       var count = 0\n        for (c <- s) {\n            if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') count += 1\n        }\n        if (s.length\
    \ > 1 && s(s.length - 1) == 'y') count += 1\n        return count", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        val count = s.count(vowels.contains(_))\n\
    \        if (s.last == 'y') count + 1 else count", "        // TODO: Implement\
    \ this function\n        return 0l", "        // Fill Up this function body\n\
    \        // `s` contains only lower case letters\n        // 'y' is a vowel only\
    \ when it is at the end of the word\n        var count = 0\n        for (i <-\
    \ 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i'\
    \ || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n            }\n\
    \        }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n  \
    \      }\n        count", "        // Fill in the code here\n        var count\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i)\
    \ == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count\
    \ += 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n    \
    \        count += 1\n        }\n        return count", "        // Your code here\n\
    \        return 0", "        var count = 0l\n        for (c <- s) {\n        \
    \    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\
    \ {\n                count += 1\n            }\n        }\n        if (s.length\
    \ > 1 && s(s.length - 1) == 'y') {\n            count += 1\n        }\n      \
    \  return count", "        // Fill in the code here\n        0l", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (c\
    \ <- s) {\n            if (vowels.contains(c)) count += 1\n        }\n       \
    \ if (s.last == 'y') count += 1\n        count", "        // Fill in the code\
    \ here\n        0", "        // Fill up this function body\n        // You may\
    \ also want to use a helper function\n        def isVowel(c : Char) : Boolean\
    \ = {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n                return true\n            }\n            else if (c == 'y')\
    \ {\n                return true\n            }\n            else {\n        \
    \        return false\n            }\n        }\n        var count = 0\n     \
    \   for (i <- 0 until s.length) {\n            if (isVowel(s(i))) {\n        \
    \        count += 1\n            }\n        }\n        return count", "      \
    \  // Write your code here\n        return 0l", "        // TODO: Implement this\
    \ function\n        return 0l", "        // Fill Up this function body\n     \
    \   // `s` contains only lower case letters\n        var count = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i)\
    \ == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n      \
    \      }\n        }\n        if (s(s.length - 1) == 'y') {\n            count\
    \ += 1\n        }\n        count", "        // YOUR CODE HERE\n        return\
    \ 0", "        // Fill in the code here\n        0", "        // Fill in the code\
    \ here\n        0l", "        // Fill in the code here\n        0", "        //\
    \ Fill in the code here\n        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o'\
    \ || s(i) == 'u') {\n                count += 1\n            }\n        }\n  \
    \      if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n    \
    \    return count", "        // Fill Up this function body\n        // `s` contains\
    \ only lower case letters\n        // 'y' is a vowel only when it is at the end\
    \ of the word\n        // For Example:\n        // >>> vowelsCount(\"aeiou\")\n\
    \        // 5\n        // >>> vowelsCount(\"bcd\")\n        // 0\n        // >>>\
    \ vowelsCount(\"aeiouy\")\n        // 6\n        // >>> vowelsCount(\"aeiouybcd\"\
    )\n        // 6\n        // >>> vowelsCount(\"abcde\")\n        // 2\n       \
    \ // >>> vowelsCount(\"\")\n        // 0\n        var count = 0\n        for (i\
    \ <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) ==\
    \ 'i' || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n         \
    \   }\n        }\n        if (s.length > 1 && s(s.length - 1) == 'y') {\n    \
    \        count += 1\n        }\n        count", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count = s.count(vowels.contains(_))\n\
    \        if (vowels.contains(last)) count + 1 else count", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        s.toLowerCase.filter(vowels.contains(_)).length",
  "        // Fill in the code here\n        return 0l", "        // Fill in the code\
    \ here\n        return 0l", "        // Fill in the code here\n        var count\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i)\
    \ == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count\
    \ += 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n    \
    \        count += 1\n        }\n        return count", "        // Fill in the\
    \ code here\n        0", "        var count = 0\n        for (c <- s) {\n    \
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \             count += 1\n            }\n        }\n        if (s.last == 'y')\
    \ {\n            count += 1\n        }\n        return count", "        // Fill\
    \ in the code here\n        0", "        // YOUR CODE HERE\n        return 0l",
  "        // Fill Up this function body\n        // `s` contains only lower case\
    \ characters\n        // 'y' is a vowel only when it is at the end of the word\n\
    \        // 'y' is not a vowel when it is at the beginning or in the middle of\
    \ the word\n        // 'y' is not a vowel when it is at the end of the word but\
    \ the word is of length 1\n        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o'\
    \ || s(i) == 'u') {\n                count += 1\n            }\n            if\
    \ (s(i) == 'y' && i == s.length - 1 && s.length != 1) {\n                count\
    \ += 1\n            }\n        }\n        count", "        // Your code here\n\
    \        return 0", "        // Fill in the code here\n        0l", "        //\
    \ Fill Up this function body\n        // `s` contains only lower case characters\n\
    \        // 'y' is a vowel only when it is at the end of the word\n        var\
    \ count = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a'\
    \ || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n           \
    \     count += 1\n            }\n        }\n        if (s(s.length - 1) == 'y')\
    \ {\n            count += 1\n        }\n        count", "        // Write your\
    \ code here\n        return 0", "        // Fill Up this function body\n     \
    \   // `s` contains only lower case letters\n        var count = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i)\
    \ == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n      \
    \      }\n        }\n        if (s(s.length - 1) == 'y') {\n            count\
    \ += 1\n        }\n        count", "        // YOUR CODE HERE\n        return\
    \ 0", "        s.toLowerCase.filter(c => c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u' || c == 'y').length", "        // Fill in the code here\n\
    \        return 0l", "        // TODO: Implement this function\n        return\
    \ 0l", "        // Fill in the code here\n        return 0l", "        // Fill\
    \ in the code here\n        return 0l", "        // TODO: Implement this function.\n\
    \        return 0l;", "        // Fill in the code here\n        return 0l", " \
    \       // Fill in the code here\n        0l", "        // TODO: Implement this\
    \ function.\n        return 0l;", "        // Fill Up this function body\n   \
    \     // `s` contains only lower case letters\n        // 'y' is a vowel only\
    \ when it is at the end of the word\n        var count = 0\n        for (i <-\
    \ 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i'\
    \ || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n            }\n\
    \        }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n  \
    \      }\n        count", "        // TODO: Write your code here\n        return\
    \ 0", "        // TODO: Implement this function\n        return 0l", "       \
    \ // TODO: implement this function\n        return 0l", "        // YOUR CODE\
    \ HERE\n        return 0l", "        // Fill in the code here\n        0l", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n\
    \        s.count(vowels.contains(_)) + (if (vowels.contains(last)) 1 else 0)",
  '        s.toLowerCase.filter(c => "aeiouy".contains(c)).length', "        // YOUR\
    \ CODE HERE\n        return 0", "        // TODO: Implement this function\n  \
    \      return 0", "        // Fill in the code here\n        return 0l", "   \
    \     // Fill in the code here\n        return 0l", "        // Your code here\n\
    \        return 0l", "        // Fill in the code here\n        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count\
    \ = s.count(vowels.contains(_))\n        if (vowels.contains(last)) count + 1\
    \ else count", "        // Fill in the code here\n        return 0l", "      \
    \  // YOUR CODE HERE\n        return 0", "        // Write your code here\n  \
    \      return 0", "        // TODO: Write your code here\n        return 0", '        s.filter(c
    => "aeiouyAEIOUY".contains(c)).length', "        // TODO: implement this\n   \
    \     0", "        // YOUR CODE HERE\n        return 0", "        // Write your\
    \ code here\n        return 0", "        // Fill in the code here\n        return\
    \ 0l", "        // YOUR CODE HERE\n        0", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill in\
    \ the code here\n        0l", "        // Fill in the code here\n        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        val sList = s.toList\n        val sListSize\
    \ = sList.size\n        val sListSizeMinusOne = sListSize - 1\n        var count\
    \ = 0\n        for (i <- 0 to sListSizeMinusOne) {\n            if (vowels.contains(sList(i)))\
    \ {\n                count += 1\n            }\n        }\n        if (sList(sListSizeMinusOne)\
    \ == 'y') {\n            count += 1\n        }\n        count", "        // TODO:\
    \ Implement this method\n        0l", "        // TODO: implement this function\n\
    \        0", "        // TODO: Implement this function.\n        0l", "      \
    \  val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n    \
    \    val count = s.filter(vowels.contains(_)).length\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // TODO: implement this function\n        0l",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val y = Set('y')\n \
    \       val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (y.contains(last)) count + 1 else count", "        // your code here\n\
    \        return 0", "        // Fill in the code here\n        return 0l", " \
    \       // Write your code here\n        return 0", "        // Fill in the code\
    \ here\n        var count = 0\n        for (i <- 0 until s.length) {\n       \
    \     if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) ==\
    \ 'u') {\n                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count"]
stop_tokens:
- "\n    }\n"

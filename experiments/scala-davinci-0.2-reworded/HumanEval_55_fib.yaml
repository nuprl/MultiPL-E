name: HumanEval_55_fib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n   \
  \ // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n\
  \ : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
  \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
  \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
completions: ["        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n\
    \ - 1) + fib(n - 2)", "        var a : Long = 0\n        var b : Long = 1\n  \
    \      var i : Long = 0\n        while (i < n) {\n            {\n            \
    \    val c : Long = a + b\n                a = b\n                b = c\n    \
    \            i += 1\n            }\n        }\n        return a", "        var\
    \ a = 0l\n        var b = 1l\n        for (i <- 1l to n) {\n            val c\
    \ = a + b\n            a = b\n            b = c\n        }\n        return a",
  "        var a = 0l\n        var b = 1l\n        var i = 0l\n        while (i <\
    \ n) {\n            val c = a + b\n            a = b\n            b = c\n    \
    \        i += 1\n        }\n        return a", "        var a : Long = 0\n   \
    \     var b : Long = 1\n        var i : Long = 0\n        while (i < n) {\n  \
    \          {\n                val c : Long = a + b\n                a = b\n  \
    \              b = c\n                i += 1\n            }\n        }\n     \
    \   return a", "        var a : Long = 0\n        var b : Long = 1\n        var\
    \ i : Long = 0\n        while (i < n) {\n            {\n                val c\
    \ : Long = a + b\n                a = b\n                b = c\n             \
    \   i += 1\n            }\n        }\n        return a", "        var a = 0l\n\
    \        var b = 1l\n        var i = 0l\n        while (i < n) {\n           \
    \ val c = a + b\n            a = b\n            b = c\n            i += 1\n  \
    \      }\n        return a", "        var a = 0l\n        var b = 1l\n       \
    \ var i = 0l\n        while (i < n) {\n            val c = a + b\n           \
    \ a = b\n            b = c\n            i += 1\n        }\n        return a",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        var a : Long = 0\n        var b : Long = 1\n        var i :\
    \ Long = 0\n        while (i < n) {\n            {\n                val c : Long\
    \ = a + b\n                a = b\n                b = c\n                i +=\
    \ 1\n            }\n        }\n        return a", "        if (n == 0) 0\n   \
    \     else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)",
  "        var a = 0l\n        var b = 1l\n        var i = 0l\n        while (i <\
    \ n) {\n            val c = a + b\n            a = b\n            b = c\n    \
    \        i += 1\n        }\n        return a", "        var a : Long = 0;\n  \
    \      var b : Long = 1;\n        var i : Long = 0;\n        while (i < n) {\n\
    \            {\n                val c : Long = a + b;\n                a = b;\n\
    \                b = c;\n                i = i + 1\n            }\n        };\n\
    \        return a", "        if (n == 0) {\n            return 0\n        }\n\
    \        if (n == 1) {\n            return 1\n        }\n        return fib((n\
    \ - 1)) + fib((n - 2))", "        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)", "        if (n == 0) {\n            return\
    \ 0\n        }\n        if (n == 1) {\n            return 1\n        }\n     \
    \   return fib((n - 1)) + fib((n - 2))", "        var a = 0l\n        var b =\
    \ 1l\n        for (i <- 1l to n) {\n            val c = a + b\n            a =\
    \ b\n            b = c\n        }\n        return a", "        var a : Long =\
    \ 0\n        var b : Long = 1\n        var i : Long = 0\n        while (i < n)\
    \ {\n            {\n                val c : Long = a + b\n                a =\
    \ b\n                b = c\n                i += 1\n            }\n        }\n\
    \        return a", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0l\n        var b = 1l\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b"]
stop_tokens:
- "\n    }\n"

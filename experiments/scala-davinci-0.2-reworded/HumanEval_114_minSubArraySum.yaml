name: HumanEval_114_minSubArraySum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of integers nums, find the minimum sum of any non-empty sub-list\n\
  \    // of nums.\n    // Example\n    // >>> minSubArraySum((List[Long](2l.toLong,\
  \ 3l.toLong, 4l.toLong, 1l.toLong, 2l.toLong, 4l.toLong)))\n    // (1l)\n    //\
  \ >>> minSubArraySum((List[Long](-1l.toLong, -2l.toLong, -3l.toLong)))\n    // (-6l)\n\
  \    def minSubArraySum(nums : List[Long]) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(minSubArraySum((List[Long](2l.toLong,\
  \ 3l.toLong, 4l.toLong, 1l.toLong, 2l.toLong, 4l.toLong))) == (1l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong))) == (-6l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong, 2l.toLong, -10l.toLong))) == (-14l));\n    assert(minSubArraySum((List[Long](-9999999999999999l.toLong)))\
  \ == (-9999999999999999l));\n    assert(minSubArraySum((List[Long](0l.toLong, 10l.toLong,\
  \ 20l.toLong, 1000000l.toLong))) == (0l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong, 10l.toLong, -5l.toLong))) == (-6l));\n    assert(minSubArraySum((List[Long](100l.toLong,\
  \ -1l.toLong, -2l.toLong, -3l.toLong, 10l.toLong, -5l.toLong))) == (-6l));\n   \
  \ assert(minSubArraySum((List[Long](10l.toLong, 11l.toLong, 13l.toLong, 8l.toLong,\
  \ 3l.toLong, 4l.toLong))) == (3l));\n    assert(minSubArraySum((List[Long](100l.toLong,\
  \ -33l.toLong, 32l.toLong, -1l.toLong, 0l.toLong, -2l.toLong))) == (-33l));\n  \
  \  assert(minSubArraySum((List[Long](-10l.toLong))) == (-10l));\n    assert(minSubArraySum((List[Long](7l.toLong)))\
  \ == (7l));\n    assert(minSubArraySum((List[Long](1l.toLong, -1l.toLong))) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        // Fill this in.\n        var minSum = Long.MaxValue\n    \
    \    var sum = 0l\n        for (i <- nums) {\n            sum += i\n         \
    \   if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n       \
    \ }\n        minSum", "        // Fill this in.\n        val n = nums.length\n\
    \        val dp = Array.fill(n)(0l)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        // Fill this in.\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill this in.\n        var minSum : Long = 0\n    \
    \    var currSum : Long = 0\n        for (i <- 0 until nums.length) {\n      \
    \      currSum += nums(i)\n            if (currSum < minSum) minSum = currSum\n\
    \            if (currSum > 0) currSum = 0\n        }\n        return minSum",
  "        // Fill this in.\n        var min = nums(0)\n        var sum = 0l\n   \
    \     for (num <- nums) {\n            sum += num\n            if (sum < min)\
    \ min = sum\n            if (sum > 0) sum = 0\n        }\n        min", "    \
    \    // Fill this in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n\
    \        for (num <- nums) {\n            sum += num\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (num <- nums) {\n            sum += num\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        // Fill this in.\n        var min = Long.MaxValue\n     \
    \   var sum = 0l\n        for (i <- nums) {\n            sum += i\n          \
    \  if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n   \
    \     min", "        // Fill this in.\n        var minSum = Long.MaxValue\n  \
    \      var sum = 0l\n        for (num <- nums) {\n            sum += num\n   \
    \         if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n \
    \       }\n        minSum", "        // Fill this in.\n        var minSum = nums(0)\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill this in.\n        val n = nums.length\n      \
    \  val dp = Array.fill(n)(0l)\n        dp(0) = nums(0)\n        var min = dp(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = max(dp(i - 1) + nums(i),\
    \ nums(i))\n            min = min min dp(i)\n        }\n        min", "      \
    \  // Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n    \
    \    for (num <- nums) {\n            sum += num\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var min = Long.MaxValue\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < min) min\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        min", "        //\
    \ Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n        for\
    \ (i <- nums) {\n            sum += i\n            if (sum < minSum) minSum =\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        minSum", "       \
    \ // Fill this in.\n        var min = nums(0)\n        var sum = 0l\n        for\
    \ (i <- nums) {\n            sum += i\n            if (sum < min) min = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        min", "        // Fill this\
    \ in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i\
    \ <- nums) {\n            sum += i\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ this in.\n        var min = 0l\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < min) min = sum\n        }\n \
    \       min", "        // Fill this in.\n        var min = Long.MaxValue\n   \
    \     var sum = 0l\n        for (i <- nums) {\n            sum += i\n        \
    \    if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        val n = nums.length\n\
    \        var minSum = Long.MaxValue\n        for (i <- 0 until n) {\n        \
    \    var sum = 0l\n            for (j <- i until n) {\n                sum +=\
    \ nums(j)\n                minSum = min(minSum, sum)\n            }\n        }\n\
    \        minSum", "        // Fill in the missing code\n        var min = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- 0 until nums.length) {\n            sum\
    \ += nums(i)\n            if (sum < min) min = sum\n            if (sum > 0) sum\
    \ = 0\n        }\n        min", "        // Fill this in.\n        var minSum\
    \ = 0l\n        var currentSum = 0l\n        for (i <- nums) {\n            currentSum\
    \ += i\n            if (currentSum < minSum) {\n                minSum = currentSum\n\
    \            }\n        }\n        return minSum", "        // Fill in the function\
    \ body\n        val n = nums.length\n        val dp = Array.fill(n)(0l)\n    \
    \    dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) = min(dp(i\
    \ - 1) + nums(i), nums(i))\n        }\n        dp.min", "        // Fill this\
    \ in.\n        val n = nums.length\n        val dp = Array.fill(n + 1)(0l)\n \
    \       for (i <- 1 to n) {\n            dp(i) = min(dp(i - 1) + nums(i - 1),\
    \ nums(i - 1))\n        }\n        dp.min", "        // Fill this in.\n      \
    \  val n = nums.length\n        var minSum = nums(0)\n        var sum = 0\n  \
    \      for (i <- 0 until n) {\n            sum += nums(i)\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        var minSum = Long.MaxValue\n        var sum = 0l\n      \
    \  for (i <- 0 until nums.length) {\n            sum += nums(i)\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (num <- nums) {\n            sum += num\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        // Fill this in.\n        var minSum = nums(0)\n        var\
    \ sum = 0l\n        for (i <- nums) {\n            sum += i\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        // Fill this in.\n        var minSum = nums(0)\n        var\
    \ sum = 0l\n        for (i <- nums) {\n            sum += i\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        // Fill this in.\n        var min = Long.MaxValue\n     \
    \   var sum = 0l\n        for (i <- nums) {\n            sum += i\n          \
    \  if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n   \
    \     min", "        // Fill in the function body\n        return 0l", "     \
    \   // Good luck!\n        if (nums.length == 0) return 0\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- 0 until nums.length) {\n            sum\
    \ += nums(i)\n            if (sum < min) min = sum\n            if (sum > 0) sum\
    \ = 0\n        }\n        return min", "        // Fill this in.\n        var\
    \ minSum = Long.MaxValue\n        var sum = 0l\n        for (num <- nums) {\n\
    \            sum += num\n            if (sum < minSum) minSum = sum\n        \
    \    if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var minSum = nums(0)\n        var sum = 0l\n        for (num <- nums)\
    \ {\n            sum += num\n            if (sum < minSum) minSum = sum\n    \
    \        if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill in\
    \ the function body\n        var min = nums(0)\n        var sum = 0l\n       \
    \ for (i <- 0 until nums.length) {\n            sum += nums(i)\n            if\
    \ (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n       \
    \ min", "        // Fill this in.\n        var min = Long.MaxValue\n        var\
    \ sum = 0l\n        for (i <- nums) {\n            sum += i\n            if (sum\
    \ < min) min = sum\n            if (sum > 0) sum = 0\n        }\n        min",
  "        // Fill in the code here\n        return 0l", "        // Fill this in.\n\
    \        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < minSum) minSum = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill in the\
    \ function body\n        var min = Long.MaxValue\n        var sum = 0l\n     \
    \   for (i <- 0 until nums.length) {\n            sum += nums(i)\n           \
    \ if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n    \
    \    min", "        // Fill this in.\n        var minSum = nums(0)\n        var\
    \ sum = 0\n        for (i <- nums) {\n            sum += i\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n  \
    \      var sum = 0l\n        for (num <- nums) {\n            sum += num\n   \
    \         if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n \
    \       }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill in the function body\n        var\
    \ min = nums(0)\n        var sum = 0l\n        for (i <- 0 until nums.length)\
    \ {\n            sum += nums(i)\n            if (sum < min) min = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        min", "        // Fill this in.\n\
    \        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        var minSum = nums(0)\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill in the function body\n        var\
    \ minSum = nums(0)\n        var sum = 0\n        for (i <- 0 until nums.length)\
    \ {\n            sum += nums(i)\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ this in.\n        var minSum = 0l\n        var currentSum = 0l\n        for\
    \ (i <- nums) {\n            currentSum += i\n            if (currentSum < minSum)\
    \ {\n                minSum = currentSum\n            }\n        }\n        return\
    \ minSum", "        // Fill in the function body\n        var min = Long.MaxValue\n\
    \        for (i <- 0 until nums.length) {\n            var sum = 0l\n        \
    \    for (j <- i until nums.length) {\n                sum += nums(j)\n      \
    \          if (sum < min) min = sum\n            }\n        }\n        min", " \
    \       // Fill this in.\n        val n = nums.length\n        var minSum = nums(0)\n\
    \        var sum = 0\n        for (i <- 0 until n) {\n            sum += nums(i)\n\
    \            if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill in the code here\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        val n = nums.length\n\
    \        var min = nums(0)\n        for (i <- 0 until n) {\n            var sum\
    \ = 0l\n            for (j <- i until n) {\n                sum += nums(j)\n \
    \               if (sum < min) min = sum\n            }\n        }\n        min",
  "        // Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill in the function body\n        var min = nums(0)\n        var sum\
    \ = 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n\
    \            if (sum < min) min = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        min", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = nums(0)\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var min = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill this in.\n        var min = nums(0)\n        var\
    \ sum = 0l\n        for (i <- nums) {\n            sum += i\n            if (sum\
    \ < min) min = sum\n            if (sum > 0) sum = 0\n        }\n        min",
  "        // Fill this in.\n        var min = Long.MaxValue\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < min) min\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        min", "        //\
    \ Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n        for\
    \ (i <- nums) {\n            sum += i\n            if (sum < minSum) minSum =\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        minSum", "       \
    \ // Fill this in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill in the code here\n        var min = Long.MaxValue\n        var\
    \ sum = 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n\
    \            if (sum < min) min = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        min", "        // Fill in the function body\n        var minSum\
    \ = Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until nums.length)\
    \ {\n            sum += nums(i)\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ this in.\n        var min = Long.MaxValue\n        var sum = 0l\n        for\
    \ (i <- nums) {\n            sum += i\n            if (sum < min) min = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        min", "        // Fill in\
    \ the code\n        return 0l", "        // Fill this in.\n        var min = Long.MaxValue\n\
    \        for (i <- 0 until nums.length) {\n            var sum = 0l\n        \
    \    for (j <- i until nums.length) {\n                sum += nums(j)\n      \
    \          if (sum < min) min = sum\n            }\n        }\n        min", " \
    \       // Fill in the function body\n        var min = nums(0)\n        var sum\
    \ = 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n\
    \            if (sum < min) min = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        min", "        // Fill in the function body\n        val n = nums.length\n\
    \        var minSum = nums(0)\n        var sum = 0\n        for (i <- 0 until\
    \ n) {\n            sum += nums(i)\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ in the function body\n        return 0l", "        // Fill in the function body\n\
    \        val n = nums.length\n        var min = Long.MaxValue\n        var sum\
    \ = 0l\n        for (i <- 0 until n) {\n            sum += nums(i)\n         \
    \   min = min min sum\n            if (sum > 0) sum = 0\n        }\n        min",
  "        // Fill in the code\n        var minSum = nums(0)\n        var sum = 0l\n\
    \        for (i <- 0 until nums.length) {\n            sum += nums(i)\n      \
    \      if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        minSum", "        // Fill in the code here\n        nums.min",
  "        // Fill in the function body\n        var min = nums(0)\n        var sum\
    \ = 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n\
    \            if (sum < min) min = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        min", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill in the function body\n        var min\
    \ = Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until nums.length)\
    \ {\n            sum += nums(i)\n            if (sum < min) min = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        min", "        // Fill in the\
    \ code here\n        var min = Long.MaxValue\n        for (i <- 0 until nums.length)\
    \ {\n            var sum = 0l\n            for (j <- i until nums.length) {\n\
    \                sum += nums(j)\n                if (sum < min) min = sum\n  \
    \          }\n        }\n        min", "        // Fill in the function body\n\
    \        var min = Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until\
    \ nums.length) {\n            sum += nums(i)\n            if (sum < min) min =\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        min", "        //\
    \ Fill in the function body\n        var min = Long.MaxValue\n        var sum\
    \ = 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n\
    \            if (sum < min) min = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        min", "        // Fill in the function body\n        val n = nums.length\n\
    \        val dp = Array.fill(n)(0l)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        // Fill in the function body\n        var min\
    \ = Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until nums.length)\
    \ {\n            sum += nums(i)\n            if (sum < min) min = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        min", "        // Fill in the\
    \ function body\n        var minSum = Long.MaxValue\n        var sum = 0l\n  \
    \      for (i <- 0 until nums.length) {\n            sum += nums(i)\n        \
    \    if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n      \
    \  }\n        minSum", "        // Fill in the function body\n        var minSum\
    \ = nums(0)\n        var sum = 0\n        for (i <- 0 until nums.length) {\n \
    \           sum += nums(i)\n            if (sum < minSum) minSum = sum\n     \
    \       if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this\
    \ in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n        for (num\
    \ <- nums) {\n            sum += num\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ in the function body\n        var minSum = Long.MaxValue\n        for (i <-\
    \ 0 until nums.length) {\n            var sum = 0l\n            for (j <- i until\
    \ nums.length) {\n                sum += nums(j)\n                if (sum < minSum)\
    \ {\n                    minSum = sum\n                }\n            }\n    \
    \    }\n        minSum", "        // Fill in the function body\n        var minSum\
    \ = nums(0)\n        var currentSum = 0\n        for (i <- 0 until nums.length)\
    \ {\n            currentSum += nums(i)\n            if (currentSum < minSum) minSum\
    \ = currentSum\n            if (currentSum > 0) currentSum = 0\n        }\n  \
    \      minSum", "        var minSum = Long.MaxValue\n        var sum = 0l\n  \
    \      for (num <- nums) {\n            sum += num\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill in the function body\n        var minSum = Long.MaxValue\n    \
    \    var sum = 0l\n        for (num <- nums) {\n            sum += num\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill in the missing code\n        return\
    \ 0l", "        // Fill this in.\n        var minSum = nums(0)\n        var sum\
    \ = 0\n        for (i <- nums) {\n            sum += i\n            if (sum <\
    \ minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        val n = nums.length\n        val dp = Array.fill(n)(0l)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        // Fill\
    \ in the function body\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0L\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill in the code here\n        val n\
    \ = nums.length\n        var minSum = nums(0)\n        var sum = 0l\n        for\
    \ (i <- 0 until n) {\n            sum += nums(i)\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var min = Long.MaxValue\n        for (i <- 0\
    \ until nums.length) {\n            var sum = 0l\n            for (j <- i until\
    \ nums.length) {\n                sum += nums(j)\n                if (sum < min)\
    \ min = sum\n            }\n        }\n        min", "        // Fill this in.\n\
    \        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var min = Long.MaxValue\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < min) min = sum\n            if\
    \ (sum > 0) sum = 0\n        }\n        min", "        // Fill this in.\n    \
    \    var minSum = nums(0)\n        var sum = 0\n        for (i <- nums) {\n  \
    \          sum += i\n            if (sum < minSum) minSum = sum\n            if\
    \ (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n \
    \       var min = Long.MaxValue\n        var sum = 0l\n        for (num <- nums)\
    \ {\n            sum += num\n            if (sum < min) min = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        min", "        // Fill this in.\n\
    \        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        val n = nums.length\n        var minSum = Long.MaxValue\n        var\
    \ sum = 0l\n        for (i <- 0 until n) {\n            sum += nums(i)\n     \
    \       minSum = min(minSum, sum)\n            if (sum > 0) sum = 0\n        }\n\
    \        minSum", "        // Fill this in.\n        var minSum = nums(0)\n  \
    \      var sum = 0l\n        for (num <- nums) {\n            sum += num\n   \
    \         if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n \
    \       }\n        minSum", "        // Fill in the code here\n        return\
    \ 0l", "        // Fill this in.\n        var min = Long.MaxValue\n        var\
    \ sum = 0l\n        for (i <- nums) {\n            sum += i\n            if (sum\
    \ < min) min = sum\n            if (sum > 0) sum = 0\n        }\n        min",
  "        // Fill this in.\n        var min = Long.MaxValue\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < min) min\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        min", "        //\
    \ Fill this in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n  \
    \      for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until\
    \ nums.length) {\n            sum += nums(i)\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var min = Long.MaxValue\n        var sum = 0l\n        for (num <- nums) {\n\
    \            sum += num\n            if (sum < min) min = sum\n            if\
    \ (sum > 0) sum = 0\n        }\n        min", "        // Fill this in.\n    \
    \    var minSum = Long.MaxValue\n        var sum = 0l\n        for (num <- nums)\
    \ {\n            sum += num\n            if (sum < minSum) minSum = sum\n    \
    \        if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill in\
    \ the function body\n        var minSum = Long.MaxValue\n        var sum = 0l\n\
    \        for (num <- nums) {\n            sum += num\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // We can use a sliding window to solve this problem.\n        // The sliding\
    \ window will be of size 2.\n        // The first element of the window will be\
    \ the minimum value of the sub-array.\n        // The second element of the window\
    \ will be the sum of the sub-array.\n        // We will slide the window from\
    \ the beginning of the list to the end of the list.\n        // We will keep track\
    \ of the minimum sum of the sub-array.\n        // If the sum of the sub-array\
    \ is less than the minimum sum, we will update the\n        // minimum sum.\n\
    \        // Time Complexity: O(n)\n        // Space Complexity: O(1)\n       \
    \ var minSum = Long.MaxValue\n        var window = List[Long](0l, 0l)\n      \
    \  for (i <- 0 until nums.length) {\n            window = List(min(window(0),\
    \ window(1)), window(1) + nums(i))\n            minSum = min(minSum, window(1))\n\
    \        }\n        minSum", "        var minSum = Long.MaxValue\n        var\
    \ sum = 0l\n        for (num <- nums) {\n            sum += num\n            if\
    \ (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n \
    \       minSum", "        // Fill this in.\n        var minSum = nums(0)\n   \
    \     var sum = 0l\n        for (i <- nums) {\n            sum += i\n        \
    \    if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n      \
    \  }\n        minSum", "        // Fill this in.\n        var min = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = nums(0)\n\
    \        var sum = 0\n        for (i <- nums) {\n            sum += i\n      \
    \      if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0l)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        // Fill\
    \ this in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n       \
    \ for (num <- nums) {\n            sum += num\n            if (sum < minSum) minSum\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        minSum", "     \
    \   // Fill in the code here\n        return 0l", "        // Fill this in.\n\
    \        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < minSum) minSum = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this\
    \ in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i\
    \ <- nums) {\n            sum += i\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ in the function body\n        var min = nums(0)\n        var sum = 0l\n    \
    \    for (i <- 0 until nums.length) {\n            sum += nums(i)\n          \
    \  if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n   \
    \     min", "        // Fill this in.\n        var minSum = nums(0)\n        var\
    \ currentSum = 0\n        for (i <- nums) {\n            currentSum += i\n   \
    \         if (currentSum < minSum) minSum = currentSum\n            if (currentSum\
    \ > 0) currentSum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < minSum) minSum = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this\
    \ in.\n        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < minSum) minSum = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this\
    \ in.\n        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < minSum) minSum = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        minSum", "        var minSum =\
    \ Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until nums.length)\
    \ {\n            sum += nums(i)\n            minSum = min(minSum, sum)\n     \
    \       if (sum < 0) sum = 0\n        }\n        minSum", "        // Fill this\
    \ in.\n        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums)\
    \ {\n            sum += i\n            if (sum < minSum) minSum = sum\n      \
    \      if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this\
    \ in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n        for (i\
    \ <- nums) {\n            sum += i\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ in the function body\n        return 0l", "        // Fill this in.\n      \
    \  var minSum = Long.MaxValue\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var min = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < min) min = sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        // Fill this in.\n        var\
    \ minSum = Long.MaxValue\n        var sum = 0l\n        for (i <- nums) {\n  \
    \          sum += i\n            if (sum < minSum) minSum = sum\n            if\
    \ (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n \
    \       var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        val n = nums.length\n        val dp = Array.fill(n)(0l)\n        dp(0)\
    \ = nums(0)\n        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1)\
    \ + nums(i), nums(i))\n        }\n        dp.min", "        // Fill this in.\n\
    \        var minSum = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < minSum) minSum = sum\n          \
    \  if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill in the function\
    \ body\n        var minSum = Long.MaxValue\n        var sum = 0l\n        for\
    \ (num <- nums) {\n            sum += num\n            if (sum < minSum) minSum\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        minSum", "     \
    \   // Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n   \
    \     for (num <- nums) {\n            sum += num\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var min = nums(0)\n        var sum = 0l\n   \
    \     for (i <- nums) {\n            sum += i\n            if (sum < min) min\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0l\n        for (num <- nums) {\n\
    \            sum += num\n            if (sum < minSum) minSum = sum\n        \
    \    if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var minSum = Long.MaxValue\n        var sum = 0l\n        for (num <-\
    \ nums) {\n            sum += num\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ this in.\n        var min = Long.MaxValue\n        var sum = 0l\n        for\
    \ (num <- nums) {\n            sum += num\n            if (sum < min) min = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        min", "        // Fill in\
    \ the function body\n        var min = nums(0)\n        var sum = 0l\n       \
    \ for (i <- 0 until nums.length) {\n            sum += nums(i)\n            if\
    \ (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n       \
    \ min", "        // Fill this in.\n        var minSum = nums(0)\n        var sum\
    \ = 0l\n        for (i <- nums) {\n            sum += i\n            if (sum <\
    \ minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill in the code here\n        return 0l", "        // Fill this in.\n\
    \        var minSum = Long.MaxValue\n        var sum = 0l\n        for (num <-\
    \ nums) {\n            sum += num\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ this in.\n        var minSum = Long.MaxValue\n        var sum = 0l\n       \
    \ for (num <- nums) {\n            sum += num\n            if (sum < minSum) minSum\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        minSum", "     \
    \   // Fill in the function body\n        var minSum = Long.MaxValue\n       \
    \ for (i <- 0 until nums.length) {\n            var sum = 0l\n            for\
    \ (j <- i until nums.length) {\n                sum += nums(j)\n             \
    \   if (sum < minSum) minSum = sum\n            }\n        }\n        minSum",
  "        // Fill this in.\n        val n = nums.length\n        val dp = Array.fill(n\
    \ + 1)(0l)\n        var min = Long.MaxValue\n        for (i <- 1 to n) {\n   \
    \         dp(i) = max(dp(i - 1) + nums(i - 1), nums(i - 1))\n            min =\
    \ min(min, dp(i))\n        }\n        min", "        // Fill this in.\n      \
    \  val n = nums.length\n        val dp = Array.fill(n)(0l)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        // Fill this in.\n        var\
    \ minSum = Long.MaxValue\n        var sum = 0l\n        for (num <- nums) {\n\
    \            sum += num\n            if (sum < minSum) minSum = sum\n        \
    \    if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n\
    \        var minSum = Long.MaxValue\n        var sum = 0l\n        for (num <-\
    \ nums) {\n            sum += num\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        var minSum\
    \ = Long.MaxValue\n        var sum = 0l\n        for (num <- nums) {\n       \
    \     sum += num\n            if (sum < minSum) minSum = sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        minSum", "        // Fill this in.\n      \
    \  val n = nums.length\n        var minSum = nums(0)\n        var sum = 0\n  \
    \      for (i <- 0 until n) {\n            sum += nums(i)\n            if (sum\
    \ < minSum) minSum = sum\n            if (sum > 0) sum = 0\n        }\n      \
    \  minSum", "        // Fill in the function body\n        var min = nums(0)\n\
    \        var sum = 0l\n        for (i <- 0 until nums.length) {\n            sum\
    \ += nums(i)\n            if (sum < min) min = sum\n            if (sum > 0) sum\
    \ = 0\n        }\n        min", "        // Fill this in.\n        var minSum\
    \ = nums(0)\n        var sum = 0l\n        for (i <- nums) {\n            sum\
    \ += i\n            if (sum < minSum) minSum = sum\n            if (sum > 0) sum\
    \ = 0\n        }\n        minSum", "        // Fill this in.\n        var minSum\
    \ = nums(0)\n        var sum = 0\n        for (i <- nums) {\n            sum +=\
    \ i\n            if (sum < minSum) minSum = sum\n            if (sum > 0) sum\
    \ = 0\n        }\n        minSum", "        // Fill in the function body\n   \
    \     var min = Long.MaxValue\n        var sum = 0l\n        for (i <- 0 until\
    \ nums.length) {\n            sum += nums(i)\n            if (sum < min) min =\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        min", "        //\
    \ Fill in the missing code\n        var min = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n \
    \           if (sum < min) min = sum\n            if (sum > 0) sum = 0\n     \
    \   }\n        min", "        // Fill this in.\n        val n = nums.length\n\
    \        var minSum = nums(0)\n        var sum = 0\n        for (i <- 0 until\
    \ n) {\n            sum += nums(i)\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ in the function body\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) {\n                minSum = sum\n            }\n   \
    \         if (sum > 0) {\n                sum = 0\n            }\n        }\n\
    \        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (num <- nums) {\n            sum += num\n \
    \           if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        val n = nums.length\n\
    \        val dp = Array.fill(n + 1)(0l)\n        var min = Long.MaxValue\n   \
    \     for (i <- 1 to n) {\n            dp(i) = max(dp(i - 1) + nums(i - 1), nums(i\
    \ - 1))\n            min = min min dp(i)\n        }\n        min", "        //\
    \ Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n        for\
    \ (num <- nums) {\n            sum += num\n            if (sum < minSum) minSum\
    \ = sum\n            if (sum > 0) sum = 0\n        }\n        minSum", "     \
    \   // Fill in the code here\n        var minSum = nums(0)\n        var sum =\
    \ 0\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n  \
    \          if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n\
    \        }\n        minSum", "        // Fill this in.\n        val n = nums.length\n\
    \        var minSum = nums(0)\n        var sum = 0\n        for (i <- 0 until\
    \ n) {\n            sum += nums(i)\n            if (sum < minSum) minSum = sum\n\
    \            if (sum > 0) sum = 0\n        }\n        minSum", "        // Fill\
    \ this in.\n        var minSum = Long.MaxValue\n        var curSum = 0l\n    \
    \    for (i <- nums) {\n            curSum += i\n            if (curSum < minSum)\
    \ minSum = curSum\n            if (curSum > 0) curSum = 0\n        }\n       \
    \ minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n   \
    \     var sum = 0l\n        for (num <- nums) {\n            sum += num\n    \
    \        if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n  \
    \      }\n        minSum", "        // Fill this in.\n        var minSum = Long.MaxValue\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        // Fill this in.\n        def minSubArraySum(nums\
    \ : List[Long], min : Long) : Long = {\n            if (nums.isEmpty) min\n  \
    \          else {\n                val sum = nums.sum\n                if (sum\
    \ < min) minSubArraySum(nums.tail, sum)\n                else minSubArraySum(nums.tail,\
    \ min)\n            }\n        }\n        minSubArraySum(nums, Long.MaxValue)",
  "        // Fill this in.\n        var minSum = nums(0)\n        var sum = 0l\n\
    \        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill this in.\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0l\n        for (i <- nums) {\n            sum += i\n            if (sum < minSum)\
    \ minSum = sum\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        // Fill in the function body\n        var min = nums(0)\n        var sum\
    \ = 0l\n        for (i <- 0 until nums.length) {\n            sum += nums(i)\n\
    \            if (sum < min) min = sum\n            if (sum > 0) sum = 0\n    \
    \    }\n        min", "        // Fill this in.\n        var minSum = nums(0)\n\
    \        var sum = 0l\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum"]
stop_tokens:
- "\n    }\n"

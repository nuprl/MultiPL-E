name: HumanEval_31_is_prime
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return true if a given number is prime, and false otherwise.\n    // >>>\
  \ isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n   \
  \ // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n\
  \    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n\
  \    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) ==\
  \ (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) ==\
  \ (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
  \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) ==\
  \ (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) ==\
  \ (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) ==\
  \ (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
  \ == (false));\n    }\n\n}\n"
completions: ["        if (n <= 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n)\n        for\
    \ (i <- 3l to sqrtN.toLong by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n <= 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val limit = sqrt(n).toLong\n        for (i <- 3l to limit by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtn = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtn by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = math.sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        for (i <-\
    \ 3l to sqrt(n).toLong by 2) {\n            if (n % i == 0) return false\n   \
    \     }\n        return true", "        if (n == 1) return false\n        if (n\
    \ == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt =\
    \ sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n % i\
    \ == 0) return false\n        }\n        return true", "        if (n == 1) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        for (i <- 3l to sqrt(n).toLong by 2) {\n            if (n % i == 0) return\
    \ false\n        }\n        return true", "        if (n == 1) return false\n\
    \        if (n == 2) return true\n        if (n % 2 == 0) return false\n     \
    \   val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n        \
    \    if (n % i == 0) return false\n        }\n        return true", "        if\
    \ (n == 1) return false\n        if (n == 2) return true\n        if (n % 2 ==\
    \ 0) return false\n        for (i <- 3l to sqrt(n).toLong by 2) {\n          \
    \  if (n % i == 0) return false\n        }\n        return true", "        if\
    \ (n == 1) return false\n        if (n == 2) return true\n        if (n % 2 ==\
    \ 0) return false\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n     \
    \   return true", "        if (n < 2) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val limit = sqrt(n).toLong\n\
    \        for (i <- 3l to limit by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) false\n        else if\
    \ (n < 4) true\n        else if (n % 2 == 0) false\n        else if (n < 9) true\n\
    \        else if (n % 3 == 0) false\n        else {\n            val r = floor(sqrt(n)).toLong\n\
    \            var f = 5l\n            while (f <= r) {\n                if (n %\
    \ f == 0) return false\n                if (n % (f + 2) == 0) return false\n \
    \               f += 6\n            }\n            true\n        }", "       \
    \ if (n == 1) return false\n        if (n == 2) return true\n        if (n % 2\
    \ == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n     \
    \   return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtn = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtn by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val limit\
    \ = sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val limit = sqrt(n).toLong\n        for (i <- 3l to limit by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong by 2) {\n   \
    \         if (n % i == 0) return false\n        }\n        return true", "   \
    \     if (n == 2) return true\n        if (n % 2 == 0) return false\n        for\
    \ (i <- 3l to sqrt(n).toLong by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n   \
    \     for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        val sqrtn = sqrt(n).toLong\n        for (i <-\
    \ 2l to sqrtn) {\n            if (n % i == 0) return false\n        }\n      \
    \  return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n)\n  \
    \      for (i <- 3l to sqrtN.toLong by 2) {\n            if (n % i == 0) return\
    \ false\n        }\n        return true", "        if (n == 1) return false\n\
    \        if (n == 2) return true\n        if (n % 2 == 0) return false\n     \
    \   for (i <- 3l to sqrt(n).toLong by 2) {\n            if (n % i == 0) return\
    \ false\n        }\n        return true", "        if (n == 1) return false\n\
    \        if (n == 2) return true\n        if (n % 2 == 0) return false\n     \
    \   val sqrtn = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n      \
    \      if (n % i == 0) return false\n        }\n        return true", "      \
    \  if (n == 2) return true\n        if (n % 2 == 0) return false\n        val\
    \ sqrtn = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n            if\
    \ (n % i == 0) return false\n        }\n        return true", "        if (n ==\
    \ 1) return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        var i = 3\n        while (i <= sqrt(n)) {\n            if (n\
    \ % i == 0) return false\n            i += 2\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n <= 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n < 2) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ {\n            return false\n        }\n        if (n == 2) {\n            return\
    \ true\n        }\n        if (n % 2 == 0) {\n            return false\n     \
    \   }\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2)\
    \ {\n            if (n % i == 0) {\n                return false\n           \
    \ }\n        }\n        return true", "        if (n <= 1) return false\n    \
    \    if (n == 2) return true\n        if (n % 2 == 0) return false\n        var\
    \ i = 3\n        while (i <= sqrt(n)) {\n            if (n % i == 0) return false\n\
    \            i += 2\n        }\n        return true", "        if (n == 1) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n   \
    \         if (n % i == 0) return false\n        }\n        return true", "   \
    \     if (n <= 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong by 2) {\n   \
    \         if (n % i == 0) return false\n        }\n        return true", "   \
    \     if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n <= 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val limit\
    \ = sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2)\
    \ {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n < 2) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val limit = sqrt(n).toLong\n\
    \        for (i <- 3l to limit by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        for (i <-\
    \ 3 to sqrt(n).toInt by 2) {\n            if (n % i == 0) return false\n     \
    \   }\n        return true", "        if (n == 1) return false\n        if (n\
    \ == 2) return true\n        if (n % 2 == 0) return false\n        val limit =\
    \ sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n % i\
    \ == 0) return false\n        }\n        return true", "        if (n == 1) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n \
    \           if (n % i == 0) return false\n        }\n        return true", " \
    \       if (n == 1) return false\n        if (n == 2) return true\n        if\
    \ (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i\
    \ <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n\
    \        return true", "        if (n == 1) return false\n        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        for (i <- 3l to sqrt(n).toLong by 2) {\n            if (n % i\
    \ == 0) return false\n        }\n        return true", "        if (n == 1) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n   \
    \         if (n % i == 0) return false\n        }\n        return true", "   \
    \     if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n < 2) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ false\n        else if (n < 4) true\n        else if (n % 2 == 0) false\n  \
    \      else if (n < 9) true\n        else if (n % 3 == 0) false\n        else\
    \ {\n            val r = floor(sqrt(n)).toLong\n            var f = 5l\n     \
    \       while (f <= r) {\n                if (n % f == 0) return false\n     \
    \           if (n % (f + 2) == 0) return false\n                f += 6\n     \
    \       }\n            true\n        }", "        if (n <= 1) return false\n \
    \       if (n == 2) return true\n        if (n % 2 == 0) return false\n      \
    \  val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n       \
    \     if (n % i == 0) return false\n        }\n        return true", "       \
    \ if (n == 1) return false\n        if (n == 2) return true\n        if (n % 2\
    \ == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n     \
    \   return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = math.sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n <= 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val limit\
    \ = sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ {\n            return false\n        }\n        if (n == 2) {\n            return\
    \ true\n        }\n        if (n % 2 == 0) {\n            return false\n     \
    \   }\n        val sqrtn = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2)\
    \ {\n            if (n % i == 0) {\n                return false\n           \
    \ }\n        }\n        return true", "        if (n == 1) return false\n    \
    \    if (n == 2) return true\n        if (n % 2 == 0) return false\n        val\
    \ limit = sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if\
    \ (n % i == 0) return false\n        }\n        return true", "        if (n ==\
    \ 1) return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 3l to sqrt\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n  \
    \      for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtn\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        for (i <- 2l to sqrt(n).toLong)\
    \ {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n <= 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val limit = sqrt(n).toLong\n\
    \        for (i <- 3l to limit by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n <= 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ false\n        else if (n < 4) true\n        else if (n % 2 == 0) false\n  \
    \      else if (n < 9) true\n        else if (n % 3 == 0) false\n        else\
    \ {\n            val r = floor(sqrt(n)).toLong\n            var f = 5l\n     \
    \       while (f <= r) {\n                if (n % f == 0) return false\n     \
    \           if (n % (f + 2) == 0) return false\n                f += 6\n     \
    \       }\n            true\n        }", "        if (n == 1) return false\n \
    \       if (n == 2) return true\n        if (n % 2 == 0) return false\n      \
    \  val sqrtn = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n       \
    \     if (n % i == 0) return false\n        }\n        return true", "       \
    \ if (n == 1) return false\n        if (n == 2) return true\n        if (n % 2\
    \ == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n    \
    \    return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2)\
    \ {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n <= 1) return false\n        if (n <= 3) return true\n        if (n\
    \ % 2 == 0 || n % 3 == 0) return false\n        var i = 5\n        while (i *\
    \ i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0) return false\n  \
    \          i += 6\n        }\n        return true", "        if (n == 1) {\n \
    \           return false\n        }\n        if (n == 2) {\n            return\
    \ true\n        }\n        if (n % 2 == 0) {\n            return false\n     \
    \   }\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2)\
    \ {\n            if (n % i == 0) {\n                return false\n           \
    \ }\n        }\n        return true", "        if (n == 1) return false\n    \
    \    if (n == 2) return true\n        if (n % 2 == 0) return false\n        val\
    \ sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if\
    \ (n % i == 0) return false\n        }\n        return true", "        if (n ==\
    \ 1) return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val limit = sqrt(n).toLong\n        for (i <- 3l to limit by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val limit = sqrt(n).toLong\n\
    \        for (i <- 3l to limit by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2)\
    \ {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 2) return true\n        if (n % 2 == 0) return false\n       \
    \ val sqrtn = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n        \
    \    if (n % i == 0) return false\n        }\n        return true", "        if\
    \ (n == 1) return false\n        if (n == 2) return true\n        if (n % 2 ==\
    \ 0) return false\n        val max = sqrt(n).toLong\n        for (i <- 3l to max\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n  \
    \      for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) false\n        else if\
    \ (n < 4) true\n        else if (n % 2 == 0) false\n        else if (n < 9) true\n\
    \        else if (n % 3 == 0) false\n        else {\n            val r = floor(sqrt(n)).toLong\n\
    \            var f = 5l\n            while (f <= r) {\n                if (n %\
    \ f == 0) return false\n                if (n % (f + 2) == 0) return false\n \
    \               f += 6\n            }\n            true\n        }", "       \
    \ if (n == 1) return false\n        if (n == 2) return true\n        if (n % 2\
    \ == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n    \
    \    return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 3l to sqrt\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrt = sqrt(n)\n        for\
    \ (i <- 3 to sqrt.toInt by 2) {\n            if (n % i == 0) return false\n  \
    \      }\n        return true", "        if (n <= 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n <= 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt_n = sqrt(n).toLong\n        for (i <- 3l to sqrt_n by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong by 2) {\n   \
    \         if (n % i == 0) return false\n        }\n        return true", "   \
    \     if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) {\n            return false\n     \
    \   }\n        if (n == 2) {\n            return true\n        }\n        val\
    \ sqrtN = sqrt(n).toLong\n        for (i <- 2l to sqrtN) {\n            if (n\
    \ % i == 0) {\n                return false\n            }\n        }\n      \
    \  return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val limit = sqrt(n).toLong\n\
    \        for (i <- 3l to limit by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtn = sqrt(n).toLong\n        for (i <- 3l to sqrtn by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt_n = sqrt(n).toLong\n        for (i <- 3l to sqrt_n by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        val\
    \ sqrt = sqrt(n).toLong\n        for (i <- 2l to sqrt) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val limit\
    \ = sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ false\n        else if (n < 4) true\n        else if (n % 2 == 0) false\n  \
    \      else if (n < 9) true\n        else if (n % 3 == 0) false\n        else\
    \ {\n            val r = floor(sqrt(n)).toLong\n            var f = 5l\n     \
    \       while (f <= r) {\n                if (n % f == 0) return false\n     \
    \           if (n % (f + 2) == 0) return false\n                f += 6\n     \
    \       }\n            true\n        }", "        if (n == 2) return true\n  \
    \      if (n < 2 || n % 2 == 0) return false\n        val sqrt = math.sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        var i =\
    \ 3\n        while (i <= sqrt(n).toInt) {\n            if (n % i == 0) return\
    \ false\n            i += 2\n        }\n        return true", "        if (n ==\
    \ 1) return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val limit = sqrt(n).toLong\n        for (i <- 3l to limit by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) {\n            return false\n     \
    \   }\n        if (n == 2) {\n            return true\n        }\n        if (n\
    \ % 2 == 0) {\n            return false\n        }\n        val limit = sqrt(n).toLong\n\
    \        for (i <- 3l to limit by 2) {\n            if (n % i == 0) {\n      \
    \          return false\n            }\n        }\n        return true", "   \
    \     if (n == 1) {\n            return false\n        }\n        if (n == 2)\
    \ {\n            return true\n        }\n        if (n % 2 == 0) {\n         \
    \   return false\n        }\n        val sqrtN = sqrt(n).toLong\n        var i\
    \ = 3l\n        while (i <= sqrtN) {\n            if (n % i == 0) {\n        \
    \        return false\n            }\n            i += 2\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n  \
    \      for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ false\n        else if (n < 4) true\n        else if (n % 2 == 0) false\n  \
    \      else if (n < 9) true\n        else if (n % 3 == 0) false\n        else\
    \ {\n            val r = floor(sqrt(n)).toLong\n            var f = 5l\n     \
    \       while (f <= r) {\n                if (n % f == 0) return false\n     \
    \           if (n % (f + 2) == 0) return false\n                f += 6\n     \
    \       }\n            true\n        }", "        if (n == 1) return false\n \
    \       if (n == 2) return true\n        if (n % 2 == 0) return false\n      \
    \  val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n       \
    \     if (n % i == 0) return false\n        }\n        return true", "       \
    \ if (n <= 1) return false\n        if (n == 2) return true\n        if (n % 2\
    \ == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n    \
    \    return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val upper = sqrt(n).toLong\n        for (i <- 3l to upper by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n   \
    \     for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n < 2) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n < 2) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n \
    \           if (n % i == 0) return false\n        }\n        return true", " \
    \       if (n <= 1) return false\n        if (n == 2) return true\n        if\
    \ (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i\
    \ <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n\
    \        return true", "        if (n == 1) return false\n        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val max\
    \ = sqrt(n).toLong\n        for (i <- 3l to max by 2) {\n            if (n % i\
    \ == 0) return false\n        }\n        return true", "        if (n == 2) return\
    \ true\n        if (n < 2 || n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        var i =\
    \ 3\n        while (i <= sqrt(n).toInt) {\n            if (n % i == 0) return\
    \ false\n            i += 2\n        }\n        return true", "        if (n ==\
    \ 1) return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 3l to sqrt\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n < 2) return false\n        if (n == 2) return true\n \
    \       if (n % 2 == 0) return false\n        var i = 3\n        while (i <= sqrt(n))\
    \ {\n            if (n % i == 0) return false\n            i += 2\n        }\n\
    \        return true", "        if (n == 1) return false\n        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n <= 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtn\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n)\n        for (i <- 3l to sqrtN.toLong by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        var i = 3l\n        while (i <= sqrt(n)) {\n\
    \            if (n % i == 0) return false\n            i += 2\n        }\n   \
    \     return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n < 2) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n)\n        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0)\
    \ return false\n        }\n        return true", "        if (n == 1) return false\n\
    \        if (n == 2) return true\n        if (n % 2 == 0) return false\n     \
    \   val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n        \
    \    if (n % i == 0) return false\n        }\n        return true", "        if\
    \ (n <= 1) return false\n        if (n == 2) return true\n        if (n % 2 ==\
    \ 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to\
    \ sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n       \
    \ return true", "        if (n <= 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = math.sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        for (i <-\
    \ 3l to sqrt(n).toLong by 2) {\n            if (n % i == 0) return false\n   \
    \     }\n        return true", "        if (n == 1) return false\n        if (n\
    \ == 2) return true\n        if (n % 2 == 0) return false\n        val limit =\
    \ sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n % i\
    \ == 0) return false\n        }\n        return true", "        if (n == 1) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        val max = sqrt(n).toLong\n        for (i <- 3l to max by 2) {\n     \
    \       if (n % i == 0) return false\n        }\n        return true", "     \
    \   if (n == 1) return false\n        if (n == 2) return true\n        if (n %\
    \ 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l\
    \ to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n     \
    \   return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 2l to sqrt)\
    \ {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtn = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtn by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) false\n        else if\
    \ (n < 4) true\n        else if (n % 2 == 0) false\n        else if (n < 9) true\n\
    \        else if (n % 3 == 0) false\n        else {\n            val r = floor(sqrt(n)).toLong\n\
    \            var f = 5l\n            while (f <= r) {\n                if (n %\
    \ f == 0) return false\n                if (n % (f + 2) == 0) return false\n \
    \               f += 6\n            }\n            true\n        }", "       \
    \ if (n == 1) return false\n        if (n == 2) return true\n        if (n % 2\
    \ == 0) return false\n        var i = 3\n        while (i <= sqrt(n).toInt) {\n\
    \            if (n % i == 0) return false\n            i += 2\n        }\n   \
    \     return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n  \
    \      for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 3l to sqrt\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n == 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtn = sqrt(n).toLong\n  \
    \      for (i <- 3l to sqrtn by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val limit\
    \ = sqrt(n).toLong\n        for (i <- 3l to limit by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = math.sqrt(n).toLong\n        for (i <- 3l to sqrt\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true", "        if (n <= 1) return false\n        if (n == 2) return true\n\
    \        if (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n  \
    \      for (i <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrt = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2)\
    \ {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrt by 2) {\n            if (n % i == 0) return false\n        }\n  \
    \      return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrt\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrt by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n == 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val limit = sqrt(n).toLong\n        for (i <-\
    \ 3l to limit by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtn\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtn by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        val sqrtN = sqrt(n).toLong\n\
    \        for (i <- 2l to sqrtN) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by\
    \ 2) {\n            if (n % i == 0) return false\n        }\n        return true",
  "        if (n <= 1) return false\n        if (n == 2) return true\n        if (n\
    \ % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i <-\
    \ 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n \
    \       return true", "        if (n == 1) return false\n        if (n == 2) return\
    \ true\n        if (n % 2 == 0) return false\n        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 3l to sqrt by 2) {\n            if (n % i == 0) return false\n\
    \        }\n        return true", "        if (n == 1) return false\n        if\
    \ (n == 2) return true\n        if (n % 2 == 0) return false\n        val sqrtN\
    \ = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n            if (n %\
    \ i == 0) return false\n        }\n        return true", "        if (n == 1)\
    \ return false\n        if (n == 2) return true\n        if (n % 2 == 0) return\
    \ false\n        for (i <- 3l to sqrt(n).toLong by 2) {\n            if (n % i\
    \ == 0) return false\n        }\n        return true", "        if (n == 1) return\
    \ false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n\
    \        val sqrtN = sqrt(n).toLong\n        for (i <- 3l to sqrtN by 2) {\n \
    \           if (n % i == 0) return false\n        }\n        return true", " \
    \       if (n == 1) return false\n        if (n == 2) return true\n        if\
    \ (n % 2 == 0) return false\n        val sqrtN = sqrt(n).toLong\n        for (i\
    \ <- 3l to sqrtN by 2) {\n            if (n % i == 0) return false\n        }\n\
    \        return true", "        if (n == 1) return false\n        if (n == 2)\
    \ return true\n        if (n % 2 == 0) return false\n        for (i <- 3l to sqrt(n).toLong\
    \ by 2) {\n            if (n % i == 0) return false\n        }\n        return\
    \ true"]
stop_tokens:
- "\n    }\n"

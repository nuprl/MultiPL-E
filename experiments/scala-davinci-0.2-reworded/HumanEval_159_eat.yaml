name: HumanEval_159_eat
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You're a hungry rabbit, and you already have eaten a certain number of carrots,\n\
  \    // but now you need to eat more carrots to complete the day's meals.\n    //\
  \ you should return a list of [ total number of eaten carrots after your meals,\n\
  \    // the number of carrots left after your meals ]\n    // if there are not enough\
  \ remaining carrots, you will eat all remaining carrots, but will still be hungry.\n\
  \    // Example:\n    // >>> eat((5l), (6l), (10l))\n    // (List[Long](11l.toLong,\
  \ 4l.toLong))\n    // >>> eat((4l), (8l), (9l))\n    // (List[Long](12l.toLong,\
  \ 1l.toLong))\n    // >>> eat((1l), (10l), (10l))\n    // (List[Long](11l.toLong,\
  \ 0l.toLong))\n    // >>> eat((2l), (11l), (5l))\n    // (List[Long](7l.toLong,\
  \ 0l.toLong))\n    // Variables:\n    // @number : integer\n    // the number of\
  \ carrots that you have eaten.\n    // @need : integer\n    // the number of carrots\
  \ that you need to eat.\n    // @remaining : integer\n    // the number of remaining\
  \ carrots thet exist in stock\n    // Constrain:\n    // * 0 <= number <= 1000\n\
  \    // * 0 <= need <= 1000\n    // * 0 <= remaining <= 1000\n    // Have fun :)\n\
  \    def eat(number : Long, need : Long, remaining : Long) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(eat((5l), (6l), (10l)).equals((List[Long](11l.toLong,\
  \ 4l.toLong))));\n    assert(eat((4l), (8l), (9l)).equals((List[Long](12l.toLong,\
  \ 1l.toLong))));\n    assert(eat((1l), (10l), (10l)).equals((List[Long](11l.toLong,\
  \ 0l.toLong))));\n    assert(eat((2l), (11l), (5l)).equals((List[Long](7l.toLong,\
  \ 0l.toLong))));\n    assert(eat((4l), (5l), (7l)).equals((List[Long](9l.toLong,\
  \ 2l.toLong))));\n    assert(eat((4l), (5l), (1l)).equals((List[Long](5l.toLong,\
  \ 0l.toLong))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.println\n        // Example:\n        //\
    \ Console.println(\"Hello world\")\n        var result = List[Long]()\n      \
    \  if(remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        result", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        var result = List[Long]()\n\
    \        var total = number + need\n        if (total > remaining) {\n       \
    \     result = List(remaining, 0)\n        } else {\n            result = List(total,\
    \ remaining - total)\n        }\n        result", "        var result = List[Long]()\n\
    \        if (number + need <= remaining) {\n            result = List(number +\
    \ need, remaining - (number + need))\n        } else {\n            result = List(remaining,\
    \ 0)\n        }\n        return result", "        // Write your code here\n  \
    \      // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining < need) {\n            result =\
    \ List(number + remaining, 0)\n        } else {\n            result = List(number\
    \ + need, remaining - need)\n        }\n        result", "        // Write your\
    \ code here\n        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        var total = number + need\n        if (total\
    \ > remaining) {\n            result = List(remaining, 0)\n        } else {\n\
    \            result = List(total, remaining - total)\n        }\n        result",
  "        if (remaining >= need) {\n            List(number + need, remaining - need)\n\
    \        } else {\n            List(number + remaining, 0)\n        }", "    \
    \    // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (number + need <=\
    \ remaining) {\n            result = List(number + need, remaining - (number +\
    \ need))\n        } else {\n            result = List(remaining, 0)\n        }\n\
    \        result", "        // Write your code here\n        // To print results\
    \ to the standard output you can use Console.println\n        // Example:\n  \
    \      // Console.println(\"Hello world\")\n        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        result", "        // Your code here\n        List(0, 0)",
  "        // Your code here\n        var result = List[Long]()\n        if (number\
    \ + need > remaining) {\n            result = List(remaining, 0)\n        } else\
    \ {\n            result = List(number + need, remaining - (number + need))\n \
    \       }\n        result", "        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List[Long](number + need, remaining - need)\n\
    \        } else {\n            result = List[Long](number + remaining, 0)\n  \
    \      }\n        return result", "        var result = List[Long]()\n       \
    \ if (remaining >= need) {\n            result = List[Long](number + need, remaining\
    \ - need)\n        } else {\n            result = List[Long](number + remaining,\
    \ 0)\n        }\n        return result", "        var result = List[Long]()\n\
    \        if (remaining < need) {\n            result = List(number + remaining,\
    \ 0)\n        } else {\n            result = List(number + need, remaining - need)\n\
    \        }\n        result", "        var result = List[Long]()\n        var eaten\
    \ = number\n        var left = remaining\n        if (need <= remaining) {\n \
    \           eaten += need\n            left -= need\n        } else {\n      \
    \      eaten += remaining\n            left = 0\n        }\n        result = eaten\
    \ :: left :: result\n        result", "        // Write your code here\n     \
    \   // To print results to the standard output you can use Console.println\n \
    \       // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        result", "        // your\
    \ code here\n        List[Long](number + need, remaining - need)", "        //\
    \ Write your code here\n        // To print results to the standard output you\
    \ can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = new ListBuffer[Long]()\n        if (remaining\
    \ < need) {\n            result += number + remaining\n            result += 0\n\
    \        } else {\n            result += number + need\n            result +=\
    \ remaining - need\n        }\n        result.toList", "        // your code here\n\
    \        List(0l, 0l)", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        result", "        var result = List[Long]()\n        var total\
    \ = number + need\n        if (total > remaining) {\n            result = List(remaining,\
    \ 0)\n        } else {\n            result = List(total, remaining - total)\n\
    \        }\n        result", "        var result = List[Long]()\n        var eaten\
    \ = number\n        var left = remaining\n        if (need > remaining) {\n  \
    \          eaten += remaining\n            left = 0\n        } else {\n      \
    \      eaten += need\n            left -= need\n        }\n        result = eaten\
    \ :: left :: result\n        result", "        // Write your code here\n     \
    \   // To print results to the standard output you can use Console.println\n \
    \       // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        result", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ Console.println\n        // Example:\n        // Console.println(\"Hello world\"\
    )\n        var result = ListBuffer[Long]()\n        if (remaining >= need) {\n\
    \            result += (number + need)\n            result += (remaining - need)\n\
    \        } else {\n            result += (number + remaining)\n            result\
    \ += 0\n        }\n        result.toList", "        val total = number + min(need,\
    \ remaining)\n        List(total, max(0, remaining - need))", "        var result\
    \ = List[Long]()\n        if (remaining >= need) {\n            result = List[Long](number\
    \ + need, remaining - need)\n        } else {\n            result = List[Long](number\
    \ + remaining, 0)\n        }\n        return result", "        // Write your code\
    \ here\n        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        val\
    \ result = List(number + need, remaining - need)\n        if (result(1) < 0) {\n\
    \            List(number + remaining, 0)\n        } else {\n            result\n\
    \        }", "        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List(number + need, remaining - need)\n        } else\
    \ {\n            result = List(number + remaining, 0)\n        }\n        return\
    \ result", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.println\n        // Example:\n        //\
    \ Console.println(\"Hello world\")\n        val result = List(number + need, remaining\
    \ - need)\n        if (result(1) < 0) {\n            List(number + remaining,\
    \ 0)\n        } else {\n            result\n        }", "        val total = number\
    \ + min(need, remaining)\n        List(total, remaining - min(need, remaining))",
  "        // Your code here\n        return List(number + need, remaining - need)",
  "        val eat = number + need\n        val left = if (eat > remaining) 0 else\
    \ remaining - eat\n        List(eat, left)", "        var result = List[Long]()\n\
    \        var total = number + need\n        if (total > remaining) {\n       \
    \     result = List(remaining, 0)\n        } else {\n            result = List(total,\
    \ remaining - total)\n        }\n        result", "        val total = number\
    \ + need\n        if (total <= remaining) List(total, remaining - total)\n   \
    \     else List(remaining + number, 0)", "        // Write your code here\n  \
    \      // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        val\
    \ total = number + need\n        if (total <= remaining) List(total, remaining\
    \ - total)\n        else List(remaining + number, 0)", "        var result = List[Long]()\n\
    \        var total = number + need\n        if (total > remaining) {\n       \
    \     total = remaining\n        }\n        result = result :+ total\n       \
    \ result = result :+ (remaining - total)\n        return result", "        val\
    \ total = number + remaining\n        val eaten = if (need > total) total else\
    \ need\n        List(eaten, total - eaten)", "        var result = List[Long]()\n\
    \        var total = number + need\n        if (total > remaining) {\n       \
    \     result = List[Long](remaining, 0)\n        } else {\n            result\
    \ = List[Long](total, remaining - total)\n        }\n        return result", " \
    \       var result = List[Long]()\n        if (remaining >= need) {\n        \
    \    result = List(number + need, remaining - need)\n        } else {\n      \
    \      result = List(number + remaining, 0)\n        }\n        return result",
  "        var result = List[Long]()\n        if (remaining >= need) {\n         \
    \   result = List(number + need, remaining - need)\n        } else {\n       \
    \     result = List(number + remaining, 0)\n        }\n        return result",
  "        // Your code here\n        List(number + need, remaining - need)", "  \
    \      var result = List[Long]()\n        var total = number + need\n        if\
    \ (total > remaining) {\n            result = List(remaining, 0)\n        } else\
    \ {\n            result = List(total, remaining - total)\n        }\n        result",
  "        var num = number\n        var rem = remaining\n        var ned = need\n\
    \        var result = List[Long]()\n        while (ned > 0) {\n            if\
    \ (rem > 0) {\n                num += 1\n                rem -= 1\n          \
    \      ned -= 1\n            } else {\n                break\n            }\n\
    \        }\n        result = List(num, rem)\n        return result", "       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        List(number + need, remaining - need)", "        val total\
    \ = number + need\n        if (total > remaining) List(remaining, 0)\n       \
    \ else List(total, remaining - total)", "        // your code here\n        var\
    \ result = List[Long]()\n        if (number + need > remaining) {\n          \
    \  result = List(remaining, 0)\n        } else {\n            result = List(number\
    \ + need, remaining - (number + need))\n        }\n        result", "        var\
    \ result : List[Long] = List()\n        if (remaining >= need) {\n           \
    \ result = List(number + need, remaining - need)\n        } else {\n         \
    \   result = List(number + remaining, 0)\n        }\n        return result", " \
    \       val total = number + min(need, remaining)\n        List(total, max(0,\
    \ remaining - need))", "        // Write your code here\n        // To print results\
    \ to the standard output you can use Console.println\n        // Example:\n  \
    \      // Console.println(\"Hello world\")\n        List(number + need, remaining\
    \ - need)", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.println\n        // Example:\n        //\
    \ Console.println(\"Hello world\")\n        val result = List[Long](number + need,\
    \ remaining - need)\n        if (result(1) < 0) {\n            List[Long](number\
    \ + remaining, 0)\n        } else {\n            result\n        }", "       \
    \ var result = List[Long]()\n        var total = number + need\n        if (total\
    \ > remaining) {\n            result = List(remaining, 0)\n        } else {\n\
    \            result = List(total, remaining - total)\n        }\n        result",
  "        val result = number + need\n        if (result > remaining) {\n       \
    \     List(remaining, 0)\n        } else {\n            List(result, remaining\
    \ - result)\n        }", "        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List[Long](number + need, remaining - need)\n\
    \        } else {\n            result = List[Long](number + remaining, 0)\n  \
    \      }\n        return result", "        // Write your code here\n        //\
    \ To print results to the standard output you can use Console.println\n      \
    \  // Example:\n        // Console.println(\"Hello world\")\n        var result\
    \ = List[Long]()\n        var total = number + need\n        if (total > remaining)\
    \ {\n            result = List(remaining, 0)\n        } else {\n            result\
    \ = List(total, remaining - total)\n        }\n        result", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ Console.println\n        // Example:\n        // Console.println(\"Hello world\"\
    )\n        val total = number + need\n        if (total <= remaining) {\n    \
    \        List(total, remaining - total)\n        } else {\n            List(remaining\
    \ + number, 0)\n        }", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List[Long](number + need,\
    \ remaining - need)\n        } else {\n            result = List[Long](number\
    \ + remaining, 0)\n        }\n        result", "        // Your code here\n  \
    \      var result = List[Long]()\n        if (remaining >= need) {\n         \
    \   result = List(number + need, remaining - need)\n        } else {\n       \
    \     result = List(number + remaining, 0)\n        }\n        result", "    \
    \    var result : List[Long] = List()\n        if (remaining < need) {\n     \
    \       result = List(number + remaining, 0)\n        } else {\n            result\
    \ = List(number + need, remaining - need)\n        }\n        return result",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        val total = number + need\n        if (total <= remaining)\
    \ {\n            List(total, remaining - total)\n        } else {\n          \
    \  List(total - remaining, 0)\n        }", "        val total = number + min(need,\
    \ remaining)\n        List(total, remaining - min(need, remaining))", "      \
    \  // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        val total = number + need\n        if (total <= remaining)\
    \ {\n            List(total, remaining - total)\n        } else {\n          \
    \  List(remaining + number, 0)\n        }", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        result", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ Console.println\n        // Example:\n        // Console.println(\"Hello world\"\
    )\n        var result = List[Long]()\n        if (remaining >= need) {\n     \
    \       result = List(number + need, remaining - need)\n        } else {\n   \
    \         result = List(number + remaining, 0)\n        }\n        result", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List(number + need, remaining - need)\n        } else\
    \ {\n            result = List(number + remaining, 0)\n        }\n        result",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List[Long](number + need, remaining - need)\n      \
    \  } else {\n            result = List[Long](number + remaining, 0)\n        }\n\
    \        result", "        if (number + need <= remaining) List(number + need,\
    \ remaining - (number + need))\n        else List(remaining + number, 0)", " \
    \       // your code here\n        val total = number + need\n        if (total\
    \ > remaining) List(remaining, 0)\n        else List(total, remaining - total)",
  "        var result = List[Long]()\n        if (remaining >= need) {\n         \
    \   result = List(number + need, remaining - need)\n        } else {\n       \
    \     result = List(number + remaining, 0)\n        }\n        return result",
  "        // Your code here\n        List(0, 0)", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        val\
    \ result = List[Long](number + need, remaining - need)\n        if (result(1)\
    \ < 0) {\n            List[Long](number + remaining, 0)\n        } else {\n  \
    \          result\n        }", "        val eaten = number + min(need, remaining)\n\
    \        List(eaten, max(0, remaining - need))", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ total = number + need\n        var left = remaining - need\n        if (left\
    \ < 0) {\n            total = total + left\n            left = 0\n        }\n\
    \        List(total, left)", "        var n = number\n        var r = remaining\n\
    \        var l = List[Long]()\n        if (r >= need) {\n            n += need\n\
    \            r -= need\n        } else {\n            n += r\n            r =\
    \ 0\n        }\n        l = n :: l\n        l = r :: l\n        l.reverse", " \
    \       // Your code here\n        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List(number + need, remaining - need)\n   \
    \     } else {\n            result = List(number + remaining, 0)\n        }\n\
    \        result", "        var result = List[Long]()\n        var total = number\
    \ + need\n        if (total > remaining) {\n            result = List(remaining,\
    \ 0)\n        } else {\n            result = List(total, remaining - total)\n\
    \        }\n        result", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        List(number + need, remaining\
    \ - need)", "        var result = List[Long]()\n        var total = number + need\n\
    \        if (total > remaining) {\n            total = remaining\n        }\n\
    \        result = result :+ total\n        result = result :+ (remaining - total)\n\
    \        return result", "        var result = List[Long]()\n        var total\
    \ = number + need\n        if (total > remaining) {\n            total = remaining\n\
    \        }\n        result = List(total, remaining - total)\n        return result",
  "        // Your code here\n        List(number + need, remaining - need)", "  \
    \      // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List(number + need, remaining - need)\n        } else\
    \ {\n            result = List(number + remaining, 0)\n        }\n        result",
  "        // Your code here\n        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List[Long](number + need, remaining - need)\n\
    \        } else {\n            result = List[Long](number + remaining, 0)\n  \
    \      }\n        result", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        var total = number + need\n\
    \        var left = remaining - need\n        if (left < 0) {\n            total\
    \ = total + left\n            left = 0\n        }\n        List(total, left)",
  "        var result = List[Long]()\n        if (remaining >= need) {\n         \
    \   result = List(number + need, remaining - need)\n        } else {\n       \
    \     result = List(number + remaining, 0)\n        }\n        return result",
  "        var result = List[Long]()\n        if (remaining >= need) {\n         \
    \   result = List[Long](number + need, remaining - need)\n        } else {\n \
    \           result = List[Long](number + remaining, 0)\n        }\n        return\
    \ result", "        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List[Long](number + need, remaining - need)\n      \
    \  } else {\n            result = List[Long](number + remaining, 0)\n        }\n\
    \        return result", "        // Your code here\n        List(number + need,\
    \ remaining - need)", "        // Write your code here\n        // To print results\
    \ to the standard output you can use Console.println\n        // Example:\n  \
    \      // Console.println(\"Hello world\")\n        var total = number + need\n\
    \        var left = remaining - need\n        if (left < 0) {\n            total\
    \ = total + left\n            left = 0\n        }\n        List(total, left)",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (remaining < need)\
    \ {\n            result = List(number + remaining, 0)\n        } else {\n    \
    \        result = List(number + need, remaining - need)\n        }\n        result",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        var total = number\
    \ + need\n        if (total > remaining) {\n            result = List(remaining,\
    \ 0)\n        } else {\n            result = List(total, remaining - total)\n\
    \        }\n        result", "        var result = List[Long]()\n        var total\
    \ = number + need\n        if (total > remaining) {\n            total = remaining\n\
    \        }\n        result = result :+ total\n        result = result :+ (remaining\
    \ - total)\n        return result", "        // Write your code here\n       \
    \ // To print results to the standard output you can use Console.println\n   \
    \     // Example:\n        // Console.println(\"Hello world\")\n        List[Long](number\
    \ + need, remaining - need)", "        // your code here\n        List[Long](0l,\
    \ 0l)", "        // Your code here\n        List(number + need, remaining - need)",
  "        // Your code here\n        List(0l, 0l)", "        var result : List[Long]\
    \ = List()\n        var total = number + need\n        if (total > remaining)\
    \ {\n            total = remaining\n        }\n        result = List(total, remaining\
    \ - total)\n        return result", "        // Write your code here\n       \
    \ // To print results to the standard output you can use Console.println\n   \
    \     // Example:\n        // Console.println(\"Hello world\")\n        var result\
    \ = List[Long]()\n        if (remaining >= need) {\n            result = List(number\
    \ + need, remaining - need)\n        } else {\n            result = List(number\
    \ + remaining, 0)\n        }\n        result", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        result", "        var result\
    \ = List[Long]()\n        if (remaining >= need) {\n            result = List[Long](number\
    \ + need, remaining - need)\n        } else {\n            result = List[Long](number\
    \ + remaining, 0)\n        }\n        return result", "        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        return result", "        val total = number + need\n     \
    \   if (total > remaining) List(remaining, 0)\n        else List(total, remaining\
    \ - total)", "        // your code here\n        return List[Long](0l, 0l)", " \
    \       // your code here\n        var result = List[Long]()\n        var total\
    \ = number + need\n        if (total > remaining) {\n            result = List(remaining,\
    \ 0)\n        } else {\n            result = List(total, remaining - total)\n\
    \        }\n        result", "        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List[Long](number + need, remaining - need)\n\
    \        } else {\n            result = List[Long](number + remaining, 0)\n  \
    \      }\n        return result", "        // Write your code here\n        //\
    \ To print results to the standard output you can use Console.println\n      \
    \  // Example:\n        // Console.println(\"Hello world\")\n        var result\
    \ = List[Long]()\n        if (remaining < need) {\n            result = List[Long](number\
    \ + remaining, 0)\n        } else {\n            result = List[Long](number +\
    \ need, remaining - need)\n        }\n        result", "        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List[Long](number + need,\
    \ remaining - need)\n        } else {\n            result = List[Long](number\
    \ + remaining, 0)\n        }\n        return result", "        // Write your code\
    \ here\n        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List[Long](number + need, remaining - need)\n        } else {\n          \
    \  result = List[Long](number + remaining, 0)\n        }\n        result", " \
    \       var result = List[Long]()\n        if (number + need > remaining) {\n\
    \            result = List(remaining, 0)\n        } else {\n            result\
    \ = List(number + need, remaining - (number + need))\n        }\n        result",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List[Long](number + need, remaining - need)\n      \
    \  } else {\n            result = List[Long](number + remaining, 0)\n        }\n\
    \        result", "        // Write your code here\n        // To print results\
    \ to the standard output you can use Console.println\n        // Example:\n  \
    \      // Console.println(\"Hello world\")\n        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        result", "        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List(number + need, remaining - need)\n   \
    \     } else {\n            result = List(number + remaining, 0)\n        }\n\
    \        return result", "        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List[Long](number + need, remaining - need)\n\
    \        } else {\n            result = List[Long](number + remaining, 0)\n  \
    \      }\n        return result", "        val total = number + need\n       \
    \ if (total <= remaining) List(total, remaining - total)\n        else List(remaining\
    \ + number, 0)", "        var result = List[Long]()\n        if (remaining >=\
    \ need) {\n            result = List(number + need, remaining - need)\n      \
    \  } else {\n            result = List(number + remaining, 0)\n        }\n   \
    \     return result", "        // Your code here\n        var result = List[Long]()\n\
    \        if (remaining < need) {\n            result = List(number + remaining,\
    \ 0)\n        } else {\n            result = List(number + need, remaining - need)\n\
    \        }\n        result", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        List(number + need, remaining\
    \ - need)", "        var result = List[Long]()\n        var total = number + need\n\
    \        if (total > remaining) {\n            result = List(remaining, 0)\n \
    \       } else {\n            result = List(total, remaining - total)\n      \
    \  }\n        result", "        // Write your code here\n        // To print results\
    \ to the standard output you can use print\n        // Example:\n        // print(\"\
    Hello world!\")\n        List(number + need, remaining - need)", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ Console.println\n        // Example:\n        // Console.println(\"Hello world\"\
    )\n        var result = List[Long]()\n        if (remaining < need) {\n      \
    \      result = List(number + remaining, 0)\n        } else {\n            result\
    \ = List(number + need, remaining - need)\n        }\n        result", "     \
    \   var result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        return result", "        var\
    \ result = List[Long]()\n        if (number + need <= remaining) {\n         \
    \   result = List(number + need, remaining - (number + need))\n        } else\
    \ {\n            result = List(remaining, 0)\n        }\n        return result",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List(number + need, remaining - need)\n        } else\
    \ {\n            result = List(number + remaining, 0)\n        }\n        result",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        List(number + need, remaining - need)", "        var result\
    \ = List[Long]()\n        if (remaining < need) {\n            result = List(number\
    \ + remaining, 0)\n        } else {\n            result = List(number + need,\
    \ remaining - need)\n        }\n        result", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        var total = number + need\n        if (total\
    \ > remaining) {\n            result = List(remaining, 0)\n        } else {\n\
    \            result = List(total, remaining - total)\n        }\n        result",
  "        var result = List[Long]()\n        var total = number + need\n        if\
    \ (total > remaining) {\n            total = remaining\n        }\n        result\
    \ = total :: (remaining - total) :: result\n        result", "        var result\
    \ = List[Long]()\n        if (remaining >= need) {\n            result = List(number\
    \ + need, remaining - need)\n        } else {\n            result = List(number\
    \ + remaining, 0)\n        }\n        return result", "        // Write your code\
    \ here\n        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        List(number\
    \ + need, remaining - need)", "        // Write your code here\n        // To\
    \ print results to the standard output you can use Console.println\n        //\
    \ Example:\n        // Console.println(\"Hello world\")\n        List(number +\
    \ need, remaining - need)", "        // Your code here\n        List[Long](0,\
    \ 0)", "        val total = number + need\n        if (total <= remaining) {\n\
    \            List(total, remaining - total)\n        } else {\n            List(remaining\
    \ + number, 0)\n        }", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        List(number + need, remaining\
    \ - need)", "        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List(number + need, remaining - need)\n        } else\
    \ {\n            result = List(number + remaining, 0)\n        }\n        return\
    \ result", "        // Your code here\n        List(number + need, remaining -\
    \ need)", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.println\n        // Example:\n        //\
    \ Console.println(\"Hello world\")\n        val total = number + need\n      \
    \  if (total > remaining) List(remaining, 0)\n        else List(total, remaining\
    \ - total)", "        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List[Long](number + need, remaining - need)\n      \
    \  } else {\n            result = List[Long](number + remaining, 0)\n        }\n\
    \        return result", "        var result = List[Long]()\n        var total\
    \ = number + need\n        if (total > remaining) {\n            result = List(remaining,\
    \ 0)\n        } else {\n            result = List(total, remaining - total)\n\
    \        }\n        result", "        val total = number + need\n        if (total\
    \ <= remaining) List(total, remaining - total)\n        else List(remaining +\
    \ number, 0)", "        // Your code here\n        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List[Long](number + need,\
    \ remaining - need)\n        } else {\n            result = List[Long](number\
    \ + remaining, 0)\n        }\n        result", "        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        return result", "        val total = number + min(need, remaining)\n\
    \        List(total, max(0, remaining - need))", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        val\
    \ total = number + need\n        if (total <= remaining) {\n            List(total,\
    \ remaining - total)\n        } else {\n            List(remaining + number, 0)\n\
    \        }", "        // Write your code here\n        // To print results to\
    \ the standard output you can use Console.println\n        // Example:\n     \
    \   // Console.println(\"Hello world\")\n        var result = List[Long]()\n \
    \       if (remaining >= need) {\n            result = List[Long](number + need,\
    \ remaining - need)\n        } else {\n            result = List[Long](number\
    \ + remaining, 0)\n        }\n        result", '        return List(number + min(need,
    remaining), max(0, remaining - need))', "        // your code here\n        return\
    \ List[Long](0l, 0l)", "        var result = List[Long]()\n        if (number\
    \ + need <= remaining) {\n            result = List(number + need, remaining -\
    \ (number + need))\n        } else {\n            result = List(remaining, 0)\n\
    \        }\n        return result", "        // your code here\n        List(0l,\
    \ 0l)", "        var result = List[Long]()\n        if (number + need <= remaining)\
    \ {\n            result = List(number + need, remaining - (number + need))\n \
    \       } else {\n            result = List(remaining, 0)\n        }\n       \
    \ return result", "        var result = List[Long]()\n        if (remaining >=\
    \ need) {\n            result = List(number + need, remaining - need)\n      \
    \  } else {\n            result = List(number + remaining, 0)\n        }\n   \
    \     return result", "        var result : List[Long] = List()\n        if (remaining\
    \ >= need) {\n            result = List(number + need, remaining - need)\n   \
    \     } else {\n            result = List(number + remaining, 0)\n        }\n\
    \        return result", "        var result = List[Long]()\n        if (number\
    \ + need <= remaining) {\n            result = List(number + need, remaining -\
    \ (number + need))\n        } else {\n            result = List(remaining, 0)\n\
    \        }\n        return result", "        // Write your code here\n       \
    \ // To print results to the standard output you can use Console.println\n   \
    \     // Example:\n        // Console.println(\"Hello world\")\n        var result\
    \ = List[Long]()\n        if (remaining >= need) {\n            result = List(number\
    \ + need, remaining - need)\n        } else {\n            result = List(number\
    \ + remaining, 0)\n        }\n        result", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        List(number\
    \ + need, remaining - need)", "        // Write your code here\n        // To\
    \ print results to the standard output you can use Console.println\n        //\
    \ Example:\n        // Console.println(\"Hello world\")\n        List(number +\
    \ need, remaining - need)", "        var result = List[Long]()\n        var total\
    \ = number + need\n        if (total > remaining) {\n            total = remaining\n\
    \        }\n        result = result :+ total\n        result = result :+ (remaining\
    \ - total)\n        return result", "        // Write your code here\n       \
    \ // To print results to the standard output you can use Console.println\n   \
    \     // Example:\n        // Console.println(\"Hello world\")\n        List(number\
    \ + need, remaining - need)", "        var result = List[Long]()\n        var\
    \ total = number + need\n        if (total > remaining) {\n            total =\
    \ remaining\n        }\n        result = result :+ total\n        result = result\
    \ :+ (remaining - total)\n        return result", "        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        return result", "        val total = number + need\n     \
    \   val left = if (total > remaining) 0 else remaining - total\n        List(total,\
    \ left)", "        var result = List[Long]()\n        if (remaining >= need) {\n\
    \            result = List(number + need, remaining - need)\n        } else {\n\
    \            result = List(number + remaining, 0)\n        }\n        return result",
  "        val result = List[Long](number + min(need, remaining), max(0, remaining\
    \ - need))\n        result", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        var result = List[Long]()\n\
    \        if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        result", '        List(number + min(need, remaining), max(0,
    remaining - need))', "        // your code here\n        val total = number +\
    \ need\n        if (total <= remaining) List(total, remaining - total)\n     \
    \   else List(remaining + number, 0)", "        var result = List[Long]()\n  \
    \      if (remaining >= need) {\n            result = List(number + need, remaining\
    \ - need)\n        } else {\n            result = List(number + remaining, 0)\n\
    \        }\n        return result", "        // Write your code here\n       \
    \ // To print results to the standard output you can use Console.println\n   \
    \     // Example:\n        // Console.println(\"Hello world\")\n        var result\
    \ = List[Long]()\n        if (remaining >= need) {\n            result = List(number\
    \ + need, remaining - need)\n        } else {\n            result = List(number\
    \ + remaining, 0)\n        }\n        result", "        // your code here\n  \
    \      List(0l, 0l)", "        var result = List[Long]()\n        if (remaining\
    \ >= need) {\n            result = List[Long](number + need, remaining - need)\n\
    \        } else {\n            result = List[Long](number + remaining, 0)\n  \
    \      }\n        return result", "        // Write your code here\n        //\
    \ To print results to the standard output you can use Console.println\n      \
    \  // Example:\n        // Console.println(\"Hello world\")\n        var result\
    \ = List[Long]()\n        if (remaining < need) {\n            result = List(number\
    \ + remaining, 0)\n        } else {\n            result = List(number + need,\
    \ remaining - need)\n        }\n        result", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        var total = number + remaining\n        if (total\
    \ >= need) {\n            result = List(need, total - need)\n        } else {\n\
    \            result = List(total, 0)\n        }\n        result", "        //\
    \ your code here\n        List(0, 0)", "        if (remaining >= need) {\n   \
    \         List(number + need, remaining - need)\n        } else {\n          \
    \  List(number + remaining, 0)\n        }", "        // Your code here\n     \
    \   List(0l, 0l)", "        // Write your code here\n        // To print results\
    \ to the standard output you can use Console.println\n        // Example:\n  \
    \      // Console.println(\"Hello world\")\n        val res = List(number + need,\
    \ remaining - need)\n        if (res(1) < 0) {\n            List(number + remaining,\
    \ 0)\n        } else {\n            res\n        }", "        // Write your code\
    \ here\n        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        result", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ Console.println\n        // Example:\n        // Console.println(\"Hello world\"\
    )\n        var result = List[Long]()\n        if (number + need <= remaining)\
    \ {\n            result = List(number + need, remaining - (number + need))\n \
    \       } else {\n            result = List(remaining, 0)\n        }\n       \
    \ result", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.println\n        // Example:\n        //\
    \ Console.println(\"Hello world\")\n        var result = List[Long]()\n      \
    \  if (remaining >= need) {\n            result = List[Long](number + need, remaining\
    \ - need)\n        } else {\n            result = List[Long](number + remaining,\
    \ 0)\n        }\n        result", "        val total = number + need\n       \
    \ val left = total - remaining\n        if (left > 0) List(total, 0)\n       \
    \ else List(total, -left)", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.println\n        // Example:\n\
    \        // Console.println(\"Hello world\")\n        var total = number + need\n\
    \        var left = remaining - need\n        if (left < 0) {\n            total\
    \ = total + left\n            left = 0\n        }\n        List(total, left)",
  "        var result = List[Long]()\n        if (remaining >= need) {\n         \
    \   result = List(number + need, remaining - need)\n        } else {\n       \
    \     result = List(number + remaining, 0)\n        }\n        return result",
  "        val result = number + need\n        if (result > remaining) {\n       \
    \     List(remaining, 0)\n        } else {\n            List(result, remaining\
    \ - result)\n        }", "        // your code here\n        List(number + need,\
    \ remaining - need)", "        val total = number + need\n        if (total <=\
    \ remaining) List(total, remaining - total)\n        else List(remaining + number,\
    \ 0)", "        var result = List[Long]()\n        if (remaining >= need) {\n\
    \            result = List(number + need, remaining - need)\n        } else {\n\
    \            result = List(number + remaining, 0)\n        }\n        return result",
  "        // Your code here\n        val result = number + need\n        if (result\
    \ > remaining) {\n            List(remaining, 0)\n        } else {\n         \
    \   List(result, remaining - result)\n        }", "        val total = number\
    \ + min(need, remaining)\n        List(total, remaining - min(need, remaining))",
  "        var total = number + need\n        var left = remaining - need\n      \
    \  if (left < 0) {\n            total = total + left\n            left = 0\n \
    \       }\n        List(total, left)", "        // Write your code here\n    \
    \    // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        var total = number + need\n        if (total\
    \ > remaining) {\n            result = List[Long](remaining, 0)\n        } else\
    \ {\n            result = List[Long](total, remaining - total)\n        }\n  \
    \      result", "        val total = number + need\n        if (total > remaining)\
    \ {\n            List(remaining, 0)\n        } else {\n            List(total,\
    \ remaining - total)\n        }", "        // your code here\n        return List(0l,\
    \ 0l)", "        // Your code here\n        List(0, 0)", "        // Write your\
    \ code here\n        // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        var\
    \ result = List[Long]()\n        if (remaining >= need) {\n            result\
    \ = List(number + need, remaining - need)\n        } else {\n            result\
    \ = List(number + remaining, 0)\n        }\n        result", "        // Your\
    \ code here\n        List(0, 0)", "        var result = List[Long]()\n       \
    \ if (number + need <= remaining) {\n            result = List(number + need,\
    \ remaining - (number + need))\n        } else {\n            result = List(remaining,\
    \ 0)\n        }\n        return result", "        val total = number + min(need,\
    \ remaining)\n        List(total, max(0, remaining - need))", "        val total\
    \ = number + need\n        if (total > remaining) List(remaining, 0)\n       \
    \ else List(total, remaining - total)", "        var total = number + need\n \
    \       if (total > remaining) {\n            total = remaining\n        }\n \
    \       List(total, remaining - total)", "        // Write your code here\n  \
    \      // To print results to the standard output you can use Console.println\n\
    \        // Example:\n        // Console.println(\"Hello world\")\n        List(0l)",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use Console.println\n        // Example:\n        // Console.println(\"\
    Hello world\")\n        val total = number + need\n        if (total > remaining)\
    \ {\n            List(remaining, 0)\n        } else {\n            List(total,\
    \ remaining - total)\n        }", "        // Write your code here\n        //\
    \ To print results to the standard output you can use Console.println\n      \
    \  // Example:\n        // Console.println(\"Hello world\")\n        val total\
    \ = number + need\n        val left = remaining - need\n        if (left < 0)\
    \ {\n            List(total, 0)\n        } else {\n            List(total, left)\n\
    \        }", "        var result = List[Long]()\n        if (remaining >= need)\
    \ {\n            result = List(number + need, remaining - need)\n        } else\
    \ {\n            result = List(number + remaining, 0)\n        }\n        return\
    \ result", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.println\n        // Example:\n        //\
    \ Console.println(\"Hello world\")\n        val result = List(number + need, remaining\
    \ - need)\n        if (result(1) < 0) {\n            List(result(0) + result(1),\
    \ 0)\n        } else {\n            result\n        }"]
stop_tokens:
- "\n    }\n"

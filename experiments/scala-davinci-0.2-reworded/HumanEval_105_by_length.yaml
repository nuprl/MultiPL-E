name: HumanEval_105_by_length
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of integers, sort the integers that are between 1 and 9 inclusive,\n\
  \    // reverse the resulting list, and then replace each digit by its corresponding\
  \ name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
  Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong)))\n\
  \    // (List[String](\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\"\
  , \"One\", \"One\"))\n    // If the list is empty, return an empty list:\n    //\
  \ >>> byLength((List[Long]()))\n    // (List[String]())\n    // If the list has\
  \ any strange number ignore it:\n    // >>> byLength((List[Long](1l.toLong, -1l.toLong,\
  \ 55l.toLong)))\n    // (List[String](\"One\"))\n    def byLength(arr : List[Long])\
  \ : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n\
  \    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"\
  One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"\
  Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n"
completions: ["        // your code here\n        null", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var list = new ListBuffer[String]()\n        for (i <- arr) {\n     \
    \       if (i > 0 && i < 10) {\n                list += i.toString\n         \
    \   }\n        }\n        list.sorted.reverse.map(x => x match {\n           \
    \ case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n            case \"\
    3\" => \"Three\"\n            case \"4\" => \"Four\"\n            case \"5\" =>\
    \ \"Five\"\n            case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\
    \n            case \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n  \
    \      }).toList", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var list = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                list = list\
    \ :+ \"One\"\n            }\n            else if (i == 2) {\n                list\
    \ = list :+ \"Two\"\n            }\n            else if (i == 3) {\n         \
    \       list = list :+ \"Three\"\n            }\n            else if (i == 4)\
    \ {\n                list = list :+ \"Four\"\n            }\n            else\
    \ if (i == 5) {\n                list = list :+ \"Five\"\n            }\n    \
    \        else if (i == 6) {\n                list = list :+ \"Six\"\n        \
    \    }\n            else if (i == 7) {\n                list = list :+ \"Seven\"\
    \n            }\n            else if (i == 8) {\n                list = list :+\
    \ \"Eight\"\n            }\n            else if (i == 9) {\n                list\
    \ = list :+ \"Nine\"\n            }\n        }\n        list.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[String]()\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) {\n                list = list :+ i.toString\n\
    \            }\n        }\n        list = list.sorted\n        list = list.reverse\n\
    \        for (i <- 0 until list.length) {\n            list(i) = list(i).replace(\"\
    1\", \"One\")\n            list(i) = list(i).replace(\"2\", \"Two\")\n       \
    \     list(i) = list(i).replace(\"3\", \"Three\")\n            list(i) = list(i).replace(\"\
    4\", \"Four\")\n            list(i) = list(i).replace(\"5\", \"Five\")\n     \
    \       list(i) = list(i).replace(\"6\", \"Six\")\n            list(i) = list(i).replace(\"\
    7\", \"Seven\")\n            list(i) = list(i).replace(\"8\", \"Eight\")\n   \
    \         list(i) = list(i).replace(\"9\", \"Nine\")\n        }\n        list",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var lst = List[String]()\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) {\n                lst = lst :+ i.toString\n\
    \            }\n        }\n        var lst1 = lst.sorted\n        var lst2 = lst1.reverse\n\
    \        var lst3 = List[String]()\n        for (i <- lst2) {\n            if\
    \ (i == \"1\") {\n                lst3 = lst3 :+ \"One\"\n            }\n    \
    \        else if (i == \"2\") {\n                lst3 = lst3 :+ \"Two\"\n    \
    \        }\n            else if (i == \"3\") {\n                lst3 = lst3 :+\
    \ \"Three\"\n            }\n            else if (i == \"4\") {\n             \
    \   lst3 = lst3 :+ \"Four\"\n            }\n            else if (i == \"5\") {\n\
    \                lst3 = lst3 :+ \"Five\"\n            }\n            else if (i\
    \ == \"6\") {\n                lst3 = lst3 :+ \"Six\"\n            }\n       \
    \     else if (i == \"7\") {\n                lst3 = lst3 :+ \"Seven\"\n     \
    \       }\n            else if (i == \"8\") {\n                lst3 = lst3 :+\
    \ \"Eight\"\n            }\n            else if (i == \"9\") {\n             \
    \   lst3 = lst3 :+ \"Nine\"\n            }\n        }\n        return lst3", " \
    \       // Your code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        val nums = arr.filter(x => x >= 1 && x <= 9)\n        val\
    \ numsSorted = nums.sorted\n        val numsReversed = numsSorted.reverse\n  \
    \      val numsReversedStrings = numsReversed.map(x => x match {\n           \
    \ case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\
    \n            case 4 => \"Four\"\n            case 5 => \"Five\"\n           \
    \ case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"\
    Eight\"\n            case 9 => \"Nine\"\n        })\n        numsReversedStrings",
  "        // your code here\n        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        l.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })", "        // your code here\n        val map = Map(1l.toLong ->\
    \ \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        val lst = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        val\
    \ lst2 = lst.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })\n        lst2", "        // your code here\n        var result =\
    \ List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted\n        result = result.reverse\n        for\
    \ (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        // your code here\n     \
    \   var result = List[String]()\n        for (i <- arr) {\n            if (i >\
    \ 0 && i < 10) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        // your code here\n     \
    \   var result = List[String]()\n        for (i <- arr) {\n            if (i >=\
    \ 1 && i <= 9) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        // your code here\n     \
    \   val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // your code here\n        val l = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse\n        l.map(x => x match {\n            case 1\
    \ => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n\
    \            case 4 => \"Four\"\n            case 5 => \"Five\"\n            case\
    \ 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        // Fill up this function\
    \ body\n        // You may also define new functions\n        // to help you in\
    \ solving this problem\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        var result = new ListBuffer[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result += i.toString\n            }\n        }\n        result.toList.sorted.reverse.map(x\
    \ => x match {\n            case \"1\" => \"One\"\n            case \"2\" => \"\
    Two\"\n            case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\
    \n            case \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n    \
    \        case \"7\" => \"Seven\"\n            case \"8\" => \"Eight\"\n      \
    \      case \"9\" => \"Nine\"\n        })", "        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result = result :+ i.toString\n            }\n        }\n        result.sortWith(_\
    \ < _).reverse.map(x => x match {\n            case \"1\" => \"One\"\n       \
    \     case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n           \
    \ case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n            case\
    \ \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n            case \"8\"\
    \ => \"Eight\"\n            case \"9\" => \"Nine\"\n        })", "        val\
    \ result = new ListBuffer[String]\n        for (i <- arr) {\n            if (i\
    \ >= 1 && i <= 9) {\n                result += i.toString\n            }\n   \
    \     }\n        result.toList.sorted.reverse.map(x => x match {\n           \
    \ case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n            case \"\
    3\" => \"Three\"\n            case \"4\" => \"Four\"\n            case \"5\" =>\
    \ \"Five\"\n            case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\
    \n            case \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n  \
    \      })", "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var lst = new\
    \ ListBuffer[String]()\n        for (i <- arr) {\n            if (i >= 1 && i\
    \ <= 9) {\n                lst += i.toString\n            }\n        }\n     \
    \   var lst2 = new ListBuffer[String]()\n        for (i <- lst.sorted.reverse)\
    \ {\n            i match {\n                case \"1\" => lst2 += \"One\"\n  \
    \              case \"2\" => lst2 += \"Two\"\n                case \"3\" => lst2\
    \ += \"Three\"\n                case \"4\" => lst2 += \"Four\"\n             \
    \   case \"5\" => lst2 += \"Five\"\n                case \"6\" => lst2 += \"Six\"\
    \n                case \"7\" => lst2 += \"Seven\"\n                case \"8\"\
    \ => lst2 += \"Eight\"\n                case \"9\" => lst2 += \"Nine\"\n     \
    \       }\n        }\n        lst2.toList", "        arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\n \
    \           case 2 => \"Two\"\n            case 3 => \"Three\"\n            case\
    \ 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\
    \n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n         \
    \   case 9 => \"Nine\"\n        })", "        // Fill up this function body\n\
    \        // You may create other functions as well, if required\n        var lst\
    \ = List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                lst = lst :+ i.toString\n            }\n        }\n     \
    \   lst = lst.sorted.reverse\n        var lst2 = List[String]()\n        for (i\
    \ <- lst) {\n            if (i == \"1\") {\n                lst2 = lst2 :+ \"\
    One\"\n            }\n            else if (i == \"2\") {\n                lst2\
    \ = lst2 :+ \"Two\"\n            }\n            else if (i == \"3\") {\n     \
    \           lst2 = lst2 :+ \"Three\"\n            }\n            else if (i ==\
    \ \"4\") {\n                lst2 = lst2 :+ \"Four\"\n            }\n         \
    \   else if (i == \"5\") {\n                lst2 = lst2 :+ \"Five\"\n        \
    \    }\n            else if (i == \"6\") {\n                lst2 = lst2 :+ \"\
    Six\"\n            }\n            else if (i == \"7\") {\n                lst2\
    \ = lst2 :+ \"Seven\"\n            }\n            else if (i == \"8\") {\n   \
    \             lst2 = lst2 :+ \"Eight\"\n            }\n            else if (i\
    \ == \"9\") {\n                lst2 = lst2 :+ \"Nine\"\n            }\n      \
    \  }\n        lst2", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var l = List[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   l = i.toString :: l\n            }\n        }\n        l = l.sorted\n    \
    \    l = l.reverse\n        for (i <- 0 until l.length) {\n            l(i) =\
    \ l(i).replace(\"1\", \"One\")\n            l(i) = l(i).replace(\"2\", \"Two\"\
    )\n            l(i) = l(i).replace(\"3\", \"Three\")\n            l(i) = l(i).replace(\"\
    4\", \"Four\")\n            l(i) = l(i).replace(\"5\", \"Five\")\n           \
    \ l(i) = l(i).replace(\"6\", \"Six\")\n            l(i) = l(i).replace(\"7\",\
    \ \"Seven\")\n            l(i) = l(i).replace(\"8\", \"Eight\")\n            l(i)\
    \ = l(i).replace(\"9\", \"Nine\")\n        }\n        l", "        // your code\
    \ here\n        var result = List[String]()\n        for (i <- arr) {\n      \
    \      if (i > 0 && i < 10) {\n                result = result :+ i.toString\n\
    \            }\n        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        val map = Map[Long, String](1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        // your\
    \ code here\n        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        val filtered = arr.filter(x => x >= 1 && x <= 9)\n        val\
    \ sorted = filtered.sorted\n        val reversed = sorted.reverse\n        reversed.map(x\
    \ => map(x))", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var list = new ListBuffer[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   list += i.toString\n            }\n        }\n        list.sorted.reverse.map(x\
    \ => x match {\n            case \"1\" => \"One\"\n            case \"2\" => \"\
    Two\"\n            case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\
    \n            case \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n    \
    \        case \"7\" => \"Seven\"\n            case \"8\" => \"Eight\"\n      \
    \      case \"9\" => \"Nine\"\n        }).toList", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        list.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // your code here\n        var result : List[String] = List()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        val arr2 = arr.filter(x => x >= 1 && x <= 9)\n        val\
    \ arr3 = arr2.sorted.reverse\n        val arr4 = arr3.map(x => x match {\n   \
    \         case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3\
    \ => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n        arr4",
  '        // your code here', "        // your code here\n        null", "      \
    \  val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\"\
    , 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))",
  "        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        val reversed\
    \ = sorted.reverse\n        reversed.map(x => x match {\n            case 1 =>\
    \ \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n  \
    \          case 4 => \"Four\"\n            case 5 => \"Five\"\n            case\
    \ 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        list.map(x => x match {\n     \
    \       case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 =>\
    \ \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n\
    \            case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))", "        // Write your code here\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i >= 1 && i <= 9) {\n                result = result :+ i.toString\n      \
    \      }\n        }\n        result = result.sorted.reverse\n        for (i <-\
    \ 0 until result.length) {\n            result(i) = result(i).replace(\"1\", \"\
    One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\"\
    ).replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"\
    8\", \"Eight\").replace(\"9\", \"Nine\")\n        }\n        result", "      \
    \  // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = new ListBuffer[String]()\n        for (i <-\
    \ arr) {\n            if (i >= 1 && i <= 9) {\n                list += i.toString\n\
    \            }\n        }\n        var list2 = new ListBuffer[String]()\n    \
    \    for (i <- list.reverse) {\n            i match {\n                case \"\
    1\" => list2 += \"One\"\n                case \"2\" => list2 += \"Two\"\n    \
    \            case \"3\" => list2 += \"Three\"\n                case \"4\" => list2\
    \ += \"Four\"\n                case \"5\" => list2 += \"Five\"\n             \
    \   case \"6\" => list2 += \"Six\"\n                case \"7\" => list2 += \"\
    Seven\"\n                case \"8\" => list2 += \"Eight\"\n                case\
    \ \"9\" => list2 += \"Nine\"\n            }\n        }\n        list2.toList",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val l = arr.filter(x => x > 0 && x < 10).sorted.reverse\n\
    \        val m = l.map(x => x match {\n            case 1 => \"One\"\n       \
    \     case 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 =>\
    \ \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\n  \
    \          case 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case\
    \ 9 => \"Nine\"\n        })\n        m", "        val sorted = arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted\n        val reversed = sorted.reverse\n        reversed.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var l = List[String]()\n        for (i\
    \ <- arr) {\n            if (i > 0 && i < 10) {\n                l = l :+ i.toString\n\
    \            }\n        }\n        l = l.sorted\n        l = l.reverse\n     \
    \   for (i <- 0 until l.length) {\n            l(i) = l(i).replace(\"1\", \"One\"\
    )\n            l(i) = l(i).replace(\"2\", \"Two\")\n            l(i) = l(i).replace(\"\
    3\", \"Three\")\n            l(i) = l(i).replace(\"4\", \"Four\")\n          \
    \  l(i) = l(i).replace(\"5\", \"Five\")\n            l(i) = l(i).replace(\"6\"\
    , \"Six\")\n            l(i) = l(i).replace(\"7\", \"Seven\")\n            l(i)\
    \ = l(i).replace(\"8\", \"Eight\")\n            l(i) = l(i).replace(\"9\", \"\
    Nine\")\n        }\n        l", '        // your code here', "        // your\
    \ code here\n        return List[String]()", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var list = ListBuffer[String]()\n        for (i <- arr) {\n            if (i\
    \ >= 1 && i <= 9) {\n                list += i.toString\n            }\n     \
    \   }\n        list = list.sorted\n        var list2 = ListBuffer[String]()\n\
    \        for (i <- list.reverse) {\n            i match {\n                case\
    \ \"1\" => list2 += \"One\"\n                case \"2\" => list2 += \"Two\"\n\
    \                case \"3\" => list2 += \"Three\"\n                case \"4\"\
    \ => list2 += \"Four\"\n                case \"5\" => list2 += \"Five\"\n    \
    \            case \"6\" => list2 += \"Six\"\n                case \"7\" => list2\
    \ += \"Seven\"\n                case \"8\" => list2 += \"Eight\"\n           \
    \     case \"9\" => list2 += \"Nine\"\n            }\n        }\n        list2.toList",
  "        // your code here\n        var result = List[String]()\n        for (i\
    \ <- arr) {\n            if (i >= 1 && i <= 9) {\n                result = result\
    \ :+ i.toString\n            }\n        }\n        result = result.sorted\n  \
    \      result = result.reverse\n        for (i <- 0 until result.length) {\n \
    \           result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i >= 1 && i <= 9) {\n                result = result\
    \ :+ i.toString\n            }\n        }\n        result = result.sorted.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\"\
    , \"Four\").replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"\
    Seven\").replace(\"8\", \"Eight\").replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        // your code here\n        val l = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        l.map(x => x match {\n            case\
    \ 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\
    \n            case 4 => \"Four\"\n            case 5 => \"Five\"\n           \
    \ case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"\
    Eight\"\n            case 9 => \"Nine\"\n        })", "        val m = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => m(x))", "        // Fill up this function body\n\
    \        // You may create other functions as well, if required\n        def toString(n\
    \ : Long) : String = n match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n            case _ => \"\"\n        }\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => toString(x))", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i >=\
    \ 1 && i <= 9) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        var result2 = List[String]()\n\
    \        for (i <- result.reverse) {\n            if (i == \"1\") {\n        \
    \        result2 = result2 :+ \"One\"\n            }\n            else if (i ==\
    \ \"2\") {\n                result2 = result2 :+ \"Two\"\n            }\n    \
    \        else if (i == \"3\") {\n                result2 = result2 :+ \"Three\"\
    \n            }\n            else if (i == \"4\") {\n                result2 =\
    \ result2 :+ \"Four\"\n            }\n            else if (i == \"5\") {\n   \
    \             result2 = result2 :+ \"Five\"\n            }\n            else if\
    \ (i == \"6\") {\n                result2 = result2 :+ \"Six\"\n            }\n\
    \            else if (i == \"7\") {\n                result2 = result2 :+ \"Seven\"\
    \n            }\n            else if (i == \"8\") {\n                result2 =\
    \ result2 :+ \"Eight\"\n            }\n            else if (i == \"9\") {\n  \
    \              result2 = result2 :+ \"Nine\"\n            }\n        }\n     \
    \   result2", "        // Write your code here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\"\
    , \"Four\").replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"\
    Seven\").replace(\"8\", \"Eight\").replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        // your code here\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\n      \
    \      case 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4\
    \ => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\n\
    \            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n          \
    \  case 9 => \"Nine\"\n        })", "        val map = Map(1l.toLong -> \"One\"\
    , 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))", "        var result = List[String]()\n        for (i <- arr) {\n\
    \            if (i >= 1 && i <= 9) {\n                result = result :+ i.toString\n\
    \            }\n        }\n        result.sorted.reverse.map(x => x match {\n\
    \            case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n      \
    \      case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\n         \
    \   case \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n            case\
    \ \"7\" => \"Seven\"\n            case \"8\" => \"Eight\"\n            case \"\
    9\" => \"Nine\"\n        })", "        // your code here\n        var result =\
    \ List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted\n        result = result.reverse\n        for\
    \ (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        // This is your job. :)\n\
    \        val a = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        a.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        val m = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong\
    \ -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"\
    Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => m(x))", " \
    \       // Write your code here\n        return null;", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))", "        val l = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\n\
    \            case 2 => \"Two\"\n            case 3 => \"Three\"\n            case\
    \ 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\
    \n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n         \
    \   case 9 => \"Nine\"\n        })\n        l", "        // your code here\n \
    \       val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })\n        l", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var list = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                list = list\
    \ :+ \"One\"\n            }\n            else if (i == 2) {\n                list\
    \ = list :+ \"Two\"\n            }\n            else if (i == 3) {\n         \
    \       list = list :+ \"Three\"\n            }\n            else if (i == 4)\
    \ {\n                list = list :+ \"Four\"\n            }\n            else\
    \ if (i == 5) {\n                list = list :+ \"Five\"\n            }\n    \
    \        else if (i == 6) {\n                list = list :+ \"Six\"\n        \
    \    }\n            else if (i == 7) {\n                list = list :+ \"Seven\"\
    \n            }\n            else if (i == 8) {\n                list = list :+\
    \ \"Eight\"\n            }\n            else if (i == 9) {\n                list\
    \ = list :+ \"Nine\"\n            }\n        }\n        list.sorted.reverse",
  "        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n\
    \        l", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                result\
    \ = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   return result", "        val map = Map(1l.toLong -> \"One\", 2l.toLong ->\
    \ \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        result", "        // Write your code here\n        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val result = for (i\
    \ <- arr if map.contains(i)) yield map(i)\n        result.sorted.reverse", " \
    \       // your code here\n        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        l.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var res = List[String]()\n  \
    \      arr.foreach(x => if (x >= 1 && x <= 9) res = res :+ x.toString)\n     \
    \   res.sorted.reverse.map(x => x match {\n            case \"1\" => \"One\"\n\
    \            case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n    \
    \        case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n        \
    \    case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n            case\
    \ \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n        })", "     \
    \   // your code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var lst = List[String]()\n        for\
    \ (i <- arr) {\n            if (i > 0 && i < 10) {\n                lst = lst\
    \ :+ i.toString\n            }\n        }\n        lst = lst.sorted.reverse\n\
    \        var lst2 = List[String]()\n        for (i <- lst) {\n            if (i\
    \ == \"1\") {\n                lst2 = lst2 :+ \"One\"\n            }\n       \
    \     else if (i == \"2\") {\n                lst2 = lst2 :+ \"Two\"\n       \
    \     }\n            else if (i == \"3\") {\n                lst2 = lst2 :+ \"\
    Three\"\n            }\n            else if (i == \"4\") {\n                lst2\
    \ = lst2 :+ \"Four\"\n            }\n            else if (i == \"5\") {\n    \
    \            lst2 = lst2 :+ \"Five\"\n            }\n            else if (i ==\
    \ \"6\") {\n                lst2 = lst2 :+ \"Six\"\n            }\n          \
    \  else if (i == \"7\") {\n                lst2 = lst2 :+ \"Seven\"\n        \
    \    }\n            else if (i == \"8\") {\n                lst2 = lst2 :+ \"\
    Eight\"\n            }\n            else if (i == \"9\") {\n                lst2\
    \ = lst2 :+ \"Nine\"\n            }\n        }\n        lst2", "        val l\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n    \
    \        case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3\
    \ => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n        l",
  "        var result = List[String]()\n        for (i <- arr) {\n            if (i\
    \ > 0 && i < 10) {\n                result = result :+ i.toString\n          \
    \  }\n        }\n        result.sorted.reverse.map(x => x match {\n          \
    \  case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n            case\
    \ \"3\" => \"Three\"\n            case \"4\" => \"Four\"\n            case \"\
    5\" => \"Five\"\n            case \"6\" => \"Six\"\n            case \"7\" =>\
    \ \"Seven\"\n            case \"8\" => \"Eight\"\n            case \"9\" => \"\
    Nine\"\n        })", "        // Write your code here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result = result :+ i.toString\n            }\n        }\n        result =\
    \ result.sorted\n        result = result.reverse\n        for (i <- 0 until result.length)\
    \ {\n            if (result(i) == \"1\") {\n                result = result.updated(i,\
    \ \"One\")\n            }\n            else if (result(i) == \"2\") {\n      \
    \          result = result.updated(i, \"Two\")\n            }\n            else\
    \ if (result(i) == \"3\") {\n                result = result.updated(i, \"Three\"\
    )\n            }\n            else if (result(i) == \"4\") {\n               \
    \ result = result.updated(i, \"Four\")\n            }\n            else if (result(i)\
    \ == \"5\") {\n                result = result.updated(i, \"Five\")\n        \
    \    }\n            else if (result(i) == \"6\") {\n                result = result.updated(i,\
    \ \"Six\")\n            }\n            else if (result(i) == \"7\") {\n      \
    \          result = result.updated(i, \"Seven\")\n            }\n            else\
    \ if (result(i) == \"8\") {\n                result = result.updated(i, \"Eight\"\
    )\n            }\n            else if (result(i) == \"9\") {\n               \
    \ result = result.updated(i, \"Nine\")\n            }\n        }\n        return\
    \ result", "        // your code here\n        var result = List[String]()\n \
    \       for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                result\
    \ = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        var result2 = List[String]()\n        for (i <- result.reverse) {\n \
    \           if (i == \"1\") {\n                result2 = result2 :+ \"One\"\n\
    \            }\n            else if (i == \"2\") {\n                result2 =\
    \ result2 :+ \"Two\"\n            }\n            else if (i == \"3\") {\n    \
    \            result2 = result2 :+ \"Three\"\n            }\n            else if\
    \ (i == \"4\") {\n                result2 = result2 :+ \"Four\"\n            }\n\
    \            else if (i == \"5\") {\n                result2 = result2 :+ \"Five\"\
    \n            }\n            else if (i == \"6\") {\n                result2 =\
    \ result2 :+ \"Six\"\n            }\n            else if (i == \"7\") {\n    \
    \            result2 = result2 :+ \"Seven\"\n            }\n            else if\
    \ (i == \"8\") {\n                result2 = result2 :+ \"Eight\"\n           \
    \ }\n            else if (i == \"9\") {\n                result2 = result2 :+\
    \ \"Nine\"\n            }\n        }\n        result2", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var res = new ListBuffer[String]\n        var map = Map(1l.toLong ->\
    \ \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        for (i <- arr) {\n           \
    \ if (i >= 1 && i <= 9) {\n                res += map(i)\n            }\n    \
    \    }\n        res.toList.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted.reverse\n        for (i <- 0 until result.length)\
    \ {\n            result(i) = result(i).replace(\"1\", \"One\").replace(\"2\",\
    \ \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\", \"\
    Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"Eight\"\
    ).replace(\"9\", \"Nine\")\n        }\n        result", "        // your code\
    \ here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = new ListBuffer[String]()\n        for\
    \ (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                list += i.toString\n\
    \            }\n        }\n        var list2 = new ListBuffer[String]()\n    \
    \    for (i <- list.reverse) {\n            i match {\n                case \"\
    1\" => list2 += \"One\"\n                case \"2\" => list2 += \"Two\"\n    \
    \            case \"3\" => list2 += \"Three\"\n                case \"4\" => list2\
    \ += \"Four\"\n                case \"5\" => list2 += \"Five\"\n             \
    \   case \"6\" => list2 += \"Six\"\n                case \"7\" => list2 += \"\
    Seven\"\n                case \"8\" => list2 += \"Eight\"\n                case\
    \ \"9\" => list2 += \"Nine\"\n            }\n        }\n        list2.toList",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = new ListBuffer[String]()\n        for\
    \ (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                list += i.toString\n\
    \            }\n        }\n        var list2 = new ListBuffer[String]()\n    \
    \    for (i <- list.reverse) {\n            i match {\n                case \"\
    1\" => list2 += \"One\"\n                case \"2\" => list2 += \"Two\"\n    \
    \            case \"3\" => list2 += \"Three\"\n                case \"4\" => list2\
    \ += \"Four\"\n                case \"5\" => list2 += \"Five\"\n             \
    \   case \"6\" => list2 += \"Six\"\n                case \"7\" => list2 += \"\
    Seven\"\n                case \"8\" => list2 += \"Eight\"\n                case\
    \ \"9\" => list2 += \"Nine\"\n            }\n        }\n        list2.toList",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var l = List[String]()\n        for (i <- arr)\
    \ {\n            if (i > 0 && i < 10) {\n                l = l :+ i.toString\n\
    \            }\n        }\n        l = l.sorted\n        l = l.reverse\n     \
    \   for (i <- l.indices) {\n            l(i) = l(i).replace(\"1\", \"One\")\n\
    \            l(i) = l(i).replace(\"2\", \"Two\")\n            l(i) = l(i).replace(\"\
    3\", \"Three\")\n            l(i) = l(i).replace(\"4\", \"Four\")\n          \
    \  l(i) = l(i).replace(\"5\", \"Five\")\n            l(i) = l(i).replace(\"6\"\
    , \"Six\")\n            l(i) = l(i).replace(\"7\", \"Seven\")\n            l(i)\
    \ = l(i).replace(\"8\", \"Eight\")\n            l(i) = l(i).replace(\"9\", \"\
    Nine\")\n        }\n        l", "        // your code here\n        val map =\
    \ Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i >=\
    \ 1 && i <= 9) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // your code here\n\
    \        arr.filter(x => x > 0 && x < 10).sorted.reverse.map(x => x match {\n\
    \            case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // your code here\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\n      \
    \      case 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4\
    \ => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\n\
    \            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n          \
    \  case 9 => \"Nine\"\n        })", "        // Fill up this function body\n \
    \       // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted\n        result = result.reverse\n        for\
    \ (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // your code here\n\
    \        val l = List(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => l(x.toInt - 1))", "        // your code here\n        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))", "        val map = Map(1l.toLong -> \"\
    One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // your code here\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 =>\
    \ \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n  \
    \          case 4 => \"Four\"\n            case 5 => \"Five\"\n            case\
    \ 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = map(i) :: result\n            }\n        }\n        result", "   \
    \     // your code here\n        arr.filter(x => x > 0 && x < 10).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // your code here\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\n      \
    \      case 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4\
    \ => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\n\
    \            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n          \
    \  case 9 => \"Nine\"\n        })", "        // Fill up this function body\n \
    \       // You can add another function as well, if required\n        var list\
    \ = List[String]()\n        for (i <- arr) {\n            if (i > 0 && i < 10)\
    \ {\n                list = list :+ i.toString\n            }\n        }\n   \
    \     var list2 = List[String]()\n        for (i <- list.sorted.reverse) {\n \
    \           i match {\n                case \"1\" => list2 = list2 :+ \"One\"\n\
    \                case \"2\" => list2 = list2 :+ \"Two\"\n                case\
    \ \"3\" => list2 = list2 :+ \"Three\"\n                case \"4\" => list2 = list2\
    \ :+ \"Four\"\n                case \"5\" => list2 = list2 :+ \"Five\"\n     \
    \           case \"6\" => list2 = list2 :+ \"Six\"\n                case \"7\"\
    \ => list2 = list2 :+ \"Seven\"\n                case \"8\" => list2 = list2 :+\
    \ \"Eight\"\n                case \"9\" => list2 = list2 :+ \"Nine\"\n       \
    \     }\n        }\n        list2", "        // your code here\n        val l\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        val map =\
    \ Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        for (i <- arr) {\n \
    \           if (map.contains(i)) {\n                result = result :+ map(i)\n\
    \            }\n        }\n        result.sorted.reverse", "        // your code\
    \ here\n        return List[String]()", "        val map = Map(1l.toLong -> \"\
    One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // Write your code here\n        return\
    \ null;", "        def toString(x : Long) : String = x match {\n            case\
    \ 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\
    \n            case 4 => \"Four\"\n            case 5 => \"Five\"\n           \
    \ case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"\
    Eight\"\n            case 9 => \"Nine\"\n            case _ => \"\"\n        }\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => toString(x))",
  "        // your code here\n        val map = Map(1 -> \"One\", 2 -> \"Two\", 3\
    \ -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8\
    \ -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x\
    \ <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        // your\
    \ code here\n        var lst = List[String]()\n        for (i <- arr) {\n    \
    \        if (i >= 1 && i <= 9) {\n                lst = lst :+ i.toString\n  \
    \          }\n        }\n        lst.sorted.reverse.map(x => x match {\n     \
    \       case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n           \
    \ case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\n            case\
    \ \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n            case \"7\"\
    \ => \"Seven\"\n            case \"8\" => \"Eight\"\n            case \"9\" =>\
    \ \"Nine\"\n        })", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\
    \n            case 2 => \"Two\"\n            case 3 => \"Three\"\n           \
    \ case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"\
    Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n    \
    \        case 9 => \"Nine\"\n        })", "        // your code here\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i > 0\
    \ && i < 10) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        val map = Map(1l.toLong ->\
    \ \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val filtered = arr.filter(x =>\
    \ x >= 1 && x <= 9)\n        val sorted = filtered.sorted\n        val reversed\
    \ = sorted.reverse\n        reversed.map(x => map(x))", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var list = List[String]()\n        for (i <- arr) {\n            if (i\
    \ > 0 && i < 10) {\n                list = list :+ i.toString\n            }\n\
    \        }\n        list = list.sorted.reverse\n        for (i <- 0 until list.length)\
    \ {\n            list(i) = list(i).replace(\"1\", \"One\").replace(\"2\", \"Two\"\
    ).replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\", \"Five\").replace(\"\
    6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"Eight\").replace(\"9\"\
    , \"Nine\")\n        }\n        list", "        // your code here\n        var\
    \ result = List[String]()\n        for (i <- arr) {\n            if (i > 0 &&\
    \ i < 10) {\n                result = result :+ i.toString\n            }\n  \
    \      }\n        result = result.sorted\n        result = result.reverse\n  \
    \      for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result = result :+ i.toString\n            }\n        }\n        result.sortWith(_\
    \ < _).reverse.map(x => x match {\n            case \"1\" => \"One\"\n       \
    \     case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n           \
    \ case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n            case\
    \ \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n            case \"8\"\
    \ => \"Eight\"\n            case \"9\" => \"Nine\"\n        })", "        val\
    \ map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\"\
    , 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i > 0 && i < 10)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted.reverse\n        for (i <- 0 until result.length)\
    \ {\n            result(i) = result(i).replace(\"1\", \"One\").replace(\"2\",\
    \ \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\", \"\
    Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"Eight\"\
    ).replace(\"9\", \"Nine\")\n        }\n        result", "        // Write your\
    \ code here\n        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        val m = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     l.map(x => m(x))", "        val numbers = arr.filter(x => x >= 1 && x <=\
    \ 9)\n        val sorted = numbers.sorted\n        val reversed = sorted.reverse\n\
    \        val names = reversed.map(x => x match {\n            case 1 => \"One\"\
    \n            case 2 => \"Two\"\n            case 3 => \"Three\"\n           \
    \ case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"\
    Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n    \
    \        case 9 => \"Nine\"\n        })\n        names", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i > 0 && i < 10) {\n                result = result :+ i.toString\n       \
    \     }\n        }\n        result = result.sorted.reverse\n        for (i <-\
    \ 0 until result.length) {\n            result(i) = result(i).replace(\"1\", \"\
    One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\"\
    ).replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"\
    8\", \"Eight\").replace(\"9\", \"Nine\")\n        }\n        result", "      \
    \  // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = List[String]()\n        for (i <- arr) {\n \
    \           if (i == 1) {\n                list = list :+ \"One\"\n          \
    \  }\n            else if (i == 2) {\n                list = list :+ \"Two\"\n\
    \            }\n            else if (i == 3) {\n                list = list :+\
    \ \"Three\"\n            }\n            else if (i == 4) {\n                list\
    \ = list :+ \"Four\"\n            }\n            else if (i == 5) {\n        \
    \        list = list :+ \"Five\"\n            }\n            else if (i == 6)\
    \ {\n                list = list :+ \"Six\"\n            }\n            else if\
    \ (i == 7) {\n                list = list :+ \"Seven\"\n            }\n      \
    \      else if (i == 8) {\n                list = list :+ \"Eight\"\n        \
    \    }\n            else if (i == 9) {\n                list = list :+ \"Nine\"\
    \n            }\n        }\n        list.sorted.reverse", "        // your code\
    \ here\n        null", "        // your code here\n        List[String]()", " \
    \       // your code here\n        null", "        // your code here\n       \
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n      \
    \      case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 =>\
    \ \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n\
    \            case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "     \
    \   // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var list = List[String]()\n        for (i <- arr)\
    \ {\n            if (i > 0 && i < 10) {\n                list = list :+ i.toString\n\
    \            }\n        }\n        list.sorted.reverse.map(x => x match {\n  \
    \          case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n        \
    \    case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\n           \
    \ case \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n            case\
    \ \"7\" => \"Seven\"\n            case \"8\" => \"Eight\"\n            case \"\
    9\" => \"Nine\"\n        })", "        // your code here\n        null", "   \
    \     val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"\
    Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "        // your code\
    \ here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        val m = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"\
    Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val l\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x => m(x))",
  "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        list.map(x\
    \ => map(x))", "        def toString(n : Long) : String = {\n            n match\
    \ {\n                case 1 => \"One\"\n                case 2 => \"Two\"\n  \
    \              case 3 => \"Three\"\n                case 4 => \"Four\"\n     \
    \           case 5 => \"Five\"\n                case 6 => \"Six\"\n          \
    \      case 7 => \"Seven\"\n                case 8 => \"Eight\"\n            \
    \    case 9 => \"Nine\"\n                case _ => \"\"\n            }\n     \
    \   }\n        arr.filter(n => n >= 1 && n <= 9).sorted.reverse.map(n => toString(n))",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i >= 1 && i <= 9) {\n                result = result\
    \ :+ i.toString\n            }\n        }\n        result = result.sorted\n  \
    \      result = result.reverse\n        for (i <- 0 until result.length) {\n \
    \           result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   return result", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted.reverse\n\
    \        var result2 = List[String]()\n        for (i <- result) {\n         \
    \   i match {\n                case \"1\" => result2 = result2 :+ \"One\"\n  \
    \              case \"2\" => result2 = result2 :+ \"Two\"\n                case\
    \ \"3\" => result2 = result2 :+ \"Three\"\n                case \"4\" => result2\
    \ = result2 :+ \"Four\"\n                case \"5\" => result2 = result2 :+ \"\
    Five\"\n                case \"6\" => result2 = result2 :+ \"Six\"\n         \
    \       case \"7\" => result2 = result2 :+ \"Seven\"\n                case \"\
    8\" => result2 = result2 :+ \"Eight\"\n                case \"9\" => result2 =\
    \ result2 :+ \"Nine\"\n            }\n        }\n        result2", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        var result = List[String]()\n        for (i <- list) {\n            i\
    \ match {\n                case 1 => result = result :+ \"One\"\n            \
    \    case 2 => result = result :+ \"Two\"\n                case 3 => result =\
    \ result :+ \"Three\"\n                case 4 => result = result :+ \"Four\"\n\
    \                case 5 => result = result :+ \"Five\"\n                case 6\
    \ => result = result :+ \"Six\"\n                case 7 => result = result :+\
    \ \"Seven\"\n                case 8 => result = result :+ \"Eight\"\n        \
    \        case 9 => result = result :+ \"Nine\"\n            }\n        }\n   \
    \     result", "        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n\
    \        val reversed = sorted.reverse\n        reversed.map(x => x match {\n\
    \            case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        val\
    \ map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\"\
    , 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "        // your code\
    \ here\n        arr.filter(x => x > 0 && x < 10).sorted.reverse.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        // your code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        val l = arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse\n        l.map(x => x match {\n            case 1 => \"One\"\
    \n            case 2 => \"Two\"\n            case 3 => \"Three\"\n           \
    \ case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"\
    Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n    \
    \        case 9 => \"Nine\"\n        })", "        // your code here\n       \
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n      \
    \      case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 =>\
    \ \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n\
    \            case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        // This\
    \ is your job. :)\n        val list = new ListBuffer[String]\n        for (i <-\
    \ arr) {\n            if (i >= 1 && i <= 9) {\n                list += i.toString\n\
    \            }\n        }\n        val list2 = list.toList.sorted.reverse\n  \
    \      val list3 = new ListBuffer[String]\n        for (i <- list2) {\n      \
    \      i match {\n                case \"1\" => list3 += \"One\"\n           \
    \     case \"2\" => list3 += \"Two\"\n                case \"3\" => list3 += \"\
    Three\"\n                case \"4\" => list3 += \"Four\"\n                case\
    \ \"5\" => list3 += \"Five\"\n                case \"6\" => list3 += \"Six\"\n\
    \                case \"7\" => list3 += \"Seven\"\n                case \"8\"\
    \ => list3 += \"Eight\"\n                case \"9\" => list3 += \"Nine\"\n   \
    \         }\n        }\n        list3.toList", "        val nums = arr.filter(x\
    \ => x >= 1 && x <= 9)\n        val sorted = nums.sorted\n        val reversed\
    \ = sorted.reverse\n        val names = reversed.map(x => x match {\n        \
    \    case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"\
    Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n    \
    \        case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n        names",
  "        // Write your code here\n        return List[String]()", "        var lst\
    \ = List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                lst = lst :+ i.toString\n            }\n        }\n     \
    \   lst.sorted.reverse.map(x => x match {\n            case \"1\" => \"One\"\n\
    \            case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n    \
    \        case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n        \
    \    case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n            case\
    \ \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n        })", "     \
    \   // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var result = List[String]()\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) {\n                result = result :+ i.toString\n\
    \            }\n        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // your code here\n\
    \        arr.filter(x => x >= 1 && x <= 9).sortWith(_ < _).reverse.map(x => x\
    \ match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n    \
    \        case 3 => \"Three\"\n            case 4 => \"Four\"\n            case\
    \ 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\
    \n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You may also define\
    \ new functions\n        // to help you in solving this problem\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted\n        result = result.reverse\n        for\
    \ (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        val sorted = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        sorted.map(x => x match {\n   \
    \         case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3\
    \ => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var lst = List[String]()\n        for (i <- arr) {\n  \
    \          if (i >= 1 && i <= 9) {\n                lst = lst :+ i.toString\n\
    \            }\n        }\n        lst = lst.sorted\n        var lst2 = List[String]()\n\
    \        for (i <- lst.reverse) {\n            if (i == \"1\") {\n           \
    \     lst2 = lst2 :+ \"One\"\n            }\n            else if (i == \"2\")\
    \ {\n                lst2 = lst2 :+ \"Two\"\n            }\n            else if\
    \ (i == \"3\") {\n                lst2 = lst2 :+ \"Three\"\n            }\n  \
    \          else if (i == \"4\") {\n                lst2 = lst2 :+ \"Four\"\n \
    \           }\n            else if (i == \"5\") {\n                lst2 = lst2\
    \ :+ \"Five\"\n            }\n            else if (i == \"6\") {\n           \
    \     lst2 = lst2 :+ \"Six\"\n            }\n            else if (i == \"7\")\
    \ {\n                lst2 = lst2 :+ \"Seven\"\n            }\n            else\
    \ if (i == \"8\") {\n                lst2 = lst2 :+ \"Eight\"\n            }\n\
    \            else if (i == \"9\") {\n                lst2 = lst2 :+ \"Nine\"\n\
    \            }\n        }\n        lst2", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var a =\
    \ new ListBuffer[String]()\n        for (i <- arr) {\n            if (i > 0 &&\
    \ i < 10) {\n                a += i.toString\n            }\n        }\n     \
    \   a.toList.sorted.reverse.map(x => x match {\n            case \"1\" => \"One\"\
    \n            case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n   \
    \         case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n       \
    \     case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n           \
    \ case \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n        })", " \
    \       // your code here\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        val map = Map(1l.toLong -> \"One\",\
    \ 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // your code here\n        val lst =\
    \ arr.filter(x => x > 0 && x < 10).sorted.reverse\n        lst.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var lst = new ListBuffer[String]()\n        var\
    \ lst2 = new ListBuffer[String]()\n        for (i <- arr) {\n            if (i\
    \ > 0 && i < 10) {\n                lst += i.toString\n            }\n       \
    \ }\n        lst = lst.sorted\n        for (i <- lst.reverse) {\n            i\
    \ match {\n                case \"1\" => lst2 += \"One\"\n                case\
    \ \"2\" => lst2 += \"Two\"\n                case \"3\" => lst2 += \"Three\"\n\
    \                case \"4\" => lst2 += \"Four\"\n                case \"5\" =>\
    \ lst2 += \"Five\"\n                case \"6\" => lst2 += \"Six\"\n          \
    \      case \"7\" => lst2 += \"Seven\"\n                case \"8\" => lst2 +=\
    \ \"Eight\"\n                case \"9\" => lst2 += \"Nine\"\n            }\n \
    \       }\n        lst2.toList", "        val map = Map(1l.toLong -> \"One\",\
    \ 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // Fill up this function body\n    \
    \    // You may also define new functions\n        // to help you in solving this\
    \ problem\n        var list = List[String]()\n        for (i <- arr) {\n     \
    \       if (i == 1) {\n                list = list :+ \"One\"\n            }\n\
    \            else if (i == 2) {\n                list = list :+ \"Two\"\n    \
    \        }\n            else if (i == 3) {\n                list = list :+ \"\
    Three\"\n            }\n            else if (i == 4) {\n                list =\
    \ list :+ \"Four\"\n            }\n            else if (i == 5) {\n          \
    \      list = list :+ \"Five\"\n            }\n            else if (i == 6) {\n\
    \                list = list :+ \"Six\"\n            }\n            else if (i\
    \ == 7) {\n                list = list :+ \"Seven\"\n            }\n         \
    \   else if (i == 8) {\n                list = list :+ \"Eight\"\n           \
    \ }\n            else if (i == 9) {\n                list = list :+ \"Nine\"\n\
    \            }\n        }\n        list.sorted.reverse", "        // Write your\
    \ code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ {\n            x match {\n                case 1 => \"One\"\n              \
    \  case 2 => \"Two\"\n                case 3 => \"Three\"\n                case\
    \ 4 => \"Four\"\n                case 5 => \"Five\"\n                case 6 =>\
    \ \"Six\"\n                case 7 => \"Seven\"\n                case 8 => \"Eight\"\
    \n                case 9 => \"Nine\"\n            }\n        })", "        val\
    \ dict = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\"\
    , 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val result\
    \ = for (i <- arr if i > 0 && i < 10) yield dict(i)\n        result.reverse",
  "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        list.map(x\
    \ => map(x))", "        // Fill up this function body\n        // You may also\
    \ define new functions as per need\n        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))", "        val m = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => m(x))", "        // your code here\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 =>\
    \ \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n  \
    \          case 4 => \"Four\"\n            case 5 => \"Five\"\n            case\
    \ 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var res = List[String]()\n        for (i <- arr) {\n            if (i > 0 &&\
    \ i < 10) {\n                res = res :+ i.toString\n            }\n        }\n\
    \        res.sorted.reverse.map(x => x match {\n            case \"1\" => \"One\"\
    \n            case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n   \
    \         case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n       \
    \     case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n           \
    \ case \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n        })", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val l = arr.filter(x => x > 0 && x < 10).sorted.reverse\n\
    \        l.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })", "        // your code here\n        val l = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        l.map(x => x match {\n            case\
    \ 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\
    \n            case 4 => \"Four\"\n            case 5 => \"Five\"\n           \
    \ case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"\
    Eight\"\n            case 9 => \"Nine\"\n        })", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                result\
    \ = result :+ i.toString\n            }\n        }\n        result = result.sortWith(_\
    \ < _)\n        result = result.reverse\n        for (i <- 0 until result.length)\
    \ {\n            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        // your code here\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sortWith(_ > _).map(x => x match {\n            case 1 => \"One\"\n     \
    \       case 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4\
    \ => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\n\
    \            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n          \
    \  case 9 => \"Nine\"\n        })", "        // Fill up this function body\n \
    \       // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[String]()\n        for (i <- arr) {\n            if (i >= 1\
    \ && i <= 9) {\n                result += i.toString\n            }\n        }\n\
    \        result = result.sortWith(_ < _)\n        result = result.reverse\n  \
    \      var result2 = new ListBuffer[String]()\n        for (i <- result) {\n \
    \           i match {\n                case \"1\" => result2 += \"One\"\n    \
    \            case \"2\" => result2 += \"Two\"\n                case \"3\" => result2\
    \ += \"Three\"\n                case \"4\" => result2 += \"Four\"\n          \
    \      case \"5\" => result2 += \"Five\"\n                case \"6\" => result2\
    \ += \"Six\"\n                case \"7\" => result2 += \"Seven\"\n           \
    \     case \"8\" => result2 += \"Eight\"\n                case \"9\" => result2\
    \ += \"Nine\"\n            }\n        }\n        result2.toList", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = List[String]()\n        for (i <- arr) {\n \
    \           if (i > 0 && i < 10) {\n                list = list :+ i.toString\n\
    \            }\n        }\n        list = list.sorted.reverse\n        var list2\
    \ = List[String]()\n        for (i <- list) {\n            if (i == \"1\") {\n\
    \                list2 = list2 :+ \"One\"\n            }\n            else if\
    \ (i == \"2\") {\n                list2 = list2 :+ \"Two\"\n            }\n  \
    \          else if (i == \"3\") {\n                list2 = list2 :+ \"Three\"\n\
    \            }\n            else if (i == \"4\") {\n                list2 = list2\
    \ :+ \"Four\"\n            }\n            else if (i == \"5\") {\n           \
    \     list2 = list2 :+ \"Five\"\n            }\n            else if (i == \"6\"\
    ) {\n                list2 = list2 :+ \"Six\"\n            }\n            else\
    \ if (i == \"7\") {\n                list2 = list2 :+ \"Seven\"\n            }\n\
    \            else if (i == \"8\") {\n                list2 = list2 :+ \"Eight\"\
    \n            }\n            else if (i == \"9\") {\n                list2 = list2\
    \ :+ \"Nine\"\n            }\n        }\n        list2", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val filtered = arr.filter(x =>\
    \ x >= 1 && x <= 9)\n        val sorted = filtered.sorted\n        val reversed\
    \ = sorted.reverse\n        reversed.map(x => map(x))", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var list = new ListBuffer[String]()\n        for (i <- arr) {\n     \
    \       if (i == 1) {\n                list += \"One\"\n            }\n      \
    \      else if (i == 2) {\n                list += \"Two\"\n            }\n  \
    \          else if (i == 3) {\n                list += \"Three\"\n           \
    \ }\n            else if (i == 4) {\n                list += \"Four\"\n      \
    \      }\n            else if (i == 5) {\n                list += \"Five\"\n \
    \           }\n            else if (i == 6) {\n                list += \"Six\"\
    \n            }\n            else if (i == 7) {\n                list += \"Seven\"\
    \n            }\n            else if (i == 8) {\n                list += \"Eight\"\
    \n            }\n            else if (i == 9) {\n                list += \"Nine\"\
    \n            }\n        }\n        list.toList.sortWith(_.length < _.length).reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[String]()\n        for (i <- arr)\
    \ {\n            if (i > 0 && i < 10) {\n                list = list :+ i.toString\n\
    \            }\n        }\n        list = list.sortWith(_ < _)\n        list =\
    \ list.reverse\n        for (i <- 0 until list.length) {\n            list(i)\
    \ = list(i).replace(\"1\", \"One\")\n            list(i) = list(i).replace(\"\
    2\", \"Two\")\n            list(i) = list(i).replace(\"3\", \"Three\")\n     \
    \       list(i) = list(i).replace(\"4\", \"Four\")\n            list(i) = list(i).replace(\"\
    5\", \"Five\")\n            list(i) = list(i).replace(\"6\", \"Six\")\n      \
    \      list(i) = list(i).replace(\"7\", \"Seven\")\n            list(i) = list(i).replace(\"\
    8\", \"Eight\")\n            list(i) = list(i).replace(\"9\", \"Nine\")\n    \
    \    }\n        list", "        // your code here\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\
    \n            case 2 => \"Two\"\n            case 3 => \"Three\"\n           \
    \ case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"\
    Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n    \
    \        case 9 => \"Nine\"\n        })", "        val map = Map(1l.toLong ->\
    \ \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "        // your\
    \ code here\n        var result = List[String]()\n        for (i <- arr) {\n \
    \           if (i >= 1 && i <= 9) {\n                result = result :+ i.toString\n\
    \            }\n        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        // your code here\n     \
    \   arr.filter(x => x > 0 && x < 10).sorted.reverse.map(x => x match {\n     \
    \       case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 =>\
    \ \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n\
    \            case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        val a = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        val\
    \ b = a.map(x => x match {\n            case 1 => \"One\"\n            case 2\
    \ => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\n\
    \            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })\n        b", "        val nums = arr.filter(x => x >= 1 && x <= 9)\n\
    \        val names = nums.map(x => x match {\n            case 1 => \"One\"\n\
    \            case 2 => \"Two\"\n            case 3 => \"Three\"\n            case\
    \ 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\
    \n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n         \
    \   case 9 => \"Nine\"\n        })\n        names.reverse", "        val map =\
    \ Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))", "        // your code here\n        val\
    \ l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        val map = Map[Long, String](1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        val result = arr.filter(x => x <= 9 && x >= 1).sorted.reverse.map(x\
    \ => map(x))\n        result", "        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))", "        var result = new ListBuffer[String]\n        for (i <-\
    \ arr) {\n            if (i >= 1 && i <= 9) {\n                result += i.toString\n\
    \            }\n        }\n        result.toList.sorted.reverse.map(x => x match\
    \ {\n            case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n  \
    \          case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\n     \
    \       case \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n          \
    \  case \"7\" => \"Seven\"\n            case \"8\" => \"Eight\"\n            case\
    \ \"9\" => \"Nine\"\n        })", "        // Fill up this function body\n   \
    \     // You can add another function as well, if required\n        val l = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        l.map(x => x match {\n        \
    \    case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"\
    Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n    \
    \        case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i >= 1 && i <= 9) {\n                result = result :+ i.toString\n      \
    \      }\n        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        val m = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        l.map(x => m(x))", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[String]()\n        for (i <- arr) {\n\
    \            if (i >= 1 && i <= 9) {\n                result = result :+ i.toString\n\
    \            }\n        }\n        result = result.sorted.reverse\n        var\
    \ result2 = List[String]()\n        for (i <- result) {\n            if (i ==\
    \ \"1\") {\n                result2 = result2 :+ \"One\"\n            }\n    \
    \        else if (i == \"2\") {\n                result2 = result2 :+ \"Two\"\n\
    \            }\n            else if (i == \"3\") {\n                result2 =\
    \ result2 :+ \"Three\"\n            }\n            else if (i == \"4\") {\n  \
    \              result2 = result2 :+ \"Four\"\n            }\n            else\
    \ if (i == \"5\") {\n                result2 = result2 :+ \"Five\"\n         \
    \   }\n            else if (i == \"6\") {\n                result2 = result2 :+\
    \ \"Six\"\n            }\n            else if (i == \"7\") {\n               \
    \ result2 = result2 :+ \"Seven\"\n            }\n            else if (i == \"\
    8\") {\n                result2 = result2 :+ \"Eight\"\n            }\n      \
    \      else if (i == \"9\") {\n                result2 = result2 :+ \"Nine\"\n\
    \            }\n        }\n        result2", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i >=\
    \ 1 && i <= 9) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i >=\
    \ 1 && i <= 9) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted.reverse\n        for (i <- 0 until\
    \ result.length) {\n            result(i) = result(i).replace(\"1\", \"One\").replace(\"\
    2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\"\
    , \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"\
    Eight\").replace(\"9\", \"Nine\")\n        }\n        result", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i > 0 && i < 10) {\n                result = result :+ i.toString\n       \
    \     }\n        }\n        result = result.sorted.reverse\n        for (i <-\
    \ 0 until result.length) {\n            result(i) = result(i).replace(\"1\", \"\
    One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\"\
    ).replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"\
    8\", \"Eight\").replace(\"9\", \"Nine\")\n        }\n        result", "      \
    \  // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = List[String]()\n        for (i <- arr) {\n \
    \           if (i >= 1 && i <= 9) {\n                list = list :+ i.toString\n\
    \            }\n        }\n        list = list.sorted\n        list = list.reverse\n\
    \        for (i <- 0 until list.length) {\n            list(i) = list(i).replace(\"\
    1\", \"One\")\n            list(i) = list(i).replace(\"2\", \"Two\")\n       \
    \     list(i) = list(i).replace(\"3\", \"Three\")\n            list(i) = list(i).replace(\"\
    4\", \"Four\")\n            list(i) = list(i).replace(\"5\", \"Five\")\n     \
    \       list(i) = list(i).replace(\"6\", \"Six\")\n            list(i) = list(i).replace(\"\
    7\", \"Seven\")\n            list(i) = list(i).replace(\"8\", \"Eight\")\n   \
    \         list(i) = list(i).replace(\"9\", \"Nine\")\n        }\n        list",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = new ListBuffer[String]()\n        for\
    \ (i <- arr) {\n            if (i == 1) list += \"One\"\n            else if (i\
    \ == 2) list += \"Two\"\n            else if (i == 3) list += \"Three\"\n    \
    \        else if (i == 4) list += \"Four\"\n            else if (i == 5) list\
    \ += \"Five\"\n            else if (i == 6) list += \"Six\"\n            else\
    \ if (i == 7) list += \"Seven\"\n            else if (i == 8) list += \"Eight\"\
    \n            else if (i == 9) list += \"Nine\"\n        }\n        list.toList.sorted.reverse",
  "        // your code here\n        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        l.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })", "        // Write your code here\n        val map = Map(1l -> \"\
    One\", 2l -> \"Two\", 3l -> \"Three\", 4l -> \"Four\", 5l -> \"Five\", 6l -> \"\
    Six\", 7l -> \"Seven\", 8l -> \"Eight\", 9l -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "        // your code\
    \ here\n        null"]
stop_tokens:
- "\n    }\n"

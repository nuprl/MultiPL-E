name: HumanEval_71_triangle_area
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return the area of\n\
  \    // the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n    // Otherwise return -1\n    // Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    // than the third side.\n    //\
  \ Example:\n    // >>> triangleArea((3l), (4l), (5l))\n    // (6.0f)\n    // >>>\
  \ triangleArea((1l), (2l), (10l))\n    // -1l\n    def triangleArea(a : Long, b\
  \ : Long, c : Long) : Float = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((3l),\
  \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == -1l);\n\
  \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
  \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == -1l);\n\
  \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
  \ (6l), (3l)) == -1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
  \    assert(triangleArea((2l), (2l), (10l)) == -1l);\n    }\n\n}\n"
completions: ["        // Your code here\n        if (a + b > c && a + c > b && b\
    \ + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s -\
    \ a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n        }",
  "        // Your Code Here\n        return -1f", "        // Your code here\n  \
    \      if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        // Your code here\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ Code Here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Fill Up this function body\n        // `a`, `b`, `c` are the sides of\
    \ the triangle\n        if (a + b > c && a + c > b && b + c > a) {\n         \
    \   val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n \
    \       }", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0f\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1.0f", "        // Your code here\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        // if the three sides form a valid triangle. Otherwise return\
    \ -1\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        var sides = List(a, b,\
    \ c)\n        sides = sides.sorted\n        if (sides(0) + sides(1) > sides(2))\
    \ {\n            val p = (a + b + c) / 2\n            sqrt(p * (p - a) * (p -\
    \ b) * (p - c)).toFloat\n        } else {\n            -1\n        }", "     \
    \   if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Fill Up this function body\n        // `a`, `b`, `c` are\
    \ the sides of the triangle\n        // return the area of the triangle rounded\
    \ to 2 decimal points\n        if (a + b > c && a + c > b && b + c > a) {\n  \
    \          val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        // Your code goes here\n    \
    \    if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b +\
    \ c) / 2\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else {\n            -1\n        }", "        // Your code here\n        val\
    \ s = (a + b + c) / 2.0\n        if (s - a <= 0 || s - b <= 0 || s - c <= 0) -1\n\
    \        else sqrt(s * (s - a) * (s - b) * (s - c)).toFloat", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the lengths of the sides of the triangle\n     \
    \   // Do not print anything\n        // Constraints:\n        // 0 <= a, b, c\
    \ <= 100\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the lengths of the sides of the triangle\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Fill Up this function body\n        // `a`, `b`, `c` are the lengths of the\
    \ sides of the triangle\n        // Do not change the function signature\n   \
    \     val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n        if (area > 0) area.toFloat else -1", "        // Fill Up\
    \ this function body\n        // `0.0f` is just a placeholder for compilation\n\
    \        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n        if (area > 0) area.toFloat else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `0.0f` is just a dummy value, you can change\
    \ it.\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1.0f", "        // Your code here\n        var s = (a + b + c)\
    \ / 2.0\n        var area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if\
    \ (area > 0) area.toFloat else -1", "        // Your code here\n        val s\
    \ = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \        if (area > 0) area.toFloat else -1", "        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        val s = (a + b + c) /\
    \ 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area\
    \ > 0) area.toFloat else -1", "        // Your code here\n        val s = (a +\
    \ b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n   \
    \     if (area > 0) area.toFloat else -1", "        // Fill Up this function body\n\
    \        // `0.0f` is just a placeholder for compilation\n        if (a + b >\
    \ c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n    \
    \        sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f",
  "        // Your Code Here\n        0.0f", "        // Your code here\n        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n      \
    \  }", "        // Your code here\n        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a)\
    \ * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n        }",
  "        // Your Code Here\n        val s = (a + b + c) / 2.0\n        val area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        val s = (a\
    \ + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n \
    \       if (area > 0) area.toFloat else -1", "        // Your code here\n    \
    \    if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b +\
    \ c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n      \
    \  } else -1", "        // Your code here\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0f\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        val\
    \ s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        if (area > 0) area.toFloat else -1", "        // Fill Up this function\
    \ body\n        // `0.0f` is just a placeholder for compilation\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f",
  "        // Your Code Here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1.0f", "        // Your code here\n    \
    \    return -1f", "        // Your Code Here\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0f\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill\
    \ Up this function body\n        // `a` is the length of side a\n        // `b`\
    \ is the length of side b\n        // `c` is the length of side c\n        val\
    \ s = (a + b + c) / 2.0\n        if (s - a <= 0 || s - b <= 0 || s - c <= 0) -1\n\
    \        else sqrt(s * (s - a) * (s - b) * (s - c)).toFloat", "        // Your\
    \ code here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Fill Up this function body\n        // `a`, `b`, `c` are\
    \ the sides of the triangle\n        // Do not print anything\n        // Constraints:\n\
    \        // 0 <= a, b, c <= 10^9\n        // Return -1 if the triangle is invalid\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        // return the area of the\
    \ triangle rounded to 2 decimal points\n        // if the three sides form a valid\
    \ triangle. Otherwise return -1\n        if (a + b > c && a + c > b && b + c >\
    \ a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) *\
    \ (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        // Your code here\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0f\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        val s = (a + b + c) /\
    \ 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area\
    \ == 0.0) -1.0f else area.toFloat", "        // Your code here\n        -1", " \
    \       // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your Code Here\n       \
    \ if (a + b > c && a + c > b && b + c > a)\n            (a * b * c).toFloat /\
    \ (4 * sqrt(pow(a, 2) * pow(b, 2) - pow(a, 2) * pow(c, 2) - pow(b, 2) * pow(c,\
    \ 2) + pow(c, 4)).toFloat)\n        else\n            -1", "        // Your code\
    \ here\n        -1f", "        // Fill Up this function body\n        // `a` `b`\
    \ `c` are the lengths of the sides of the triangle\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "    \
    \    // Your code here\n        if (a + b <= c || a + c <= b || b + c <= a) -1f\n\
    \        else {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        }", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        // return the area of the\
    \ triangle rounded to 2 decimal points\n        // if the three sides form a valid\
    \ triangle. Otherwise return -1\n        if (a + b > c && a + c > b && b + c >\
    \ a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) *\
    \ (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill Up this function\
    \ body\n        // `a`, `b`, `c` are lengths of the sides of a triangle\n    \
    \    if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b +\
    \ c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n      \
    \  } else -1", "        // Fill Up this function body\n        // `a`, `b`, `c`\
    \ are the lengths of the sides of the triangle\n        val s = (a + b + c) /\
    \ 2.0\n        if (s - a <= 0 || s - b <= 0 || s - c <= 0) -1\n        else sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat", "        // Your code here\n      \
    \  if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else {\n            -1.0f\n        }", "        // Your code here\n        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        // return the area of the\
    \ triangle rounded to 2 decimal points\n        // if the three sides form a valid\
    \ triangle.\n        // Otherwise return -1\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n \
    \       }", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        return -1f", "        // Your code here\n        if (a + b > c\
    \ && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n      \
    \      sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your Code Here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your Code Here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the lengths of the sides of the triangle\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1.0f", "        // Your code here\n        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        if (a +\
    \ b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        // Your code here\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the sides of the triangle\n\
    \        // Do not print anything\n        // Constraints:\n        // 0 <= a,\
    \ b, c <= 100\n        if (a + b > c && a + c > b && b + c > a) {\n          \
    \  val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your Code Here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the sides of the triangle\n        if (a + b > c\
    \ && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n      \
    \      sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else {\n            -1\n        }", "        //\
    \ Fill Up this function body\n        // `a`, `b`, `c` are the side lengths of\
    \ the triangle\n        if (a + b > c && a + c > b && b + c > a) {\n         \
    \   val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ Code Here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a)\n            (a * b * sin(c.toFloat / a.toFloat)).toFloat\n\
    \        else\n            -1", "        if (a + b > c && a + c > b && b + c >\
    \ a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) *\
    \ (s - b) * (s - c)).toFloat\n        } else -1", "        // Your Code Here\n\
    \        -1f", "        // Your code here\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your Code\
    \ Here\n        return -1f", "        // Your code here\n        if (a + b > c\
    \ && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n      \
    \      sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "  \
    \      if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        val s = (a + b + c) / 2.0\n        val area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1",
  "        // Fill Up this function body\n        // `0.0f` is just a dummy value,\
    \ you can change it.\n        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1.0f", "        // Your code here\n      \
    \  if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0f\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        var s = (a + b + c) / 2.0\n        var area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ return -1f", "        // Your code here\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill Up\
    \ this function body\n        // `a`, `b`, `c` are the sides of the triangle\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n     \
    \       val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1", "        // Your Code Here\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        val s = (a + b + c) / 2.0\n        val area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat\
    \ else -1", "        // Your Code Here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill Up\
    \ this function body\n        // `a`, `b`, `c` are the lengths of the sides of\
    \ the triangle\n        // Do not change the function signature\n        val s\
    \ = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \        if (area > 0) area.toFloat else -1", "        // Your code here\n   \
    \     val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n        if (area > 0) area.toFloat else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `0.0f`\
    \ is just a dummy value, you can change it.\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the side lengths of the\
    \ triangle\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        val s = (a\
    \ + b + c) / 2.0\n        if (s - a > 0 && s - b > 0 && s - c > 0) sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        else -1", "        // Your Code Here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Your code here\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        if (a +\
    \ b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0f\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        // if the three sides form a valid triangle. Otherwise return\
    \ -1\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `0.0f` is just a placeholder for compilation\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1.0f", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the lengths of the sides of the triangle\n        val s = (a + b + c)\
    \ / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if\
    \ (area > 0) area.toFloat else -1", "        // Your code here\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        // if the three sides form a valid triangle. Otherwise return\
    \ -1\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `a` `b` `c` are the sides of the triangle\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the lengths of the sides of the triangle\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1.0f", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a)\n            (a + b + c) / 2.0f\n        else\n        \
    \    -1", "        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "    \
    \    // Your code here\n        val s = (a + b + c) / 2.0\n        val area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else\
    \ -1", "        // Fill Up this function body\n        // `a`, `b`, `c` are the\
    \ sides of the triangle\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n        if (area > 0) area.toFloat else -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Your code here\n        -1f", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the lengths of the three\
    \ sides of a triangle\n        // return the area of the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n        // Otherwise\
    \ return -1\n        // Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n        // than the third side.\n        if (a + b >\
    \ c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n    \
    \        sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", " \
    \       // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        // if the three sides form a valid triangle. Otherwise return\
    \ -1\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        return -1f", "      \
    \  // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        // if the three sides form a valid triangle. Otherwise return\
    \ -1\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "        //\
    \ Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n       \
    \     val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s -\
    \ c)).toFloat\n        } else -1", "        // Fill Up this function body\n  \
    \      // `a`, `b`, `c` are the side lengths of the triangle\n        // return\
    \ the area of the triangle rounded to 2 decimal points\n        // if the three\
    \ sides form a valid triangle. Otherwise return -1\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1", "        // Your Code Here\n        if (a\
    \ + b > c && a + c > b && b + c > a)\n            return (a * b * sin(c)).toFloat\n\
    \        return -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val p = (a + b + c) / 2.0\n            sqrt(p\
    \ * (p - a) * (p - b) * (p - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // Do not change the function signature\n        val\
    \ s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        if (area > 0) area.toFloat else -1", "        val s = (a + b +\
    \ c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n       \
    \ if (area > 0) area.toFloat else -1", "        // Your code here\n        val\
    \ s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        if (area > 0) area.toFloat else -1", "        // Fill Up this function\
    \ body\n        // `a`, `b`, `c` are the side lengths of the triangle\n      \
    \  if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1.0f", "        // Your code here\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        var s = (a + b + c) / 2.0\n        var area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area < 0) -1 else area.toFloat", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the sides of the triangle\n        // You need to\
    \ return the area of the triangle\n        // You can access the value of `a`\
    \ by writing `a`. Similarly, you can access `b` and `c`\n        // Do not write\
    \ something like `a + b + c`.\n        // Do not write something like `2 * a`.\n\
    \        // You need to return the area of the triangle.\n        // You can return\
    \ the area as a float\n        // You can return the area as a double\n      \
    \  // You can return the area as a long\n        // You can return the area as\
    \ an integer\n        // You can return the area as a short\n        // You can\
    \ return the area as a byte\n        // You can return the area as a string\n\
    \        // You can return the area as a boolean\n        // You can return the\
    \ area as a character\n        // You can return the area as a list\n        //\
    \ You can return the area as a tuple\n        // You can return the area as a\
    \ set\n        // You can return the area as a map\n        // You can return\
    \ the area as an array\n        // You can return the area as a vector\n     \
    \   // You can return the area as a stream\n        // You can return the area\
    \ as an option\n        // You can return the area as a future\n        // You\
    \ can return the area as a lazy list\n        // You can return the area as a\
    \ lazy value\n        // You can return the area as a lazy stream\n        //\
    \ You can return the area as a lazy option\n        // You can return the area\
    \ as a lazy future\n        // You can return the area as a lazy lazy value\n\
    \        // You can return the area as a lazy lazy stream\n        // You can\
    \ return the area as a lazy lazy option\n        // You can return the area as\
    \ a lazy lazy future\n        // You can return the area as a lazy lazy lazy value\n\
    \        // You can return the area as a lazy lazy lazy stream\n        // You\
    \ can return the area as a lazy lazy lazy option\n        // You can return the\
    \ area as a lazy lazy lazy future\n        // You can return the area as a lazy\
    \ lazy lazy lazy value\n        // You can return the area as a lazy lazy lazy\
    \ lazy stream\n        // You can return the area", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Your Code Here\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ Code Here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your Code Here\n        return 0f", "       \
    \ // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1", "        if (a + b > c && a + c > b && b\
    \ + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s -\
    \ a) * (s - b) * (s - c)).toFloat\n        } else -1"]
stop_tokens:
- "\n    }\n"

name: HumanEval_102_choose_num
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // This function takes two positive numbers x and y and returns the\n    //\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n    //\
  \ there's no such number, then the function should return -1.\n    // For example:\n\
  \    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>> chooseNum((13l), (12l))\n\
  \    // (-1l)\n    def chooseNum(x : Long, y : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(chooseNum((12l),\
  \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
  \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n \
  \   assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
  \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
  \ (546l)) == (546l));\n    }\n\n}\n"
completions: ["        if (x > y) {\n            -1\n        } else {\n          \
    \  if (x % 2 == 0) {\n                x\n            } else {\n              \
    \  chooseNum(x + 1, y)\n            }\n        }", "        if (x % 2 == 0) {\n\
    \            if (x > y) {\n                return -1\n            }\n        \
    \    return x\n        }\n        if (x + 1 > y) {\n            return -1\n  \
    \      }\n        return x + 1", "        if (x > y) {\n            return -1\n\
    \        }\n        if (x % 2 == 0) {\n            return x\n        }\n     \
    \   return chooseNum(x + 1, y)", "        if (x > y) return -1\n        if (x\
    \ % 2 == 0) return x\n        else return chooseNum(x + 1, y)", "        if (x\
    \ > y) {\n            return -1\n        }\n        if (x % 2 == 0) {\n      \
    \      return x\n        }\n        if (y % 2 == 0) {\n            return y\n\
    \        }\n        return -1", "        if (x > y) -1\n        else if (x % 2\
    \ == 0) x\n        else chooseNum(x + 1, y)", "        if (x > y) return -1\n\
    \        if (x % 2 == 0) return x\n        if (y % 2 == 0) return y\n        return\
    \ -1", "        if (x > y) {\n            return -1\n        }\n        if (x\
    \ % 2 == 0) {\n            return x\n        }\n        if (y % 2 == 0) {\n  \
    \          return y\n        }\n        return -1", "        if (x > y) return\
    \ -1\n        var i = y\n        while (i >= x) {\n            if (i % 2 == 0)\
    \ return i\n            i -= 1\n        }\n        return -1", "        if (x\
    \ > y) return -1\n        if (x % 2 == 0) return x\n        return chooseNum(x\
    \ + 1, y)", "        if (x > y) {\n            -1\n        } else {\n        \
    \    if (x % 2 == 0) {\n                x\n            } else {\n            \
    \    chooseNum(x + 1, y)\n            }\n        }", "        if (x > y) {\n \
    \           return -1\n        }\n        if (x % 2 == 0) {\n            return\
    \ x\n        }\n        return chooseNum(x + 1, y)", "        if (x > y) {\n \
    \           return -1\n        }\n        if (x % 2 == 0) {\n            return\
    \ x\n        }\n        if (y % 2 == 0) {\n            return y\n        }\n \
    \       return -1", "        if (x > y) {\n            return -1\n        }\n\
    \        if (x % 2 == 0) {\n            return x\n        }\n        return chooseNum(x\
    \ + 1, y)", "        if (x > y) return -1\n        if (x % 2 == 0) return x\n\
    \        if (y % 2 == 0) return y\n        return -1", "        if (x > y) -1\n\
    \        else if (x % 2 == 0) x\n        else chooseNum(x + 1, y)", "        if\
    \ (x > y) {\n            return -1\n        }\n        var i = y\n        while\
    \ (i >= x) {\n            if (i % 2 == 0) {\n                return i\n      \
    \      }\n            i -= 1\n        }\n        return -1", "        val a =\
    \ (x to y).filter(x => x % 2 == 0).max\n        if (a == 0) -1 else a", "    \
    \    // Your code here\n        if (x % 2 == 0) {\n            if (x <= y) {\n\
    \                x\n            } else {\n                -1\n            }\n\
    \        } else {\n            if (x + 1 <= y) {\n                x + 1\n    \
    \        } else {\n                -1\n            }\n        }", '        if
    (x > y) -1 else if (x % 2 == 0) x else chooseNum(x + 1, y)']
stop_tokens:
- "\n    }\n"

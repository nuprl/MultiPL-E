name: HumanEval_57_monotonic
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return true is list elements are monotonically increasing or decreasing.\n\
  \    // >>> monotonic((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 20l.toLong)))\n\
  \    // (true)\n    // >>> monotonic((List[Long](1l.toLong, 20l.toLong, 4l.toLong,\
  \ 10l.toLong)))\n    // (false)\n    // >>> monotonic((List[Long](4l.toLong, 1l.toLong,\
  \ 0l.toLong, -10l.toLong)))\n    // (true)\n    def monotonic(l : List[Long]) :\
  \ Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 10l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 20l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 20l.toLong, 4l.toLong, 10l.toLong))) == (false));\n    assert(monotonic((List[Long](4l.toLong,\
  \ 1l.toLong, 0l.toLong, -10l.toLong))) == (true));\n    assert(monotonic((List[Long](4l.toLong,\
  \ 1l.toLong, 1l.toLong, 0l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 2l.toLong, 5l.toLong, 60l.toLong))) == (false));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 60l.toLong))) == (true));\n    assert(monotonic((List[Long](9l.toLong,\
  \ 9l.toLong, 9l.toLong, 9l.toLong))) == (true));\n    }\n\n}\n"
completions: ["        if (l.length == 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length <= 1) return true\n        var increasing = true\n      \
    \  var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length <= 1) return true\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      val n = l.length\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until n) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        val inc = (l(0) < l(1))\n        for (i <- 1 until l.length - 1) {\n\
    \            if (inc && l(i) > l(i + 1)) return false\n            if (!inc &&\
    \ l(i) < l(i + 1)) return false\n        }\n        return true", "        if\
    \ (l.size == 1) return true\n        val diff = l(1) - l(0)\n        for (i <-\
    \ 1 until l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n\
    \        }\n        return true", "        if (l.length < 2) return true\n   \
    \     var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        val\
    \ diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        for (i <- 1 until diffs.length) {\n            if (diffs(i) * first <\
    \ 0) return false\n        }\n        return true", "        var increasing =\
    \ true\n        var decreasing = true\n        for (i <- 0 until l.length - 1)\
    \ {\n            if (l(i) > l(i + 1)) increasing = false\n            if (l(i)\
    \ < l(i + 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length <= 1) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing =\
    \ false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n    \
    \    return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length < 2) return true\n        val d = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (d * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length <= 1) return true\n  \
    \      val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n       \
    \     if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        var increasing = true\n        var decreasing = true\n     \
    \   for (i <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing\
    \ = false\n            if (l(i) < l(i + 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length < 2) return true\n   \
    \     var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing = false\n\
    \        }\n        increasing || decreasing", "        if (l.length <= 1) true\n\
    \        else {\n            val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \            val first = diffs(0)\n            diffs.forall(x => x == first)\n\
    \        }", "        var increasing = true\n        var decreasing = true\n \
    \       for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val sign = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if\
    \ (sign * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        val n = l.length\n        if (n <= 1) return true\n        var i = 1\n\
    \        var increasing = true\n        while (i < n) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (increasing && l(i) < l(i - 1))\
    \ return false\n            if (!increasing && l(i) > l(i - 1)) return false\n\
    \            i += 1\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        val d = l(1) - l(0)\n        for (i <- 1 until l.length\
    \ - 1) {\n            if (d * (l(i + 1) - l(i)) < 0) return false\n        }\n\
    \        return true", "        if (l.size <= 1) return true\n        val diffs\
    \ = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        diffs.forall(x => x == first)", "        var increasing = true\n    \
    \    var decreasing = true\n        for (i <- 0 until l.length - 1) {\n      \
    \      if (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1))\
    \ decreasing = false\n        }\n        increasing || decreasing", "        if\
    \ (l.length <= 1) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.length ==\
    \ 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        val n = l.length\n        if (n == 1) return\
    \ true\n        val d = l(1) - l(0)\n        for (i <- 1 until n) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length <= 1) return true\n        var increasing = l(0) < l(1)\n\
    \        for (i <- 1 until l.length - 1) {\n            if (increasing) {\n  \
    \              if (l(i) > l(i + 1)) return false\n            } else {\n     \
    \           if (l(i) < l(i + 1)) return false\n            }\n        }\n    \
    \    return true", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.size == 1) return true\n        val diffs = l.sliding(2).map(x =>\
    \ x(1) - x(0)).toList\n        val first = diffs(0)\n        diffs.forall(x =>\
    \ x == first)", "        val n = l.length\n        if (n <= 1) return true\n \
    \       var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until n) {\n            if (l(i) > l(i - 1)) decreasing = false\n        \
    \    if (l(i) < l(i - 1)) increasing = false\n        }\n        increasing ||\
    \ decreasing", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.size == 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.size) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.size == 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.size) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.size\
    \ < 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.size) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 0 until\
    \ l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n     \
    \       if (l(i) < l(i + 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) true\n        else if (l.length\
    \ == 2) true\n        else {\n            val diffs = l.sliding(2).map(x => x(1)\
    \ - x(0)).toList\n            val first = diffs(0)\n            val rest = diffs.tail\n\
    \            if (rest.forall(x => x == first)) true\n            else if (rest.forall(x\
    \ => x == -first)) true\n            else false\n        }", "        val n =\
    \ l.length\n        if (n == 1) return true\n        val d = l(1) - l(0)\n   \
    \     for (i <- 1 until n) {\n            if (d * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length == 1) return true\n\
    \        val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        val sign = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (sign * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        increasing || decreasing", "        if\
    \ (l.length < 2) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i - 1) > l(i)) increasing = false\n            if (l(i - 1) < l(i)) decreasing\
    \ = false\n        }\n        increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        val n = l.length\n        if (n <=\
    \ 1) return true\n        val d = l(1) - l(0)\n        for (i <- 2 until n) {\n\
    \            if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        var increasing = true\n        var decreasing = true\n     \
    \   for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length <= 1) return true\n  \
    \      var i = 1\n        var increasing = true\n        var decreasing = true\n\
    \        while (i < l.length) {\n            if (l(i) > l(i - 1)) decreasing =\
    \ false\n            if (l(i) < l(i - 1)) increasing = false\n            i +=\
    \ 1\n        }\n        return increasing || decreasing", "        if (l.size\
    \ == 1) return true\n        var inc = true\n        var dec = true\n        for\
    \ (i <- 1 until l.size) {\n            if (l(i) < l(i - 1)) inc = false\n    \
    \        if (l(i) > l(i - 1)) dec = false\n        }\n        return inc || dec",
  "        if (l.length < 2) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      if (l.length < 2) return true\n        val diffs = l.sliding(2).map(x =>\
    \ x(1) - x(0)).toList\n        val diff = diffs(0)\n        diffs.forall(x =>\
    \ x == diff)", "        if (l.size == 1) true\n        else if (l.size == 2) true\n\
    \        else {\n            val d = l(1) - l(0)\n            for (i <- 2 until\
    \ l.size) {\n                if (d * (l(i) - l(i - 1)) < 0) return false\n   \
    \         }\n            true\n        }", "        if (l.size <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.size) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        val n = l.length\n        if (n <= 1) return\
    \ true\n        var increasing = l(0) <= l(1)\n        for (i <- 1 until n - 1)\
    \ {\n            if (increasing && l(i) > l(i + 1)) return false\n           \
    \ if (!increasing && l(i) < l(i + 1)) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length <= 1) return true\n        var direction = 0\n        for\
    \ (i <- 1 until l.length) {\n            if (direction == 0) {\n             \
    \   if (l(i) > l(i - 1)) direction = 1\n                else if (l(i) < l(i -\
    \ 1)) direction = -1\n            }\n            else if (direction == 1) {\n\
    \                if (l(i) < l(i - 1)) return false\n            }\n          \
    \  else if (direction == -1) {\n                if (l(i) > l(i - 1)) return false\n\
    \            }\n        }\n        return true", "        if (l.length <= 1) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing =\
    \ false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n    \
    \    return increasing || decreasing", "        var increasing = true\n      \
    \  var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        val s = l.sliding(2).toList\n        val d = s.map(x\
    \ => x(1) - x(0))\n        val ds = d.distinct\n        if (ds.length == 1) return\
    \ true\n        if (ds.length == 2) {\n            if (ds.contains(0l)) return\
    \ true\n            if (ds.contains(1l) && ds.contains(-1l)) return true\n   \
    \     }\n        return false", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.length <\
    \ 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.size == 1) return true\n        val inc = l(0)\
    \ < l(1)\n        for (i <- 1 until l.size - 1) if (inc && l(i) > l(i + 1) ||\
    \ !inc && l(i) < l(i + 1)) return false\n        true", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        var increasing = true\n    \
    \    var decreasing = true\n        for (i <- 1 until l.length) {\n          \
    \  if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        val n\
    \ = l.length\n        var i = 0\n        var increasing = true\n        var decreasing\
    \ = true\n        while (i < n - 1) {\n            if (l(i) > l(i + 1)) increasing\
    \ = false\n            if (l(i) < l(i + 1)) decreasing = false\n            i\
    \ += 1\n        }\n        increasing || decreasing", "        if (l.length <\
    \ 2) return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        val diff = diffs(0)\n        diffs.forall(x => x == diff)", "       \
    \ val n = l.length\n        if (n == 1) return true\n        var i = 1\n     \
    \   var increasing = true\n        var decreasing = true\n        while (i < n)\
    \ {\n            if (l(i) < l(i - 1)) increasing = false\n            if (l(i)\
    \ > l(i - 1)) decreasing = false\n            i += 1\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.size == 1) true\n        else {\n           \
    \ val diff = l.tail.zip(l).map(x => x._1 - x._2)\n            diff.forall(x =>\
    \ x == 0) || diff.forall(x => x > 0) || diff.forall(x => x < 0)\n        }", " \
    \       if (l.length == 1) return true\n        var increasing = l(0) < l(1)\n\
    \        for (i <- 1 until l.length - 1) {\n            if (increasing) {\n  \
    \              if (l(i) > l(i + 1)) return false\n            } else {\n     \
    \           if (l(i) < l(i + 1)) return false\n            }\n        }\n    \
    \    return true", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length == 1) true\n        else\
    \ if (l.length == 2) true\n        else {\n            val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n            if (diffs.forall(x => x > 0)) true\n   \
    \         else if (diffs.forall(x => x < 0)) true\n            else false\n  \
    \      }", "        if (l.length == 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       val n = l.length\n        if (n == 1) return true\n        var i = 1\n\
    \        var increasing = true\n        var decreasing = true\n        while (i\
    \ < n) {\n            if (l(i) < l(i - 1)) increasing = false\n            if\
    \ (l(i) > l(i - 1)) decreasing = false\n            i += 1\n        }\n      \
    \  return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = l(0) < l(1)\n        for (i <- 1 until l.length - 1)\
    \ {\n            if (increasing && l(i) > l(i + 1)) return false\n           \
    \ if (!increasing && l(i) < l(i + 1)) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length <= 1) return true\n        val d = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (d * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        val n = l.length\n        if\
    \ (n <= 1) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until n) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length < 2) return true\n   \
    \     val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first\
    \ = diffs(0)\n        diffs.forall(x => x == first)", "        var prev = l(0)\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > prev) decreasing = false\n  \
    \          if (l(i) < prev) increasing = false\n            prev = l(i)\n    \
    \    }\n        return increasing || decreasing", "        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        diffs.forall(x => x == 0) || diffs.forall(x\
    \ => x > 0) || diffs.forall(x => x < 0)", "        if (l.length < 2) return true\n\
    \        var i = 0\n        var increasing = true\n        while (i < l.length\
    \ - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n            i +=\
    \ 1\n        }\n        i = 0\n        var decreasing = true\n        while (i\
    \ < l.length - 1) {\n            if (l(i) < l(i + 1)) decreasing = false\n   \
    \         i += 1\n        }\n        return increasing || decreasing", "     \
    \   var increasing = true\n        var decreasing = true\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n   \
    \         if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        val n = l.length\n        if (n <= 1) return true\n\
    \        var i = 1\n        var increasing = true\n        var decreasing = true\n\
    \        while (i < n) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            i += 1\n   \
    \     }\n        return increasing || decreasing", "        val n = l.length\n\
    \        if (n == 1) return true\n        val d = l(1) - l(0)\n        for (i\
    \ <- 1 until n) {\n            if (d * (l(i) - l(i - 1)) < 0) return false\n \
    \       }\n        return true", "        if (l.length <= 1) return true\n   \
    \     var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.size\
    \ == 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n    \
    \    }\n        return true", "        if (l.length < 2) return true\n       \
    \ val d = l(1) - l(0)\n        for (i <- 2 until l.length) {\n            if (d\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length < 2) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ < 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) true\n        else {\n\
    \            val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n         \
    \   val sign = diffs.head\n            diffs.forall(x => x == sign || x == 0)\n\
    \        }", "        if (l.length < 2) return true\n        var increasing =\
    \ l(0) < l(1)\n        for (i <- 1 until l.length - 1) {\n            if (increasing\
    \ && l(i) > l(i + 1)) return false\n            if (!increasing && l(i) < l(i\
    \ + 1)) return false\n        }\n        return true", "        if (l.length <=\
    \ 1) true\n        else {\n            val d = l(1) - l(0)\n            l.sliding(2).forall(x\
    \ => (x(1) - x(0)) * d >= 0)\n        }", "        val n = l.length\n        if\
    \ (n <= 1) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 0 until n - 1) {\n            if (l(i) > l(i + 1))\
    \ increasing = false\n            if (l(i) < l(i + 1)) decreasing = false\n  \
    \      }\n        increasing || decreasing", "        if (l.length == 1) return\
    \ true\n        var increasing = l(0) < l(1)\n        for (i <- 1 until l.length\
    \ - 1) {\n            if (increasing && l(i) > l(i + 1)) return false\n      \
    \      if (!increasing && l(i) < l(i + 1)) return false\n        }\n        return\
    \ true", "        if (l.size == 1) return true\n        var increasing = l(0)\
    \ < l(1)\n        for (i <- 1 until l.size - 1) {\n            if (increasing)\
    \ {\n                if (l(i) > l(i + 1)) return false\n            } else {\n\
    \                if (l(i) < l(i + 1)) return false\n            }\n        }\n\
    \        return true", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 0 until\
    \ l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n     \
    \       if (l(i) < l(i + 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length <= 1) return true\n        val diffs = l.sliding(2).map(x => x(1)\
    \ - x(0)).toList\n        val first = diffs(0)\n        diffs.forall(x => x ==\
    \ first)", "        if (l.length < 2) return true\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        if (diffs.forall(x => x >= 0)) return true\n\
    \        if (diffs.forall(x => x <= 0)) return true\n        return false", " \
    \       val sign = l.head - l.tail.head\n        l.tail.tail.forall(x => sign\
    \ * (x - l.tail.head) >= 0)", "        if (l.length <= 1) return true\n      \
    \  var increasing = true\n        var decreasing = true\n        for (i <- 0 until\
    \ l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n     \
    \       if (l(i) < l(i + 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ < 2) return true\n        val inc = l(0) < l(1)\n        for (i <- 1 until l.length\
    \ - 1) {\n            if (inc && l(i) > l(i + 1)) return false\n            if\
    \ (!inc && l(i) < l(i + 1)) return false\n        }\n        return true", " \
    \       if (l.length < 2) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n        }\n        return increasing || decreasing", "        val n\
    \ = l.length\n        var increasing = true\n        var decreasing = true\n \
    \       for (i <- 1 until n) {\n            if (l(i) < l(i - 1)) increasing =\
    \ false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n    \
    \    return increasing || decreasing", "        var increasing = true\n      \
    \  var decreasing = true\n        for (i <- 0 until l.length - 1) {\n        \
    \    if (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1))\
    \ decreasing = false\n        }\n        increasing || decreasing", "        if\
    \ (l.length == 1) return true\n        val diff = l(1) - l(0)\n        for (i\
    \ <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        val\
    \ diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        diffs.forall(x => x == first)", "        val n = l.length\n        var\
    \ i = 0\n        while (i < n - 1) {\n            if (l(i) == l(i + 1)) {\n  \
    \              i += 1\n            } else {\n                return l.slice(i,\
    \ n).sorted == l.slice(i, n) || l.slice(i, n).sorted.reverse == l.slice(i, n)\n\
    \            }\n        }\n        true", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length - 1) {\n            if (diff * (l(i\
    \ + 1) - l(i)) < 0) return false\n        }\n        return true", "        if\
    \ (l.size == 1) return true\n        val diff = l(1) - l(0)\n        for (i <-\
    \ 1 until l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n\
    \        }\n        return true", "        val n = l.length\n        if (n <=\
    \ 1) return true\n        val d = l(1) - l(0)\n        for (i <- 1 until n) {\n\
    \            if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 0 until l.size - 1) {\n    \
    \        if (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i +\
    \ 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.size == 1) true\n        else if (l.size == 2)\
    \ true\n        else {\n            val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \            if (diffs.forall(x => x > 0)) true\n            else if (diffs.forall(x\
    \ => x < 0)) true\n            else false\n        }", "        if (l.length <=\
    \ 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.size <= 1) return true\n        var increasing\
    \ = l(0) < l(1)\n        for (i <- 1 until l.size - 1) {\n            if (increasing)\
    \ {\n                if (l(i) > l(i + 1)) return false\n            } else {\n\
    \                if (l(i) < l(i + 1)) return false\n            }\n        }\n\
    \        return true", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        diffs.forall(x\
    \ => x == 0) || diffs.forall(x => x > 0) || diffs.forall(x => x < 0)", "     \
    \   if (l.length <= 1) return true\n        val sign = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (sign * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        var increasing = true\n   \
    \     var decreasing = true\n        for (i <- 1 until l.length) {\n         \
    \   if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        increasing || decreasing", "        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        val n = l.length\n        var increasing = true\n \
    \       var decreasing = true\n        for (i <- 1 until n) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        val n = l.length\n        if (n <= 1) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ n) {\n            if (l(i) < l(i - 1)) increasing = false\n            if (l(i)\
    \ > l(i - 1)) decreasing = false\n        }\n        increasing || decreasing",
  "        if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ < 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.length <=\
    \ 1)\n            return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 0 until l.length - 1) {\n            if (l(i) > l(i\
    \ + 1))\n                increasing = false\n            if (l(i) < l(i + 1))\n\
    \                decreasing = false\n        }\n        return increasing || decreasing",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length < 2) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.size\
    \ < 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n    \
    \    }\n        return true", "        if (l.length == 1) return true\n      \
    \  var increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) true\n        else {\n            val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n            val first = diffs(0)\n            val same\
    \ = diffs.forall(x => x == first)\n            val increasing = diffs.forall(x\
    \ => x >= 0)\n            val decreasing = diffs.forall(x => x <= 0)\n       \
    \     same && (increasing || decreasing)\n        }", "        if (l.size < 2)\
    \ return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.size) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.size <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.size) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n         \
    \   if (l(i) < l(i - 1)) increasing = false\n        }\n        increasing ||\
    \ decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        var inc = true\n        var dec\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) inc = false\n            if (l(i) > l(i - 1)) dec = false\n        }\n \
    \       return inc || dec", "        if (l.length <= 1) return true\n        val\
    \ diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        diffs.forall(x => x == first)", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        var increasing = true\n    \
    \    var decreasing = true\n        for (i <- 1 until l.length) {\n          \
    \  if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        val n = l.length\n        if (n == 1) return\
    \ true\n        var i = 1\n        var increasing = l(i) > l(i - 1)\n        while\
    \ (i < n) {\n            if (increasing && l(i) < l(i - 1)) return false\n   \
    \         if (!increasing && l(i) > l(i - 1)) return false\n            i += 1\n\
    \        }\n        return true", "        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 0 until l.length - 1) {\n            if\
    \ (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1)) decreasing\
    \ = false\n        }\n        increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n        }\n        increasing || decreasing", "  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) {\n                increasing = false\n            }\n         \
    \   if (l(i) > l(i - 1)) {\n                decreasing = false\n            }\n\
    \        }\n        increasing || decreasing", "        if (l.length == 1) true\n\
    \        else {\n            val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \            val diff = diffs(0)\n            diffs.forall(x => x == diff)\n \
    \       }", "        if (l.length <= 1) return true\n        val diffs = l.zip(l.tail).map(x\
    \ => x._2 - x._1)\n        val diff = diffs(0)\n        diffs.forall(x => x ==\
    \ diff)", "        if (l.length <= 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.size == 1) return true\n        val diffs = l.sliding(2).map(x =>\
    \ x(1) - x(0)).toList\n        if (diffs.forall(x => x > 0)) return true\n   \
    \     if (diffs.forall(x => x < 0)) return true\n        return false", "    \
    \    if (l.length < 2) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        var increasing = l(0) < l(1)\n\
    \        for (i <- 1 until l.length - 1) {\n            if (increasing && l(i)\
    \ > l(i + 1)) return false\n            if (!increasing && l(i) < l(i + 1)) return\
    \ false\n        }\n        return true"]
stop_tokens:
- "\n    }\n"

name: HumanEval_122_add_elements
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a non-empty list of integers arr and an integer k, return\n    //\
  \ the sum of the elements with at most two digits from the first k elements of arr.\n\
  \    // Example:\n    // >>> addElements((List[Long](111l.toLong, 21l.toLong, 3l.toLong,\
  \ 4000l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l))\n\
  \    // (24l)\n    // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1\
  \ <= k <= len(arr)\n    def addElements(arr : List[Long], k : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(addElements((List[Long](1l.toLong,\
  \ -2l.toLong, -3l.toLong, 41l.toLong, 57l.toLong, 76l.toLong, 87l.toLong, 88l.toLong,\
  \ 99l.toLong)), (3l)) == (-4l));\n    assert(addElements((List[Long](111l.toLong,\
  \ 121l.toLong, 3l.toLong, 4000l.toLong, 5l.toLong, 6l.toLong)), (2l)) == (0l));\n\
  \    assert(addElements((List[Long](11l.toLong, 21l.toLong, 3l.toLong, 90l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (125l));\n \
  \   assert(addElements((List[Long](111l.toLong, 21l.toLong, 3l.toLong, 4000l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (24l));\n  \
  \  assert(addElements((List[Long](1l.toLong)), (1l)) == (1l));\n    }\n\n}\n"
completions: ["        // Write your code here\n        var sum : Long = 0\n     \
    \   for (i <- 0 until k.toInt) {\n            var num : Long = arr(i)\n      \
    \      var digits : Int = 0\n            while (num > 0) {\n                num\
    \ /= 10\n                digits += 1\n            }\n            if (digits <=\
    \ 2) {\n                sum += arr(i)\n            }\n        }\n        return\
    \ sum", "        val kth = arr.take(k.toInt)\n        kth.filter(x => x < 100).sum",
  "        // Write your code here\n        var sum = 0l\n        for (i <- 0 until\
    \ k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n       \
    \ sum", "        // Write your code here\n        return 0l", "        // Fill\
    \ in the code here\n        return 0", "        // Write your code here\n    \
    \    var sum = 0l\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        return sum", "        // Write your\
    \ code here\n        arr.take(k.toInt).filter(x => x < 100).sum", "        //\
    \ Write your code here\n        arr.take(k.toInt).filter(x => x < 100).sum", " \
    \       // Given a list arr, return the sum of the elements with at most two digits.\n\
    \        def addElements(arr : List[Long]) : Long = {\n            arr.filter(x\
    \ => x < 100).sum\n        }\n        // Return the sum of the elements with at\
    \ most two digits from the first k elements of arr.\n        addElements(arr.take(k.toInt))",
  "        // Your code here\n        arr.take(k.toInt).filter(x => x < 100).sum",
  "        // Write your code here\n        var sum = 0l\n        for (i <- 0 until\
    \ k.toInt) {\n            if (arr(i) < 100) {\n                sum += arr(i)\n\
    \            }\n        }\n        return sum", "        // Write your code here\n\
    \        arr.take(k.toInt).filter(x => x < 100).sum", "        // Fill in the\
    \ code here\n        var sum : Long = 0\n        for (i <- 0 until k.toInt) {\n\
    \            if (arr(i) < 100) sum += arr(i)\n        }\n        return sum",
  "        // Fill up this function body\n        // 'arr' is a list of integers\n\
    \        // 'k' is an integer\n        // Return the sum of the elements with\
    \ at most two digits from the first k elements of arr\n        var sum = 0l\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", '        arr.take(k.toInt).filter(x => x < 100).sum',
  "        // Write your code here\n        var sum : Long = 0\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) {\n                sum +=\
    \ arr(i)\n            }\n        }\n        return sum", "        // Write your\
    \ code here\n        var sum = 0l\n        for (i <- 0 until k.toInt) {\n    \
    \        if (arr(i) < 100) sum += arr(i)\n        }\n        return sum", "  \
    \      // Write your code here\n        var sum : Long = 0\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) {\n                sum +=\
    \ arr(i)\n            }\n        }\n        return sum", "        // Write your\
    \ code here\n        var sum : Long = 0\n        for (i <- 0 until k.toInt) {\n\
    \            if (arr(i) < 100) {\n                sum += arr(i)\n            }\n\
    \        }\n        return sum", "        // Write your code here\n        arr.filter(x\
    \ => x < 100).take(k.toInt).sum"]
stop_tokens:
- "\n    }\n"

name: HumanEval_27_flip_case
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\
  \")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
  These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE\
  \ VIOLENT ENDS\")));\n    }\n\n}\n"
completions: ['        return string.map(c => if (c.isUpper) c.toLower else c.toUpper)',
  "        val lower = string.toLowerCase\n        val upper = string.toUpperCase\n\
    \        var result = \"\"\n        for (i <- 0 until string.length) {\n     \
    \       if (string(i) == lower(i)) result += upper(i)\n            else result\
    \ += lower(i)\n        }\n        result", "        var result = \"\"\n      \
    \  for (c <- string) {\n            if (c.isUpper) {\n                result +=\
    \ c.toLower\n            } else {\n                result += c.toUpper\n     \
    \       }\n        }\n        result", '        string.map(c => if (c.isUpper)
    c.toLower else c.toUpper)', '        string.map(c => if (c.isUpper) c.toLower
    else c.toUpper)', '        string.map(x => if (x.isUpper) x.toLower else x.toUpper)',
  '        string.map(c => if (c.isUpper) c.toLower else c.toUpper)', '        string.map(c
    => if (c.isUpper) c.toLower else c.toUpper)', '        string.map(c => if (c.isUpper)
    c.toLower else c.toUpper)', '        string.map(c => if (c.isUpper) c.toLower
    else c.toUpper)', "        var result = \"\"\n        for (i <- 0 until string.length)\
    \ {\n            if (string(i).isUpper) result += string(i).toLower\n        \
    \    else result += string(i).toUpper\n        }\n        result", '        string.map(c
    => if (c.isUpper) c.toLower else c.toUpper)', '        string.map(c => if (c.isUpper)
    c.toLower else c.toUpper)', '        string.map(c => if (c.isUpper) c.toLower
    else c.toUpper)', '        string.map(c => if (c.isUpper) c.toLower else c.toUpper)',
  "        var result = \"\"\n        for (c <- string) {\n            if (c.isUpper)\
    \ result += c.toLower\n            else result += c.toUpper\n        }\n     \
    \   result", '        string.map(c => if (c.isUpper) c.toLower else c.toUpper)',
  "        var result : String = \"\"\n        for (c <- string) {\n            if\
    \ (c.isUpper) {\n                result += c.toLower\n            } else {\n \
    \               result += c.toUpper\n            }\n        }\n        return\
    \ result", '        string.map(c => if (c.isUpper) c.toLower else c.toUpper)',
  '        string.map(c => if (c.isUpper) c.toLower else c.toUpper)']
stop_tokens:
- "\n    }\n"

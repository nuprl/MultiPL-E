name: HumanEval_118_get_closest_vowel
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    // two consonants from the right side of the word (case sensitive).\n\
  \    // Vowels in the beginning and ending doesn't count. Return empty string if\
  \ you didn't\n    // find any vowel met the above condition. \n    // You may assume\
  \ that the given string contains English letter only.\n    // Example:\n    // >>>\
  \ getClosestVowel((\"yogurt\"))\n    // (\"u\")\n    // >>> getClosestVowel((\"\
  FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"quick\"))\n    // (\"\"\
  )\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n    def getClosestVowel(word\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
  yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
  u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
  most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"i\"\
  )));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  Above\")).equals((\"o\")));\n    }\n\n}\n"
completions: ["        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     vowel = word(j).toString\n                        return\
    \ vowel\n                    }\n                }\n            }\n        }\n\
    \        vowel", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    result =\
    \ \"\"\n                } else if (consonants.contains(word(i + 1))) {\n     \
    \               result = word(i).toString\n                }\n            } else\
    \ if (consonants.contains(word(i))) {\n                if (result != \"\") {\n\
    \                    return result\n                }\n            }\n       \
    \ }\n        result", "        var vowels = List(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(word(i).toString)) {\n                if\
    \ (i == word.length - 1) return \"\"\n                if (vowels.contains(word(i\
    \ + 1).toString)) return \"\"\n                result = word(i).toString\n   \
    \             return result\n            }\n        }\n        return result",
  "        val vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val wordList\
    \ = word.toList\n        val wordListReverse = wordList.reverse\n        val wordListReverseVowel\
    \ = wordListReverse.filter(vowels.contains(_))\n        val wordListReverseVowelIndex\
    \ = wordListReverseVowel.map(wordListReverse.indexOf(_))\n        val wordListReverseVowelIndexSorted\
    \ = wordListReverseVowelIndex.sorted\n        val wordListReverseVowelIndexSortedFiltered\
    \ = wordListReverseVowelIndexSorted.filter(_ != 0)\n        if (wordListReverseVowelIndexSortedFiltered.length\
    \ == 0) \"\"\n        else wordListReverse(wordListReverseVowelIndexSortedFiltered(0)\
    \ - 1).toString", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = word.length\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i + 1\n                while (j < word.length && !consonants.contains(word(j)))\
    \ j += 1\n                if (j < word.length) {\n                    var k =\
    \ j + 1\n                    while (k < word.length && !vowels.contains(word(k)))\
    \ k += 1\n                    if (k < word.length) {\n                       \
    \ if (k - i < closestDistance) {\n                            closestDistance\
    \ = k - i\n                            closestVowel = word(i).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val result = new StringBuilder\n        var i = word.length -\
    \ 1\n        while (i >= 0) {\n            if (vowels.contains(word(i))) {\n \
    \               if (i == word.length - 1) {\n                    i -= 1\n    \
    \                continue\n                }\n                if (vowels.contains(word(i\
    \ + 1))) {\n                    i -= 1\n                    continue\n       \
    \         }\n                result.append(word(i))\n                return result.toString\n\
    \            }\n            i -= 1\n        }\n        return result.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        vowel = wordArray(j).toString\n                 \
    \       return vowel\n                    }\n                }\n            }\n\
    \        }\n        return vowel", "        val vowels = \"AEIOUaeiou\"\n    \
    \    val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n       \
    \ var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n       \
    \     if (consonants.contains(word(i))) {\n                for (j <- i - 1 to\
    \ 0 by -1) {\n                    if (vowels.contains(word(j))) {\n          \
    \              result = word(j).toString\n                        return result\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelIndex = -1\n      \
    \  for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i < word.length - 1 && consonants.contains(word(i + 1)))\
    \ {\n                    closestVowel = word(i).toString\n                   \
    \ closestVowelIndex = i\n                    break\n                }\n      \
    \      }\n        }\n        if (closestVowelIndex > 0) {\n            for (i\
    \ <- closestVowelIndex - 1 to 0 by -1) {\n                if (consonants.contains(word(i)))\
    \ {\n                    return closestVowel\n                }\n            }\n\
    \        }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordReverse = word.reverse\n        for (i <- 0 until wordReverse.length\
    \ - 1) {\n            if (vowels.contains(wordReverse(i)) && !vowels.contains(wordReverse(i\
    \ + 1))) return wordReverse(i).toString\n        }\n        \"\"", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        var min = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        if (k\
    \ - j < min) {\n                            min = k - j\n                    \
    \        result = word(i).toString\n                        }\n              \
    \      }\n                }\n            }\n        }\n        result", "    \
    \    val vowels = List('a', 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n\
    \        var result = \"\"\n        for (i <- wordList.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordList(i))) {\n                if (i ==\
    \ wordList.length - 1) {\n                    if (vowels.contains(wordList(i -\
    \ 1))) {\n                        result = \"\"\n                    } else {\n\
    \                        result = wordList(i).toString\n                    }\n\
    \                } else if (i == 0) {\n                    if (vowels.contains(wordList(i\
    \ + 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordList(i).toString\n                 \
    \   }\n                } else {\n                    if (vowels.contains(wordList(i\
    \ - 1)) || vowels.contains(wordList(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordList(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n       \
    \     if (vowels.contains(word(i))) {\n                if (i == word.length -\
    \ 1) {\n                    if (vowels.contains(word(i - 1))) result = \"\"\n\
    \                    else result = word(i).toString\n                }\n     \
    \           else if (i == 0) result = \"\"\n                else if (vowels.contains(word(i\
    \ - 1))) result = \"\"\n                else result = word(i).toString\n     \
    \       }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var result = \"\"\n        for (i <- word.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(word(i))) {\n                if (i\
    \ == word.length - 1) {\n                    result = \"\"\n                }\
    \ else if (vowels.contains(word(i + 1))) {\n                    result = \"\"\n\
    \                } else {\n                    result = word(i).toString\n   \
    \             }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val wordReversed = word.reverse\n  \
    \      var found = false\n        var i = 0\n        while (i < wordReversed.length\
    \ && !found) {\n            if (vowels.contains(wordReversed(i))) {\n        \
    \        if (i + 1 < wordReversed.length && !vowels.contains(wordReversed(i +\
    \ 1))) {\n                    found = true\n                }\n            }\n\
    \            i += 1\n        }\n        if (found) wordReversed(i - 1).toString\
    \ else \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n  \
    \      for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) result = word(i).toString\n   \
    \             else if (consonants.contains(word(i + 1))) result = word(i).toString\n\
    \            }\n        }\n        result", "        val vowels = \"aeiou\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var result = \"\"\
    \n        var min = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n\
    \            if (consonants.contains(word(i)) && consonants.contains(word(i +\
    \ 1))) {\n                for (j <- i + 1 until word.length) {\n             \
    \       if (vowels.contains(word(j))) {\n                        if (j - i < min)\
    \ {\n                            min = j - i\n                            result\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordReverse = word.reverse\n        var found = false\n        var\
    \ result = \"\"\n        for (i <- 0 until wordReverse.length - 1) {\n       \
    \     if (consonants.contains(wordReverse(i)) && consonants.contains(wordReverse(i\
    \ + 1)) && !found) {\n                for (j <- i + 1 until wordReverse.length)\
    \ {\n                    if (vowels.contains(wordReverse(j))) {\n            \
    \            result = wordReverse(j).toString\n                        found =\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ wordArray = word.toCharArray\n        val wordArrayReverse = wordArray.reverse\n\
    \        var result = \"\"\n        var found = false\n        for (i <- 0 until\
    \ wordArrayReverse.length - 1) {\n            if (vowels.contains(wordArrayReverse(i))\
    \ && !vowels.contains(wordArrayReverse(i + 1))) {\n                result = wordArrayReverse(i).toString\n\
    \                found = true\n                break\n            }\n        }\n\
    \        if (!found) result = \"\"\n        result"]
stop_tokens:
- "\n    }\n"

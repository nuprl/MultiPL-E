name: HumanEval_118_get_closest_vowel
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    // two consonants from the right side of the word (case sensitive).\n\
  \    // Vowels in the beginning and ending doesn't count. Return empty string if\
  \ you didn't\n    // find any vowel met the above condition. \n    // You may assume\
  \ that the given string contains English letter only.\n    // Example:\n    // >>>\
  \ getClosestVowel((\"yogurt\"))\n    // (\"u\")\n    // >>> getClosestVowel((\"\
  FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"quick\"))\n    // (\"\"\
  )\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n    def getClosestVowel(word\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
  yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
  u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
  most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"i\"\
  )));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  Above\")).equals((\"o\")));\n    }\n\n}\n"
completions: ["        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     vowel = word(j).toString\n                        return\
    \ vowel\n                    }\n                }\n            }\n        }\n\
    \        vowel", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    result =\
    \ \"\"\n                } else if (consonants.contains(word(i + 1))) {\n     \
    \               result = word(i).toString\n                }\n            } else\
    \ if (consonants.contains(word(i))) {\n                if (result != \"\") {\n\
    \                    return result\n                }\n            }\n       \
    \ }\n        result", "        var vowels = List(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(word(i).toString)) {\n                if\
    \ (i == word.length - 1) return \"\"\n                if (vowels.contains(word(i\
    \ + 1).toString)) return \"\"\n                result = word(i).toString\n   \
    \             return result\n            }\n        }\n        return result",
  "        val vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val wordList\
    \ = word.toList\n        val wordListReverse = wordList.reverse\n        val wordListReverseVowel\
    \ = wordListReverse.filter(vowels.contains(_))\n        val wordListReverseVowelIndex\
    \ = wordListReverseVowel.map(wordListReverse.indexOf(_))\n        val wordListReverseVowelIndexSorted\
    \ = wordListReverseVowelIndex.sorted\n        val wordListReverseVowelIndexSortedFiltered\
    \ = wordListReverseVowelIndexSorted.filter(_ != 0)\n        if (wordListReverseVowelIndexSortedFiltered.length\
    \ == 0) \"\"\n        else wordListReverse(wordListReverseVowelIndexSortedFiltered(0)\
    \ - 1).toString", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = word.length\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i + 1\n                while (j < word.length && !consonants.contains(word(j)))\
    \ j += 1\n                if (j < word.length) {\n                    var k =\
    \ j + 1\n                    while (k < word.length && !vowels.contains(word(k)))\
    \ k += 1\n                    if (k < word.length) {\n                       \
    \ if (k - i < closestDistance) {\n                            closestDistance\
    \ = k - i\n                            closestVowel = word(i).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val result = new StringBuilder\n        var i = word.length -\
    \ 1\n        while (i >= 0) {\n            if (vowels.contains(word(i))) {\n \
    \               if (i == word.length - 1) {\n                    i -= 1\n    \
    \                continue\n                }\n                if (vowels.contains(word(i\
    \ + 1))) {\n                    i -= 1\n                    continue\n       \
    \         }\n                result.append(word(i))\n                return result.toString\n\
    \            }\n            i -= 1\n        }\n        return result.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        vowel = wordArray(j).toString\n                 \
    \       return vowel\n                    }\n                }\n            }\n\
    \        }\n        return vowel", "        val vowels = \"AEIOUaeiou\"\n    \
    \    val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n       \
    \ var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n       \
    \     if (consonants.contains(word(i))) {\n                for (j <- i - 1 to\
    \ 0 by -1) {\n                    if (vowels.contains(word(j))) {\n          \
    \              result = word(j).toString\n                        return result\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelIndex = -1\n      \
    \  for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i < word.length - 1 && consonants.contains(word(i + 1)))\
    \ {\n                    closestVowel = word(i).toString\n                   \
    \ closestVowelIndex = i\n                    break\n                }\n      \
    \      }\n        }\n        if (closestVowelIndex > 0) {\n            for (i\
    \ <- closestVowelIndex - 1 to 0 by -1) {\n                if (consonants.contains(word(i)))\
    \ {\n                    return closestVowel\n                }\n            }\n\
    \        }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordReverse = word.reverse\n        for (i <- 0 until wordReverse.length\
    \ - 1) {\n            if (vowels.contains(wordReverse(i)) && !vowels.contains(wordReverse(i\
    \ + 1))) return wordReverse(i).toString\n        }\n        \"\"", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        var min = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        if (k\
    \ - j < min) {\n                            min = k - j\n                    \
    \        result = word(i).toString\n                        }\n              \
    \      }\n                }\n            }\n        }\n        result", "    \
    \    val vowels = List('a', 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n\
    \        var result = \"\"\n        for (i <- wordList.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordList(i))) {\n                if (i ==\
    \ wordList.length - 1) {\n                    if (vowels.contains(wordList(i -\
    \ 1))) {\n                        result = \"\"\n                    } else {\n\
    \                        result = wordList(i).toString\n                    }\n\
    \                } else if (i == 0) {\n                    if (vowels.contains(wordList(i\
    \ + 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordList(i).toString\n                 \
    \   }\n                } else {\n                    if (vowels.contains(wordList(i\
    \ - 1)) || vowels.contains(wordList(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordList(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n       \
    \     if (vowels.contains(word(i))) {\n                if (i == word.length -\
    \ 1) {\n                    if (vowels.contains(word(i - 1))) result = \"\"\n\
    \                    else result = word(i).toString\n                }\n     \
    \           else if (i == 0) result = \"\"\n                else if (vowels.contains(word(i\
    \ - 1))) result = \"\"\n                else result = word(i).toString\n     \
    \       }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var result = \"\"\n        for (i <- word.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(word(i))) {\n                if (i\
    \ == word.length - 1) {\n                    result = \"\"\n                }\
    \ else if (vowels.contains(word(i + 1))) {\n                    result = \"\"\n\
    \                } else {\n                    result = word(i).toString\n   \
    \             }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val wordReversed = word.reverse\n  \
    \      var found = false\n        var i = 0\n        while (i < wordReversed.length\
    \ && !found) {\n            if (vowels.contains(wordReversed(i))) {\n        \
    \        if (i + 1 < wordReversed.length && !vowels.contains(wordReversed(i +\
    \ 1))) {\n                    found = true\n                }\n            }\n\
    \            i += 1\n        }\n        if (found) wordReversed(i - 1).toString\
    \ else \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n  \
    \      for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) result = word(i).toString\n   \
    \             else if (consonants.contains(word(i + 1))) result = word(i).toString\n\
    \            }\n        }\n        result", "        val vowels = \"aeiou\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var result = \"\"\
    \n        var min = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n\
    \            if (consonants.contains(word(i)) && consonants.contains(word(i +\
    \ 1))) {\n                for (j <- i + 1 until word.length) {\n             \
    \       if (vowels.contains(word(j))) {\n                        if (j - i < min)\
    \ {\n                            min = j - i\n                            result\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordReverse = word.reverse\n        var found = false\n        var\
    \ result = \"\"\n        for (i <- 0 until wordReverse.length - 1) {\n       \
    \     if (consonants.contains(wordReverse(i)) && consonants.contains(wordReverse(i\
    \ + 1)) && !found) {\n                for (j <- i + 1 until wordReverse.length)\
    \ {\n                    if (vowels.contains(wordReverse(j))) {\n            \
    \            result = wordReverse(j).toString\n                        found =\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ wordArray = word.toCharArray\n        val wordArrayReverse = wordArray.reverse\n\
    \        var result = \"\"\n        var found = false\n        for (i <- 0 until\
    \ wordArrayReverse.length - 1) {\n            if (vowels.contains(wordArrayReverse(i))\
    \ && !vowels.contains(wordArrayReverse(i + 1))) {\n                result = wordArrayReverse(i).toString\n\
    \                found = true\n                break\n            }\n        }\n\
    \        if (!found) result = \"\"\n        result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word(i))) {\n                if (i + 1 < word.length\
    \ && consonants.contains(word(i + 1))) {\n                    result = word(i).toString\n\
    \                    break\n                }\n            }\n        }\n    \
    \    result", "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val vowelIndexes = word.zipWithIndex.filter(x => vowels.contains(x._1)).map(_._2)\n\
    \        val consonantIndexes = word.zipWithIndex.filter(x => consonants.contains(x._1)).map(_._2)\n\
    \        val vowelConsonantPairs = vowelIndexes.flatMap(x => consonantIndexes.map(y\
    \ => (x, y))).filter(x => x._1 > x._2)\n        if (vowelConsonantPairs.isEmpty)\
    \ \"\"\n        else {\n            val closestVowel = vowelConsonantPairs.minBy(x\
    \ => x._1 - x._2)\n            word(closestVowel._1).toString\n        }", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                if (i == wordArray.length\
    \ - 1) {\n                    if (consonants.contains(wordArray(i - 1))) result\
    \ = wordArray(i).toString\n                } else if (i == 0) {\n            \
    \        if (consonants.contains(wordArray(i + 1))) result = wordArray(i).toString\n\
    \                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) result = wordArray(i).toString\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordSet = word.toSet\n        val vowelSet = wordSet.intersect(vowels)\n\
    \        val consonantSet = wordSet.intersect(consonants)\n        if (vowelSet.isEmpty\
    \ || consonantSet.isEmpty) return \"\"\n        val vowelList = vowelSet.toList.sortWith(_\
    \ < _)\n        val consonantList = consonantSet.toList.sortWith(_ < _)\n    \
    \    val vowelIndex = vowelList.map(word.indexOf(_))\n        val consonantIndex\
    \ = consonantList.map(word.indexOf(_))\n        val vowelIndexConsonantIndex =\
    \ vowelIndex.map(x => consonantIndex.filter(x < _))\n        val vowelIndexConsonantIndexMin\
    \ = vowelIndexConsonantIndex.filter(!_.isEmpty).map(x => x.min)\n        val vowelIndexConsonantIndexMinIndex\
    \ = vowelIndexConsonantIndexMin.map(x => vowelIndex.indexOf(x))\n        val vowelIndexConsonantIndexMinIndexChar\
    \ = vowelIndexConsonantIndexMinIndex.map(x => vowelList(x))\n        vowelIndexConsonantIndexMinIndexChar.mkString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        var min = word.length\n        for (i <- 0 until word.length - 1) {\n\
    \            if (vowels.contains(word(i)) && !vowels.contains(word(i + 1))) {\n\
    \                val dist = word.length - i - 1\n                if (dist < min)\
    \ {\n                    min = dist\n                    result = word(i).toString\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n     \
    \   var i = chars.length - 1\n        while (i >= 0) {\n            if (vowels.contains(chars(i)))\
    \ {\n                if (i == chars.length - 1) return \"\"\n                if\
    \ (vowels.contains(chars(i + 1))) return \"\"\n                return chars(i).toString\n\
    \            }\n            i -= 1\n        }\n        return \"\"", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n\
    \        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var distance\
    \ = word.length - i\n                for (j <- i + 1 until word.length) {\n  \
    \                  if (!vowels.contains(word(j))) {\n                        distance\
    \ = j - i\n                        break\n                    }\n            \
    \    }\n                if (distance < closestDistance) {\n                  \
    \  closestDistance = distance\n                    closestVowel = word(i).toString\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) return \"\"\n                if (vowels.contains(wordArray(i\
    \ + 1))) return \"\"\n                result = wordArray(i).toString\n       \
    \         return result\n            }\n        }\n        result", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        // Fill up this function body\n        // 'a' to 'z'\n        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n      \
    \  val wordListRev = wordList.reverse\n        val wordListRevVowel = wordListRev.filter(vowels.contains(_))\n\
    \        val wordListRevVowelIndex = wordListRevVowel.map(wordListRev.indexOf(_))\n\
    \        val wordListRevVowelIndexFiltered = wordListRevVowelIndex.filter(_ !=\
    \ -1)\n        val wordListRevVowelIndexFilteredSorted = wordListRevVowelIndexFiltered.sorted\n\
    \        val wordListRevVowelIndexFilteredSortedFiltered = wordListRevVowelIndexFilteredSorted.filter(_\
    \ != 0)\n        val wordListRevVowelIndexFilteredSortedFilteredFiltered = wordListRevVowelIndexFilteredSortedFiltered.filter(_\
    \ != wordList.length - 1)\n        if (wordListRevVowelIndexFilteredSortedFilteredFiltered.length\
    \ == 0) \"\"\n        else wordListRevVowel(wordListRevVowelIndex.indexOf(wordListRevVowelIndexFilteredSortedFilteredFiltered(0)))\
    \ + \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants\
    \ = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n   \
    \     var result = \"\"\n        for (i <- wordList.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(wordList(i))) {\n                if (i == wordList.length\
    \ - 1) {\n                    if (consonants.contains(wordList(i - 1))) {\n  \
    \                      result = wordList(i).toString\n                    }\n\
    \                } else if (i == 0) {\n                    if (consonants.contains(wordList(i\
    \ + 1))) {\n                        result = wordList(i).toString\n          \
    \          }\n                } else {\n                    if (consonants.contains(wordList(i\
    \ - 1)) && consonants.contains(wordList(i + 1))) {\n                        result\
    \ = wordList(i).toString\n                    }\n                }\n         \
    \   }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n    \
    \    var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n   \
    \     for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (!vowels.contains(word(j))) distance += 1\n      \
    \              else {\n                        if (distance < closestDistance)\
    \ {\n                            closestDistance = distance\n                \
    \            closestVowel = word(i).toString\n                        }\n    \
    \                    break\n                    }\n                }\n       \
    \     }\n        }\n        closestVowel", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val vowelsInWord = word.filter(vowels.contains)\n  \
    \      if (vowelsInWord.length == 0) return \"\"\n        val lastVowelIndex =\
    \ word.lastIndexOf(vowelsInWord.last)\n        val firstConsonantIndex = word.indexWhere(!vowels.contains(_),\
    \ lastVowelIndex)\n        if (firstConsonantIndex == -1) return \"\"\n      \
    \  val firstConsonant = word(firstConsonantIndex)\n        val secondConsonantIndex\
    \ = word.indexWhere(!vowels.contains(_), firstConsonantIndex + 1)\n        if\
    \ (secondConsonantIndex == -1) return \"\"\n        val secondConsonant = word(secondConsonantIndex)\n\
    \        val vowel = word(lastVowelIndex)\n        if (firstConsonantIndex ==\
    \ secondConsonantIndex - 1) return \"\"\n        vowel.toString", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i == word.length - 1) {\n                    if (vowels.contains(word(i\
    \ - 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = word(i).toString\n                    }\n\
    \                } else if (i == 0) {\n                    if (vowels.contains(word(i\
    \ + 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = word(i).toString\n                    }\n\
    \                } else {\n                    if (vowels.contains(word(i - 1))\
    \ || vowels.contains(word(i + 1))) {\n                        result = \"\"\n\
    \                    } else {\n                        result = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        var result = \"\"\n        var vowel = \"\"\n        var vowelIndex = -1\n\
    \        var consonantIndex = -1\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (isVowel(word(i))) {\n                vowel = word(i).toString\n\
    \                vowelIndex = i\n            }\n            if (isConsonant(word(i))\
    \ && vowelIndex != -1) {\n                consonantIndex = i\n               \
    \ break\n            }\n        }\n        if (vowelIndex != -1 && consonantIndex\
    \ != -1) result = vowel\n        result", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        var result = \"\"\n        for (i <- word.length - 1\
    \ to 0 by -1) {\n            if (vowels.contains(word(i))) {\n               \
    \ if (i == word.length - 1) {\n                    if (vowels.contains(word(i\
    \ - 1))) result = \"\"\n                    else result = word(i).toString\n \
    \               }\n                else if (i == 0) result = \"\"\n          \
    \      else if (vowels.contains(word(i - 1))) result = \"\"\n                else\
    \ result = word(i).toString\n            }\n        }\n        result", "    \
    \    val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordSet = word.toLowerCase.toSet\n        val\
    \ vowelSet = wordSet.intersect(vowels)\n        val consonantSet = wordSet.intersect(consonants)\n\
    \        val vowelList = vowelSet.toList.sorted\n        val consonantList = consonantSet.toList.sorted\n\
    \        if (vowelList.length == 0 || consonantList.length == 0) return \"\"\n\
    \        var min = Int.MaxValue\n        var result = \"\"\n        for (i <-\
    \ 0 until vowelList.length) {\n            for (j <- 0 until consonantList.length)\
    \ {\n                val distance = abs(vowelList(i) - consonantList(j))\n   \
    \             if (distance < min) {\n                    min = distance\n    \
    \                result = vowelList(i).toString.toUpperCase\n                }\n\
    \            }\n        }\n        result", "        // Fill up this function\
    \ body\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n\
    \        // '0' to '9' is 48 to 57\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S',\
    \ 'T', 'V', 'W', 'X', 'Y', 'Z')\n        var closest = \"\"\n        var closestIndex\
    \ = -1\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        if\
    \ (closestIndex == -1 || abs(i - j) + abs(i - k) < abs(closestIndex - j) + abs(closestIndex\
    \ - k)) {\n                            closest = word(i).toString\n          \
    \                  closestIndex = i\n                        }\n             \
    \       }\n                }\n            }\n        }\n        closest", "  \
    \      var vowel = \"\"\n        var vowelIndex = -1\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (word(i) == 'a' || word(i) == 'e' || word(i)\
    \ == 'i' || word(i) == 'o' || word(i) == 'u' || word(i) == 'A' || word(i) == 'E'\
    \ || word(i) == 'I' || word(i) == 'O' || word(i) == 'U') {\n                vowel\
    \ = word(i).toString\n                vowelIndex = i\n                break\n\
    \            }\n        }\n        if (vowelIndex == -1) return \"\"\n       \
    \ for (i <- vowelIndex - 1 to 0 by -1) {\n            if (word(i) != 'a' && word(i)\
    \ != 'e' && word(i) != 'i' && word(i) != 'o' && word(i) != 'u' && word(i) != 'A'\
    \ && word(i) != 'E' && word(i) != 'I' && word(i) != 'O' && word(i) != 'U') {\n\
    \                return vowel\n            }\n        }\n        return \"\"",
  "        val vowels = \"aeiou\"\n        val wordArray = word.toCharArray\n    \
    \    val wordLength = wordArray.length\n        var result = \"\"\n        for\
    \ (i <- wordLength - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordLength - 1) {\n                    if (vowels.contains(wordArray(i\
    \ - 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordArray(i).toString\n                \
    \    }\n                } else if (i == 0) {\n                    if (vowels.contains(wordArray(i\
    \ + 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordArray(i).toString\n                \
    \    }\n                } else {\n                    if (vowels.contains(wordArray(i\
    \ - 1)) || vowels.contains(wordArray(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordArray(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        var closestVowel = \"\"\n        for\
    \ (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                closestVowel = word(i).toString\n                break\n\
    \            }\n        }\n        closestVowel", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        var result = \"\"\n        var prev = \"\"\n        var next = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (consonants.contains(prev) && consonants.contains(next))\
    \ {\n                    result = word(i).toString\n                    break\n\
    \                }\n                next = \"\"\n            } else {\n      \
    \          prev = word(i).toString\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val wordArray = word.toCharArray\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i + 1 < wordArray.length && !vowels.contains(wordArray(i\
    \ + 1))) return wordArray(i).toString\n                else if (i - 1 >= 0 &&\
    \ !vowels.contains(wordArray(i - 1))) return wordArray(i).toString\n         \
    \   }\n        }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    val distance = i\
    \ - j\n                    if (distance < closestDistance) {\n               \
    \         closestDistance = distance\n                        closestVowel = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiou\"\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i == word.length - 1) return \"\"\n                else if (vowels.contains(word(i\
    \ + 1))) return \"\"\n                else return word(i).toString\n         \
    \   }\n        }\n        return \"\"", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val\
    \ wordArray = word.toCharArray\n        var vowel = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowel = wordArray(i).toString\n                if (i > 0 && consonants.contains(wordArray(i\
    \ - 1))) return vowel\n            }\n        }\n        return \"\"", "     \
    \   val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordSet = word.toSet\n        val vowelSet\
    \ = wordSet.intersect(vowels)\n        val consonantSet = wordSet.intersect(consonants)\n\
    \        if (vowelSet.isEmpty || consonantSet.isEmpty) return \"\"\n        var\
    \ vowelList = vowelSet.toList\n        var consonantList = consonantSet.toList\n\
    \        var vowelIndex = 0\n        var consonantIndex = 0\n        var result\
    \ = \"\"\n        while (vowelIndex < vowelList.length && consonantIndex < consonantList.length)\
    \ {\n            if (vowelList(vowelIndex) < consonantList(consonantIndex)) {\n\
    \                result = vowelList(vowelIndex).toString\n                vowelIndex\
    \ += 1\n            } else consonantIndex += 1\n        }\n        result", " \
    \       val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- 0 until word.length - 1) {\n  \
    \          if (consonants.contains(word(i)) && vowels.contains(word(i + 1))) {\n\
    \                result = word(i + 1).toString\n                break\n      \
    \      }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var\
    \ index = -1\n        for (i <- word.length - 1 to 0 by -1) {\n            if\
    \ (consonants.contains(word(i))) {\n                index = i\n              \
    \  break\n            }\n        }\n        if (index == -1) return \"\"\n   \
    \     var min = Int.MaxValue\n        var minIndex = -1\n        for (i <- index\
    \ + 1 to word.length - 1) {\n            if (vowels.contains(word(i))) {\n   \
    \             if (i - index < min) {\n                    min = i - index\n  \
    \                  minIndex = i\n                }\n            }\n        }\n\
    \        if (minIndex == -1) return \"\"\n        word(minIndex).toString", " \
    \       // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n  \
    \      // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        var\
    \ vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J',\
    \ 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z')\n    \
    \    var result = \"\"\n        var lastConsonant = -1\n        for (i <- 0 until\
    \ word.length) {\n            if (consonants.contains(word(i))) {\n          \
    \      lastConsonant = i\n            }\n            if (vowels.contains(word(i))\
    \ && lastConsonant != -1) {\n                result = word(i).toString\n     \
    \           break\n            }\n        }\n        result", "        // Fill\
    \ up this function body\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P',\
    \ 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z')\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        var closestVowelIndex = -1\n       \
    \ for (i <- 0 until wordArray.length - 1) {\n            if (consonants.contains(wordArray(i))\
    \ && consonants.contains(wordArray(i + 1))) {\n                for (j <- i + 1\
    \ until wordArray.length) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        if (closestVowelIndex == -1 || j - i < closestVowelIndex)\
    \ {\n                            closestVowelIndex = j - i\n                 \
    \           closestVowel = wordArray(j).toString\n                        }\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result\
    \ = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i).toString))\
    \ {\n                if (i == word.length - 1) return \"\"\n                else\
    \ if (vowels.contains(word(i + 1).toString)) return \"\"\n                else\
    \ return word(i).toString\n            }\n        }\n        return \"\"", " \
    \       val vowels = \"aeiouAEIOU\"\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(wordArray(i))) {\n               \
    \ closestVowel = wordArray(i).toString\n                break\n            }\n\
    \        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n    \
    \    val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n       \
    \ var result = \"\"\n        var index = word.length - 1\n        while (index\
    \ >= 0) {\n            if (consonants.contains(word(index))) {\n             \
    \   var i = index - 1\n                while (i >= 0) {\n                    if\
    \ (vowels.contains(word(i))) {\n                        result = word(i).toString\n\
    \                        return result\n                    }\n              \
    \      i -= 1\n                }\n            }\n            index -= 1\n    \
    \    }\n        result", "        // Fill up this function body\n        // 'a'\
    \ to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to '9'\
    \ is 48 to 57\n        // ' ' is 32\n        // '.' is 46\n        // ',' is 44\n\
    \        // '!' is 33\n        // '?' is 63\n        // '\\n' is 10\n        //\
    \ '\\t' is 9\n        // '\\r' is 13\n        // '\\f' is 12\n        // '\\b'\
    \ is 8\n        // '\\'' is 39\n        // '\\\"' is 34\n        // '\\\\' is\
    \ 92\n        // '\\0' is 0\n        // '\\000' is 0\n        // '\\u0000' is\
    \ 0\n        // '\\uFFFF' is 65535\n        // '\\377' is 255\n        // '\\\
    xFF' is 255\n        // '\\u00FF' is 255\n        // '\\000' is 0\n        //\
    \ '\\u0000' is 0\n        // '\\uFFFF' is 65535\n        // '\\377' is 255\n \
    \       // '\\xFF' is 255\n        // '\\u00FF' is 255\n        // '\\000' is\
    \ 0\n        // '\\u0000' is 0\n        // '\\uFFFF' is 65535\n        // '\\\
    377' is 255\n        // '\\xFF' is 255\n        // '\\u00FF' is 255\n        //\
    \ '\\000' is 0\n        // '\\u0000' is 0\n        // '\\uFFFF' is 65535\n   \
    \     // '\\377' is 255\n        // '\\xFF' is 255\n        // '\\u00FF' is 255\n\
    \        // '\\000' is 0\n        // '\\u0000' is 0\n        // '\\uFFFF' is 65535\n\
    \        // '\\377' is 255\n        // '\\xFF' is 255\n        // '\\u00FF' is\
    \ 255\n        // '\\000' is 0\n        // '\\u0000' is 0\n        // '\\uFFFF'\
    \ is 65535\n        // '\\377' is 255\n        // '\\xFF' is 255", "        var\
    \ result = \"\"\n        var vowels = Set('a', 'e', 'i', 'o', 'u')\n        var\
    \ i = word.length - 1\n        while (i >= 0) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i < word.length - 1 && !vowels.contains(word(i + 1)))\
    \ {\n                    result = word(i).toString\n                    return\
    \ result\n                }\n            }\n            i -= 1\n        }\n  \
    \      result", "        val vowels = \"aeiouAEIOU\"\n        val consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        result = word(j).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        def isVowel(c\
    \ : Char) = vowels.contains(c)\n        def isConsonant(c : Char) = consonants.contains(c)\n\
    \        val wordList = word.toList\n        val wordListReversed = wordList.reverse\n\
    \        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n     \
    \   val wordListReversedWithIndexFiltered = wordListReversedWithIndex.filter(x\
    \ => isConsonant(x._1))\n        val wordListReversedWithIndexFilteredWithVowel\
    \ = wordListReversedWithIndexFiltered.filter(x => isVowel(wordListReversed(x._2\
    \ + 1)))\n        val wordListReversedWithIndexFilteredWithVowelSorted = wordListReversedWithIndexFilteredWithVowel.sortBy(x\
    \ => x._2)\n        if (wordListReversedWithIndexFilteredWithVowelSorted.isEmpty)\
    \ \"\" else wordListReversed(wordListReversedWithIndexFilteredWithVowelSorted.head._2\
    \ + 1).toString", "        val vowels = \"AEIOUaeiou\"\n        val consonants\
    \ = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n        var result = \"\"\n\
    \        var min = word.length\n        for (i <- 0 until word.length) {\n   \
    \         if (vowels.contains(word(i))) {\n                var j = i - 1\n   \
    \             while (j >= 0 && consonants.contains(word(j))) j -= 1\n        \
    \        if (j >= 0 && consonants.contains(word(j))) {\n                    var\
    \ k = i + 1\n                    while (k < word.length && consonants.contains(word(k)))\
    \ k += 1\n                    if (k < word.length && consonants.contains(word(k)))\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j\n                            result = word(i).toString\n           \
    \             }\n                    }\n                }\n            }\n   \
    \     }\n        result", "        var vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var closestVowel = \"\"\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(word(i))) {\n                closestVowel\
    \ = word(i).toString\n                break\n            }\n        }\n      \
    \  closestVowel", "        val vowels = \"aeiouAEIOU\"\n        var result = \"\
    \"\n        var min = word.length\n        for (i <- 0 until word.length - 1)\
    \ {\n            if (vowels.contains(word(i)) && !vowels.contains(word(i + 1)))\
    \ {\n                var j = i + 1\n                while (j < word.length &&\
    \ !vowels.contains(word(j))) j += 1\n                if (j < word.length && j\
    \ - i < min) {\n                    min = j - i\n                    result =\
    \ word(i).toString\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        var vowelIndex\
    \ = -1\n        var consonantIndex = -1\n        for (i <- 0 until wordList.length)\
    \ {\n            if (vowels.contains(wordList(i))) vowelIndex = i\n          \
    \  if (consonants.contains(wordList(i))) consonantIndex = i\n            if (vowelIndex\
    \ != -1 && consonantIndex != -1) {\n                if (vowelIndex < consonantIndex)\
    \ return wordList(vowelIndex).toString\n            }\n        }\n        \"\"",
  "        val vowels = \"aeiouAEIOU\"\n        var closest = \"\"\n        var min\
    \ = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n            if\
    \ (vowels.contains(word(i)) && !vowels.contains(word(i + 1))) {\n            \
    \    val distance = word.length - i - 1\n                if (distance < min) {\n\
    \                    min = distance\n                    closest = word(i).toString\n\
    \                }\n            }\n        }\n        closest", "        // Fill\
    \ up this function body\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        // ' ' is 32\n \
    \       // '.' is 46\n        // ',' is 44\n        // '!' is 33\n        // '?'\
    \ is 63\n        // '(' is 40\n        // ')' is 41\n        // '{' is 123\n \
    \       // '}' is 125\n        // '[' is 91\n        // ']' is 93\n        //\
    \ '<' is 60\n        // '>' is 62\n        // '-' is 45\n        // '_' is 95\n\
    \        // '+' is 43\n        // '=' is 61\n        // '@' is 64\n        //\
    \ '#' is 35\n        // '$' is 36\n        // '%' is 37\n        // '^' is 94\n\
    \        // '&' is 38\n        // '*' is 42\n        // ':' is 58\n        //\
    \ ';' is 59\n        // ''' is 39\n        // '\"' is 34\n        // '\\\\' is\
    \ 92\n        // '/' is 47\n        // '|' is 124\n        // '~' is 126\n   \
    \     // '`' is 96\n        // ' ' is 32\n        // '\t' is 9\n        // '\\\
    n' is 10\n        // '\\r' is 13\n        // '\\f' is 12\n        // '\\b' is\
    \ 8\n        // '\\t' is 9\n        // '\\u000B' is 11\n        // '\\u0085' is\
    \ 133\n        // '\\u2028' is 8232\n        // '\\u2029' is 8233\n        //\
    \ '\\u000C' is 12\n        // '\\u000D' is 13\n        // '\\u000E' is 14\n  \
    \      // '\\u000F' is 15\n        // '\\u0010' is 16\n        // '\\u0011' is\
    \ 17\n        // '\\u0012' is 18\n        // '\\u0013' is 19\n        // '\\u0014'\
    \ is 20\n        // '\\u0015'", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (!vowels.contains(wordArray(i))) return wordArray(vowelIndex).toString\n\
    \        }\n        \"\"", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val wordList = word.toList\n        val wordListRev = wordList.reverse\n\
    \        val wordListRevVowels = wordListRev.filter(vowels.contains(_))\n    \
    \    val wordListRevVowelsConsonants = wordListRevVowels.filterNot(vowels.contains(_))\n\
    \        if (wordListRevVowelsConsonants.length == 0) \"\"\n        else wordListRevVowelsConsonants.head.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = -1\n        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (closestDistance\
    \ == -1 || j - i < closestDistance) {\n                            closestDistance\
    \ = j - i\n                            closestVowel = word(j).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        // Fill up this function body\n  \
    \      // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n       \
    \ // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a'\
    \ to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z'\
    \ is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97\
    \ to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n\
    \        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n     \
    \   // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        //\
    \ 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to\
    \ 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n\
    \        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n     \
    \   // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to\
    \ 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to\
    \ 122\n        // 'A' to 'Z' is 65 to 90", "        // Fill up this function body\n\
    \        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n     \
    \   // '0' to '9' is 48 to 57\n        // ' ' is 32\n        // '.' is 46\n  \
    \      // ',' is 44\n        // '!' is 33\n        // '?' is 63\n        // '\\\
    n' is 10\n        // '\\t' is 9\n        // '\\r' is 13\n        // '\\f' is 12\n\
    \        // '\\b' is 8\n        // '\\'' is 39\n        // '\\\"' is 34\n    \
    \    // '\\\\' is 92\n        // '\\0' is 0\n        // '\\000' is 0\n       \
    \ // '\\u0000' is 0\n        // '\\u0061' is 97\n        // '\\u0041' is 65\n\
    \        // '\\u0030' is 48\n        // '\\u0020' is 32\n        // '\\u002e'\
    \ is 46\n        // '\\u002c' is 44\n        // '\\u0021' is 33\n        // '\\\
    u003f' is 63\n        // '\\u000a' is 10\n        // '\\u0009' is 9\n        //\
    \ '\\u000d' is 13\n        // '\\u000c' is 12\n        // '\\u0008' is 8\n   \
    \     // '\\u0027' is 39\n        // '\\u0022' is 34\n        // '\\u005c' is\
    \ 92\n        // '\\u0000' is 0\n        // '\\u0000' is 0\n        // '\\u0000'\
    \ is 0\n        // '\\u0000' is 0\n        // '\\u0000' is 0\n        // '\\u0000'\
    \ is 0\n        // '\\u0000' is 0\n        // '\\u0000' is 0\n        // '\\u0000'\
    \ is 0\n        // '\\u0000' is 0\n        // '\\u0000' is 0\n        // '\\u0000'\
    \ is 0\n        // '\\u0000' is 0\n        // '\\u0000' is 0\n        // '\\u0000'\
    \ is 0\n        // '", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordList = word.toList\n\
    \        val wordListReversed = wordList.reverse\n        val vowelList = vowels.toList\n\
    \        val consonantList = consonants.toList\n        val vowelListReversed\
    \ = vowelList.reverse\n        val consonantListReversed = consonantList.reverse\n\
    \        var vowelIndex = -1\n        var consonantIndex = -1\n        var vowelIndexReversed\
    \ = -1\n        var consonantIndexReversed = -1\n        var vowelIndexList =\
    \ List[Int]()\n        var consonantIndexList = List[Int]()\n        var vowelIndexListReversed\
    \ = List[Int]()\n        var consonantIndexListReversed = List[Int]()\n      \
    \  for (i <- 0 until wordList.length) {\n            if (vowelList.contains(wordList(i)))\
    \ {\n                vowelIndex = i\n                vowelIndexList = vowelIndexList\
    \ :+ vowelIndex\n            }\n            if (consonantList.contains(wordList(i)))\
    \ {\n                consonantIndex = i\n                consonantIndexList =\
    \ consonantIndexList :+ consonantIndex\n            }\n        }\n        for\
    \ (i <- 0 until wordListReversed.length) {\n            if (vowelListReversed.contains(wordListReversed(i)))\
    \ {\n                vowelIndexReversed = i\n                vowelIndexListReversed\
    \ = vowelIndexListReversed :+ vowelIndexReversed\n            }\n            if\
    \ (consonantListReversed.contains(wordListReversed(i))) {\n                consonantIndexReversed\
    \ = i\n                consonantIndexListReversed = consonantIndexListReversed\
    \ :+ consonantIndexReversed\n            }\n        }\n        var vowelIndexListReversedSorted\
    \ = vowelIndexListReversed.sorted\n        var consonantIndexListReversedSorted\
    \ = consonantIndexListReversed.sorted\n        var vowelIndexListSorted", "  \
    \      // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n   \
    \     // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        //\
    \ ' ' is 32\n        // '.' is 46\n        // ',' is 44\n        // '!' is 33\n\
    \        // '?' is 63\n        // '\\n' is 10\n        // '\\t' is 9\n       \
    \ // '\\r' is 13\n        // '\\b' is 8\n        // '\\f' is 12\n        // '\\\
    '' is 39\n        // '\\\"' is 34\n        // '\\\\' is 92\n        // '\\0' is\
    \ 0\n        // '\\000' is 0\n        // '\\u0000' is 0\n        // '\\u0001'\
    \ is 1\n        // '\\u0002' is 2\n        // '\\u0003' is 3\n        // '\\u0004'\
    \ is 4\n        // '\\u0005' is 5\n        // '\\u0006' is 6\n        // '\\u0007'\
    \ is 7\n        // '\\u0008' is 8\n        // '\\u0009' is 9\n        // '\\u000a'\
    \ is 10\n        // '\\u000b' is 11\n        // '\\u000c' is 12\n        // '\\\
    u000d' is 13\n        // '\\u000e' is 14\n        // '\\u000f' is 15\n       \
    \ // '\\u0010' is 16\n        // '\\u0011' is 17\n        // '\\u0012' is 18\n\
    \        // '\\u0013' is 19\n        // '\\u0014' is 20\n        // '\\u0015'\
    \ is 21\n        // '\\u0016' is 22\n        // '\\u0017' is 23\n        // '\\\
    u0018' is 24\n        // '\\u0019' is 25\n        // '\\u001a' is 26\n       \
    \ // '\\u001b' is 27\n        // '\\u001c' is 28\n        // '\\u001d' is 29\n\
    \        // '\\u001e' is 30\n        //", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var lastConsonant = -1\n        var closestVowel = \"\"\n        for (i\
    \ <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                if (lastConsonant == -1) lastConsonant = i\n            \
    \    else if (vowels.contains(word(i + 1))) {\n                    closestVowel\
    \ = word(i + 1).toString\n                    return closestVowel\n          \
    \      }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n        for (i <-\
    \ word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n\
    \                if (i == word.length - 1) {\n                    result = \"\"\
    \n                } else if (vowels.contains(word(i + 1))) {\n               \
    \     result = \"\"\n                } else {\n                    result = word(i).toString\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var result = \"\"\n        var min = Int.MaxValue\n     \
    \   for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        if\
    \ (k - j < min) {\n                            min = k - j\n                 \
    \           result = word(i).toString\n                        }\n           \
    \         }\n                }\n            }\n        }\n        result", " \
    \       val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (i\
    \ <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) return \"\"\n                else\
    \ if (vowels.contains(word(i + 1))) return \"\"\n                else return word(i).toString\n\
    \            }\n        }\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n        val vowelList\
    \ = wordList.filter(vowels.contains(_))\n        if (vowelList.length < 2) return\
    \ \"\"\n        val vowelIndexList = vowelList.map(wordList.indexOf(_))\n    \
    \    val vowelIndexPairList = vowelIndexList.zip(vowelIndexList.tail)\n      \
    \  val vowelIndexPairList2 = vowelIndexPairList.filter(x => x._2 - x._1 > 1)\n\
    \        if (vowelIndexPairList2.length == 0) return \"\"\n        val vowelIndexPairList3\
    \ = vowelIndexPairList2.map(x => (x._1, x._2, x._2 - x._1))\n        val vowelIndexPairList4\
    \ = vowelIndexPairList3.minBy(_._3)\n        val vowelIndex = vowelIndexPairList4._1\n\
    \        val vowel = wordList(vowelIndex)\n        vowel.toString", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var consonantIndex\
    \ = -1\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (consonantIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ + 1 until wordArray.length) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (i - vowelIndex < vowelIndex - consonantIndex) return\
    \ \"\"\n                break\n            }\n        }\n        wordArray(vowelIndex).toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        var index = -1\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(word(i))) {\n       \
    \         if (index == -1) {\n                    index = i\n                }\
    \ else {\n                    for (j <- i + 1 to index) {\n                  \
    \      if (vowels.contains(word(j))) {\n                            result = word(j).toString\n\
    \                            return result\n                        }\n      \
    \              }\n                    index = i\n                }\n         \
    \   }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- word.indices) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < closestDistance) {\n       \
    \                     closestDistance = distance\n                           \
    \ closestVowel = word(i).toString\n                        }\n               \
    \     }\n                }\n            }\n        }\n        closestVowel", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel =\
    \ \"\"\n        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var distance\
    \ = word.length - i\n                var j = i + 1\n                while (j <\
    \ word.length && !vowels.contains(word(j))) {\n                    distance -=\
    \ 1\n                    j += 1\n                }\n                if (distance\
    \ < closestDistance) {\n                    closestDistance = distance\n     \
    \               closestVowel = word(i).toString\n                }\n         \
    \   }\n        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val\
    \ wordList = word.toList\n        val wordListReverse = wordList.reverse\n   \
    \     var result = \"\"\n        for (i <- 0 until wordListReverse.length - 1)\
    \ {\n            if (vowels.contains(wordListReverse(i)) && consonants.contains(wordListReverse(i\
    \ + 1))) {\n                result = wordListReverse(i).toString\n           \
    \     break\n            }\n        }\n        result", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var result = \"\"\n      \
    \  for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n      \
    \  val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val\
    \ wordArray = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n      \
    \  var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n      \
    \      if (vowels.contains(word(i))) {\n                if (i == word.length -\
    \ 1) {\n                    if (i - 1 >= 0 && !vowels.contains(word(i - 1))) {\n\
    \                        result = word(i).toString\n                    }\n  \
    \              } else if (i == 0) {\n                    if (i + 1 < word.length\
    \ && !vowels.contains(word(i + 1))) {\n                        result = word(i).toString\n\
    \                    }\n                } else {\n                    if (!vowels.contains(word(i\
    \ - 1)) && !vowels.contains(word(i + 1))) {\n                        result =\
    \ word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val chars = word.toCharArray\n        var closestVowel = \"\"\n     \
    \   for (i <- 0 until chars.length - 1) {\n            if (vowels.contains(chars(i))\
    \ && !vowels.contains(chars(i + 1))) {\n                closestVowel = chars(i).toString\n\
    \            }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        val wordLength = wordArray.length\n\
    \        var vowel = \"\"\n        var vowelIndex = -1\n        for (i <- 0 until\
    \ wordLength) {\n            if (vowels.contains(wordArray(i))) {\n          \
    \      if (i > 0 && consonants.contains(wordArray(i - 1)) && i < wordLength -\
    \ 1 && consonants.contains(wordArray(i + 1))) {\n                    vowel = wordArray(i).toString\n\
    \                    vowelIndex = i\n                    break\n             \
    \   }\n            }\n        }\n        if (vowelIndex != -1) {\n           \
    \ for (i <- vowelIndex + 1 until wordLength) {\n                if (vowels.contains(wordArray(i)))\
    \ {\n                    if (i > 0 && consonants.contains(wordArray(i - 1)) &&\
    \ i < wordLength - 1 && consonants.contains(wordArray(i + 1))) {\n           \
    \             vowel = wordArray(i).toString\n                        break\n \
    \                   }\n                }\n            }\n        }\n        vowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        var closestIndex = -1\n        for (i <- wordArray.length -\
    \ 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n        \
    \        if (i < wordArray.length - 1 && consonants.contains(wordArray(i + 1)))\
    \ {\n                    closestVowel = wordArray(i).toString\n              \
    \      closestIndex = i\n                    break\n                }\n      \
    \          else if (i > 0 && consonants.contains(wordArray(i - 1))) {\n      \
    \              closestVowel = wordArray(i).toString\n                    closestIndex\
    \ = i\n                    break\n                }\n            }\n        }\n\
    \        closestVowel", "        // Fill up this function body\n        // 'a',\
    \ 'e', 'i', 'o', 'u'\n        var vowels = Set('a', 'e', 'i', 'o', 'u')\n    \
    \    var consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\
    \n        var min = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n\
    \            if (consonants.contains(word(i)) && vowels.contains(word(i + 1)))\
    \ {\n                var j = i + 1\n                while (j < word.length &&\
    \ vowels.contains(word(j))) {\n                    if (consonants.contains(word(j\
    \ + 1))) {\n                        if (j - i < min) {\n                     \
    \       min = j - i\n                            result = word(j).toString\n \
    \                       }\n                    }\n                    j += 1\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n        var\
    \ closestDistance = Int.MaxValue\n        for (i <- 0 until word.length) {\n \
    \           if (vowels.contains(word(i))) {\n                var distance = 0\n\
    \                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ {\n                    distance += 1\n                    j -= 1\n         \
    \       }\n                if (j >= 0) {\n                    j = i + 1\n    \
    \                while (j < word.length && !vowels.contains(word(j))) {\n    \
    \                    distance += 1\n                        j += 1\n         \
    \           }\n                    if (j < word.length && distance < closestDistance)\
    \ {\n                        closestDistance = distance\n                    \
    \    closestVowel = word(i).toString\n                    }\n                }\n\
    \            }\n        }\n        closestVowel", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        var result = \"\"\n        var min = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        if (k\
    \ - j < min) {\n                            min = k - j\n                    \
    \        result = word(i).toString\n                        }\n              \
    \      }\n                }\n            }\n        }\n        result", "    \
    \    var vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        var lastVowel\
    \ = -1\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                lastVowel = i\n                break\n            }\n   \
    \     }\n        if (lastVowel == -1) return \"\"\n        for (i <- lastVowel\
    \ - 1 to 0 by -1) {\n            if (!vowels.contains(word(i))) {\n          \
    \      result = word(lastVowel).toString\n                break\n            }\n\
    \        }\n        result", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result\
    \ = \"\"\n        var index = word.length - 1\n        while (index >= 0) {\n\
    \            if (consonants.contains(word(index))) {\n                if (index\
    \ + 1 < word.length && vowels.contains(word(index + 1))) {\n                 \
    \   result = word(index + 1).toString\n                    return result\n   \
    \             }\n                else if (index - 1 >= 0 && vowels.contains(word(index\
    \ - 1))) {\n                    result = word(index - 1).toString\n          \
    \          return result\n                }\n            }\n            index\
    \ -= 1\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n   \
    \     var closestVowel = \"\"\n        var minDistance = word.length\n       \
    \ for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (!vowels.contains(word(j))) distance += 1\n      \
    \              else break\n                }\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        var vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (i\
    \ <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    if (i >\
    \ 0) {\n                        if (!vowels.contains(word(i - 1))) {\n       \
    \                     result = word(i).toString\n                        }\n \
    \                   }\n                } else {\n                    if (!vowels.contains(word(i\
    \ + 1))) {\n                        if (i > 0) {\n                           \
    \ if (!vowels.contains(word(i - 1))) {\n                                result\
    \ = word(i).toString\n                            }\n                        }\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        var closestVowel = \"\"\n        var\
    \ closestDistance = word.length\n        for (i <- 0 until word.length) {\n  \
    \          if (vowels.contains(word(i))) {\n                var distance = word.length\
    \ - i\n                for (j <- i + 1 until word.length) {\n                \
    \    if (!vowels.contains(word(j))) {\n                        distance = j -\
    \ i\n                        break\n                    }\n                }\n\
    \                if (distance < closestDistance) {\n                    closestDistance\
    \ = distance\n                    closestVowel = word(i).toString\n          \
    \      }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiouAEIOU\"\n        var closestVowel = \"\"\n        var distance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        if (k\
    \ - j < distance) {\n                            distance = k - j\n          \
    \                  closestVowel = word(i).toString\n                        }\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        var vowels = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        var index = word.length - 1\n        while (index >= 0) {\n         \
    \   if (vowels.contains(word(index))) {\n                if (index == word.length\
    \ - 1) {\n                    index -= 1\n                    continue\n     \
    \           }\n                if (vowels.contains(word(index + 1))) {\n     \
    \               index -= 1\n                    continue\n                }\n\
    \                result = word(index).toString\n                return result\n\
    \            }\n            index -= 1\n        }\n        result", "        var\
    \ vowel = \"\"\n        var closest = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (\"aeiou\".contains(word(i))) {\n                var j = i\
    \ - 1\n                while (j >= 0 && !\"aeiou\".contains(word(j))) j -= 1\n\
    \                if (j >= 0) {\n                    var k = i + 1\n          \
    \          while (k < word.length && !\"aeiou\".contains(word(k))) k += 1\n  \
    \                  if (k < word.length) {\n                        if (k - j <\
    \ closest) {\n                            closest = k - j\n                  \
    \          vowel = word(i).toString\n                        }\n             \
    \       }\n                }\n            }\n        }\n        vowel", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var closestVowel =\
    \ \"\"\n        var closestVowelIndex = -1\n        for (i <- word.length - 1\
    \ to 0 by -1) {\n            if (vowels.contains(word(i))) {\n               \
    \ if (i < word.length - 1 && consonants.contains(word(i + 1))) {\n           \
    \         closestVowel = word(i).toString\n                    closestVowelIndex\
    \ = i\n                    break\n                }\n            }\n        }\n\
    \        if (closestVowelIndex > 0) {\n            for (i <- closestVowelIndex\
    \ - 1 to 0 by -1) {\n                if (consonants.contains(word(i))) {\n   \
    \                 return closestVowel\n                }\n            }\n    \
    \    }\n        return \"\"", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray\
    \ = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordSet\
    \ = word.toSet\n        val vowelSet = wordSet & vowels\n        val consonantSet\
    \ = wordSet & consonants\n        val vowelConsonantSet = (vowelSet & consonantSet)\n\
    \        if (vowelConsonantSet.size == 0) return \"\"\n        val vowelConsonantList\
    \ = vowelConsonantSet.toList\n        val vowelConsonantIndex = word.indexOf(vowelConsonantList(0))\n\
    \        val vowelIndex = word.indexOf(vowelSet.toList(0))\n        if (vowelIndex\
    \ < vowelConsonantIndex) return \"\"\n        val vowelList = vowelSet.toList\n\
    \        val vowelIndexList = vowelList.map(word.indexOf(_))\n        val vowelIndexListFiltered\
    \ = vowelIndexList.filter(_ > vowelConsonantIndex)\n        val vowelIndexListSorted\
    \ = vowelIndexListFiltered.sorted\n        val closestVowelIndex = vowelIndexListSorted(0)\n\
    \        val closestVowel = word(closestVowelIndex).toString\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\
    \"\n        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n    \
    \            if (j >= 0) {\n                    var k = i + 1\n              \
    \      while (k < word.length && !vowels.contains(word(k))) k += 1\n         \
    \           if (k < word.length) {\n                        val distance = k -\
    \ j\n                        if (distance < closestDistance) {\n             \
    \               closestDistance = distance\n                            closestVowel\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        var result = \"\
    \"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (consonants.contains(wordArray(i - 1))) {\n                        result =\
    \ wordArray(i).toString\n                    }\n                } else if (i ==\
    \ 0) {\n                    if (consonants.contains(wordArray(i + 1))) {\n   \
    \                     result = wordArray(i).toString\n                    }\n\
    \                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        result\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordList\
    \ = word.toList\n        val wordListReversed = wordList.reverse\n        val\
    \ wordListReversedWithIndex = wordListReversed.zipWithIndex\n        val wordListReversedWithIndexFiltered\
    \ = wordListReversedWithIndex.filter(x => consonants.contains(x._1))\n       \
    \ val wordListReversedWithIndexFilteredWithIndex = wordListReversedWithIndexFiltered.zipWithIndex\n\
    \        val wordListReversedWithIndexFilteredWithIndexFiltered = wordListReversedWithIndexFilteredWithIndex.filter(x\
    \ => x._1._2 == x._2 + 1)\n        val wordListReversedWithIndexFilteredWithIndexFilteredMapped\
    \ = wordListReversedWithIndexFilteredWithIndexFiltered.map(x => x._1._1)\n   \
    \     val wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndex =\
    \ wordListReversedWithIndexFilteredWithIndexFilteredMapped.zipWithIndex\n    \
    \    val wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndexFiltered\
    \ = wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndex.filter(x\
    \ => vowels.contains(x._1))\n        val wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndexFilteredMapped\
    \ = wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndexFiltered.map(x\
    \ => x._1)\n        if (wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndexFilteredMapped.isEmpty)\
    \ \"\" else wordListReversedWithIndexFilteredWithIndexFilteredMappedWithIndexFilteredMapped.head.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var result = \"\"\n      \
    \  for (i <- wordArray.length - 1 to 0 by -1) {\n            if (cons.contains(wordArray(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !cons.contains(wordArray(j)))\
    \ {\n                    if (vowels.contains(wordArray(j))) {\n              \
    \          result = wordArray(j).toString\n                        return result\n\
    \                    }\n                    j -= 1\n                }\n      \
    \      }\n        }\n        result", "        val vowels = \"aeiou\"\n      \
    \  var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n      \
    \      if (vowels.contains(word(i))) {\n                if (i == word.length -\
    \ 1) return \"\"\n                if (vowels.contains(word(i + 1))) return \"\"\
    \n                result = word(i).toString\n                return result\n \
    \           }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) return \"\"\n                if (vowels.contains(word(i + 1))) return \"\
    \"\n                result = word(i).toString\n                return result\n\
    \            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n  \
    \          if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) {\n                    if (consonants.contains(word(i - 1))) result = word(i).toString\n\
    \                } else if (i == 0) {\n                    if (consonants.contains(word(i\
    \ + 1))) result = word(i).toString\n                } else {\n               \
    \     if (consonants.contains(word(i - 1)) && consonants.contains(word(i + 1)))\
    \ result = word(i).toString\n                }\n            }\n        }\n   \
    \     result", "        val vowels = \"aeiouAEIOU\"\n        val consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        result = word(j).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result =\
    \ \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    result =\
    \ \"\"\n                } else if (consonants.contains(word(i + 1))) {\n     \
    \               result = word(i).toString\n                }\n            } else\
    \ if (consonants.contains(word(i))) {\n                if (i == word.length -\
    \ 1) {\n                    result = \"\"\n                } else if (vowels.contains(word(i\
    \ + 1))) {\n                    result = \"\"\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiou\"\n        var\
    \ result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n           \
    \ if (vowels.contains(word(i))) {\n                if (i == word.length - 1) {\n\
    \                    if (i - 1 >= 0 && !vowels.contains(word(i - 1))) result =\
    \ word(i).toString\n                } else if (i == 0) {\n                   \
    \ if (i + 1 < word.length && !vowels.contains(word(i + 1))) result = word(i).toString\n\
    \                } else {\n                    if (!vowels.contains(word(i - 1))\
    \ && !vowels.contains(word(i + 1))) result = word(i).toString\n              \
    \  }\n            }\n        }\n        result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i < word.length - 1 && !vowels.contains(word(i + 1))) {\n          \
    \          result = word(i).toString\n                    break\n            \
    \    }\n                else if (i > 0 && !vowels.contains(word(i - 1))) {\n \
    \                   result = word(i).toString\n                    break\n   \
    \             }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                if (i == wordArray.length\
    \ - 1) {\n                    closestVowel = \"\"\n                } else if (consonants.contains(wordArray(i\
    \ + 1))) {\n                    closestVowel = wordArray(i).toString\n       \
    \         }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     vowel = word(j).toString\n                        return\
    \ vowel\n                    }\n                }\n            }\n        }\n\
    \        return vowel", "        val vowels = \"aeiouAEIOU\"\n        var result\
    \ = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) return \"\"\n                if\
    \ (vowels.contains(word(i + 1))) return \"\"\n                result = word(i).toString\n\
    \                return result\n            }\n        }\n        result", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordSet = word.toLowerCase.toSet\n        val\
    \ vowelSet = wordSet & vowels\n        val consonantSet = wordSet & consonants\n\
    \        if (vowelSet.isEmpty || consonantSet.isEmpty) return \"\"\n        val\
    \ vowelList = vowelSet.toList.sorted\n        val consonantList = consonantSet.toList.sorted\n\
    \        val vowelIndex = vowelList.indexWhere(x => consonantList.indexWhere(y\
    \ => y > x) != -1)\n        if (vowelIndex == -1) return \"\"\n        vowelList(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i != word.length - 1 && consonants.contains(word(i + 1))) {\n      \
    \              closestVowel = word(i).toString\n                    break\n  \
    \              }\n                else if (i != 0 && consonants.contains(word(i\
    \ - 1))) {\n                    closestVowel = word(i).toString\n            \
    \        break\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var vowelIndex = -1\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex != -1) {\n            for (i <- vowelIndex -\
    \ 1 to 0 by -1) {\n                if (consonants.contains(word(i))) {\n     \
    \               result = word(vowelIndex).toString\n                    break\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n        for (i <-\
    \ word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n\
    \                if (i == word.length - 1) {\n                    if (vowels.contains(word(i\
    \ - 1))) result = \"\"\n                    else result = word(i).toString\n \
    \               }\n                else if (i == 0) result = \"\"\n          \
    \      else if (vowels.contains(word(i - 1))) result = \"\"\n                else\
    \ result = word(i).toString\n            }\n        }\n        result", "    \
    \    val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val wordArray = word.toCharArray\n        var vowel = \"\"\n      \
    \  for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i).toString.toLowerCase))\
    \ {\n                vowel = wordArray(i).toString\n                if (i > 0\
    \ && consonants.contains(wordArray(i - 1).toString.toLowerCase)) {\n         \
    \           return vowel\n                }\n            }\n        }\n      \
    \  return \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        result = word(j).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    val distance = i\
    \ - j\n                    if (distance < closestDistance) {\n               \
    \         closestDistance = distance\n                        closestVowel = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) return \"\"\n                if (vowels.contains(wordArray(i\
    \ + 1))) return \"\"\n                result = wordArray(i).toString\n       \
    \         return result\n            }\n        }\n        result", "        //\
    \ Fill up this function body\n        // 'a' to 'z' is 97 to 122\n        // 'A'\
    \ to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        var vowels =\
    \ List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var consonants\
    \ = List('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L',\
    \ 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z')\n        var result\
    \ = \"\"\n        var lastConsonant = 0\n        var firstVowel = 0\n        var\
    \ i = word.length - 1\n        while (i >= 0) {\n            if (consonants.contains(word(i)))\
    \ {\n                lastConsonant = i\n                break\n            }\n\
    \            i -= 1\n        }\n        i = lastConsonant + 1\n        while (i\
    \ < word.length) {\n            if (vowels.contains(word(i))) {\n            \
    \    firstVowel = i\n                break\n            }\n            i += 1\n\
    \        }\n        if (firstVowel != 0) result = word(firstVowel).toString\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n       \
    \     if (vowels.contains(word(i))) {\n                if (i < word.length - 1\
    \ && !vowels.contains(word(i + 1))) {\n                    result = word(i).toString\n\
    \                    break\n                }\n                else if (i > 0\
    \ && !vowels.contains(word(i - 1))) {\n                    result = word(i).toString\n\
    \                    break\n                }\n            }\n        }\n    \
    \    result", "        // Fill up this function body\n        // 'a' to 'z' :\
    \ 97 to 122\n        // 'A' to 'Z' : 65 to 90\n        // '0' to '9' : 48 to 57\n\
    \        // ' '        : 32\n        // '.'        : 46\n        // ','      \
    \  : 44\n        // ':'        : 58\n        // ';'        : 59\n        // '('\
    \        : 40\n        // ')'        : 41\n        // '['        : 91\n      \
    \  // ']'        : 93\n        // '{'        : 123\n        // '}'        : 125\n\
    \        // '+'        : 43\n        // '-'        : 45\n        // '*'      \
    \  : 42\n        // '/'        : 47\n        // '%'        : 37\n        // '!'\
    \        : 33\n        // '?'        : 63\n        // '\"'        : 34\n     \
    \   // '''        : 39\n        // '<'        : 60\n        // '>'        : 62\n\
    \        // '='        : 61\n        // '&'        : 38\n        // '^'      \
    \  : 94\n        // '|'        : 124\n        // '~'        : 126\n        //\
    \ '`'        : 96\n        // '@'        : 64\n        // '#'        : 35\n  \
    \      // '$'        : 36\n        // '_'        : 95\n        // ' '        :\
    \ 32\n        // '\\t'       : 9\n        // '\\n'       : 10\n        // '\\\
    r'       : 13\n        // '\\f'       : 12\n        // '\\b'       : 8\n     \
    \   // '\\\\'       : 92\n        // '\\''       : 39\n        // '\\\"'     \
    \  : 34\n        // '\\0'       : 0\n        // '\\1'       : 1\n        // '\\\
    2'       : 2\n        // '\\3'       : 3\n        // '\\4'       : 4\n       \
    \ // '\\5'       : 5\n        // '\\6'       : 6\n        // '\\7'       : 7\n\
    \        // '\\8'       : 8\n        // '\\9'       : 9\n        // '", "    \
    \    val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\
    \n        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n    \
    \            if (j >= 0) {\n                    var k = i + 1\n              \
    \      while (k < word.length && !vowels.contains(word(k))) k += 1\n         \
    \           if (k < word.length) {\n                        val distance = k -\
    \ j\n                        if (distance < closestDistance) {\n             \
    \               closestDistance = distance\n                            closestVowel\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var result = \"\"\n        for (i <- word.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(word(i))) {\n                if (i\
    \ == word.length - 1) {\n                    if (consonants.contains(word(i -\
    \ 1))) result = word(i).toString\n                } else if (i == 0) {\n     \
    \               if (consonants.contains(word(i + 1))) result = word(i).toString\n\
    \                } else {\n                    if (consonants.contains(word(i\
    \ - 1)) && consonants.contains(word(i + 1))) result = word(i).toString\n     \
    \           }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowel = \"\"\
    \n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        vowel = wordArray(j).toString\n                 \
    \       return vowel\n                    }\n                }\n            }\n\
    \        }\n        return vowel", "        val vowels = \"aeiouAEIOU\"\n    \
    \    val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n       \
    \ val wordArray = word.toCharArray\n        var closestVowel = \"\"\n        var\
    \ closestVowelIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(wordArray(i))) {\n                if (i + 1 <\
    \ wordArray.length && consonants.contains(wordArray(i + 1))) {\n             \
    \       if (i - 1 >= 0 && consonants.contains(wordArray(i - 1))) {\n         \
    \               closestVowel = wordArray(i).toString\n                       \
    \ closestVowelIndex = i\n                        break\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(word(i))) {\n       \
    \         for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        result = word(j).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        val vowels = \"aeiou\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n        val wordList = word.toList\n        var\
    \ vowel = \"\"\n        var distance = word.length\n        for (i <- 0 until\
    \ word.length - 1) {\n            if (consonants.contains(word(i)) && vowels.contains(word(i\
    \ + 1))) {\n                if (i + 1 < distance) {\n                    distance\
    \ = i + 1\n                    vowel = word(i + 1).toString\n                }\n\
    \            }\n        }\n        vowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n  \
    \          if (consonants.contains(word(i))) {\n                for (j <- i -\
    \ 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n     \
    \                   result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val wordArray = word.toCharArray\n        var vowelIndex = -1\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (!vowels.contains(wordArray(i))) return wordArray(vowelIndex).toString\n\
    \        }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordList = word.toList\n        var result = \"\"\n        for (i\
    \ <- wordList.length - 1 to 0 by -1) {\n            if (vowels.contains(wordList(i)))\
    \ {\n                if (i == wordList.length - 1) {\n                    if (vowels.contains(wordList(i\
    \ - 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordList(i).toString\n                 \
    \   }\n                } else if (i == 0) {\n                    if (vowels.contains(wordList(i\
    \ + 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordList(i).toString\n                 \
    \   }\n                } else {\n                    if (vowels.contains(wordList(i\
    \ - 1)) || vowels.contains(wordList(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordList(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var minDistance = Int.MaxValue\n\
    \        for (i <- 1 until word.length - 1) {\n            if (consonants.contains(word(i\
    \ - 1)) && consonants.contains(word(i + 1)) && vowels.contains(word(i))) {\n \
    \               val distance = abs(i - word.length)\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance\n             \
    \       result = word(i).toString\n                }\n            }\n        }\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        result = word(j).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val chars = word.toCharArray\n        var result = \"\"\n        for\
    \ (i <- 0 until chars.length - 1) {\n            if (vowels.contains(chars(i))\
    \ && !vowels.contains(chars(i + 1))) {\n                result = chars(i).toString\n\
    \                break\n            }\n        }\n        result", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = 0\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        if\
    \ (closestVowel == \"\") {\n                            closestVowel = word(i).toString\n\
    \                            closestDistance = i - j\n                       \
    \ } else {\n                            if (i - j < closestDistance) {\n     \
    \                           closestVowel = word(i).toString\n                \
    \                closestDistance = i - j\n                            }\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     val wordArray = word.toCharArray\n        var closestVowel = \"\"\n    \
    \    for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (consonants.contains(wordArray(i - 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                } else if (i\
    \ == 0) {\n                    if (consonants.contains(wordArray(i + 1))) {\n\
    \                        closestVowel = wordArray(i).toString\n              \
    \      }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        closestVowel", "        var vowels = \"aeiouAEIOU\"\
    \n        var result = \"\"\n        var i = word.length - 1\n        while (i\
    \ >= 0) {\n            if (vowels.contains(word(i))) {\n                if (i\
    \ == word.length - 1) {\n                    result = word(i).toString\n     \
    \               return result\n                }\n                else if (i ==\
    \ 0) {\n                    return result\n                }\n               \
    \ else if (!vowels.contains(word(i + 1))) {\n                    result = word(i).toString\n\
    \                    return result\n                }\n            }\n       \
    \     i -= 1\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        val wordArray = word.toCharArray\n        var result = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n      \
    \  val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val\
    \ wordArray = word.toCharArray\n        var vowelIndex = -1\n        for (i <-\
    \ wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var consonantIndex\
    \ = -1\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (consonantIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ + 1 until wordArray.length) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (i - vowelIndex < vowelIndex - consonantIndex) return\
    \ \"\"\n                break\n            }\n        }\n        return wordArray(vowelIndex).toString",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val consonants = List('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        var vowelIndex\
    \ = -1\n        for (i <- wordList.length - 1 to 0 by -1) {\n            if (vowels.contains(wordList(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var consonantIndex\
    \ = -1\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordList(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (consonantIndex == -1) return \"\"\n        var consonantIndex2\
    \ = -1\n        for (i <- vowelIndex + 1 until wordList.length) {\n          \
    \  if (consonants.contains(wordList(i))) {\n                consonantIndex2 =\
    \ i\n                break\n            }\n        }\n        if (consonantIndex2\
    \ == -1) return \"\"\n        if (vowelIndex - consonantIndex < consonantIndex2\
    \ - vowelIndex) wordList(vowelIndex).toString else \"\"", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n \
    \       val wordArrayReversed = wordArray.reverse\n        val wordReversed =\
    \ wordArrayReversed.mkString\n        val wordReversedArray = wordReversed.toCharArray\n\
    \        val wordReversedArrayLength = wordReversedArray.length\n        var vowelIndex\
    \ = -1\n        for (i <- 0 until wordReversedArrayLength) {\n            if (vowels.contains(wordReversedArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var consonantIndex\
    \ = -1\n        for (i <- vowelIndex + 1 until wordReversedArrayLength) {\n  \
    \          if (!vowels.contains(wordReversedArray(i))) {\n                consonantIndex\
    \ = i\n                break\n            }\n        }\n        if (consonantIndex\
    \ == -1) return \"\"\n        var closestVowel = \"\"\n        for (i <- consonantIndex\
    \ + 1 until wordReversedArrayLength) {\n            if (vowels.contains(wordReversedArray(i)))\
    \ {\n                closestVowel = wordReversedArray(i).toString\n          \
    \      break\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closestVowel = word(i).toString\n                        }\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val result = new StringBuilder\n        var i =\
    \ word.length - 1\n        while (i >= 0) {\n            if (consonants.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0) {\n       \
    \             if (vowels.contains(word(j))) {\n                        result.append(word(j))\n\
    \                        return result.toString\n                    }\n     \
    \               j -= 1\n                }\n            }\n            i -= 1\n\
    \        }\n        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                var j = i - 1\n       \
    \         while (j >= 0 && !vowels.contains(word(j))) {\n                    distance\
    \ += 1\n                    j -= 1\n                }\n                if (j <\
    \ 0) distance = Int.MaxValue\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val wordList\
    \ = word.toList\n        var vowelIndex = -1\n        for (i <- wordList.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordList(i).toString)) {\n\
    \                vowelIndex = i\n                break\n            }\n      \
    \  }\n        if (vowelIndex == -1) return \"\"\n        var vowel = wordList(vowelIndex).toString\n\
    \        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (!vowels.contains(wordList(i).toString))\
    \ return vowel\n        }\n        return \"\"", "        val vowels = List(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val wordList = word.toList\n       \
    \ val wordListReversed = wordList.reverse\n        val wordListReversedWithIndex\
    \ = wordListReversed.zipWithIndex\n        val wordListReversedWithIndexFiltered\
    \ = wordListReversedWithIndex.filter(x => vowels.contains(x._1.toString.toLowerCase))\n\
    \        if (wordListReversedWithIndexFiltered.isEmpty) return \"\"\n        val\
    \ wordListReversedWithIndexFilteredSorted = wordListReversedWithIndexFiltered.sortBy(x\
    \ => x._2)\n        val closestVowel = wordListReversedWithIndexFilteredSorted.head._1.toString\n\
    \        return closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray\
    \ = word.toCharArray\n        var closestVowel = \"\"\n        for (i <- 0 until\
    \ wordArray.length) {\n            if (consonants.contains(wordArray(i))) {\n\
    \                for (j <- i + 1 until wordArray.length) {\n                 \
    \   if (vowels.contains(wordArray(j))) {\n                        closestVowel\
    \ = wordArray(j).toString\n                        for (k <- j + 1 until wordArray.length)\
    \ {\n                            if (consonants.contains(wordArray(k))) {\n  \
    \                              return closestVowel\n                         \
    \   }\n                        }\n                    }\n                }\n \
    \           }\n        }\n        closestVowel", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- word.length - 1 to 0 by -1) {\n          \
    \  if (vowels.contains(word(i))) {\n                var distance = 0\n       \
    \         var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ {\n                    distance += 1\n                    j -= 1\n         \
    \       }\n                if (j >= 0 && distance < closestDistance) {\n     \
    \               closestDistance = distance\n                    closestVowel =\
    \ word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\
    \"\n        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var distance\
    \ = word.length - i\n                if (distance < closestDistance) {\n     \
    \               closestDistance = distance\n                    closestVowel =\
    \ word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var lastConsonant = -1\n        for (i <- wordArray.length - 1 to 0 by\
    \ -1) {\n            if (!vowels.contains(wordArray(i))) lastConsonant = i\n \
    \           else if (lastConsonant != -1) return wordArray(i).toString\n     \
    \   }\n        \"\"", "        val vowels = \"aeiouAEIOU\"\n        var result\
    \ = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    result =\
    \ \"\"\n                } else if (i == 0) {\n                    result = \"\"\
    \n                } else if (vowels.contains(word(i + 1))) {\n               \
    \     result = \"\"\n                } else if (vowels.contains(word(i - 1)))\
    \ {\n                    result = \"\"\n                } else {\n           \
    \         result = word(i).toString\n                }\n            }\n      \
    \  }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n  \
    \      val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = Int.MaxValue\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closestVowel = word(i).toString\n                        }\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        var min = word.length\n        for (i <- 0 until word.length) {\n   \
    \         if (vowels.contains(word(i))) {\n                var j = i + 1\n   \
    \             while (j < word.length && !vowels.contains(word(j))) j += 1\n  \
    \              if (j < word.length) {\n                    if (j - i < min) {\n\
    \                        min = j - i\n                        result = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(wordArray(i))) {\n               \
    \ if (i == wordArray.length - 1) return \"\"\n                if (vowels.contains(wordArray(i\
    \ + 1))) return \"\"\n                return wordArray(i).toString\n         \
    \   }\n        }\n        return \"\"", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = -1\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (!vowels.contains(word(j))) distance += 1\n      \
    \              else break\n                }\n                if (distance > 0\
    \ && (closestVowelDistance == -1 || distance < closestVowelDistance)) {\n    \
    \                closestVowelDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val chars = word.toLowerCase.toCharArray\n    \
    \    var result = \"\"\n        for (i <- chars.length - 1 to 0 by -1) {\n   \
    \         if (vowels.contains(chars(i))) {\n                if (i == chars.length\
    \ - 1) {\n                    if (consonants.contains(chars(i - 1))) result =\
    \ chars(i).toString\n                } else if (i == 0) {\n                  \
    \  if (consonants.contains(chars(i + 1))) result = chars(i).toString\n       \
    \         } else {\n                    if (consonants.contains(chars(i - 1))\
    \ && consonants.contains(chars(i + 1))) result = chars(i).toString\n         \
    \       }\n            }\n        }\n        result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        var result = \"\"\n        var minDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < minDistance) {\n           \
    \                 minDistance = distance\n                            result =\
    \ word(i).toString\n                        }\n                    }\n       \
    \         }\n            }\n        }\n        result", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val wordArray = word.toCharArray\n        var vowel = \"\"\n        for (i <-\
    \ wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                if (i > 0\
    \ && !vowels.contains(wordArray(i - 1))) return vowel\n            }\n       \
    \ }\n        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordList = word.toList\n        val wordListReversed = wordList.reverse\n\
    \        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n     \
    \   val vowelList = wordListReversedWithIndex.filter(x => vowels.contains(x._1))\n\
    \        val vowelListWithIndex = vowelList.zipWithIndex\n        val vowelListWithIndexReversed\
    \ = vowelListWithIndex.reverse\n        val vowelListWithIndexReversedWithIndex\
    \ = vowelListWithIndexReversed.zipWithIndex\n        val vowelListWithIndexReversedWithIndexFiltered\
    \ = vowelListWithIndexReversedWithIndex.filter(x => x._1._2 == x._2)\n       \
    \ val vowelListWithIndexReversedWithIndexFilteredReversed = vowelListWithIndexReversedWithIndexFiltered.reverse\n\
    \        if (vowelListWithIndexReversedWithIndexFilteredReversed.length == 0)\
    \ \"\"\n        else vowelListWithIndexReversedWithIndexFilteredReversed(0)._1._1._1.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        val wordListReversed\
    \ = wordList.reverse\n        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n\
    \        val wordListReversedWithIndexFiltered = wordListReversedWithIndex.filter(x\
    \ => consonants.contains(x._1))\n        if (wordListReversedWithIndexFiltered.length\
    \ < 2) return \"\"\n        val wordListReversedWithIndexFilteredWithIndex = wordListReversedWithIndexFiltered.zipWithIndex\n\
    \        val wordListReversedWithIndexFilteredWithIndexFiltered = wordListReversedWithIndexFilteredWithIndex.filter(x\
    \ => x._1._2 - x._2 == 1)\n        if (wordListReversedWithIndexFilteredWithIndexFiltered.length\
    \ == 0) return \"\"\n        val wordListReversedWithIndexFilteredWithIndexFilteredWithIndex\
    \ = wordListReversedWithIndexFilteredWithIndexFiltered.zipWithIndex\n        val\
    \ wordListReversedWithIndexFilteredWithIndexFilteredWithIndexFiltered = wordListReversedWithIndexFilteredWithIndexFilteredWithIndex.filter(x\
    \ => x._1._1._2 - x._1._2 == 1)\n        if (wordListReversedWithIndexFilteredWithIndexFilteredWithIndexFiltered.length\
    \ == 0) return \"\"\n        val wordListReversedWithIndexFilteredWithIndexFilteredWithIndexFilteredWithIndex\
    \ = wordListReversedWithIndexFilteredWithIndexFilteredWithIndexFiltered.zipWithIndex\n\
    \        val wordListReversedWithIndexFilteredWithIndexFilteredWithIndexFilteredWithIndexFiltered\
    \ = wordListReversedWithIndexFilteredWithIndexFilteredWithIndexFilteredWithIndex.filter(x\
    \ => x._1._1._1._2 - x", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n \
    \           if (vowels.contains(word(i))) vowel = word(i).toString\n         \
    \   else if (vowel != \"\") return vowel\n        }\n        \"\"", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = Int.MaxValue\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        if\
    \ (k - j < closestDistance) {\n                            closestDistance = k\
    \ - j\n                            closestVowel = word(i).toString\n         \
    \               }\n                    }\n                }\n            }\n \
    \       }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordList = word.toList\n        var result = \"\"\n      \
    \  var index = wordList.length - 1\n        while (index >= 0) {\n           \
    \ if (vowels.contains(wordList(index))) {\n                if (index == wordList.length\
    \ - 1) {\n                    index -= 1\n                    continue\n     \
    \           }\n                if (vowels.contains(wordList(index + 1))) {\n \
    \                   index -= 1\n                    continue\n               \
    \ }\n                result = wordList(index).toString\n                break\n\
    \            }\n            index -= 1\n        }\n        result", "        //\
    \ Fill up this function body\n        // 'a' to 'z' is 97 to 122\n        // 'A'\
    \ to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        // ' ' is 32\n\
    \        // '.' is 46\n        // ',' is 44\n        // '!' is 33\n        //\
    \ '?' is 63\n        // '(' is 40\n        // ')' is 41\n        // '[' is 91\n\
    \        // ']' is 93\n        // '{' is 123\n        // '}' is 125\n        //\
    \ '+' is 43\n        // '-' is 45\n        // '*' is 42\n        // '/' is 47\n\
    \        // '%' is 37\n        // '^' is 94\n        // '&' is 38\n        //\
    \ '|' is 124\n        // '<' is 60\n        // '>' is 62\n        // '=' is 61\n\
    \        // '~' is 126\n        // '`' is 96\n        // '#' is 35\n        //\
    \ '@' is 64\n        // '$' is 36\n        // ':' is 58\n        // ';' is 59\n\
    \        // '\"' is 34\n        // ''' is 39\n        // '\\\\' is 92\n      \
    \  // '_' is 95\n        // ' ' is 32\n        // '\\n' is 10\n        // '\\\
    t' is 9\n        // '\\r' is 13\n        // '\\b' is 8\n        // '\\f' is 12\n\
    \        // '\\v' is 11\n        // '\\0' is 0\n        // '\\u0000' is 0\n  \
    \      // '\\u0001' is 1\n        // '\\u0002' is 2\n        // '\\u0003' is 3\n\
    \        // '\\u0004' is 4\n        // '\\u0005' is 5\n        // '\\u0006' is\
    \ 6\n        // '\\u0007' is 7\n        // '\\u0008' is 8\n        // '\\u0009'\
    \ is 9\n        // '\\u000a' is 10\n        // '\\u000b' is 11\n        // '\\\
    u000c' is 12\n        //", "        var vowels = List(\"a\", \"e\", \"i\", \"\
    o\", \"u\")\n        var result = \"\"\n        for (i <- word.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(word(i).toString)) {\n           \
    \     if (i == word.length - 1) return \"\"\n                if (vowels.contains(word(i\
    \ + 1).toString)) return \"\"\n                else return word(i).toString\n\
    \            }\n        }\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i == word.length - 1) {\n                    closestVowel = \"\"\n \
    \               } else {\n                    closestVowel = word(i).toString\n\
    \                }\n                return closestVowel\n            }\n     \
    \   }\n        closestVowel", "        val vowels = \"aeiou\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n        val result = new StringBuilder\n      \
    \  for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i < word.length - 1 && consonants.contains(word(i + 1)))\
    \ {\n                    result.append(word(i))\n                    return result.toString\n\
    \                }\n                else if (i > 0 && consonants.contains(word(i\
    \ - 1))) {\n                    result.append(word(i))\n                    return\
    \ result.toString\n                }\n            }\n        }\n        return\
    \ \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) return \"\"\n                if (consonants.contains(word(i + 1))) return\
    \ word(i).toString\n            }\n        }\n        return \"\"", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        val wordList = word.toList\n        val wordListReversed\
    \ = wordList.reverse\n        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n\
    \        val wordListReversedWithIndexFiltered = wordListReversedWithIndex.filter(x\
    \ => consonants.contains(x._1))\n        val wordListReversedWithIndexFilteredGrouped\
    \ = wordListReversedWithIndexFiltered.groupBy(x => x._2 % 2)\n        val wordListReversedWithIndexFilteredGroupedOdd\
    \ = wordListReversedWithIndexFilteredGrouped(1)\n        val wordListReversedWithIndexFilteredGroupedOddSorted\
    \ = wordListReversedWithIndexFilteredGroupedOdd.sortBy(x => x._2)\n        val\
    \ wordListReversedWithIndexFilteredGroupedOddSortedFirst = wordListReversedWithIndexFilteredGroupedOddSorted.head\n\
    \        val wordListReversedWithIndexFilteredGroupedOddSortedFirstIndex = wordListReversedWithIndexFilteredGroupedOddSortedFirst._2\n\
    \        val wordListReversedWithIndexFilteredGroupedOddSortedFirstIndexPlusOne\
    \ = wordListReversedWithIndexFilteredGroupedOddSortedFirstIndex + 1\n        val\
    \ wordListReversedWithIndexFilteredGroupedOddSortedFirstIndexPlusOneChar = wordListReversed(wordListReversedWithIndexFilteredGroupedOddSortedFirstIndexPlusOne)\n\
    \        if (vowels.contains(wordListReversedWithIndexFilteredGroupedOddSortedFirstIndexPlusOneChar))\
    \ wordListReversedWithIndexFilteredGroupedOddSortedFirstIndexPlusOneChar.toString\
    \ else \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ wordArray = word.toCharArray\n        for (i <- wordArray.length - 1 to 0 by\
    \ -1) {\n            if (vowels.contains(wordArray(i))) {\n                if\
    \ (i == wordArray.length - 1) return \"\"\n                if (!vowels.contains(wordArray(i\
    \ + 1))) return wordArray(i).toString\n            }\n        }\n        \"\"",
  "        val vowels = \"AEIOUaeiou\"\n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    if (consonants.contains(wordArray(i + 1))) return wordArray(i).toString\n\
    \            }\n        }\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\
    \"\n        var closestDistance = Int.MaxValue\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     var distance = 0\n                var j = i - 1\n                while (j\
    \ >= 0 && !vowels.contains(word(j))) {\n                    distance += 1\n  \
    \                  j -= 1\n                }\n                if (j >= 0 && distance\
    \ < closestDistance) {\n                    closestDistance = distance\n     \
    \               closestVowel = word(i).toString\n                }\n         \
    \   }\n        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var\
    \ result = \"\"\n        var minDistance = Int.MaxValue\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < minDistance) {\n  \
    \                          minDistance = distance\n                          \
    \  result = word(i).toString\n                        }\n                    }\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n     \
    \   for (i <- chars.length - 1 to 0 by -1) {\n            if (vowels.contains(chars(i)))\
    \ {\n                if (i == chars.length - 1) return \"\"\n                if\
    \ (!vowels.contains(chars(i + 1))) return chars(i).toString\n            }\n \
    \       }\n        \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var closestVowel =\
    \ \"\"\n        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (consonants.contains(word(i))) {\n                for (j <-\
    \ i + 1 until word.length) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        for (k <- j + 1 until word.length) {\n          \
    \                  if (consonants.contains(word(k))) {\n                     \
    \           val distance = k - i\n                                if (distance\
    \ < closestDistance) {\n                                    closestDistance =\
    \ distance\n                                    closestVowel = word(j).toString\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray\
    \ = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        var vowels = \"AEIOUaeiou\"\n      \
    \  var result = \"\"\n        var i = word.length - 1\n        while (i >= 0)\
    \ {\n            if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) {\n                    i -= 1\n                    continue\n         \
    \       }\n                if (vowels.contains(word(i + 1))) {\n             \
    \       i -= 1\n                    continue\n                }\n            \
    \    result = word(i).toString\n                break\n            }\n       \
    \     i -= 1\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n  \
    \          if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) {\n                    if (consonants.contains(word(i - 1))) {\n      \
    \                  result = word(i).toString\n                    }\n        \
    \        } else if (i == 0) {\n                    if (consonants.contains(word(i\
    \ + 1))) {\n                        result = word(i).toString\n              \
    \      }\n                } else {\n                    if (consonants.contains(word(i\
    \ - 1)) && consonants.contains(word(i + 1))) {\n                        result\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = Int.MaxValue\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closestVowel = word(i).toString\n                        }\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        val wordListReversed\
    \ = wordList.reverse\n        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n\
    \        val wordListReversedWithIndexConsonants = wordListReversedWithIndex.filter(x\
    \ => consonants.contains(x._1))\n        val wordListReversedWithIndexConsonantsWithVowel\
    \ = wordListReversedWithIndexConsonants.map(x => (x._1, x._2, wordListReversedWithIndexConsonants.find(y\
    \ => y._2 == x._2 + 1)))\n        val wordListReversedWithIndexConsonantsWithVowelFiltered\
    \ = wordListReversedWithIndexConsonantsWithVowel.filter(x => x._3.isDefined)\n\
    \        val wordListReversedWithIndexConsonantsWithVowelFilteredWithVowel = wordListReversedWithIndexConsonantsWithVowelFiltered.map(x\
    \ => (x._1, x._2, x._3.get._1, x._3.get._2, wordListReversedWithIndex.filter(y\
    \ => y._2 > x._2 && y._2 < x._3.get._2).filter(y => vowels.contains(y._1))))\n\
    \        val wordListReversedWithIndexConsonantsWithVowelFilteredWithVowelFiltered\
    \ = wordListReversedWithIndexConsonantsWithVowelFilteredWithVowel.filter(x =>\
    \ x._5.size > 0)\n        val wordListReversedWithIndexConsonantsWithVowelFilteredWithVowelFilteredSorted\
    \ = wordListReversedWithIndexConsonantsWithVowelFilteredWithVowelFiltered.sort",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = word.length\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                var j = i - 1\n       \
    \         while (j >= 0 && !consonants.contains(word(j))) {\n                \
    \    distance += 1\n                    j -= 1\n                }\n          \
    \      if (j >= 0) {\n                    j = i + 1\n                    while\
    \ (j < word.length && !consonants.contains(word(j))) {\n                     \
    \   distance += 1\n                        j += 1\n                    }\n   \
    \                 if (j < word.length && distance < closestDistance) {\n     \
    \                   closestDistance = distance\n                        closestVowel\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result\
    \ = \"\"\n        var minDistance = Int.MaxValue\n        for (i <- 0 until word.length\
    \ - 1) {\n            if (consonants.contains(word(i)) && consonants.contains(word(i\
    \ + 1))) {\n                for (j <- i + 1 until word.length) {\n           \
    \         if (vowels.contains(word(j))) {\n                        if (j - i <\
    \ minDistance) {\n                            minDistance = j - i\n          \
    \                  result = word(j).toString\n                        }\n    \
    \                }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        val wordArrayReversed\
    \ = wordArray.reverse\n        var vowel = \"\"\n        var i = 0\n        while\
    \ (i < wordArrayReversed.length - 1) {\n            if (consonants.contains(wordArrayReversed(i))\
    \ && consonants.contains(wordArrayReversed(i + 1)) && vowels.contains(wordArrayReversed(i\
    \ + 2))) {\n                vowel = wordArrayReversed(i + 2).toString\n      \
    \          i = wordArrayReversed.length\n            }\n            i += 1\n \
    \       }\n        vowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val chars =\
    \ word.toCharArray\n        var result = \"\"\n        for (i <- chars.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(chars(i))) {\n      \
    \          for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(chars(j)))\
    \ {\n                        result = chars(j).toString\n                    \
    \    return result\n                    }\n                }\n            }\n\
    \        }\n        result", "        val vowels = \"aeiou\"\n        val vowelsSet\
    \ = vowels.toSet\n        val wordSet = word.toSet\n        val consonants = wordSet\
    \ -- vowelsSet\n        val consonantsList = consonants.toList\n        val wordList\
    \ = word.toList\n        val wordListReversed = wordList.reverse\n        val\
    \ wordListReversedSet = wordListReversed.toSet\n        val wordListReversedSetIntersect\
    \ = wordListReversedSet.intersect(consonants)\n        val wordListReversedSetIntersectList\
    \ = wordListReversedSetIntersect.toList\n        val wordListReversedSetIntersectListReversed\
    \ = wordListReversedSetIntersectList.reverse\n        val wordListReversedSetIntersectListReversedSet\
    \ = wordListReversedSetIntersectListReversed.toSet\n        val wordListReversedSetIntersectListReversedSetIntersect\
    \ = wordListReversedSetIntersectListReversedSet.intersect(vowelsSet)\n       \
    \ val wordListReversedSetIntersectListReversedSetIntersectList = wordListReversedSetIntersectListReversedSetIntersect.toList\n\
    \        if (wordListReversedSetIntersectListReversedSetIntersectList.length ==\
    \ 0) \"\" else wordListReversedSetIntersectListReversedSetIntersectList(0).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n\
    \        val wordListReversed = wordList.reverse\n        val wordListReversedWithIndex\
    \ = wordListReversed.zipWithIndex\n        val wordListReversedWithIndexFiltered\
    \ = wordListReversedWithIndex.filter(x => vowels.contains(x._1))\n        if (wordListReversedWithIndexFiltered.isEmpty)\
    \ return \"\"\n        val wordListReversedWithIndexFilteredSorted = wordListReversedWithIndexFiltered.sortBy(x\
    \ => x._2)\n        val wordListReversedWithIndexFilteredSortedFirst = wordListReversedWithIndexFilteredSorted.head\n\
    \        val wordListReversedWithIndexFilteredSortedFirstIndex = wordListReversedWithIndexFilteredSortedFirst._2\n\
    \        val wordListReversedWithIndexFilteredSortedFirstLetter = wordListReversedWithIndexFilteredSortedFirst._1\n\
    \        val wordListReversedWithIndexFilteredSortedFirstLetterIndex = wordListReversed.indexOf(wordListReversedWithIndexFilteredSortedFirstLetter)\n\
    \        val wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOne =\
    \ wordListReversedWithIndexFilteredSortedFirstLetterIndex - 1\n        val wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOneLetter\
    \ = wordListReversed(wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOne)\n\
    \        val wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOneLetterIndex\
    \ = wordListReversed.indexOf(wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOneLetter)\n\
    \        val wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOneLetterIndexPlusOne\
    \ = wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOneLetterIndex\
    \ + 1\n        val wordListReversedWithIndexFilteredSortedFirstLetterIndexMinusOneLetterIndexPlusOneLetter\
    \ = wordListReversed(wordListReversedWithIndexFilteredSortedFirstLetterIndexMin",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                if (i == wordArray.length\
    \ - 1) {\n                    if (consonants.contains(wordArray(i - 1))) {\n \
    \                       result = wordArray(i).toString\n                    }\n\
    \                } else if (i == 0) {\n                    if (consonants.contains(wordArray(i\
    \ + 1))) {\n                        result = wordArray(i).toString\n         \
    \           }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        result\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        var closestVowel = \"\
    \"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    if (vowels.contains(wordArray(i + 1))) return \"\"\n                closestVowel\
    \ = wordArray(i).toString\n                return closestVowel\n            }\n\
    \        }\n        closestVowel", "        val vowels = \"AEIOUaeiou\"\n    \
    \    var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n    \
    \        if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) {\n                    if (i > 0 && !vowels.contains(word(i - 1))) result\
    \ = word(i).toString\n                } else if (i == 0) {\n                 \
    \   if (!vowels.contains(word(i + 1))) result = word(i).toString\n           \
    \     } else {\n                    if (!vowels.contains(word(i + 1)) && !vowels.contains(word(i\
    \ - 1))) result = word(i).toString\n                }\n            }\n       \
    \ }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n   \
    \     var closestVowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            val c = word(i)\n            if (vowels.contains(c)) {\n        \
    \        closestVowel = c.toString\n                if (i < word.length - 1 &&\
    \ !vowels.contains(word(i + 1))) return closestVowel\n            } else {\n \
    \               if (i < word.length - 1 && vowels.contains(word(i + 1))) return\
    \ closestVowel\n            }\n        }\n        closestVowel", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n   \
    \     for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                closestVowel = word(i).toString\n                break\n\
    \            }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var closestVowel = \"\"\n        var closestVowelDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestVowelDistance)\
    \ {\n                            closestVowelDistance = j - i\n              \
    \              closestVowel = word(j).toString\n                        }\n  \
    \                  }\n                }\n            }\n        }\n        closestVowel"]
stop_tokens:
- "\n    }\n"

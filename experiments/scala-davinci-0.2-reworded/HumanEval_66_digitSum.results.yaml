language: scala
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0L\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        val upper = s.toUpperCase\n   \
    \     upper.map(_.toLong).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4pcuz8m4.scala:28)\n\tat Problem.main(tmp4pcuz8m4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        return s.foldLeft(0l)((acc, c) => if (c.isUpper) acc + c.toLong\
    \ else acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        return 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp913yp5e.scala:27)\n\tat Problem.main(tmpp913yp5e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only'\n        // ASCII codes.\n        var sum = 0l\n    \
    \    for (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n        \
    \        sum += s(i).toInt\n            }\n        }\n        return sum\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.toUpperCase\n        var sum = 0l\n      \
    \  for (i <- 0 until upper.length) {\n            sum += upper(i).toInt\n    \
    \    }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjoycezuj.scala:30)\n\tat Problem.main(tmpjoycezuj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        val upper = s.toUpperCase()\n\
    \        var sum = 0\n        for (i <- 0 until upper.length) {\n            sum\
    \ += upper(i).toInt\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0a_2rb2u.scala:31)\n\tat Problem.main(tmp0a_2rb2u.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        var sum = 0\n        for (i <- 0\
    \ until s.length) {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n\
    \            }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        var sum = 0\n        for (i <-\
    \ 0 until s.length) {\n            if (s(i).isUpper) {\n                sum +=\
    \ s(i).toInt\n            }\n        }\n        return sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        var sum = 0l\n        for (c <-\
    \ s) {\n            if (c.isUpper) {\n                sum += c.toInt\n       \
    \     }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum : Long = 0\n  \
    \      for (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n      \
    \          sum += s(i).toInt\n            }\n        }\n        return sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        s.toUpperCase.map(_.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjyqxo0pi.scala:27)\n\tat Problem.main(tmpjyqxo0pi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.map(_.toInt).filter(_ >= 65).filter(_ <= 90).sum\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.foldLeft(0l)((acc, c) => if (c.isUpper) acc + c.toInt\
    \ else acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.toCharArray.filter(x => x.isUpper).map(x => x.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        val upper = s.toUpperCase\n\
    \        val sum = upper.map(x => x.toInt).sum\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpud2w70g3.scala:28)\n\tat Problem.main(tmpud2w70g3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.toUpperCase\n        var sum = 0\n       \
    \ for (i <- 0 until upper.length) {\n            sum += upper(i).toInt\n     \
    \   }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzzjro4ny.scala:30)\n\tat Problem.main(tmpzzjro4ny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        val upper = s.filter(_.isUpper)\n\
    \        upper.map(_.toLong).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        var sum = 0l\n        for (c <-\
    \ s) {\n            if (c.isUpper) {\n                sum += c.toInt\n       \
    \     }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        return 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpswho43ez.scala:27)\n\tat Problem.main(tmpswho43ez.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.foldLeft(0l)((acc, c) => if (c.isUpper) acc + c.toInt\
    \ else acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        val sb = new StringBuilder\n\
    \        sb.append(s)\n        var sum = 0\n        for (i <- 0 until sb.length)\
    \ {\n            if (sb(i).isUpper) {\n                sum += sb(i).toInt\n  \
    \          }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum : Long = 0\n        for (c <- s) {\n           \
    \ if (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n\
    \        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            val c = s(i)\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n \
    \       sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        s.filter(_.isUpper).map(_.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (i <- 0 until s.length) {\n  \
    \          val c = s(i)\n            if (c.isUpper) {\n                sum +=\
    \ c.toInt\n            }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        val upper = s.toUpperCase\n\
    \        var sum = 0\n        for (i <- 0 until upper.length) {\n            sum\
    \ += upper(i).toInt\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpeqyaqmss.scala:31)\n\tat Problem.main(tmpeqyaqmss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        return 0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq2xrsx38.scala:27)\n\tat Problem.main(tmpq2xrsx38.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.toUpperCase\n        var sum : Long = 0\n\
    \        for (i <- 0 until upper.length) {\n            sum += upper(i).toInt\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpx269tejj.scala:30)\n\tat Problem.main(tmpx269tejj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            val c = s(i)\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                sum += c\n            }\n        }\n       \
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (i <- 0 until s.length) {\n  \
    \          if (s(i).isUpper) {\n                sum += s(i).toInt\n          \
    \  }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.map(_.toInt).filter(_ >= 65).filter(_ <= 90).sum\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.toUpperCase\n        var sum = 0\n       \
    \ for (i <- 0 until upper.length) {\n            sum += upper(i).toInt\n     \
    \   }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzzjro4ny.scala:30)\n\tat Problem.main(tmpzzjro4ny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (i <- 0 until s.length) {\n  \
    \          if (s(i).isUpper) {\n                sum += s(i).toInt\n          \
    \  }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        val upper = s.filter(_.isUpper)\n\
    \        upper.map(_.toLong).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (i <- 0 until s.length) {\n  \
    \          if (s(i).isUpper) {\n                sum += s(i).toInt\n          \
    \  }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgkw7jr8o.scala:26)\n\tat Problem.main(tmpgkw7jr8o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        s.filter(c => c.isUpper).map(c =>\
    \ c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794913
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Your code here\n        return 0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2n_11yxo.scala:26)\n\tat Problem.main(tmp2n_11yxo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794917
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.foldLeft(0l)((acc, c) => acc + (if (c.isUpper) c.toInt\
    \ else 0))\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794918
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.toUpperCase\n        var sum = 0\n       \
    \ for (i <- 0 until upper.length) {\n            sum += upper(i).toInt\n     \
    \   }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzzjro4ny.scala:30)\n\tat Problem.main(tmpzzjro4ny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum : Long = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n    \
    \        }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toInt).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            val c = s(i)\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n \
    \       sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum : Long = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n    \
    \        }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        s.toUpperCase.map(_.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkquen5xa.scala:26)\n\tat Problem.main(tmpkquen5xa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum : Long = 0\n        for (c <- s) {\n           \
    \ if (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n\
    \        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        return s.filter(x => x.isUpper).map(x => x.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            val c = s(i)\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c\
    \ >= 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n     \
    \   }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (i <- 0 until s.length) {\n  \
    \          val c = s(i)\n            if (c >= 'A' && c <= 'Z') {\n           \
    \     sum += c.toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        s.map(x => x.toInt).filter(x\
    \ => x >= 65 && x <= 90).sum\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        var sum: Long = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        return sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf42g_36e.scala:26)\n\tat Problem.main(tmpf42g_36e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        var sum = 0\n        for (i <- 0\
    \ until s.length) {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n\
    \            }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        s.foldLeft(0l)((acc, c) => if (c.isUpper) acc + c.toInt\
    \ else acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794902
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        // ASCII codes.\n        var sum\
    \ = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n               \
    \ sum += c.toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes\n        var sum = 0l\n        for (i <-\
    \ 0 until s.length) {\n            if (s(i).isUpper) {\n                sum +=\
    \ s(i).toInt\n            }\n        }\n        return sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_ou6iwv.scala:26)\n\tat Problem.main(tmpo_ou6iwv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        var sum = 0l\n        for (c <-\
    \ s) {\n            if (c.isUpper) {\n                sum += c.toInt\n       \
    \     }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_27o_i6.scala:26)\n\tat Problem.main(tmp5_27o_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794912
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        // Return the sum of the\
    \ upper characters only' ASCII codes.\n        s.toUpperCase.map(_.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpizts8xx8.scala:27)\n\tat Problem.main(tmpizts8xx8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794919
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        // Write your code here\n        return 0l\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxx4qobax.scala:26)\n\tat Problem.main(tmpxx4qobax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794901

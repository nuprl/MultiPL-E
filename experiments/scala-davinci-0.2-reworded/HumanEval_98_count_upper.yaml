name: HumanEval_98_count_upper
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string s, count the number of uppercase vowels in even indices.\n\
  \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>>\
  \ countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n  \
  \  // (0l)\n    def countUpper(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
  )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
  dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
  U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
  EEEE\")) == (2l));\n    }\n\n}\n"
completions: ["        // Fill in the code here\n        return 0l", "        // Write\
    \ your code here\n        return 0l", "        // Fill in the code here\n    \
    \    0l", "        // Fill in the code here\n        0l", "        // Your code\
    \ here\n        return 0l", "        // Fill in the code here\n        0l", " \
    \       // your code here\n        var count = 0\n        for (i <- 0 until s.length\
    \ by 2) {\n            if (s(i).isUpper) count += 1\n        }\n        count",
  "        // Fill in the code here\n        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n      \
    \  }\n        count", "        // Fill in the code here\n        0l", "      \
    \  // Fill in the code here\n        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n      \
    \  }\n        count", "        // your code here\n        return 0l", "      \
    \  // Fill in the code here\n        val vowels = Set('A', 'E', 'I', 'O', 'U')\n\
    \        var count = 0\n        for (i <- 0 until s.length if i % 2 == 0) {\n\
    \            if (vowels.contains(s(i))) count += 1\n        }\n        count",
  "        // your code here\n        return 0l", "        // your code here\n   \
    \     0l", "        // Fill in the code here\n        var count = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0 && s(i).isUpper) {\n \
    \               count += 1\n            }\n        }\n        count", "      \
    \  // Fill in the code here\n        0l", "        // Fill in the code here\n\
    \        0l", "        // This is the solution code.\n        var count = 0l\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0 && s(i).isUpper)\
    \ count += 1\n        }\n        count", "        // Your code here\n        return\
    \ 0l", "        // Fill in the code here\n        0l"]
stop_tokens:
- "\n    }\n"

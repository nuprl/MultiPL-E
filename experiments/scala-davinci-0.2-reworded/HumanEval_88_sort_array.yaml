name: HumanEval_88_sort_array
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of non-negative integers, return a coscala of the given list\
  \ after sorting,\n    // you will sort the given list in ascending order if the\
  \ sum( first index value, last index value) is odd,\n    // or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n    // Note:\n\
  \    // * don't change the given list.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n\
  \    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n\
  \    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong,\
  \ 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong,\
  \ 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong,\
  \ 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray(array\
  \ : List[Long]) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortArray((List[Long]())).equals((List[Long]())));\n\
  \    assert(sortArray((List[Long](5l.toLong))).equals((List[Long](5l.toLong))));\n\
  \    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong,\
  \ 5l.toLong))).equals((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong,\
  \ 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong))).equals((List[Long](6l.toLong, 5l.toLong,\
  \ 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))));\n    assert(sortArray((List[Long](2l.toLong,\
  \ 1l.toLong))).equals((List[Long](1l.toLong, 2l.toLong))));\n    assert(sortArray((List[Long](15l.toLong,\
  \ 42l.toLong, 87l.toLong, 32l.toLong, 11l.toLong, 0l.toLong))).equals((List[Long](0l.toLong,\
  \ 11l.toLong, 15l.toLong, 32l.toLong, 42l.toLong, 87l.toLong))));\n    assert(sortArray((List[Long](21l.toLong,\
  \ 14l.toLong, 23l.toLong, 11l.toLong))).equals((List[Long](23l.toLong, 21l.toLong,\
  \ 14l.toLong, 11l.toLong))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        array", "        // Write\
    \ your code here\n        array", "        // Write your code here\n        if\
    \ (array.length == 0) {\n            return List[Long]()\n        }\n        if\
    \ (array.length == 1) {\n            return array\n        }\n        if (array.length\
    \ == 2) {\n            if (array(0) > array(1)) {\n                return List[Long](array(1),\
    \ array(0))\n            }\n            return array\n        }\n        var odd\
    \ = List[Long]()\n        var even = List[Long]()\n        for (i <- 0 until array.length)\
    \ {\n            if (i % 2 == 0) {\n                odd = odd :+ array(i)\n  \
    \          } else {\n                even = even :+ array(i)\n            }\n\
    \        }\n        odd = odd.sorted\n        even = even.sorted\n        var\
    \ result = List[Long]()\n        for (i <- 0 until array.length) {\n         \
    \   if (i % 2 == 0) {\n                result = result :+ odd(0)\n           \
    \     odd = odd.drop(1)\n            } else {\n                result = result\
    \ :+ even(even.length - 1)\n                even = even.dropRight(1)\n       \
    \     }\n        }\n        return result", "        // Write your code here\n\
    \        array", "        // Write your code here\n        array", "        //\
    \ Write your code here\n        array", "        // Write your code here\n   \
    \     array", "        // Write your code here\n        array.sorted", "     \
    \   // Write your code here\n        array", "        // Write your code here\n\
    \        array", "        // Write your code here\n        array", "        //\
    \ Write your code here\n        array", "        // Write your code here\n   \
    \     array", "        // Write your code here\n        array", "        // Write\
    \ your code here\n        array.sorted", "        // Write your code here\n  \
    \      array", "        // Write your code here\n        if (array.length == 0)\
    \ {\n            return array\n        }\n        if (array.length == 1) {\n \
    \           return array\n        }\n        var result = List[Long]()\n     \
    \   if ((array(0) + array(array.length - 1)) % 2 == 0) {\n            result =\
    \ array.sorted(Ordering[Long].reverse)\n        } else {\n            result =\
    \ array.sorted\n        }\n        return result", "        // Write your code\
    \ here\n        if (array.length == 0) {\n            return array\n        }\n\
    \        if (array.length == 1) {\n            return array\n        }\n     \
    \   val sum = array(0) + array(array.length - 1)\n        if (sum % 2 == 0) {\n\
    \            return array.sorted.reverse\n        }\n        return array.sorted",
  "        // Write your solution here\n        if (array.length == 0) {\n       \
    \     return array\n        }\n        if (array.length == 1) {\n            return\
    \ array\n        }\n        if (array.length == 2) {\n            if ((array(0)\
    \ + array(1)) % 2 == 0) {\n                return List(array(1), array(0))\n \
    \           } else {\n                return array\n            }\n        }\n\
    \        var odd = List[Long]()\n        var even = List[Long]()\n        for\
    \ (i <- 0 until array.length) {\n            if (i % 2 == 0) {\n             \
    \   odd = odd :+ array(i)\n            } else {\n                even = even :+\
    \ array(i)\n            }\n        }\n        odd = odd.sorted\n        even =\
    \ even.sorted\n        var result = List[Long]()\n        for (i <- 0 until array.length)\
    \ {\n            if (i % 2 == 0) {\n                result = result :+ odd(0)\n\
    \                odd = odd.drop(1)\n            } else {\n                result\
    \ = result :+ even(even.length - 1)\n                even = even.dropRight(1)\n\
    \            }\n        }\n        return result", "        // Write your code\
    \ here\n        array"]
stop_tokens:
- "\n    }\n"

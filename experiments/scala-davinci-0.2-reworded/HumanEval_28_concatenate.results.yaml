language: scala
name: HumanEval_28_concatenate
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) {\n            result +=\
    \ s\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (string <- strings) result += string\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        return strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n\
    \    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n\
    \    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"\
    xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) {\n            result +=\
    \ s\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (string <- strings) {\n            result\
    \ += string\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (string <- strings) {\n            result\
    \ += string\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((acc, str) => acc + str)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n\
    \    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n\
    \    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"\
    xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((acc, s) => acc + s)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n\
    \    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n\
    \    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"\
    xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (str <- strings) {\n            result\
    \ += str\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (s <- strings) result += s\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
    \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"\
    xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"\
    k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
    \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"\
    x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798884

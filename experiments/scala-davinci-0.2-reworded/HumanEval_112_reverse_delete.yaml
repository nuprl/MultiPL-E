name: HumanEval_112_reverse_delete
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Task\n    // We are given two strings s and c, you have to deleted all the\
  \ characters in s that are equal to any character in c\n    // then check if the\
  \ result string is palindrome.\n    // A string is called palindrome if it reads\
  \ the same backward as forward.\n    // You should return a tuple containing the\
  \ result string and true/false for the check.\n    // Example\n    // >>> reverseDelete((\"\
  abcde\"), (\"ae\"))\n    // ((\"bcd\", false))\n    // >>> reverseDelete((\"abcdef\"\
  ), (\"b\"))\n    // ((\"acdef\", false))\n    // >>> reverseDelete((\"abcdedcba\"\
  ), (\"ab\"))\n    // ((\"cdedc\", true))\n    def reverseDelete(s : String, c :\
  \ String) : Tuple2[String, Boolean] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(reverseDelete((\"\
  abcde\"), (\"ae\")).equals(((\"bcd\", false))));\n    assert(reverseDelete((\"abcdef\"\
  ), (\"b\")).equals(((\"acdef\", false))));\n    assert(reverseDelete((\"abcdedcba\"\
  ), (\"ab\")).equals(((\"cdedc\", true))));\n    assert(reverseDelete((\"dwik\"),\
  \ (\"w\")).equals(((\"dik\", false))));\n    assert(reverseDelete((\"a\"), (\"a\"\
  )).equals(((\"\", true))));\n    assert(reverseDelete((\"abcdedcba\"), (\"\")).equals(((\"\
  abcdedcba\", true))));\n    assert(reverseDelete((\"abcdedcba\"), (\"v\")).equals(((\"\
  abcdedcba\", true))));\n    assert(reverseDelete((\"vabba\"), (\"v\")).equals(((\"\
  abba\", true))));\n    assert(reverseDelete((\"mamma\"), (\"mia\")).equals(((\"\"\
  , true))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return null", "        //\
    \ Write your code here\n        var result = s\n        for (i <- 0 until c.length)\
    \ {\n            result = result.replaceAll(c(i).toString, \"\")\n        }\n\
    \        var check = true\n        for (i <- 0 until result.length / 2) {\n  \
    \          if (result(i) != result(result.length - 1 - i)) {\n               \
    \ check = false\n            }\n        }\n        return (result, check)", " \
    \       // Write your code here\n        return (\"\", false)", "        // Write\
    \ your code here\n        return null", "        // Write your code here\n   \
    \     return null", "        // Write your code here\n        return null", " \
    \       // Write your code here\n        return (\"\", false)", "        // Write\
    \ your code here\n        return null", "        // Write your code here\n   \
    \     return (\"\", false)", "        // Write your code here\n        return\
    \ null", "        // Write your code here\n        return null", "        // Write\
    \ your code here\n        null", "        // Write your code here\n        return\
    \ (\"\", false)", "        // Write your code here\n        return null", "  \
    \      // Write your code here\n        return (\"\", false)", "        // Write\
    \ your code here\n        return null", "        // Write your code here\n   \
    \     return null", "        // Write your code here\n        return (s, false)",
  "        // Write your code here\n        null", "        // Write your code here\n\
    \        return (\"\", false)"]
stop_tokens:
- "\n    }\n"

name: HumanEval_0_has_close_elements
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Check if in given list of numbers, are any two numbers closer to each other\
  \ than\n    // given threshold.\n    // >>> hasCloseElements((List[Float](1.0f.toFloat,\
  \ 2.0f.toFloat, 3.0f.toFloat)), (0.5f))\n    // (false)\n    // >>> hasCloseElements((List[Float](1.0f.toFloat,\
  \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
  \    // (true)\n    def hasCloseElements(numbers : List[Float], threshold : Float)\
  \ : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(hasCloseElements((List[Float](1.0f.toFloat,\
  \ 2.0f.toFloat, 3.9f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.2f.toFloat)), (0.3f))\
  \ == (true));\n    assert(hasCloseElements((List[Float](1.0f.toFloat, 2.0f.toFloat,\
  \ 3.9f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.2f.toFloat)), (0.05f)) == (false));\n\
  \    assert(hasCloseElements((List[Float](1.0f.toFloat, 2.0f.toFloat, 5.9f.toFloat,\
  \ 4.0f.toFloat, 5.0f.toFloat)), (0.95f)) == (true));\n    assert(hasCloseElements((List[Float](1.0f.toFloat,\
  \ 2.0f.toFloat, 5.9f.toFloat, 4.0f.toFloat, 5.0f.toFloat)), (0.8f)) == (false));\n\
  \    assert(hasCloseElements((List[Float](1.0f.toFloat, 2.0f.toFloat, 3.0f.toFloat,\
  \ 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.1f)) == (true));\n    assert(hasCloseElements((List[Float](1.1f.toFloat,\
  \ 2.2f.toFloat, 3.1f.toFloat, 4.1f.toFloat, 5.1f.toFloat)), (1.0f)) == (true));\n\
  \    assert(hasCloseElements((List[Float](1.1f.toFloat, 2.2f.toFloat, 3.1f.toFloat,\
  \ 4.1f.toFloat, 5.1f.toFloat)), (0.5f)) == (false));\n    }\n\n}\n"
completions: ["        var sortedNumbers = numbers.sorted\n        for (i <- 0 until\
    \ sortedNumbers.length - 1) {\n            if (abs(sortedNumbers(i) - sortedNumbers(i\
    \ + 1)) < threshold) {\n                return true\n            }\n        }\n\
    \        return false", "        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.0f.toFloat, 3.0f.toFloat)), (0.5f))\n        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        val sortedNumbers = numbers.sorted\n        var i\
    \ = 0\n        while (i < sortedNumbers.length - 1) {\n            if (abs(sortedNumbers(i)\
    \ - sortedNumbers(i + 1)) < threshold) return true\n            i += 1\n     \
    \   }\n        return false", "        var sortedNumbers = numbers.sorted\n  \
    \      for (i <- 0 until sortedNumbers.length - 1) {\n            if (sortedNumbers(i\
    \ + 1) - sortedNumbers(i) < threshold) {\n                return true\n      \
    \      }\n        }\n        return false", "        var result : Boolean = false\n\
    \        var i : Int = 0\n        while(i < numbers.length) {\n            var\
    \ j : Int = 0\n            while(j < numbers.length) {\n                if(i !=\
    \ j) {\n                    if(abs(numbers(i) - numbers(j)) < threshold) {\n \
    \                       result = true\n                    }\n               \
    \ }\n                j = j + 1\n            }\n            i = i + 1\n       \
    \ }\n        return result", "        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.0f.toFloat, 3.0f.toFloat)), (0.5f))\n        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f", "        var hasCloseElements : Boolean = false\n        for (i <- 0\
    \ until numbers.length) {\n            for (j <- 0 until numbers.length) {\n \
    \               if (i != j) {\n                    if (abs(numbers(i) - numbers(j))\
    \ < threshold) {\n                        hasCloseElements = true\n          \
    \          }\n                }\n            }\n        }\n        return hasCloseElements",
  "        var i = 0\n        var j = 0\n        while (i < numbers.length) {\n  \
    \          j = i + 1\n            while (j < numbers.length) {\n             \
    \   if (abs(numbers(i) - numbers(j)) < threshold) {\n                    return\
    \ true\n                }\n                j += 1\n            }\n           \
    \ i += 1\n        }\n        return false", "        var result : Boolean = false\n\
    \        for (i <- 0 until numbers.length) {\n            for (j <- i + 1 until\
    \ numbers.length) {\n                if (abs(numbers(i) - numbers(j)) < threshold)\
    \ {\n                    result = true\n                }\n            }\n   \
    \     }\n        return result", "        var i = 0\n        var j = 0\n     \
    \   var result = false\n        while(i < numbers.length) {\n            j = i\
    \ + 1\n            while(j < numbers.length) {\n                if(abs(numbers(i)\
    \ - numbers(j)) < threshold) {\n                    result = true\n          \
    \      }\n                j += 1\n            }\n            i += 1\n        }\n\
    \        result", "        if (numbers.length < 2) return false\n        var i\
    \ = 0\n        while (i < numbers.length - 1) {\n            var j = i + 1\n \
    \           while (j < numbers.length) {\n                if (abs(numbers(i) -\
    \ numbers(j)) < threshold) return true\n                j += 1\n            }\n\
    \            i += 1\n        }\n        return false", "        var result : Boolean\
    \ = false\n        for (i <- 0 until numbers.length - 1) {\n            for (j\
    \ <- i + 1 until numbers.length) {\n                if (abs(numbers(i) - numbers(j))\
    \ < threshold) {\n                    result = true\n                }\n     \
    \       }\n        }\n        return result", "        var i = 0\n        var\
    \ j = 0\n        while (i < numbers.length) {\n            j = i + 1\n       \
    \     while (j < numbers.length) {\n                if (abs(numbers(i) - numbers(j))\
    \ < threshold) {\n                    return true\n                }\n       \
    \         j += 1\n            }\n            i += 1\n        }\n        return\
    \ false", "        var result : Boolean = false\n        for (i <- 0 until numbers.length\
    \ - 1) {\n            for (j <- i + 1 until numbers.length) {\n              \
    \  if (abs(numbers(i) - numbers(j)) < threshold) {\n                    result\
    \ = true\n                }\n            }\n        }\n        return result",
  "        var hasCloseElements : Boolean = false\n        for (i <- 0 until numbers.length)\
    \ {\n            for (j <- 0 until numbers.length) {\n                if (i !=\
    \ j) {\n                    if (abs(numbers(i) - numbers(j)) < threshold) {\n\
    \                        hasCloseElements = true\n                    }\n    \
    \            }\n            }\n        }\n        return hasCloseElements", " \
    \       var result : Boolean = false\n        var i : Int = 0\n        while (i\
    \ < numbers.length) {\n            var j : Int = i + 1\n            while (j <\
    \ numbers.length) {\n                if (abs(numbers(i) - numbers(j)) < threshold)\
    \ {\n                    result = true\n                }\n                j =\
    \ j + 1\n            }\n            i = i + 1\n        }\n        return result",
  "        var hasCloseElements = false\n        for (i <- 0 until numbers.length\
    \ - 1) {\n            for (j <- i + 1 until numbers.length) {\n              \
    \  if (abs(numbers(i) - numbers(j)) < threshold) {\n                    hasCloseElements\
    \ = true\n                }\n            }\n        }\n        hasCloseElements",
  "        var hasCloseElements : Boolean = false\n        for (i <- 0 until numbers.length\
    \ - 1) {\n            for (j <- i + 1 until numbers.length) {\n              \
    \  if (abs(numbers(i) - numbers(j)) < threshold) {\n                    hasCloseElements\
    \ = true\n                }\n            }\n        }\n        return hasCloseElements",
  "        // >>> hasCloseElements((List[Float](1.0f.toFloat, 2.0f.toFloat, 3.0f.toFloat)),\
    \ (0.5f))\n        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.3f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.5f))\n\
    \        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.6f))\n\
    \        // (true)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.7f))\n\
    \        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.8f))\n\
    \        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f.toFloat, 3.0f.toFloat, 4.0f.toFloat, 5.0f.toFloat, 2.0f.toFloat)), (0.9f))\n\
    \        // (false)\n        // >>> hasCloseElements((List[Float](1.0f.toFloat,\
    \ 2.8f", "        var i = 0\n        while (i < numbers.length) {\n          \
    \  var j = i + 1\n            while (j < numbers.length) {\n                if\
    \ (abs(numbers(i) - numbers(j)) < threshold) {\n                    return true\n\
    \                }\n                j += 1\n            }\n            i += 1\n\
    \        }\n        return false", "        var result : Boolean = false\n   \
    \     for (i <- 0 until numbers.length) {\n            for (j <- i + 1 until numbers.length)\
    \ {\n                if (abs(numbers(i) - numbers(j)) < threshold) {\n       \
    \             result = true\n                }\n            }\n        }\n   \
    \     return result"]
stop_tokens:
- "\n    }\n"

name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
  abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\"\
  )\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
  zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U')\n        text.filter(!vowels.contains(_))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (!text(i).toLower.equals('a') && !text(i).toLower.equals('e') && !text(i).toLower.equals('i')\
    \ && !text(i).toLower.equals('o') && !text(i).toLower.equals('u')) {\n       \
    \         result += text(i)\n            }\n        }\n        return result",
  "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        result", "        text.filter(c => c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U')", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filterNot(vowels.contains(_))", "        var result = \"\"\n     \
    \   for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') {\n                result += c\n            }\n        }\n\
    \        return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U')\n        text.filterNot(vowels.contains(_))", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U')", "        var result = \"\"\n \
    \       for (i <- 0 until text.length) {\n            if (!isVowel(text(i))) {\n\
    \                result += text(i)\n            }\n        }\n        return result",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (text(i) != 'a' && text(i) != 'e' && text(i) != 'i' && text(i) != 'o' &&\
    \ text(i) != 'u') {\n                result += text(i)\n            }\n      \
    \  }\n        return result", "        text.filter(c => !c.isLetter || c.toLower\
    \ != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower != 'o' && c.toLower\
    \ != 'u')", "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        // your code here\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        // your code here\n       \
    \ return text", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U')\n        text.filter(!vowels.contains(_))", "        var result =\
    \ \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c\n            }\n\
    \        }\n        return result", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        text.filter(c\
    \ => !c.isLetter || c.toLower != 'a' && c.toLower != 'e' && c.toLower != 'i' &&\
    \ c.toLower != 'o' && c.toLower != 'u')", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        var result = \"\
    \"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                result += c\n            }\n   \
    \     }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U')", "        text.filter(c => !c.isLetter\
    \ || c.toLower != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower !=\
    \ 'o' && c.toLower != 'u')", "        text.filter(c => c.toLower != 'a' && c.toLower\
    \ != 'e' && c.toLower != 'i' && c.toLower != 'o' && c.toLower != 'u')", "    \
    \    val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n   \
    \     text.filter(!vowels.contains(_))", "        text.filter(c => c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c !=\
    \ 'I' && c != 'O' && c != 'U')", "        return text.filter(c => c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c !=\
    \ 'I' && c != 'O' && c != 'U')", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", " \
    \       // your code here\n        return \"\";", "        text.filter(x => !x.isLetter\
    \ || !x.toLower.equals('a') && !x.toLower.equals('e') && !x.toLower.equals('i')\
    \ && !x.toLower.equals('o') && !x.toLower.equals('u'))", "        text.filter(c\
    \ => !List('a', 'e', 'i', 'o', 'u').contains(c))", "        text.filter(x => !List('a',\
    \ 'e', 'i', 'o', 'u').contains(x))", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val result = new StringBuilder\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) result += c\n\
    \        }\n        result.toString", "        var result = \"\"\n        for\
    \ (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                result += c\n            }\n        }\n    \
    \    return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        var result = \"\
    \"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                result += c\n            }\n   \
    \     }\n        return result", "        text.filter(c => !c.toLower.equals('a')\
    \ && !c.toLower.equals('e') && !c.toLower.equals('i') && !c.toLower.equals('o')\
    \ && !c.toLower.equals('u'))", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "     \
    \   if (text.length == 0) return \"\"\n        if (\"aeiouAEIOU\".contains(text(0)))\
    \ return removeVowels(text.substring(1))\n        return text(0) + removeVowels(text.substring(1))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", '        text.filter(c
    => "aeiouAEIOU".indexOf(c) == -1)', "        text.filter(c => c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I'\
    \ && c != 'O' && c != 'U')", "        val vowels = \"aeiouAEIOU\"\n        text.filter(c\
    \ => !vowels.contains(c))", "        val vowels = \"aeiou\"\n        text.filter(c\
    \ => !vowels.contains(c))", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "     \
    \   var result = \"\"\n        for (c <- text) {\n            if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        text.filter(c => c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U')", "        var result = \"\"\n        for\
    \ (i <- 0 until text.length) {\n            if (!(text(i) == 'a' || text(i) ==\
    \ 'e' || text(i) == 'i' || text(i) == 'o' || text(i) == 'u' || text(i) == 'A'\
    \ || text(i) == 'E' || text(i) == 'I' || text(i) == 'O' || text(i) == 'U')) {\n\
    \                result += text(i)\n            }\n        }\n        return result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        // TODO: implement this function\n\
    \        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (!(text(i) == 'a' || text(i) == 'e' || text(i) == 'i' || text(i) == 'o'\
    \ || text(i) == 'u' || text(i) == 'A' || text(i) == 'E' || text(i) == 'I' || text(i)\
    \ == 'O' || text(i) == 'U')) {\n                result += text(i)\n          \
    \  }\n        }\n        return result", "        var result = \"\"\n        for\
    \ (i <- 0 until text.length) {\n            if (!isVowel(text(i))) {\n       \
    \         result += text(i)\n            }\n        }\n        return result",
  '        text.filter(c => "aeiouAEIOU".indexOf(c) == -1)', "        var result =\
    \ \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c\n            }\n\
    \        }\n        return result", "        text.filter(c => !c.isLetter || !c.toLower.equals('a')\
    \ && !c.toLower.equals('e') && !c.toLower.equals('i') && !c.toLower.equals('o')\
    \ && !c.toLower.equals('u'))", "        text.filter(c => !c.isLetter || c.toLower\
    \ != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower != 'o' && c.toLower\
    \ != 'u')", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U')\n        text.filter(!vowels.contains(_))", "        var result =\
    \ \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c\n            }\n\
    \        }\n        return result", "        // TODO: implement this function.\n\
    \        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        text.filter(c\
    \ => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        // TODO: implement removeVowels\n        return \"\"", "        val vowels\
    \ = \"aeiouAEIOU\"\n        text.filter(!vowels.contains(_))", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U')", "        var vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n  \
    \      for (c <- text) {\n            if (!vowels.contains(c)) {\n           \
    \     result += c\n            }\n        }\n        return result", "       \
    \ text.filter(x => !List('a', 'e', 'i', 'o', 'u').contains(x.toLower))", "   \
    \     var result = \"\"\n        for (c <- text) {\n            if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val result = new StringBuilder\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        result.toString", "   \
    \     val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n   \
    \     text.filterNot(vowels.contains(_))", "        text.filter(c => !c.isLetter\
    \ || !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        var result =\
    \ \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c\n            }\n\
    \        }\n        return result", "        // TODO: Implement this function.\n\
    \        return \"\"", "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c <- text)\
    \ {\n            if (!vowels.contains(c)) {\n                result += c\n   \
    \         }\n        }\n        return result", "        var result = \"\"\n \
    \       for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                result += c\n            }\n      \
    \  }\n        return result", "        text.filter(c => !c.isLetter || c.toLower\
    \ != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower != 'o' && c.toLower\
    \ != 'u')", "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U')\n        text.filter(!vowels.contains(_))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filterNot(vowels)", "        var result = \"\"\n        for (c <-\
    \ text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                result += c\n            }\n        }\n        return\
    \ result", "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c <- text)\
    \ {\n            if (!vowels.contains(c)) {\n                result += c\n   \
    \         }\n        }\n        result", "        var result = \"\"\n        for\
    \ (i <- 0 until text.length) {\n            if (text(i) != 'a' && text(i) != 'e'\
    \ && text(i) != 'i' && text(i) != 'o' && text(i) != 'u') {\n                result\
    \ += text(i)\n            }\n        }\n        return result", "        var result\
    \ = \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                result += c\n           \
    \ }\n        }\n        return result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => !c.isLetter || c.toLower != 'a' && c.toLower != 'e' &&\
    \ c.toLower != 'i' && c.toLower != 'o' && c.toLower != 'u')", "        var result\
    \ = \"\"\n        for (i <- 0 until text.length) {\n            if (text(i) !=\
    \ 'a' && text(i) != 'e' && text(i) != 'i' && text(i) != 'o' && text(i) != 'u')\
    \ {\n                result += text(i)\n            }\n        }\n        return\
    \ result", '        text.filter(c => "aeiouAEIOU".indexOf(c) == -1)', "      \
    \  text.filter(x => x != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u' &&\
    \ x != 'A' && x != 'E' && x != 'I' && x != 'O' && x != 'U')", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U')", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        var\
    \ result = \"\"\n        for (c <- text) {\n            if (!c.toString.matches(\"\
    [aeiouAEIOU]\")) {\n                result += c\n            }\n        }\n  \
    \      return result", "        var result = \"\"\n        for (c <- text) {\n\
    \            if (!isVowel(c)) {\n                result += c\n            }\n\
    \        }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   val c = text(i)\n            if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') {\n                result += c\n            }\n        }\n\
    \        return result", "        text.filter(c => !c.isLetter || c.toLower !=\
    \ 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower != 'o' && c.toLower\
    \ != 'u')", "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U')\n        text.filter(!vowels.contains(_))", "        val vowels =\
    \ \"aeiouAEIOU\"\n        var result = \"\"\n        for (c <- text) {\n     \
    \       if (!vowels.contains(c)) {\n                result += c\n            }\n\
    \        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", '        text.filterNot(c
    => "aeiouAEIOU".contains(c))', "        text.filter(c => c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')", "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U')", "        var result = \"\"\n \
    \       for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                result += c\n            }\n      \
    \  }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "     \
    \   var result = \"\"\n        for (c <- text) {\n            if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        text.filter(x => x\
    \ != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u' && x != 'A' && x != 'E'\
    \ && x != 'I' && x != 'O' && x != 'U')", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        val vowels = \"aeiouAEIOU\"\
    \n        var result = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result += c\n            }\n        }\n        result", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n \
    \       text.filter(!vowels.contains(_))", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        text.filter(x => x\
    \ != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u' && x != 'A' && x != 'E'\
    \ && x != 'I' && x != 'O' && x != 'U')", "        text.filter(c => !c.isLetter\
    \ || c.toLower != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower !=\
    \ 'o' && c.toLower != 'u')", "        var result = \"\"\n        for (c <- text)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (text(i) != 'a' && text(i) != 'e' && text(i) != 'i' && text(i) != 'o' &&\
    \ text(i) != 'u') {\n                result += text(i)\n            }\n      \
    \  }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "     \
    \   val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n     \
    \   text.filter(!vowels.contains(_))", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        var vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n       \
    \ for (c <- text) {\n            if (!vowels.contains(c)) {\n                result\
    \ += c\n            }\n        }\n        return result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val text_list\
    \ = text.toList\n        val text_list_filtered = text_list.filter(x => !vowels.contains(x))\n\
    \        text_list_filtered.mkString", "        var vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = new StringBuilder()\n        for (c <- text)\
    \ {\n            if (!vowels.contains(c)) {\n                result.append(c)\n\
    \            }\n        }\n        result.toString", "        text.filter(c =>\
    \ !c.isLetter || c.toLower != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower\
    \ != 'o' && c.toLower != 'u')", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(ch => !vowels.contains(ch))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filterNot(vowels.contains(_))", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = new StringBuilder()\n        for (i <- 0 until\
    \ text.length) {\n            if (!vowels.contains(text(i))) {\n             \
    \   result.append(text(i))\n            }\n        }\n        result.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      var result = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result += c\n            }\n        }\n        result", " \
    \       text.filter(x => x != 'a' && x != 'e' && x != 'i' && x != 'o' && x !=\
    \ 'u' && x != 'A' && x != 'E' && x != 'I' && x != 'O' && x != 'U')", "       \
    \ val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c <- text)\
    \ {\n            if (!vowels.contains(c)) result += c\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(c => !vowels.contains(c))", "        text.filter(c => c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U')", "        var result = \"\"\n        for\
    \ (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                result += c\n            }\n        }\n    \
    \    return result", "        var result = \"\"\n        for (i <- 0 until text.length)\
    \ {\n            if (text(i) != 'a' && text(i) != 'e' && text(i) != 'i' && text(i)\
    \ != 'o' && text(i) != 'u') {\n                result += text(i)\n           \
    \ }\n        }\n        return result", "        val vowels = \"aeiouAEIOU\"\n\
    \        val result = new StringBuilder()\n        for (c <- text) {\n       \
    \     if (!vowels.contains(c)) {\n                result.append(c)\n         \
    \   }\n        }\n        result.toString", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        var result = \"\"\n       \
    \ for (i <- 0 until text.length) {\n            if (text(i) != 'a' && text(i)\
    \ != 'e' && text(i) != 'i' && text(i) != 'o' && text(i) != 'u') {\n          \
    \      result += text(i)\n            }\n        }\n        return result", " \
    \       text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        text.filter(c => !c.isLetter\
    \ || !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        var result =\
    \ \"\"\n        for (i <- 0 until text.length) {\n            if (text(i) != 'a'\
    \ && text(i) != 'e' && text(i) != 'i' && text(i) != 'o' && text(i) != 'u') result\
    \ += text(i)\n        }\n        return result", "        text.filter(c => !c.isLetter\
    \ || c.toLower != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower !=\
    \ 'o' && c.toLower != 'u')", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filterNot(vowels.contains(_))", "   \
    \     var result = \"\"\n        for (c <- text) {\n            if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(c => !vowels.contains(c))", "        text.filter(c => c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U')", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        var result = \"\
    \"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                result += c\n            }\n   \
    \     }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", " \
    \       text.filter(x => x != 'a' && x != 'e' && x != 'i' && x != 'o' && x !=\
    \ 'u' && x != 'A' && x != 'E' && x != 'I' && x != 'O' && x != 'U')", "       \
    \ text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')", "        var\
    \ result = \"\"\n        for (c <- text) {\n            if (!c.isLetter || !c.isLower\
    \ || c != 'a' || c != 'e' || c != 'i' || c != 'o' || c != 'u') {\n           \
    \     result += c\n            }\n        }\n        return result", "       \
    \ var result = \"\"\n        for (c <- text) {\n            if (c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        text.filter(c => c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U')", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filterNot(vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(c => !vowels.contains(c))", "        var result = \"\"\n  \
    \      for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                result += c\n            }\n      \
    \  }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))", "     \
    \   var result = \"\"\n        for (c <- text) {\n            if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result"]
stop_tokens:
- "\n    }\n"

name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // >>> intersection(((1l,\
  \ 2l)), ((2l, 3l)))\n    // (\"NO\")\n    // >>> intersection(((-1l, 1l)), ((0l,\
  \ 4l)))\n    // (\"NO\")\n    // >>> intersection(((-3l, -1l)), ((-5l, 5l)))\n \
  \   // (\"YES\")\n    def intersection(interval1 : Tuple2[Long, Long], interval2\
  \ : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       if (length == 2) {\n                    \"YES\"\n                } else\
    \ {\n                    if (length % 2 == 0) {\n                        \"NO\"\
    \n                    } else {\n                        var isPrime = true\n \
    \                       for (i <- 3 to sqrt(length).toInt by 2) {\n          \
    \                  if (length % i == 0) {\n                                isPrime\
    \ = false\n                            }\n                        }\n        \
    \                if (isPrime) {\n                            \"YES\"\n       \
    \                 } else {\n                            \"NO\"\n             \
    \           }\n                    }\n                }\n            }\n     \
    \   }", "        val (start1, end1) = interval1\n        val (start2, end2) =\
    \ interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3l to sqrt(length).toLong by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        for (i\
    \ <- 2l until length) {\n            if (length % i == 0) return \"NO\"\n    \
    \    }\n        \"YES\"", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) {\n\
    \            \"NO\"\n        } else {\n            val length = end - start +\
    \ 1\n            if (length == 1) {\n                \"NO\"\n            } else\
    \ {\n                val sqrt = sqrt(length).toLong\n                if (length\
    \ == sqrt * sqrt) {\n                    \"NO\"\n                } else {\n  \
    \                  var isPrime = true\n                    for (i <- 2l to sqrt)\
    \ {\n                        if (length % i == 0) {\n                        \
    \    isPrime = false\n                        }\n                    }\n     \
    \               if (isPrime) {\n                        \"YES\"\n            \
    \        } else {\n                        \"NO\"\n                    }\n   \
    \             }\n            }\n        }", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        for (i\
    \ <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) {\n            return \"NO\"\n        }\n        val\
    \ start = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            return \"NO\"\n        }\n        val length = end - start\
    \ + 1\n        if (length == 1) {\n            return \"NO\"\n        }\n    \
    \    if (length == 2) {\n            return \"YES\"\n        }\n        for (i\
    \ <- 2l until length) {\n            if (length % i == 0) {\n                return\
    \ \"NO\"\n            }\n        }\n        \"YES\"", "        val (start1, end1)\
    \ = interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) \"NO\"\n\
    \        else if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            if (isPrime(end - start + 1)) {\n        \
    \        \"YES\"\n            } else {\n                \"NO\"\n            }\n\
    \        }", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       val sqrt = sqrt(length).toLong\n                var isPrime = true\n \
    \               for (i <- 2l to sqrt) {\n                    if (length % i ==\
    \ 0) {\n                        isPrime = false\n                    }\n     \
    \           }\n                if (isPrime) {\n                    \"YES\"\n \
    \               } else {\n                    \"NO\"\n                }\n    \
    \        }\n        }", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\
    \n        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            \"NO\"\n        } else {\n            val length = end\
    \ - start + 1\n            if (length == 1) {\n                \"NO\"\n      \
    \      } else {\n                if (length == 2) {\n                    \"YES\"\
    \n                } else {\n                    if (length % 2 == 0) {\n     \
    \                   \"NO\"\n                    } else {\n                   \
    \     var isPrime = true\n                        for (i <- 3 to sqrt(length).toInt\
    \ by 2) {\n                            if (length % i == 0) {\n              \
    \                  isPrime = false\n                            }\n          \
    \              }\n                        if (isPrime) {\n                   \
    \         \"YES\"\n                        } else {\n                        \
    \    \"NO\"\n                        }\n                    }\n              \
    \  }\n            }\n        }", "        val (start1, end1) = interval1\n   \
    \     val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to\
    \ sqrt(length).toInt by 2) {\n            if (length % i == 0) return \"NO\"\n\
    \        }\n        \"YES\"", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) {\n\
    \            \"NO\"\n        } else {\n            val length = end - start +\
    \ 1\n            if (length == 1) {\n                \"NO\"\n            } else\
    \ {\n                val primes = ArrayBuffer[Long]()\n                primes\
    \ += 2\n                var i = 3\n                while (i <= length) {\n   \
    \                 var isPrime = true\n                    for (prime <- primes)\
    \ {\n                        if (i % prime == 0) {\n                         \
    \   isPrime = false\n                            break\n                     \
    \   }\n                    }\n                    if (isPrime) {\n           \
    \             primes += i\n                    }\n                    i += 2\n\
    \                }\n                if (primes.contains(length)) {\n         \
    \           \"YES\"\n                } else {\n                    \"NO\"\n  \
    \              }\n            }\n        }", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val (start,\
    \ end) = (max(start1, start2), min(end1, end2))\n        if (start > end) \"NO\"\
    \n        else if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (start1 > end1 || start2 > end2) return \"NO\"\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        if (length\
    \ % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (end1 < start2 || end2 < start1) return \"NO\"\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ == end) return \"NO\"\n        if (isPrime(end - start + 1)) return \"YES\"\n\
    \        \"NO\"", "        val start = max(interval1._1, interval2._1)\n     \
    \   val end = min(interval1._2, interval2._2)\n        if (start > end) return\
    \ \"NO\"\n        val length = end - start + 1\n        if (length == 1) return\
    \ \"NO\"\n        if (length == 2) return \"YES\"\n        if (length % 2 == 0)\
    \ return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n         \
    \   if (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "       \
    \ val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) \"NO\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        for (i\
    \ <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       val sqrt = sqrt(length).toLong\n                var isPrime = true\n \
    \               for (i <- 2l to sqrt) {\n                    if (length % i ==\
    \ 0) {\n                        isPrime = false\n                    }\n     \
    \           }\n                if (isPrime) {\n                    \"YES\"\n \
    \               } else {\n                    \"NO\"\n                }\n    \
    \        }\n        }", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       val sqrt = sqrt(length).toLong\n                val isPrime = (2l to sqrt).forall(length\
    \ % _ != 0)\n                if (isPrime) {\n                    \"YES\"\n   \
    \             } else {\n                    \"NO\"\n                }\n      \
    \      }\n        }", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) {\n            \"NO\"\n        } else {\n            val length\
    \ = end - start + 1\n            if (length == 1) {\n                \"NO\"\n\
    \            } else {\n                val primes = ArrayBuffer(2l, 3l, 5l, 7l,\
    \ 11l, 13l, 17l, 19l, 23l, 29l, 31l, 37l, 41l, 43l, 47l, 53l, 59l, 61l, 67l, 71l,\
    \ 73l, 79l, 83l, 89l, 97l, 101l, 103l, 107l, 109l, 113l, 127l, 131l, 137l, 139l,\
    \ 149l, 151l, 157l, 163l, 167l, 173l, 179l, 181l, 191l, 193l, 197l, 199l, 211l,\
    \ 223l, 227l, 229l, 233l, 239l, 241l, 251l, 257l, 263l, 269l, 271l, 277l, 281l,\
    \ 283l, 293l, 307l, 311l, 313l, 317l, 331l, 337l, 347l, 349l, 353l, 359l, 367l,\
    \ 373l, 379l, 383l, 389l, 397l, 401l, 409l, 419l, 421l, 431l, 433l, 439l, 443l,\
    \ 449l, 457l, 461l, 463l, 467l, 479l, 487l, 491l, 499l, 503l, 509l, 521l, 523l,\
    \ 541l, 547l, 557l, 563l, 569l, 571l, 577l, 587l, 593l, 599l, 601l, 607l, 613l,\
    \ 617l, 619l, 631l, 641l, 643l, 647l, 653l, 659l, 661l, 673l, 677l, 683l, 691l,\
    \ 701l, 709l", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\n   \
    \     val start = max(start1, start2)\n        val end = min(end1, end2)\n   \
    \     if (start > end) return \"NO\"\n        val len = end - start + 1\n    \
    \    if (len == 1) return \"NO\"\n        if (len == 2) return \"YES\"\n     \
    \   if (len % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(len).toInt by\
    \ 2) {\n            if (len % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n       \
    \ val (start2, end2) = interval2\n        val start = max(start1, start2)\n  \
    \      val end = min(end1, end2)\n        if (start > end) {\n            \"NO\"\
    \n        } else {\n            val length = end - start + 1\n            if (length\
    \ == 1) {\n                \"NO\"\n            } else {\n                val isPrime\
    \ = (2l to length / 2).forall(x => length % x != 0)\n                if (isPrime)\
    \ {\n                    \"YES\"\n                } else {\n                 \
    \   \"NO\"\n                }\n            }\n        }", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        for (i <- 2 to sqrt(length).toInt) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (start == end) \"YES\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length < 2) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            \"NO\"\n        } else {\n            val length = end\
    \ - start + 1\n            if (length == 1) {\n                \"NO\"\n      \
    \      } else {\n                if (length == 2) {\n                    \"YES\"\
    \n                } else {\n                    if (length % 2 == 0) {\n     \
    \                   \"NO\"\n                    } else {\n                   \
    \     val sqrt = sqrt(length).toLong\n                        var isPrime = true\n\
    \                        for (i <- 3l to sqrt by 2) {\n                      \
    \      if (length % i == 0) {\n                                isPrime = false\n\
    \                            }\n                        }\n                  \
    \      if (isPrime) {\n                            \"YES\"\n                 \
    \       } else {\n                            \"NO\"\n                       \
    \ }\n                    }\n                }\n            }\n        }", "  \
    \      val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) \"NO\"\n        else if (start == end)\
    \ \"YES\"\n        else if (start + 1 == end) \"YES\"\n        else if (start\
    \ + 2 == end) \"NO\"\n        else if (start + 3 == end) \"YES\"\n        else\
    \ if (start + 4 == end) \"NO\"\n        else if (start + 5 == end) \"YES\"\n \
    \       else if (start + 6 == end) \"NO\"\n        else if (start + 7 == end)\
    \ \"YES\"\n        else if (start + 8 == end) \"NO\"\n        else if (start +\
    \ 9 == end) \"NO\"\n        else \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   for (i <- 2l until length) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) return\
    \ \"NO\"\n        val length = end - start + 1\n        if (length == 1) return\
    \ \"NO\"\n        for (i <- 2l until length) {\n            if (length % i ==\
    \ 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        if (start1 > end1\
    \ || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n \
    \       val end = min(end1, end2)\n        if (start > end) return \"NO\"\n  \
    \      val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val start = max(interval1._1, interval2._1)\n        val end\
    \ = min(interval1._2, interval2._2)\n        if (start > end) return \"NO\"\n\
    \        val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        for (i <- 2l until length) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\"\n  \
    \      }\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length == 1) {\n            return\
    \ \"NO\"\n        }\n        if (length == 2) {\n            return \"YES\"\n\
    \        }\n        for (i <- 2 to sqrt(length).toInt) {\n            if (length\
    \ % i == 0) {\n                return \"NO\"\n            }\n        }\n     \
    \   \"YES\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\n   \
    \     val start = max(start1, start2)\n        val end = min(end1, end2)\n   \
    \     if (start > end) return \"NO\"\n        val length = end - start + 1\n \
    \       if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val len = end - start + 1\n        if (len == 1) return \"NO\"\n     \
    \   if (len == 2) return \"YES\"\n        for (i <- 2l until len) {\n        \
    \    if (len % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val\
    \ start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) return \"NO\"\n        val length =\
    \ end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt) {\n       \
    \     if (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "     \
    \   val (start1, end1) = interval1\n        val (start2, end2) = interval2\n \
    \       val start = max(start1, start2)\n        val end = min(end1, end2)\n \
    \       if (start <= end) {\n            if (isPrime(end - start + 1)) \"YES\"\
    \ else \"NO\"\n        } else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       if (length == 2) {\n                    \"YES\"\n                } else\
    \ {\n                    if (length % 2 == 0) {\n                        \"NO\"\
    \n                    } else {\n                        var isPrime = true\n \
    \                       for (i <- 3 to sqrt(length).toInt by 2) {\n          \
    \                  if (length % i == 0) {\n                                isPrime\
    \ = false\n                            }\n                        }\n        \
    \                if (isPrime) {\n                            \"YES\"\n       \
    \                 } else {\n                            \"NO\"\n             \
    \           }\n                    }\n                }\n            }\n     \
    \   }", "        val (start1, end1) = interval1\n        val (start2, end2) =\
    \ interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        if (isPrime(end\
    \ - start + 1)) return \"YES\"\n        return \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   for (i <- 2 to (length / 2).toInt) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            \"NO\"\n        } else {\n            val length = end\
    \ - start + 1\n            if (length == 1) {\n                \"NO\"\n      \
    \      } else {\n                val sqrt = sqrt(length).toLong\n            \
    \    val isPrime = (2l to sqrt).forall(length % _ != 0)\n                if (isPrime)\
    \ {\n                    \"YES\"\n                } else {\n                 \
    \   \"NO\"\n                }\n            }\n        }", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt)\
    \ {\n            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) \"NO\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            \"NO\"\n        } else {\n            val length = end\
    \ - start + 1\n            if (length == 1) {\n                \"NO\"\n      \
    \      } else {\n                val sqrt = sqrt(length).toLong\n            \
    \    var isPrime = true\n                for (i <- 2l to sqrt) {\n           \
    \         if (length % i == 0) {\n                        isPrime = false\n  \
    \                  }\n                }\n                if (isPrime) {\n    \
    \                \"YES\"\n                } else {\n                    \"NO\"\
    \n                }\n            }\n        }", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) {\n   \
    \         \"NO\"\n        } else {\n            val length = end - start + 1\n\
    \            if (length == 1) {\n                \"NO\"\n            } else {\n\
    \                val sqrt = sqrt(length).toLong\n                val isPrime =\
    \ (2l to sqrt).forall(length % _ != 0)\n                if (isPrime) {\n     \
    \               \"YES\"\n                } else {\n                    \"NO\"\n\
    \                }\n            }\n        }", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        val sqrt\
    \ = sqrt(length).toLong\n        for (i <- 2l to sqrt) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) \"NO\"\n        else if (start == end) \"YES\"\n        else {\n\
    \            val length = end - start + 1\n            if (length == 2) \"YES\"\
    \n            else {\n                val sqrt = sqrt(length).toLong\n       \
    \         var isPrime = true\n                for (i <- 2l to sqrt) {\n      \
    \              if (length % i == 0) {\n                        isPrime = false\n\
    \                        i = sqrt\n                    }\n                }\n\
    \                if (isPrime) \"YES\"\n                else \"NO\"\n         \
    \   }\n        }", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt) {\n       \
    \     if (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "     \
    \   val (start1, end1) = interval1\n        val (start2, end2) = interval2\n \
    \       val start = max(start1, start2)\n        val end = min(end1, end2)\n \
    \       if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2 to sqrt(length).toInt) {\n            if (length % i ==\
    \ 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) \"NO\"\n\
    \        else if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) {\n            \"NO\"\n        } else {\n          \
    \  val length = end - start + 1\n            if (length == 1) {\n            \
    \    \"NO\"\n            } else {\n                val sqrt = sqrt(length).toLong\n\
    \                val isPrime = (2l to sqrt).forall(length % _ != 0)\n        \
    \        if (isPrime) {\n                    \"YES\"\n                } else {\n\
    \                    \"NO\"\n                }\n            }\n        }", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length < 2) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   for (i <- 2l until length) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   for (i <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val (start, end) = (max(start1, start2), min(end1,\
    \ end2))\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        val sqrtLength = sqrt(length).toLong\n        for (i <- 2l\
    \ to sqrtLength) {\n            if (length % i == 0) return \"NO\"\n        }\n\
    \        \"YES\"", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\
    \n        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val start\
    \ = max(interval1._1, interval2._1)\n        val end = min(interval1._2, interval2._2)\n\
    \        if (start > end) {\n            \"NO\"\n        } else {\n          \
    \  val length = end - start + 1\n            if (length == 1) {\n            \
    \    \"NO\"\n            } else {\n                val primes = ArrayBuffer[Long]()\n\
    \                primes += 2\n                for (i <- 3 to length.toInt by 2)\
    \ {\n                    var isPrime = true\n                    for (j <- 0 until\
    \ primes.length) {\n                        if (i % primes(j) == 0) {\n      \
    \                      isPrime = false\n                            break\n  \
    \                      }\n                    }\n                    if (isPrime)\
    \ primes += i\n                }\n                if (primes.contains(length))\
    \ \"YES\" else \"NO\"\n            }\n        }", "        val (start1, end1)\
    \ = interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) return\
    \ \"NO\"\n        val length = end - start + 1\n        if (length == 1) return\
    \ \"NO\"\n        if (length == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt)\
    \ {\n            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) \"\
    NO\"\n        else if (start == end) \"YES\"\n        else if (start + 1 == end)\
    \ \"YES\"\n        else if (start + 2 == end) \"NO\"\n        else if (start +\
    \ 3 == end) \"YES\"\n        else if (start + 4 == end) \"NO\"\n        else if\
    \ (start + 5 == end) \"YES\"\n        else if (start + 6 == end) \"NO\"\n    \
    \    else if (start + 7 == end) \"YES\"\n        else if (start + 8 == end) \"\
    NO\"\n        else if (start + 9 == end) \"NO\"\n        else if (start + 10 ==\
    \ end) \"NO\"\n        else if (start + 11 == end) \"YES\"\n        else if (start\
    \ + 12 == end) \"NO\"\n        else if (start + 13 == end) \"YES\"\n        else\
    \ if (start + 14 == end) \"NO\"\n        else if (start + 15 == end) \"NO\"\n\
    \        else if (start + 16 == end) \"NO\"\n        else if (start + 17 == end)\
    \ \"YES\"\n        else if (start + 18 == end) \"NO\"\n        else if (start\
    \ + 19 == end) \"YES\"\n        else if (start + 20 == end) \"NO\"\n        else\
    \ if (start + 21 == end) \"NO\"\n        else if (start + 22 == end) \"NO\"\n\
    \        else if (start + 23 == end) \"YES\"\n        else if (start + 24 == end)\
    \ \"NO\"\n        else if (start + 25 == end) \"NO\"\n        else if (start +\
    \ 26 == end) \"NO\"\n        else if (start + 27 == end) \"NO\"\n        else\
    \ if (start + 28 == end) \"NO\"\n        else if (start + 29 == end) \"YES\"\n\
    \        else if (start + 30 == end) \"NO\"\n        else if (start + 31 == end)\
    \ \"YES\"\n        else if (start + 32 == end) \"NO\"\n        else if (", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n       \
    \ val (start2, end2) = interval2\n        val start = max(start1, start2)\n  \
    \      val end = min(end1, end2)\n        if (start > end) {\n            \"NO\"\
    \n        } else {\n            val length = end - start + 1\n            if (length\
    \ == 1) {\n                \"NO\"\n            } else {\n                val sqrt\
    \ = sqrt(length).toLong\n                val isPrime = (2l to sqrt).forall(length\
    \ % _ != 0)\n                if (isPrime) {\n                    \"YES\"\n   \
    \             } else {\n                    \"NO\"\n                }\n      \
    \      }\n        }", "        val start = max(interval1._1, interval2._1)\n \
    \       val end = min(interval1._2, interval2._2)\n        if (start > end) {\n\
    \            \"NO\"\n        } else {\n            val length = end - start +\
    \ 1\n            if (length == 1) {\n                \"NO\"\n            } else\
    \ {\n                val primes = ArrayBuffer(2l, 3l, 5l, 7l, 11l, 13l, 17l, 19l,\
    \ 23l, 29l, 31l, 37l, 41l, 43l, 47l, 53l, 59l, 61l, 67l, 71l, 73l, 79l, 83l, 89l,\
    \ 97l, 101l, 103l, 107l, 109l, 113l, 127l, 131l, 137l, 139l, 149l, 151l, 157l,\
    \ 163l, 167l, 173l, 179l, 181l, 191l, 193l, 197l, 199l, 211l, 223l, 227l, 229l,\
    \ 233l, 239l, 241l, 251l, 257l, 263l, 269l, 271l, 277l, 281l, 283l, 293l, 307l,\
    \ 311l, 313l, 317l, 331l, 337l, 347l, 349l, 353l, 359l, 367l, 373l, 379l, 383l,\
    \ 389l, 397l, 401l, 409l, 419l, 421l, 431l, 433l, 439l, 443l, 449l, 457l, 461l,\
    \ 463l, 467l, 479l, 487l, 491l, 499l, 503l, 509l, 521l, 523l, 541l, 547l, 557l,\
    \ 563l, 569l, 571l, 577l, 587l, 593l, 599l, 601l, 607l, 613l, 617l, 619l, 631l,\
    \ 641l, 643l, 647l, 653l, 659l, 661l, 673l, 677l, 683l, 691l, 701l, 709l", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2 to sqrt(length).toInt) {\n            if (length % i ==\
    \ 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) return\
    \ \"NO\"\n        val length = end - start + 1\n        if (length == 1) return\
    \ \"NO\"\n        val sqrtLength = sqrt(length).toLong\n        if (length ==\
    \ sqrtLength * sqrtLength) return \"NO\"\n        for (i <- 2l to sqrtLength)\
    \ {\n            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n       \
    \ val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        val sqrt = sqrt(length).toLong\n\
    \        for (i <- 3l to sqrt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) {\n            return \"NO\"\n        }\n        val\
    \ start = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            return \"NO\"\n        }\n        val length = end - start\
    \ + 1\n        if (length == 1) {\n            return \"NO\"\n        }\n    \
    \    if (length == 2) {\n            return \"YES\"\n        }\n        for (i\
    \ <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) {\n        \
    \        return \"NO\"\n            }\n        }\n        \"YES\"", "        val\
    \ start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) \"NO\"\n        else if (start == end)\
    \ \"YES\"\n        else if (start + 1 == end) \"YES\"\n        else if (start\
    \ + 2 == end) \"NO\"\n        else if (start + 3 == end) \"YES\"\n        else\
    \ if (start + 4 == end) \"NO\"\n        else if (start + 5 == end) \"YES\"\n \
    \       else if (start + 6 == end) \"NO\"\n        else if (start + 7 == end)\
    \ \"YES\"\n        else if (start + 8 == end) \"NO\"\n        else if (start +\
    \ 9 == end) \"NO\"\n        else \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            \"NO\"\n        } else {\n            val length = end\
    \ - start + 1\n            if (length == 1) {\n                \"NO\"\n      \
    \      } else {\n                if (length == 2) {\n                    \"YES\"\
    \n                } else {\n                    if (length % 2 == 0) {\n     \
    \                   \"NO\"\n                    } else {\n                   \
    \     val sqrtLength = sqrt(length).toLong\n                        var isPrime\
    \ = true\n                        for (i <- 3l to sqrtLength by 2) {\n       \
    \                     if (length % i == 0) {\n                               \
    \ isPrime = false\n                            }\n                        }\n\
    \                        if (isPrime) {\n                            \"YES\"\n\
    \                        } else {\n                            \"NO\"\n      \
    \                  }\n                    }\n                }\n            }\n\
    \        }", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        val sqrt = sqrt(length).toLong\n\
    \        for (i <- 2l to sqrt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to\
    \ sqrt(length).toInt by 2) {\n            if (length % i == 0) return \"NO\"\n\
    \        }\n        \"YES\"", "        if (interval1._1 > interval2._2 || interval2._1\
    \ > interval1._2) return \"NO\"\n        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        val len = end - start\
    \ + 1\n        if (len == 1) return \"NO\"\n        val sqrt = sqrt(len).toLong\n\
    \        for (i <- 2l to sqrt) {\n            if (len % i == 0) return \"NO\"\n\
    \        }\n        \"YES\"", "        val (start1, end1) = interval1\n      \
    \  val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length < 2) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        val sqrt = sqrt(length).toLong\n        for (i <- 2l to sqrt)\
    \ {\n            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (start1 > end1 || start2 > end2) return \"NO\"\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        val sqrt\
    \ = sqrt(length).toLong\n        for (i <- 2l to sqrt) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (start == end) \"YES\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (end - start == 1) \"YES\"\n        else if (end\
    \ - start == 2) \"NO\"\n        else if (end - start == 3) \"YES\"\n        else\
    \ if (end - start == 4) \"NO\"\n        else if (end - start == 5) \"YES\"\n \
    \       else if (end - start == 6) \"NO\"\n        else if (end - start == 7)\
    \ \"YES\"\n        else if (end - start == 8) \"NO\"\n        else if (end - start\
    \ == 9) \"NO\"\n        else if (end - start == 10) \"NO\"\n        else if (end\
    \ - start == 11) \"YES\"\n        else if (end - start == 12) \"NO\"\n       \
    \ else if (end - start == 13) \"YES\"\n        else if (end - start == 14) \"\
    NO\"\n        else if (end - start == 15) \"NO\"\n        else if (end - start\
    \ == 16) \"NO\"\n        else if (end - start == 17) \"YES\"\n        else if\
    \ (end - start == 18) \"NO\"\n        else if (end - start == 19) \"YES\"\n  \
    \      else if (end - start == 20) \"NO\"\n        else if (end - start == 21)\
    \ \"NO\"\n        else if (end - start == 22) \"NO\"\n        else if (end - start\
    \ == 23) \"YES\"\n        else if (end - start == 24) \"NO\"\n        else if\
    \ (end - start == 25) \"NO\"\n        else if (end - start == 26) \"NO\"\n   \
    \     else if (end - start == 27) \"NO\"\n        else if (end - start == 28)\
    \ \"NO\"\n        else if (end - start == 29) \"YES\"\n        else if (end -\
    \ start == 30) \"NO\"\n        else if (end - start == 31) \"YES\"\n        else\
    \ if (end - start == 32) \"NO\"\n", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        if (length\
    \ % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) {\n            \"NO\"\n        } else {\n          \
    \  val length = end - start + 1\n            if (length == 1) {\n            \
    \    \"NO\"\n            } else {\n                val sqrt = sqrt(length).toLong\n\
    \                val isPrime = (2l to sqrt).forall(length % _ != 0)\n        \
    \        if (isPrime) {\n                    \"YES\"\n                } else {\n\
    \                    \"NO\"\n                }\n            }\n        }", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (start1 > end1 || start2 > end2) return \"NO\"\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        if (length\
    \ % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt\
    \ by 2) {\n            if (length % i == 0) return \"NO\"\n        }\n       \
    \ \"YES\"", "        val start = max(interval1._1, interval2._1)\n        val\
    \ end = min(interval1._2, interval2._2)\n        if (start > end) return \"NO\"\
    \n        val length = end - start + 1\n        if (length == 1) return \"NO\"\
    \n        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3l to sqrt(length).toLong by 2) {\n            if\
    \ (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        if (start1\
    \ > end1 || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   for (i <- 2l until length) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val len = end - start\
    \ + 1\n        if (len == 1) return \"NO\"\n        if (len == 2) return \"YES\"\
    \n        if (len % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(len).toInt\
    \ by 2) {\n            if (len % i == 0) return \"NO\"\n        }\n        \"\
    YES\"", "        val (start1, end1) = interval1\n        val (start2, end2) =\
    \ interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        for (i <- 2l until length) {\n            if (length % i ==\
    \ 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) \"NO\"\n\
    \        else if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) {\n\
    \            \"NO\"\n        } else {\n            val length = end - start +\
    \ 1\n            if (length == 1) {\n                \"NO\"\n            } else\
    \ {\n                var isPrime = true\n                for (i <- 2 to sqrt(length).toInt)\
    \ {\n                    if (length % i == 0) {\n                        isPrime\
    \ = false\n                    }\n                }\n                if (isPrime)\
    \ {\n                    \"YES\"\n                } else {\n                 \
    \   \"NO\"\n                }\n            }\n        }", "        val start =\
    \ max(interval1._1, interval2._1)\n        val end = min(interval1._2, interval2._2)\n\
    \        if (start > end) \"NO\"\n        else if (start == end) \"YES\"\n   \
    \     else if (start + 1 == end) \"YES\"\n        else if (start + 2 == end) \"\
    NO\"\n        else if (start + 3 == end) \"YES\"\n        else if (start + 4 ==\
    \ end) \"NO\"\n        else if (start + 5 == end) \"YES\"\n        else if (start\
    \ + 6 == end) \"NO\"\n        else if (start + 7 == end) \"YES\"\n        else\
    \ if (start + 8 == end) \"NO\"\n        else if (start + 9 == end) \"NO\"\n  \
    \      else \"YES\"", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end\
    \ - start + 1)) \"YES\"\n        else \"NO\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt\
    \ by 2) {\n            if (length % i == 0) return \"NO\"\n        }\n       \
    \ \"YES\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt)\
    \ {\n            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n       \
    \ val (start2, end2) = interval2\n        val start = max(start1, start2)\n  \
    \      val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        for (i\
    \ <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       if (start == end) return \"YES\"\n        val length = end - start + 1\n\
    \        if (length == 2) return \"YES\"\n        if (length % 2 == 0) return\
    \ \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) \"NO\"\n        else if (start == end) \"YES\"\n        else if\
    \ (start + 1 == end) \"YES\"\n        else if (start + 2 == end) \"NO\"\n    \
    \    else \"YES\"", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start >= end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt) {\n       \
    \     if (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "     \
    \   val (start1, end1) = interval1\n        val (start2, end2) = interval2\n \
    \       if (start1 > end1 || start2 > end2) return \"NO\"\n        val start =\
    \ max(start1, start2)\n        val end = min(end1, end2)\n        if (start >\
    \ end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        for (i\
    \ <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\n   \
    \     val start = max(start1, start2)\n        val end = min(end1, end2)\n   \
    \     if (start > end) return \"NO\"\n        val length = end - start + 1\n \
    \       if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt\
    \ by 2) {\n            if (length % i == 0) return \"NO\"\n        }\n       \
    \ \"YES\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\n   \
    \     val start = max(start1, start2)\n        val end = min(end1, end2)\n   \
    \     if (start > end) return \"NO\"\n        val len = end - start + 1\n    \
    \    if (len == 1) return \"NO\"\n        if (len == 2) return \"YES\"\n     \
    \   if (len % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(len).toInt by\
    \ 2) {\n            if (len % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\"\n  \
    \      }\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length == 1) {\n            return\
    \ \"NO\"\n        }\n        if (length == 2) {\n            return \"YES\"\n\
    \        }\n        val sqrt = sqrt(length).toLong\n        for (i <- 2l to sqrt)\
    \ {\n            if (length % i == 0) {\n                return \"NO\"\n     \
    \       }\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) \"NO\"\n        else if (start == end) \"YES\"\n        else if\
    \ (start == end - 1) \"YES\"\n        else if (start == end - 2) \"NO\"\n    \
    \    else \"YES\"", "        val start = max(interval1._1, interval2._1)\n   \
    \     val end = min(interval1._2, interval2._2)\n        if (start > end) \"NO\"\
    \n        else if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"\
    YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n       \
    \ val (start2, end2) = interval2\n        val start = max(start1, start2)\n  \
    \      val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) {\n            \"NO\"\n        } else {\n            val length = end\
    \ - start + 1\n            if (length == 1) {\n                \"NO\"\n      \
    \      } else {\n                val sqrt = sqrt(length).toLong\n            \
    \    var isPrime = true\n                for (i <- 2l to sqrt) {\n           \
    \         if (length % i == 0) {\n                        isPrime = false\n  \
    \                  }\n                }\n                if (isPrime) {\n    \
    \                \"YES\"\n                } else {\n                    \"NO\"\
    \n                }\n            }\n        }", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) {\n            \"NO\"\n        } else {\n            val length\
    \ = end - start + 1\n            if (length == 1) {\n                \"NO\"\n\
    \            } else {\n                if (length == 2) {\n                  \
    \  \"YES\"\n                } else {\n                    val sqrt = sqrt(length).toLong\n\
    \                    var isPrime = true\n                    for (i <- 2l to sqrt)\
    \ {\n                        if (length % i == 0) {\n                        \
    \    isPrime = false\n                        }\n                    }\n     \
    \               if (isPrime) {\n                        \"YES\"\n            \
    \        } else {\n                        \"NO\"\n                    }\n   \
    \             }\n            }\n        }", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) \"NO\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val (start, end) = (max(start1, start2), min(end1,\
    \ end2))\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to\
    \ sqrt(length).toInt by 2) {\n            if (length % i == 0) return \"NO\"\n\
    \        }\n        \"YES\"", "        val (start1, end1) = interval1\n      \
    \  val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val len = end - start\
    \ + 1\n        if (len == 1) return \"NO\"\n        if (len == 2) return \"YES\"\
    \n        for (i <- 2 to sqrt(len).toInt) {\n            if (len % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (start == end) \"YES\"\n        else if (isPrime(end - start + 1)) \"YES\"\
    \n        else \"NO\"", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) \"NO\"\n        else if (start ==\
    \ end) \"YES\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val start = max(interval1._1, interval2._1)\n        val end\
    \ = min(interval1._2, interval2._2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       val primes = ArrayBuffer[Long]()\n                primes += 2\n      \
    \          for (i <- 3l to length by 2) {\n                    var isPrime = true\n\
    \                    for (j <- primes) {\n                        if (i % j ==\
    \ 0) {\n                            isPrime = false\n                        \
    \    break\n                        }\n                    }\n               \
    \     if (isPrime) {\n                        primes += i\n                  \
    \  }\n                }\n                if (primes.contains(length)) {\n    \
    \                \"YES\"\n                } else {\n                    \"NO\"\
    \n                }\n            }\n        }", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        if (start1 > end1\
    \ || start2 > end2) return \"NO\"\n        val start = max(start1, start2)\n \
    \       val end = min(end1, end2)\n        if (start > end) return \"NO\"\n  \
    \      if (start == end) return \"YES\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt\
    \ by 2) {\n            if (length % i == 0) return \"NO\"\n        }\n       \
    \ \"YES\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n     \
    \   for (i <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       val sqrt = sqrt(length).toLong\n                if (sqrt * sqrt == length)\
    \ {\n                    \"NO\"\n                } else {\n                  \
    \  var isPrime = true\n                    for (i <- 2l to sqrt) {\n         \
    \               if (length % i == 0) {\n                            isPrime =\
    \ false\n                        }\n                    }\n                  \
    \  if (isPrime) {\n                        \"YES\"\n                    } else\
    \ {\n                        \"NO\"\n                    }\n                }\n\
    \            }\n        }", "        val (start1, end1) = interval1\n        val\
    \ (start2, end2) = interval2\n        val start = max(start1, start2)\n      \
    \  val end = min(end1, end2)\n        if (start > end) return \"NO\"\n       \
    \ val length = end - start + 1\n        if (length == 1) return \"NO\"\n     \
    \   if (length == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\
    \n        for (i <- 3 to sqrt(length).toInt by 2) {\n            if (length %\
    \ i == 0) return \"NO\"\n        }\n        \"YES\"", "        val (start1, end1)\
    \ = interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) return\
    \ \"NO\"\n        val length = end - start + 1\n        if (length == 1) return\
    \ \"NO\"\n        if (length == 2) return \"YES\"\n        if (length % 2 == 0)\
    \ return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n         \
    \   if (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "       \
    \ val (start1, end1) = interval1\n        val (start2, end2) = interval2\n   \
    \     val start = max(start1, start2)\n        val end = min(end1, end2)\n   \
    \     if (start > end) return \"NO\"\n        val length = end - start + 1\n \
    \       if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val start = max(interval1._1,\
    \ interval2._1)\n        val end = min(interval1._2, interval2._2)\n        if\
    \ (start > end) {\n            \"NO\"\n        } else {\n            val length\
    \ = end - start + 1\n            if (length == 1) {\n                \"NO\"\n\
    \            } else {\n                val primes = ArrayBuffer[Long]()\n    \
    \            var i = 2l\n                while (i * i <= length) {\n         \
    \           if (length % i == 0) {\n                        primes += i\n    \
    \                }\n                    i += 1\n                }\n          \
    \      if (primes.length == 0) {\n                    \"YES\"\n              \
    \  } else {\n                    \"NO\"\n                }\n            }\n  \
    \      }", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) {\n            \"NO\"\n        } else {\n  \
    \          val length = end - start + 1\n            if (length == 1) {\n    \
    \            \"NO\"\n            } else {\n                val isPrime = (2l to\
    \ length / 2).forall(x => length % x != 0)\n                if (isPrime) {\n \
    \                   \"YES\"\n                } else {\n                    \"\
    NO\"\n                }\n            }\n        }", "        val (start1, end1)\
    \ = interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) {\n   \
    \         \"NO\"\n        } else {\n            val length = end - start + 1\n\
    \            if (length == 1) {\n                \"NO\"\n            } else {\n\
    \                val sqrt = sqrt(length).toLong\n                if (sqrt * sqrt\
    \ == length) {\n                    \"NO\"\n                } else {\n       \
    \             var isPrime = true\n                    for (i <- 2l to sqrt) {\n\
    \                        if (length % i == 0) {\n                            isPrime\
    \ = false\n                        }\n                    }\n                \
    \    if (isPrime) {\n                        \"YES\"\n                    } else\
    \ {\n                        \"NO\"\n                    }\n                }\n\
    \            }\n        }", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) \"\
    NO\"\n        else if (start == end) \"YES\"\n        else if (end - start ==\
    \ 1) \"YES\"\n        else if (end - start == 2) \"NO\"\n        else if (end\
    \ - start == 3) \"YES\"\n        else if (end - start == 4) \"NO\"\n        else\
    \ if (end - start == 5) \"YES\"\n        else if (end - start == 6) \"NO\"\n \
    \       else if (end - start == 7) \"YES\"\n        else if (end - start == 8)\
    \ \"NO\"\n        else if (end - start == 9) \"NO\"\n        else if (end - start\
    \ == 10) \"NO\"\n        else if (end - start == 11) \"YES\"\n        else if\
    \ (end - start == 12) \"NO\"\n        else if (end - start == 13) \"YES\"\n  \
    \      else if (end - start == 14) \"NO\"\n        else if (end - start == 15)\
    \ \"NO\"\n        else if (end - start == 16) \"NO\"\n        else if (end - start\
    \ == 17) \"YES\"\n        else if (end - start == 18) \"NO\"\n        else if\
    \ (end - start == 19) \"YES\"\n        else if (end - start == 20) \"NO\"\n  \
    \      else if (end - start == 21) \"NO\"\n        else if (end - start == 22)\
    \ \"NO\"\n        else if (end - start == 23) \"YES\"\n        else if (end -\
    \ start == 24) \"NO\"\n        else if (end - start == 25) \"NO\"\n        else\
    \ if (end - start == 26) \"NO\"\n        else if (end - start == 27) \"NO\"\n\
    \        else if (end - start == 28) \"NO\"\n        else if (end - start == 29)\
    \ \"YES\"\n        else if (end - start == 30) \"NO\"\n        else if (end -\
    \ start == 31) \"YES\"\n        else if (end - start == 32) \"NO\"\n        else\
    \ if (", "        val (start1, end1) = interval1\n        val (start2, end2) =\
    \ interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (start == end) \"YES\"\
    \n        else if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", " \
    \       val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) return \"NO\"\n        if (start ==\
    \ end) return \"YES\"\n        val length = end - start + 1\n        if (length\
    \ == 2) return \"YES\"\n        for (i <- 2l to length - 1) {\n            if\
    \ (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "        val start\
    \ = max(interval1._1, interval2._1)\n        val end = min(interval1._2, interval2._2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        val sqrt = sqrt(length).toLong\n\
    \        for (i <- 2l to sqrt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       val sqrt = sqrt(length).toLong\n                if (length == sqrt * sqrt)\
    \ {\n                    \"NO\"\n                } else {\n                  \
    \  var isPrime = true\n                    for (i <- 2l to sqrt) {\n         \
    \               if (length % i == 0) {\n                            isPrime =\
    \ false\n                        }\n                    }\n                  \
    \  if (isPrime) {\n                        \"YES\"\n                    } else\
    \ {\n                        \"NO\"\n                    }\n                }\n\
    \            }\n        }", "        val (start1, end1) = interval1\n        val\
    \ (start2, end2) = interval2\n        val (start, end) = (max(start1, start2),\
    \ min(end1, end2))\n        if (start > end) \"NO\"\n        else if (start ==\
    \ end) \"YES\"\n        else if (isPrime(end - start + 1)) \"YES\"\n        else\
    \ \"NO\"", "        val (start1, end1) = interval1\n        val (start2, end2)\
    \ = interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (isPrime(end - start + 1)) \"YES\"\n        else \"NO\"", "        val (start1,\
    \ end1) = interval1\n        val (start2, end2) = interval2\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        for (i\
    \ <- 2 to sqrt(length).toInt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\"\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length == 1) return \"NO\"\n        if (length == 2) return\
    \ \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for (i <- 3 to\
    \ sqrt(length).toInt by 2) {\n            if (length % i == 0) return \"NO\"\n\
    \        }\n        \"YES\"", "        if (interval1._1 > interval2._2 || interval2._1\
    \ > interval1._2) return \"NO\"\n        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        val length = end -\
    \ start + 1\n        if (length == 1) return \"NO\"\n        val sqrt = sqrt(length).toLong\n\
    \        for (i <- 2l to sqrt) {\n            if (length % i == 0) return \"NO\"\
    \n        }\n        \"YES\"", "        val (start1, end1) = interval1\n     \
    \   val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) \"NO\"\n        else\
    \ if (start == end) \"YES\"\n        else if (isPrime(end - start + 1)) \"YES\"\
    \n        else \"NO\"", "        val start = max(interval1._1, interval2._1)\n\
    \        val end = min(interval1._2, interval2._2)\n        if (start > end) {\n\
    \            \"NO\"\n        } else {\n            val length = end - start +\
    \ 1\n            if (length == 1) {\n                \"NO\"\n            } else\
    \ {\n                val primes = ArrayBuffer(2l, 3l, 5l, 7l, 11l, 13l, 17l, 19l,\
    \ 23l, 29l, 31l, 37l, 41l, 43l, 47l, 53l, 59l, 61l, 67l, 71l, 73l, 79l, 83l, 89l,\
    \ 97l, 101l, 103l, 107l, 109l, 113l, 127l, 131l, 137l, 139l, 149l, 151l, 157l,\
    \ 163l, 167l, 173l, 179l, 181l, 191l, 193l, 197l, 199l, 211l, 223l, 227l, 229l,\
    \ 233l, 239l, 241l, 251l, 257l, 263l, 269l, 271l, 277l, 281l, 283l, 293l, 307l,\
    \ 311l, 313l, 317l, 331l, 337l, 347l, 349l, 353l, 359l, 367l, 373l, 379l, 383l,\
    \ 389l, 397l, 401l, 409l, 419l, 421l, 431l, 433l, 439l, 443l, 449l, 457l, 461l,\
    \ 463l, 467l, 479l, 487l, 491l, 499l, 503l, 509l, 521l, 523l, 541l, 547l, 557l,\
    \ 563l, 569l, 571l, 577l, 587l, 593l, 599l, 601l, 607l, 613l, 617l, 619l, 631l,\
    \ 641l, 643l, 647l, 653l, 659l, 661l, 673l, 677l, 683l, 691l, 701l, 709l", " \
    \       val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val len = end - start + 1\n \
    \       if (len == 1) return \"NO\"\n        if (len == 2) return \"YES\"\n  \
    \      if (len % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(len).toInt\
    \ by 2) {\n            if (len % i == 0) return \"NO\"\n        }\n        \"\
    YES\"", "        val (start1, end1) = interval1\n        val (start2, end2) =\
    \ interval2\n        val start = max(start1, start2)\n        val end = min(end1,\
    \ end2)\n        if (start > end) \"NO\"\n        else if (isPrime(end - start\
    \ + 1)) \"YES\"\n        else \"NO\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        for (i <- 2l until length) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val (start, end) = (max(start1,\
    \ start2), min(end1, end2))\n        if (start > end) {\n            \"NO\"\n\
    \        } else {\n            val length = end - start + 1\n            if (length\
    \ == 1) {\n                \"NO\"\n            } else {\n                val sqrt\
    \ = sqrt(length).toLong\n                val isPrime = (2L to sqrt).forall(length\
    \ % _ != 0)\n                if (isPrime) {\n                    \"YES\"\n   \
    \             } else {\n                    \"NO\"\n                }\n      \
    \      }\n        }", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        if (start1 > end1 || start2 > end2) {\n         \
    \   return \"NO\"\n        }\n        val start = max(start1, start2)\n      \
    \  val end = min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length == 1)\
    \ {\n            return \"NO\"\n        }\n        if (length == 2) {\n      \
    \      return \"YES\"\n        }\n        for (i <- 2 to sqrt(length).toInt) {\n\
    \            if (length % i == 0) {\n                return \"NO\"\n         \
    \   }\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) {\n            \"\
    NO\"\n        } else {\n            val length = end - start + 1\n           \
    \ if (length == 1) {\n                \"NO\"\n            } else {\n         \
    \       if (length == 2) {\n                    \"YES\"\n                } else\
    \ {\n                    val sqrt = sqrt(length).toLong\n                    var\
    \ isPrime = true\n                    for (i <- 2l to sqrt) {\n              \
    \          if (length % i == 0) {\n                            isPrime = false\n\
    \                        }\n                    }\n                    if (isPrime)\
    \ {\n                        \"YES\"\n                    } else {\n         \
    \               \"NO\"\n                    }\n                }\n           \
    \ }\n        }", "        val start = max(interval1._1, interval2._1)\n      \
    \  val end = min(interval1._2, interval2._2)\n        if (start > end) {\n   \
    \         \"NO\"\n        } else {\n            val length = end - start + 1\n\
    \            if (length == 1) {\n                \"NO\"\n            } else {\n\
    \                if (length == 2) {\n                    \"YES\"\n           \
    \     } else {\n                    if (length % 2 == 0) {\n                 \
    \       \"NO\"\n                    } else {\n                        var isPrime\
    \ = true\n                        for (i <- 3 to sqrt(length).toInt by 2) {\n\
    \                            if (length % i == 0) {\n                        \
    \        isPrime = false\n                            }\n                    \
    \    }\n                        if (isPrime) {\n                            \"\
    YES\"\n                        } else {\n                            \"NO\"\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }", "        val (start1, end1) = interval1\n        val (start2,\
    \ end2) = interval2\n        if (start1 > end1 || start2 > end2) return \"NO\"\
    \n        if (start1 > end2 || start2 > end1) return \"NO\"\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        val length\
    \ = end - start + 1\n        if (length <= 0) return \"NO\"\n        if (length\
    \ == 1) return \"YES\"\n        if (length == 2) return \"NO\"\n        if (length\
    \ % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        if (start1 > end1 || start2 > end2) return \"NO\"\n        val start\
    \ = max(start1, start2)\n        val end = min(end1, end2)\n        if (start\
    \ > end) return \"NO\"\n        val length = end - start + 1\n        if (length\
    \ == 1) return \"NO\"\n        if (length == 2) return \"YES\"\n        if (length\
    \ % 2 == 0) return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n\
    \            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val (start1, end1) = interval1\n        val (start2, end2) = interval2\n\
    \        val start = max(start1, start2)\n        val end = min(end1, end2)\n\
    \        if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length == 1) return \"NO\"\n        if (length == 2) return \"YES\"\
    \n        for (i <- 2l until length) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        if (isPrime(end\
    \ - start + 1)) return \"YES\"\n        \"NO\"", "        val (start1, end1) =\
    \ interval1\n        val (start2, end2) = interval2\n        val start = max(start1,\
    \ start2)\n        val end = min(end1, end2)\n        if (start > end) return\
    \ \"NO\"\n        val length = end - start + 1\n        if (length == 1) return\
    \ \"NO\"\n        if (length == 2) return \"YES\"\n        if (length % 2 == 0)\
    \ return \"NO\"\n        for (i <- 3 to sqrt(length).toInt by 2) {\n         \
    \   if (length % i == 0) return \"NO\"\n        }\n        \"YES\"", "       \
    \ val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) {\n            \"NO\"\n        } else\
    \ {\n            val length = end - start + 1\n            if (length == 1) {\n\
    \                \"NO\"\n            } else {\n                if (length == 2)\
    \ {\n                    \"YES\"\n                } else {\n                 \
    \   if (length % 2 == 0) {\n                        \"NO\"\n                 \
    \   } else {\n                        var isPrime = true\n                   \
    \     for (i <- 3 to sqrt(length).toInt by 2) {\n                            if\
    \ (length % i == 0) {\n                                isPrime = false\n     \
    \                       }\n                        }\n                       \
    \ if (isPrime) {\n                            \"YES\"\n                      \
    \  } else {\n                            \"NO\"\n                        }\n \
    \                   }\n                }\n            }\n        }", "       \
    \ val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) return \"NO\"\n        val length =\
    \ end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        val length\
    \ = end - start + 1\n        if (length == 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        if (start1 > end1 || start2 >\
    \ end2) return \"NO\"\n        val start = max(start1, start2)\n        val end\
    \ = min(end1, end2)\n        if (start > end) return \"NO\"\n        if (start\
    \ == end) return \"YES\"\n        val length = end - start + 1\n        if (length\
    \ == 2) return \"YES\"\n        if (length % 2 == 0) return \"NO\"\n        for\
    \ (i <- 3 to sqrt(length).toInt by 2) {\n            if (length % i == 0) return\
    \ \"NO\"\n        }\n        \"YES\"", "        val (start1, end1) = interval1\n\
    \        val (start2, end2) = interval2\n        val start = max(start1, start2)\n\
    \        val end = min(end1, end2)\n        if (start > end) return \"NO\"\n \
    \       val length = end - start + 1\n        if (length == 1) return \"NO\"\n\
    \        if (length == 2) return \"YES\"\n        for (i <- 2 to sqrt(length).toInt)\
    \ {\n            if (length % i == 0) return \"NO\"\n        }\n        \"YES\"",
  "        val start = max(interval1._1, interval2._1)\n        val end = min(interval1._2,\
    \ interval2._2)\n        if (start > end) return \"NO\"\n        val length =\
    \ end - start + 1\n        if (length <= 1) return \"NO\"\n        if (length\
    \ == 2) return \"YES\"\n        for (i <- 2 until length) {\n            if (length\
    \ % i == 0) return \"NO\"\n        }\n        \"YES\""]
stop_tokens:
- "\n    }\n"

name: HumanEval_90_next_smallest
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a list of integers.\n    // Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n    // Return None if there\
  \ is no such element.\n    // >>> nextSmallest((List[Long](1l.toLong, 2l.toLong,\
  \ 3l.toLong, 4l.toLong, 5l.toLong)))\n    // 2l\n    // >>> nextSmallest((List[Long](5l.toLong,\
  \ 1l.toLong, 4l.toLong, 3l.toLong, 2l.toLong)))\n    // 2l\n    // >>> nextSmallest((List[Long]()))\n\
  \    // None\n    // >>> nextSmallest((List[Long](1l.toLong, 1l.toLong)))\n    //\
  \ None\n    def nextSmallest(lst : List[Long]) : Option[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(nextSmallest((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))).equals(2l));\n    assert(nextSmallest((List[Long](5l.toLong,\
  \ 1l.toLong, 4l.toLong, 3l.toLong, 2l.toLong))).equals(2l));\n    assert(nextSmallest((List[Long]())).equals(None));\n\
  \    assert(nextSmallest((List[Long](1l.toLong, 1l.toLong))).equals(None));\n  \
  \  assert(nextSmallest((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 0l.toLong))).equals(1l));\n\
  \    assert(nextSmallest((List[Long](1l.toLong, 1l.toLong))).equals(None));\n  \
  \  assert(nextSmallest((List[Long](-35l.toLong, 34l.toLong, 12l.toLong, -45l.toLong))).equals(-35l));\n\
  \    }\n\n}\n"
completions: ["        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            }\n            else if (lst(i) < min2) {\n   \
    \             min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min == min2) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                min2 = min\n                min =\
    \ lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            if (lst(i) < min) {\n                min2 =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        val sorted = lst.sorted\n        var prev = sorted(0)\n      \
    \  for (i <- 1 until sorted.length) {\n            if (sorted(i) != prev) return\
    \ Some(sorted(i))\n            prev = sorted(i)\n        }\n        None", " \
    \       if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     }\n            else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            if (lst(i) < min) {\n                min2 =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            min = lst(1)\n            min2 = lst(0)\n        }\n  \
    \      for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ return Some(min2)", "        if (lst.length < 2) return None\n        val sorted\
    \ = lst.sorted\n        var second = Long.MaxValue\n        for (i <- 0 until\
    \ sorted.length - 1) {\n            if (sorted(i) != sorted(i + 1)) {\n      \
    \          second = sorted(i + 1)\n                break\n            }\n    \
    \    }\n        if (second == Long.MaxValue) return None\n        return Some(second)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min2 < min) {\n            val tmp = min\n      \
    \      min = min2\n            min2 = tmp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        Some(min2)", "  \
    \      if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                min2 = min\n                min =\
    \ lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val min = lst.min\n            val min2 = lst.filter(_ != min).min\n\
    \            Some(min2)\n        }", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2)\
    \ {\n            val temp = min\n            min = min2\n            min2 = temp\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     }\n            else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) None\n        else {\n           \
    \ val sorted = lst.sorted\n            if (sorted(0) == sorted(1)) None\n    \
    \        else Some(sorted(1))\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var secondMin = lst(1)\n        if (min\
    \ > secondMin) {\n            val temp = min\n            min = secondMin\n  \
    \          secondMin = temp\n        }\n        for (i <- 2 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                secondMin = min\n      \
    \          min = lst(i)\n            } else if (lst(i) < secondMin) {\n      \
    \          secondMin = lst(i)\n            }\n        }\n        if (min == secondMin)\
    \ return None\n        return Some(secondMin)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            val tmp = min\n            min = min2\n            min2\
    \ = tmp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min == min2) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     }\n            else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min2 < min) {\n            min = min2\n\
    \            min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        if (min2 < min) {\n   \
    \         val temp = min\n            min = min2\n            min2 = temp\n  \
    \      }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min)\
    \ {\n                min2 = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (i <- 0 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == Long.MaxValue)\
    \ None else Some(min2)", "        if (lst.size < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n           \
    \ min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2 until\
    \ lst.size) {\n            if (lst(i) < min) {\n                min2 = min\n \
    \               min = lst(i)\n            } else if (lst(i) < min2) {\n      \
    \          min2 = lst(i)\n            }\n        }\n        if (min == min2) return\
    \ None\n        return Some(min2)", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var secondMin = lst(1)\n        if (min > secondMin)\
    \ {\n            val temp = min\n            min = secondMin\n            secondMin\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                secondMin = min\n                min = lst(i)\n  \
    \          } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n\
    \            }\n        }\n        return Some(secondMin)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n      \
    \          min2 = min\n                min = lst(i)\n            }\n         \
    \   else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min == min2) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n\
    \            min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min == min2) return None\n \
    \       return Some(min2)", "        if (lst.size < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            }\n            else if (lst(i) < min2) {\n   \
    \             min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        val sorted = lst.sorted\n        if (sorted(0) == sorted(1)) return\
    \ None\n        return Some(sorted(1))", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            }\n            else if (lst(i) < min2)\
    \ {\n                min2 = lst(i)\n            }\n        }\n        if (min2\
    \ == min) return None\n        return Some(min2)", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var secondMin = lst(1)\n    \
    \    for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n      \
    \          secondMin = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == min) return None\n        return Some(secondMin)",
  "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                min2 = min\n                min =\
    \ lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            if (lst(i) < min) {\n                min2 =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     }\n            else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        var min = Long.MaxValue\n        var min2 = Long.MaxValue\n\
    \        for (i <- lst) {\n            if (i < min) {\n                min2 =\
    \ min\n                min = i\n            } else if (i < min2) {\n         \
    \       min2 = i\n            }\n        }\n        if (min2 == Long.MaxValue)\
    \ None else Some(min2)", "        if (lst.length < 2) return None\n        val\
    \ sorted = lst.sorted\n        var min = sorted(0)\n        var secondMin = sorted(1)\n\
    \        for (i <- 1 until sorted.length) {\n            if (sorted(i) != min)\
    \ {\n                secondMin = sorted(i)\n                break\n          \
    \  }\n        }\n        if (secondMin == min) return None\n        return Some(secondMin)",
  "        if (lst.length < 2) None\n        else {\n            var min = lst(0)\n\
    \            var min2 = lst(1)\n            for (i <- 1 until lst.length) {\n\
    \                if (lst(i) < min) {\n                    min2 = min\n       \
    \             min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) min2 = lst(i)\n            }\n            if (min2 == min) None\n  \
    \          else Some(min2)\n        }", "        if (lst.length == 0) return None\n\
    \        else if (lst.length == 1) return None\n        else {\n            var\
    \ min = lst(0)\n            var min2 = lst(1)\n            for (i <- 1 until lst.length)\
    \ {\n                if (lst(i) < min) {\n                    min2 = min\n   \
    \                 min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) {\n                    min2 = lst(i)\n                }\n          \
    \  }\n            if (min2 == min) return None\n            else return Some(min2)\n\
    \        }", "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n\
    \        var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n \
    \           val x = lst(i)\n            if (x < min) {\n                min2 =\
    \ min\n                min = x\n            } else if (x < min2) {\n         \
    \       min2 = x\n            }\n        }\n        if (min2 == Long.MaxValue)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            val min = sorted(0)\n\
    \            val second = sorted(1)\n            if (min == second) None\n   \
    \         else Some(second)\n        }", "        if (lst.length < 2) None\n \
    \       else {\n            val sorted = lst.sorted\n            val min = sorted(0)\n\
    \            val min2 = sorted(1)\n            if (min == min2) None\n       \
    \     else Some(min2)\n        }", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            }\n            else if (lst(i) < min2)\
    \ {\n                min2 = lst(i)\n            }\n        }\n        if (min2\
    \ == min) return None\n        return Some(min2)", "        if (lst.length < 2)\
    \ return None\n        var min = Long.MaxValue\n        var secondMin = Long.MaxValue\n\
    \        for (i <- 0 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              secondMin = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == Long.MaxValue) return None\n        Some(secondMin)",
  "        if (lst.length < 2) None\n        else {\n            var min = lst(0)\n\
    \            var min2 = lst(1)\n            for (i <- 1 until lst.length) {\n\
    \                if (lst(i) < min) {\n                    min2 = min\n       \
    \             min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) min2 = lst(i)\n            }\n            if (min == min2) None\n  \
    \          else Some(min2)\n        }", "        if (lst.size < 2) return None\n\
    \        val sorted = lst.sorted\n        var min = sorted(0)\n        for (i\
    \ <- 1 until sorted.size) {\n            if (sorted(i) != min) return Some(sorted(i))\n\
    \        }\n        None", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            if (lst(i) < min) {\n                min2 =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min == min2)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            }\n            else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min2 == min) return None\n        return Some(min2)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    if (min > min2) {\n            val tmp = min\n            min = min2\n  \
    \          min2 = tmp\n        }\n        for (i <- 2 until lst.length) {\n  \
    \          if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var secondMin = lst(1)\n        for (i <- 1 until lst.length) {\n   \
    \         if (lst(i) < min) {\n                secondMin = min\n             \
    \   min = lst(i)\n            } else if (lst(i) < secondMin) {\n             \
    \   secondMin = lst(i)\n            }\n        }\n        if (secondMin == min)\
    \ return None\n        return Some(secondMin)", "        if (lst.length < 2) None\n\
    \        else {\n            var min = lst(0)\n            var min2 = lst(1)\n\
    \            if (min > min2) {\n                min = lst(1)\n               \
    \ min2 = lst(0)\n            }\n            for (i <- 2 until lst.length) {\n\
    \                if (lst(i) < min) {\n                    min2 = min\n       \
    \             min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) {\n                    min2 = lst(i)\n                }\n          \
    \  }\n            Some(min2)\n        }", "        if (lst.length < 2) return\
    \ None\n        val sorted = lst.sorted\n        var prev = sorted(0)\n      \
    \  for (i <- 1 until sorted.length) {\n            if (sorted(i) != prev) return\
    \ Some(sorted(i))\n            prev = sorted(i)\n        }\n        None", " \
    \       if (lst.length < 2) return None\n        var min = Long.MaxValue\n   \
    \     var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            var min = sorted(0)\n      \
    \      var min2 = sorted(1)\n            for (i <- 1 until sorted.length) {\n\
    \                if (sorted(i) != min) {\n                    min2 = sorted(i)\n\
    \                    break\n                }\n            }\n            if (min2\
    \ == min) None\n            else Some(min2)\n        }", "        if (lst.length\
    \ < 2) None\n        else {\n            val sorted = lst.sorted\n           \
    \ if (sorted(0) == sorted(1)) None\n            else Some(sorted(1))\n       \
    \ }", "        if (lst.size < 2) None\n        else {\n            var min = Long.MaxValue\n\
    \            var secondMin = Long.MaxValue\n            for (i <- 0 until lst.size)\
    \ {\n                if (lst(i) < min) {\n                    secondMin = min\n\
    \                    min = lst(i)\n                }\n                else if\
    \ (lst(i) < secondMin) {\n                    secondMin = lst(i)\n           \
    \     }\n            }\n            if (secondMin == Long.MaxValue) None\n   \
    \         else Some(secondMin)\n        }", "        if (lst.length < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            var min = sorted(0)\n\
    \            var min2 = sorted(1)\n            for (i <- 1 until sorted.length)\
    \ {\n                if (sorted(i) > min) {\n                    min2 = sorted(i)\n\
    \                    break\n                }\n            }\n            if (min2\
    \ == min) None\n            else Some(min2)\n        }", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    if (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min2 < min) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length <= 1) None\n\
    \        else {\n            val sorted = lst.sorted\n            val min = sorted.head\n\
    \            val second = sorted.tail.head\n            if (min == second) None\n\
    \            else Some(second)\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            }\n            else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min2 == min) return None\n        return Some(min2)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n      \
    \          min2 = min\n                min = lst(i)\n            }\n         \
    \   else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            val min = sorted(0)\n            val min2 = sorted(1)\n         \
    \   if (min == min2) None\n            else Some(min2)\n        }", "        val\
    \ sorted = lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min2 < min) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min2\
    \ < min) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min == min2) return None\n        return Some(min2)",
  "        if (lst.length < 2) None\n        else {\n            var min = Long.MaxValue\n\
    \            var min2 = Long.MaxValue\n            for (i <- 0 until lst.length)\
    \ {\n                if (lst(i) < min) {\n                    min2 = min\n   \
    \                 min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) min2 = lst(i)\n            }\n            if (min2 == Long.MaxValue)\
    \ None\n            else Some(min2)\n        }", "        if (lst.size == 0) return\
    \ None\n        var min = lst(0)\n        var min2 = min\n        for (i <- 1\
    \ until lst.size) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.size < 2) None\n \
    \       else {\n            val sorted = lst.sorted\n            val distinct\
    \ = sorted.distinct\n            if (distinct.size < 2) None\n            else\
    \ Some(distinct(1))\n        }", "        if (lst.length < 2) None\n        else\
    \ {\n            val sorted = lst.sorted\n            var min = sorted(0)\n  \
    \          var min2 = sorted(1)\n            for (i <- 1 until sorted.length)\
    \ {\n                if (sorted(i) > min) {\n                    min2 = sorted(i)\n\
    \                    break\n                }\n            }\n            if (min2\
    \ == min) None\n            else Some(min2)\n        }", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    if (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        return Some(min2)", "        if (lst.size < 2) None\n    \
    \    else {\n            val sorted = lst.sorted\n            val min = sorted.head\n\
    \            val min2 = sorted.tail.head\n            if (min == min2) None\n\
    \            else Some(min2)\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min2\
    \ < min) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            val min = sorted(0)\n            val second = sorted(1)\n       \
    \     if (min == second) None\n            else Some(second)\n        }", "  \
    \      if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            if (sorted(0) == sorted(1)) None\n            else Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min > min2) {\n            val temp =\
    \ min\n            min = min2\n            min2 = temp\n        }\n        for\
    \ (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   min2 = min\n                min = lst(i)\n            } else if (lst(i) <\
    \ min2) {\n                min2 = lst(i)\n            }\n        }\n        if\
    \ (min == min2) return None\n        Some(min2)", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var min2 = lst(1)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   min2 = min\n                min = lst(i)\n            }\n            else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        if (min2 == min) return None\n        return Some(min2)", "     \
    \   if (lst.length < 2) return None\n        var min = lst(0)\n        var min2\
    \ = lst(1)\n        if (min > min2) {\n            min = lst(1)\n            min2\
    \ = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n            if\
    \ (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                min2 = min\n                min =\
    \ lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            val min = sorted(0)\n      \
    \      val second = sorted(1)\n            if (min == second) None\n         \
    \   else Some(second)\n        }", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            }\n            else if (lst(i) < min2)\
    \ {\n                min2 = lst(i)\n            }\n        }\n        if (min2\
    \ == min) return None\n        return Some(min2)", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var min2 = lst(1)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   min2 = min\n                min = lst(i)\n            }\n            else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        if (min2 == min) return None\n        return Some(min2)", "     \
    \   if (lst.length == 0) None\n        else {\n            val sorted = lst.sorted\n\
    \            if (sorted(0) == sorted(1)) None\n            else Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var secondMin = lst(1)\n        if (min > secondMin) {\n            min\
    \ = lst(1)\n            secondMin = lst(0)\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                secondMin =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < secondMin)\
    \ {\n                secondMin = lst(i)\n            }\n        }\n        Some(secondMin)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        val sorted = lst.sorted\n        if (sorted.size < 2)\
    \ return None\n        return Some(sorted(1))", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            min = lst(1)\n            min2 = lst(0)\n        }\n  \
    \      for (i <- 2 until lst.length) {\n            val x = lst(i)\n         \
    \   if (x < min) {\n                min2 = min\n                min = x\n    \
    \        } else if (x < min2) {\n                min2 = x\n            }\n   \
    \     }\n        if (min2 == min) return None\n        return Some(min2)", " \
    \       if (lst.length < 2) None\n        else {\n            var min = lst(0)\n\
    \            var min2 = lst(1)\n            for (i <- 1 until lst.length) {\n\
    \                if (lst(i) < min) {\n                    min2 = min\n       \
    \             min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) min2 = lst(i)\n            }\n            if (min2 == min) None\n  \
    \          else Some(min2)\n        }", "        if (lst.length < 2) None\n  \
    \      else {\n            val sorted = lst.sorted\n            val unique = sorted.distinct\n\
    \            if (unique.length < 2) None\n            else Some(unique(1))\n \
    \       }", "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n\
    \        var secondMin = Long.MaxValue\n        for (x <- lst) {\n           \
    \ if (x < min) {\n                secondMin = min\n                min = x\n \
    \           } else if (x < secondMin) {\n                secondMin = x\n     \
    \       }\n        }\n        if (secondMin == Long.MaxValue) return None\n  \
    \      return Some(secondMin)", "        if (lst.length < 2) return None\n   \
    \     var min = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (i\
    \ <- 0 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ Long.MaxValue) return None\n        return Some(min2)", "        if (lst.length\
    \ < 2) return None\n        val sorted = lst.sorted\n        var prev = sorted(0)\n\
    \        for (i <- 1 until sorted.length) {\n            if (sorted(i) > prev)\
    \ return Some(sorted(i))\n            prev = sorted(i)\n        }\n        None",
  "        if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            val min = sorted(0)\n            val second = sorted(1)\n       \
    \     if (min == second) None\n            else Some(second)\n        }", "  \
    \      if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) None\n        else {\n           \
    \ val sorted = lst.sorted\n            val min = sorted(0)\n            val second\
    \ = sorted(1)\n            if (min == second) None\n            else Some(second)\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            }\n            else if (lst(i) < min2) {\n   \
    \             min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var secondMin = lst(1)\n        if (secondMin\
    \ < min) {\n            min = secondMin\n            secondMin = lst(0)\n    \
    \    }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min)\
    \ {\n                secondMin = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n   \
    \         }\n        }\n        Some(secondMin)", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var min2 = lst(1)\n        if\
    \ (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n      \
    \  }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n\
    \                min2 = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        if (min2 == min) return None\n        return Some(min2)", "     \
    \   if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            val unique = sorted.distinct\n            if (unique.length < 2)\
    \ None\n            else Some(unique(1))\n        }", "        if (lst.size <\
    \ 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n      \
    \  if (min > min2) {\n            val temp = min\n            min = min2\n   \
    \         min2 = temp\n        }\n        for (i <- 2 until lst.size) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n\
    \        var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n \
    \           if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var secondMin = lst(1)\n        if (secondMin < min) {\n\
    \            val temp = min\n            min = secondMin\n            secondMin\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                secondMin = min\n                min = lst(i)\n  \
    \          } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n\
    \            }\n        }\n        if (min == secondMin) return None\n       \
    \ return Some(secondMin)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var secondMin = lst(1)\n        if (secondMin < min) {\n\
    \            val temp = min\n            min = secondMin\n            secondMin\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                secondMin = min\n                min = lst(i)\n  \
    \          } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n\
    \            }\n        }\n        if (min == secondMin) return None\n       \
    \ return Some(secondMin)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min2 < min) {\n       \
    \     val tmp = min\n            min = min2\n            min2 = tmp\n        }\n\
    \        for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        Some(min2)", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            }\n            else if (lst(i) < min2) {\n       \
    \         min2 = lst(i)\n            }\n        }\n        if (min2 == min) return\
    \ None\n        return Some(min2)", "        if (lst.length < 2) return None\n\
    \        var min = Long.MaxValue\n        var secondMin = Long.MaxValue\n    \
    \    for (i <- 0 until lst.length) {\n            if (lst(i) < min) {\n      \
    \          secondMin = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == Long.MaxValue) return None\n        return\
    \ Some(secondMin)", "        if (lst.size < 2) return None\n        var min =\
    \ lst(0)\n        var secondMin = lst(1)\n        if (min > secondMin) {\n   \
    \         val temp = min\n            min = secondMin\n            secondMin =\
    \ temp\n        }\n        for (i <- 2 until lst.size) {\n            if (lst(i)\
    \ < min) {\n                secondMin = min\n                min = lst(i)\n  \
    \          } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n\
    \            }\n        }\n        if (min == secondMin) return None\n       \
    \ return Some(secondMin)", "        if (lst.length < 2) return None\n        val\
    \ sorted = lst.sorted\n        if (sorted(0) == sorted(1)) return None\n     \
    \   return Some(sorted(1))", "        if (lst.length < 2) return None\n      \
    \  var min = lst(0)\n        var min2 = lst(1)\n        if (min2 < min) {\n  \
    \          min = min2\n            min2 = lst(0)\n        }\n        for (i <-\
    \ 2 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        val sorted = lst.sorted\n        for (i <- 1 until sorted.length)\
    \ {\n            if (sorted(i) != sorted(i - 1)) return Some(sorted(i))\n    \
    \    }\n        None", "        if (lst.length < 2) None\n        else {\n   \
    \         var min = lst(0)\n            var min2 = lst(1)\n            for (i\
    \ <- 1 until lst.length) {\n                if (lst(i) < min) {\n            \
    \        min2 = min\n                    min = lst(i)\n                }\n   \
    \             else if (lst(i) < min2) min2 = lst(i)\n            }\n         \
    \   if (min2 == min) None\n            else Some(min2)\n        }", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        if (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min == min2) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     }\n            else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min1 = lst(0)\n\
    \        var min2 = lst(1)\n        if (min1 > min2) {\n            val temp =\
    \ min1\n            min1 = min2\n            min2 = temp\n        }\n        for\
    \ (i <- 2 until lst.length) {\n            if (lst(i) < min1) {\n            \
    \    min2 = min1\n                min1 = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min1 == min2) return None\n        return Some(min2)", "        if (lst.size\
    \ < 2) None\n        else {\n            var min = lst(0)\n            var min2\
    \ = lst(1)\n            for (i <- 1 until lst.size) {\n                if (lst(i)\
    \ < min) {\n                    min2 = min\n                    min = lst(i)\n\
    \                }\n                else if (lst(i) < min2) min2 = lst(i)\n  \
    \          }\n            if (min2 == min) None\n            else Some(min2)\n\
    \        }", "        if (lst.length < 2) None\n        else {\n            val\
    \ sorted = lst.sorted\n            val unique = sorted.distinct\n            if\
    \ (unique.length < 2) None\n            else Some(unique(1))\n        }", "  \
    \      if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.size < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.size) {\n          \
    \  if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min2 < min) {\n       \
    \     val temp = min\n            min = min2\n            min2 = temp\n      \
    \  }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n\
    \                min2 = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min2 < min) {\n       \
    \     val temp = min\n            min = min2\n            min2 = temp\n      \
    \  }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n\
    \                min2 = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            val min = sorted(0)\n      \
    \      val second = sorted(1)\n            if (min == second) None\n         \
    \   else Some(second)\n        }", "        if (lst.length < 2) None\n       \
    \ else {\n            val min = lst.min\n            val min2 = lst.filter(_ !=\
    \ min).min\n            Some(min2)\n        }", "        if (lst.length == 0)\
    \ return None\n        var min = lst(0)\n        var secondMin = Long.MaxValue\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              secondMin = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == Long.MaxValue) return None\n        return\
    \ Some(secondMin)", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min2 < min) {\n           \
    \ val tmp = min\n            min = min2\n            min2 = tmp\n        }\n \
    \       for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n   \
    \             min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        Some(min2)", "        if (lst.length < 2) None\n        else {\n    \
    \        val sorted = lst.sorted\n            if (sorted(0) == sorted(1)) None\n\
    \            else Some(sorted(1))\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = Long.MaxValue\n        var min2 = Long.MaxValue\n  \
    \      for (i <- 0 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min2 == Long.MaxValue) return None\n        return Some(min2)", "      \
    \  if (lst.length < 2) return None\n        var min1 = lst(0)\n        var min2\
    \ = lst(1)\n        if (min1 > min2) {\n            val temp = min1\n        \
    \    min1 = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min1) {\n                min2 = min1\n\
    \                min1 = lst(i)\n            } else if (lst(i) < min2) {\n    \
    \            min2 = lst(i)\n            }\n        }\n        if (min1 == min2)\
    \ return None\n        Some(min2)", "        if (lst.size < 2) return None\n \
    \       var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n\
    \            val temp = min\n            min = min2\n            min2 = temp\n\
    \        }\n        for (i <- 2 until lst.size) {\n            if (lst(i) < min)\
    \ {\n                min2 = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        if (min == min2) return None\n        Some(min2)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var secondMin = Long.MaxValue\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              secondMin = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == Long.MaxValue) return None\n        return\
    \ Some(secondMin)", "        if (lst.length < 2) return None\n        var min\
    \ = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (i <- 0 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == Long.MaxValue)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            }\n            else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min2 == min) return None\n        return Some(min2)", "        if (lst.size\
    \ < 2) return None\n        var min = lst(0)\n        var nextMin = lst(1)\n \
    \       for (i <- 1 until lst.size) {\n            if (lst(i) < min) {\n     \
    \           nextMin = min\n                min = lst(i)\n            }\n     \
    \       else if (lst(i) < nextMin) {\n                nextMin = lst(i)\n     \
    \       }\n        }\n        if (min == nextMin) return None\n        return\
    \ Some(nextMin)", "        if (lst.length < 2) return None\n        val sorted\
    \ = lst.sorted\n        var min = sorted(0)\n        var min2 = sorted(1)\n  \
    \      for (i <- 1 until sorted.length) {\n            if (sorted(i) != min) {\n\
    \                min2 = sorted(i)\n                break\n            }\n    \
    \    }\n        if (min == min2) return None\n        return Some(min2)", "  \
    \      if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min == min2) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) None\n        else {\n           \
    \ val min = lst.min\n            val min2 = lst.filter(_ != min).min\n       \
    \     Some(min2)\n        }", "        if (lst.size < 2) None\n        else {\n\
    \            var min = lst(0)\n            var min2 = lst(1)\n            if (min\
    \ > min2) {\n                min = lst(1)\n                min2 = lst(0)\n   \
    \         }\n            for (i <- 2 until lst.size) {\n                if (lst(i)\
    \ < min) {\n                    min2 = min\n                    min = lst(i)\n\
    \                }\n                else if (lst(i) < min2) {\n              \
    \      min2 = lst(i)\n                }\n            }\n            Some(min2)\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var secondMin = Long.MaxValue\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                secondMin = min\n      \
    \          min = lst(i)\n            } else if (lst(i) < secondMin) {\n      \
    \          secondMin = lst(i)\n            }\n        }\n        if (secondMin\
    \ == Long.MaxValue) return None\n        return Some(secondMin)", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            }\n     \
    \       else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min == min2) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var secondMin = lst(1)\n        if (min > secondMin) {\n\
    \            min = lst(1)\n            secondMin = lst(0)\n        }\n       \
    \ for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n         \
    \       secondMin = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < secondMin) {\n                secondMin = lst(i)\n            }\n        }\n\
    \        return Some(secondMin)", "        if (lst.length < 2) None\n        else\
    \ {\n            val sorted = lst.sorted\n            val min = sorted(0)\n  \
    \          val second = sorted(1)\n            if (min == second) None\n     \
    \       else Some(second)\n        }", "        if (lst.size < 2) None\n     \
    \   else {\n            var min = lst(0)\n            var min2 = lst(1)\n    \
    \        if (min > min2) {\n                min = lst(1)\n                min2\
    \ = lst(0)\n            }\n            for (i <- 2 until lst.size) {\n       \
    \         if (lst(i) < min) {\n                    min2 = min\n              \
    \      min = lst(i)\n                }\n                else if (lst(i) < min2)\
    \ {\n                    min2 = lst(i)\n                }\n            }\n   \
    \         Some(min2)\n        }", "        if (lst.length < 2) None\n        else\
    \ {\n            val sorted = lst.sorted\n            if (sorted(0) == sorted(1))\
    \ None\n            else Some(sorted(1))\n        }", "        if (lst.length\
    \ < 2) None\n        else {\n            val sorted = lst.sorted\n           \
    \ if (sorted(0) == sorted(1)) None\n            else Some(sorted(1))\n       \
    \ }", "        if (lst.length < 2) return None\n        var min = lst(0)\n   \
    \     var secondMin = lst(1)\n        if (min > secondMin) {\n            val\
    \ temp = min\n            min = secondMin\n            secondMin = temp\n    \
    \    }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min)\
    \ {\n                secondMin = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n   \
    \         }\n        }\n        if (min == secondMin) return None\n        return\
    \ Some(secondMin)", "        if (lst.length < 2) return None\n        val sorted\
    \ = lst.sorted\n        var min = sorted(0)\n        for (i <- 1 until sorted.length)\
    \ {\n            if (sorted(i) != min) return Some(sorted(i))\n        }\n   \
    \     None", "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n\
    \        var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n \
    \           if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            val x = lst(i)\n            if (x < min) {\n\
    \                min2 = min\n                min = x\n            } else if (x\
    \ < min2) {\n                min2 = x\n            }\n        }\n        Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min2 < min) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length <= 1) return\
    \ None\n        var min = Long.MaxValue\n        var min2 = Long.MaxValue\n  \
    \      for (i <- 0 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min2 == Long.MaxValue) return None\n        return Some(min2)", "      \
    \  if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            val min = sorted(0)\n            val secondMin = sorted.filter(x\
    \ => x != min).min\n            Some(secondMin)\n        }", "        if (lst.length\
    \ < 2) None\n        else {\n            var min = lst(0)\n            var min2\
    \ = lst(1)\n            if (min2 < min) {\n                val temp = min\n  \
    \              min = min2\n                min2 = temp\n            }\n      \
    \      for (i <- 2 until lst.length) {\n                if (lst(i) < min) {\n\
    \                    min2 = min\n                    min = lst(i)\n          \
    \      }\n                else if (lst(i) < min2) {\n                    min2\
    \ = lst(i)\n                }\n            }\n            Some(min2)\n       \
    \ }", "        if (lst.length < 2) return None\n        var min = lst(0)\n   \
    \     var min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n\
    \            min = min2\n            min2 = temp\n        }\n        for (i <-\
    \ 2 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min2 < min) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var secondMin = lst(1)\n        if (min\
    \ > secondMin) {\n            min = lst(1)\n            secondMin = lst(0)\n \
    \       }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min)\
    \ {\n                secondMin = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n   \
    \         }\n        }\n        return Some(secondMin)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    if (min2 < min) {\n            val tmp = min\n            min = min2\n  \
    \          min2 = tmp\n        }\n        for (i <- 2 until lst.length) {\n  \
    \          if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        val sorted = lst.sorted\n        if (sorted.length < 2)\
    \ None\n        else Some(sorted(1))", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            }\n            else if (lst(i) < min2)\
    \ {\n                min2 = lst(i)\n            }\n        }\n        if (min2\
    \ == min) return None\n        return Some(min2)", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var secondMin = lst(1)\n    \
    \    if (min > secondMin) {\n            val temp = min\n            min = secondMin\n\
    \            secondMin = temp\n        }\n        for (i <- 2 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                secondMin = min\n      \
    \          min = lst(i)\n            } else if (lst(i) < secondMin) {\n      \
    \          secondMin = lst(i)\n            }\n        }\n        if (min == secondMin)\
    \ None else Some(secondMin)", "        if (lst.length < 2) None\n        else\
    \ {\n            val sorted = lst.sorted\n            var min = sorted(0)\n  \
    \          var min2 = sorted(1)\n            for (i <- 1 until sorted.length)\
    \ {\n                if (sorted(i) != min) {\n                    min2 = sorted(i)\n\
    \                    break\n                }\n            }\n            if (min2\
    \ == min) None\n            else Some(min2)\n        }", "        if (lst.length\
    \ < 2) None\n        else {\n            val sorted = lst.sorted\n           \
    \ var min = sorted(0)\n            var min2 = sorted(1)\n            for (i <-\
    \ 1 until sorted.length) {\n                if (sorted(i) > min) {\n         \
    \           min2 = sorted(i)\n                    break\n                }\n \
    \           }\n            if (min2 == min) None\n            else Some(min2)\n\
    \        }", "        if (lst.length == 0) return None\n        var min = lst(0)\n\
    \        var min2 = Long.MaxValue\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var secondMin = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                secondMin = min\n      \
    \          min = lst(i)\n            } else if (lst(i) < secondMin) {\n      \
    \          secondMin = lst(i)\n            }\n        }\n        if (secondMin\
    \ == min) return None\n        return Some(secondMin)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var secondMin = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              secondMin = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == min) return None\n        return Some(secondMin)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) None\n        else {\n      \
    \      val sorted = lst.sorted\n            val min = sorted(0)\n            val\
    \ second = sorted(1)\n            if (min == second) None\n            else Some(second)\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min > min2) {\n            val tmp = min\n\
    \            min = min2\n            min2 = tmp\n        }\n        for (i <-\
    \ 2 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min == min2)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min2\
    \ < min) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var secondMin = lst(1)\n        if (secondMin\
    \ < min) {\n            val temp = min\n            min = secondMin\n        \
    \    secondMin = temp\n        }\n        for (i <- 2 until lst.length) {\n  \
    \          if (lst(i) < min) {\n                secondMin = min\n            \
    \    min = lst(i)\n            } else if (lst(i) < secondMin) {\n            \
    \    secondMin = lst(i)\n            }\n        }\n        return Some(secondMin)",
  "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                min2 = min\n                min =\
    \ lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.size < 2) None\n        else {\n \
    \           val sorted = lst.sorted\n            var min = sorted(0)\n       \
    \     var min2 = Long.MaxValue\n            for (i <- 1 until sorted.size) {\n\
    \                if (sorted(i) > min) {\n                    min2 = sorted(i)\n\
    \                    break\n                }\n            }\n            if (min2\
    \ == Long.MaxValue) None\n            else Some(min2)\n        }", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            }\n     \
    \       else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) None\n        else {\n      \
    \      val min = lst.min\n            val lst2 = lst.filter(x => x != min)\n \
    \           if (lst2.length == 0) None\n            else Some(lst2.min)\n    \
    \    }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            if (lst(i) < min) {\n                min2 =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            min = lst(1)\n            min2 = lst(0)\n        }\n  \
    \      for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min == min2) return None\n        return Some(min2)", "        if (lst.length\
    \ < 2) None\n        else {\n            val sorted = lst.sorted\n           \
    \ val min = sorted(0)\n            val secondMin = sorted.filter(x => x > min).min\n\
    \            if (secondMin == min) None\n            else Some(secondMin)\n  \
    \      }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            }\n            else if (lst(i) < min2) {\n   \
    \             min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.size == 0) return\
    \ None\n        var min = lst(0)\n        var secondMin = Long.MaxValue\n    \
    \    for (i <- 1 until lst.size) {\n            if (lst(i) < min) {\n        \
    \        secondMin = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < secondMin) {\n                secondMin = lst(i)\n            }\n\
    \        }\n        if (secondMin == Long.MaxValue) return None\n        return\
    \ Some(secondMin)", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            }\n            else if (lst(i) < min2) {\n       \
    \         min2 = lst(i)\n            }\n        }\n        if (min2 == min) return\
    \ None\n        return Some(min2)", "        if (lst.length < 2) return None\n\
    \        val sorted = lst.sorted\n        val min = sorted(0)\n        val second\
    \ = sorted(1)\n        if (min == second) return None\n        Some(second)",
  "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- 0 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                min2 = min\n                min =\
    \ lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2\
    \ until lst.length) {\n            if (lst(i) < min) {\n                min2 =\
    \ min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length == 0)\
    \ return None\n        if (lst.length == 1) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            val min = sorted(0)\n      \
    \      val second = sorted(1)\n            if (min == second) None\n         \
    \   else Some(second)\n        }", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            }\n            else if (lst(i) < min2)\
    \ {\n                min2 = lst(i)\n            }\n        }\n        if (min2\
    \ == min) return None\n        return Some(min2)", "        if (lst.size < 2)\
    \ None\n        else {\n            val sorted = lst.sorted\n            if (sorted(0)\
    \ == sorted(1)) None\n            else Some(sorted(1))\n        }", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var secondMin\
    \ = lst(1)\n        if (min > secondMin) {\n            val temp = min\n     \
    \       min = secondMin\n            secondMin = temp\n        }\n        for\
    \ (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   secondMin = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < secondMin) {\n                secondMin = lst(i)\n            }\n        }\n\
    \        return Some(secondMin)", "        if (lst.size < 2) return None\n   \
    \     val sorted = lst.sorted\n        var min = sorted(0)\n        var min2 =\
    \ sorted(1)\n        for (i <- 1 until sorted.size) {\n            if (sorted(i)\
    \ != min) {\n                min2 = sorted(i)\n                break\n       \
    \     }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ secondMin = lst(1)\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) < min) {\n                secondMin = min\n                min = lst(i)\n\
    \            } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n\
    \            }\n        }\n        if (secondMin == min) return None\n       \
    \ return Some(secondMin)", "        if (lst.size <= 1) return None\n        var\
    \ min = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (i <- 0 until\
    \ lst.size) {\n            if (lst(i) < min) {\n                min2 = min\n \
    \               min = lst(i)\n            } else if (lst(i) < min2) {\n      \
    \          min2 = lst(i)\n            }\n        }\n        if (min2 == Long.MaxValue)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var secondMin = lst(1)\n        if (min\
    \ > secondMin) {\n            min = lst(1)\n            secondMin = lst(0)\n \
    \       }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min)\
    \ {\n                secondMin = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n   \
    \         }\n        }\n        if (min == secondMin) None else Some(secondMin)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     }\n            else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length <= 1) None\n        else {\n          \
    \  val sorted = lst.sorted\n            val unique = sorted.distinct\n       \
    \     if (unique.length <= 1) None\n            else Some(unique(1))\n       \
    \ }", "        if (lst.length < 2) return None\n        var min = lst(0)\n   \
    \     var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n           \
    \ if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            }\n            else if (lst(i) < min2) {\n                min2 =\
    \ lst(i)\n            }\n        }\n        if (min2 == min) return None\n   \
    \     return Some(min2)"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_39_prime_fib
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while(i <= n) {\n           \
    \ fibs += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n       \
    \ return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo3upytu0.scala:30)\n\tat Problem.main(tmpo3upytu0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798949
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var p = 0l\n        while (i < n) {\n\
    \            p = fib.next\n            if (primes.contains(p)) i += 1\n      \
    \  }\n        return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var count = 2l\n        while (count < n) {\n            i = j\n       \
    \     j = k\n            k = i + j\n            if (isPrime(k)) count += 1\n \
    \       }\n        return k\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxm_48sz8.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var count = 0l\n        var i = 1l\n        while (count\
    \ < n) {\n            if (isPrime(fib(i))) count += 1\n            i += 1\n  \
    \      }\n        return fib(i - 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0801y20z.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0801y20z.scala:19:24 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m  \
    \                      Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0801y20z.scala:22:15 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        \e[33mreturn\e[0m fib(i - \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m               ^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var i = 5l\n        while (i\
    \ < n) {\n            a = b\n            b = c\n            c = a + b\n      \
    \      i += 1\n        }\n        return c\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps3adcu8v.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var fib = 1l\n        var fib_prev = 1l\n        while (i < n) {\n  \
    \          val fib_next = fib + fib_prev\n            fib_prev = fib\n       \
    \     fib = fib_next\n            if (primes.contains(fib)) i += 1\n        }\n\
    \        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph9ddkofg.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else if (b.isPrime) primeFib(n,\
    \ b, a + b, i + 1)\n            else primeFib(n, b, a + b, i)\n        }\n   \
    \     primeFib(n, 2, 3, 1)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp13mjxzqr.scala:18:23 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (b.isPrime)\
    \ primeFib(n, b, a + b, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value isPrime is\
    \ not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFibRec(n : Long, a : Long, b : Long, c : Long)\
    \ : Long = {\n            if (n == 1) a\n            else if (n == 2) b\n    \
    \        else if (n == 3) c\n            else {\n                val d = a + b\
    \ + c\n                if (isPrime(d)) primeFibRec(n - 1, b, c, d)\n         \
    \       else primeFibRec(n, b, c, d)\n            }\n        }\n        primeFibRec(n,\
    \ 2, 3, 5)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzy6s4k3.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mif\e[0m (isPrime(d)) primeFibRec(n\
    \ - \e[31m1\e[0m, b, c, d)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  var fib = fibs(i - 1) + fibs(i - 2);\n            if (fib.isPrime) {\n    \
    \            fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpihlunxjb.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (fib.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 0l\n\
    \        var j = 1l\n        var k = 0l\n        var count = 0l\n        while\
    \ (count < n) {\n            k = i + j\n            i = j\n            j = k\n\
    \            if (primes.isPrime(k)) count += 1\n        }\n        k\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhb7rix4.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 1l;\n\
    \        fibs += 2l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        var j = fibs.length - 1;\n        while (j >= 0) {\n        \
    \    if (isPrime(fibs(j.toInt))) {\n                return fibs(j.toInt);\n  \
    \          }\n            j -= 1;\n        }\n        return 0l;\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0f9swuzb.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m (isPrime(fibs(j.toInt))) {\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt)\n        fib(0) = 2\n\
    \        fib(1) = 3\n        var i = 2\n        while (i < n) {\n            fib(i)\
    \ = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n        return fib(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length\
    \ 1\n\tat Problem$.primeFib(tmpjgozv_2k.scala:18)\n\tat Problem$.main(tmpjgozv_2k.scala:27)\n\
    \tat Problem.main(tmpjgozv_2k.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var count = 1l\n        while (count < n) {\n            if (isPrime(k))\
    \ {\n                count += 1\n            }\n            val t = k\n      \
    \      k = i + j\n            i = j\n            j = t\n        }\n        k\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_62cx7pf.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n\
    \        fibs += 3\n        var i = 2\n        while (i <= n) {\n            val\
    \ next = fibs(i - 1) + fibs(i - 2)\n            if (isPrime(next)) {\n       \
    \         fibs += next\n                i += 1\n            }\n        }\n   \
    \     fibs(n.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkf6tfudx.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var f3 : Long = 5l\n        var i : Long = 3l\n        while (i < n) {\n   \
    \         f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n           \
    \ if (f3.isPrime) {\n                i += 1\n            }\n        }\n      \
    \  return f3\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1z0si6rg.scala:24:19 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (f3.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 2l\n        var k = 3l\n        var count = 1l\n        while\
    \ (count < n) {\n            i = j\n            j = k\n            k = i + j\n\
    \            if (primes.contains(k)) count += 1\n        }\n        k\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1arvjys0.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var f3 : Long = 5l\n        var i : Long = 3l\n        while(i < n) {\n    \
    \        f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n            while(f3\
    \ % 2 == 0) {\n                f3 = f1 + f2\n                f1 = f2\n       \
    \         f2 = f3\n            }\n            i = i + 1\n        }\n        return\
    \ f3\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9tabl43m.scala:34)\n\tat Problem.main(tmp9tabl43m.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        while (k < n) {\n           \
    \ val t = i + j\n            if (primes.isPrime(t)) k += 1\n            i = j\n\
    \            j = t\n        }\n        j\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiqr1sl6h.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var prime = new Array[Boolean](fib(n.toInt) + 1)\n        i = 2\n        while\
    \ (i <= fib(n.toInt)) {\n            prime(i) = true\n            i += 1\n   \
    \     }\n        i = 2\n        while (i <= fib(n.toInt)) {\n            if (prime(i))\
    \ {\n                var j = i * 2\n                while (j <= fib(n.toInt))\
    \ {\n                    prime(j) = false\n                    j += i\n      \
    \          }\n            }\n            i += 1\n        }\n        i = n.toInt\n\
    \        while (i >= 0) {\n            if (prime(fib(i))) return fib(i)\n    \
    \        i -= 1\n        }\n        return 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjkczavir.scala:24:39\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mvar\e[0m \e[36mprime\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](fib(n.toInt) + \e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                       Found:    Long\n\e\
    [31m   |\e[0m                                       Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjkczavir.scala:43:25 --------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m            \e[33mif\e[0m (prime(fib(i))) \e[33mreturn\e\
    [0m fib(i)\n\e[31m\e[31m   |\e[0m                      ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Found:    Long\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798949
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val t = i + j\n            if (primes.isPrime(t))\
    \ {\n                count += 1\n                k = t\n            }\n      \
    \      i = j\n            j = t\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5s0y15yv.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        while (i < n) {\n            val f\
    \ = fib.next\n            if (primes.contains(f)) i += 1\n        }\n        fib.current\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8r7x910.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8r7x910.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  val next = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(next)) {\n \
    \               fibs += next;\n                i += 1;\n            }\n      \
    \  }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu365lany.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  return fib(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpiag1epq7.scala:27)\n\tat Problem.main(tmpiag1epq7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798949
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        fib(2) = 2\n        var i = 3\n        while\
    \ (i <= n) {\n            fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n\
    \        }\n        return fib(n.toInt)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 2 out of bounds for length\
    \ 2\n\tat Problem$.primeFib(tmpobk5ygpt.scala:19)\n\tat Problem$.main(tmpobk5ygpt.scala:28)\n\
    \tat Problem.main(tmpobk5ygpt.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n\
    \        fibs += 3\n        var i = 2\n        while (i <= n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        return\
    \ fibs(n.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfhgut0u_.scala:30)\n\tat Problem.main(tmpfhgut0u_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else if (isPrime(b)) primeFib(n,\
    \ b, a + b, i + 1)\n            else primeFib(n, b, a + b, i)\n        }\n   \
    \     primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw4uqhb_x.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var i = 0l\n        var\
    \ p = 0l\n        while (i < n) {\n            p = fib.next\n            if (p.isPrime)\
    \ i += 1\n        }\n        return p\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3i_ans9x.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3i_ans9x.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (p.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        fib(2) = 2\n        var i = 3\n        while\
    \ (i <= n) {\n            fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n\
    \        }\n        var result = fib(n.toInt)\n        while (!isPrime(result))\
    \ {\n            result = fib(n.toInt - 1) + fib(n.toInt - 2)\n            n -=\
    \ 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7udhb3x_.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mwhile\e[0m (!isPrime(result)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7udhb3x_.scala:28:14\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(100000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var c = 0l\n        while (c\
    \ < n) {\n            val t = i + j\n            if (primes.isPrime(t)) {\n  \
    \              k = t\n                c += 1\n            }\n            i = j\n\
    \            j = t\n        }\n        k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzso0no_n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m100000\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \             ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var primes = new ArrayBuffer[Long]();\n        primes +=\
    \ 2l;\n        primes += 3l;\n        var fibs = new ArrayBuffer[Long]();\n  \
    \      fibs += 1l;\n        fibs += 2l;\n        var i = 2l;\n        var j =\
    \ 2l;\n        while (j <= n) {\n            var k = primes(i.toInt - 1) + 2;\n\
    \            while (!isPrime(k)) {\n                k += 2;\n            }\n \
    \           primes += k;\n            i += 1;\n            var f = fibs(fibs.length\
    \ - 1) + fibs(fibs.length - 2);\n            while (f < k) {\n               \
    \ fibs += f;\n                f = fibs(fibs.length - 1) + fibs(fibs.length - 2);\n\
    \            }\n            if (f == k) {\n                j += 1;\n         \
    \   }\n        }\n        return fibs(fibs.length - 1);\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpydnkv9gh.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mwhile\e[0m (!isPrime(k)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 1\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var primes = new Array[Boolean](fib(n.toInt).toInt + 1)\n        i = 2\n  \
    \      while (i < primes.length) {\n            primes(i) = true\n           \
    \ i += 1\n        }\n        i = 2\n        while (i < primes.length) {\n    \
    \        if (primes(i)) {\n                var j = i * 2\n                while\
    \ (j < primes.length) {\n                    primes(j) = false\n             \
    \       j += i\n                }\n            }\n            i += 1\n       \
    \ }\n        i = 0\n        while (i < fib.length) {\n            if (primes(fib(i).toInt))\
    \ {\n                return fib(i)\n            }\n            i += 1\n      \
    \  }\n        0\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvwetbyla.scala:51)\n\tat Problem.main(tmpvwetbyla.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798956
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        fib(2) = 2\n        var i = 3\n        var count\
    \ = 2\n        while (count < n) {\n            fib(i) = fib(i - 1) + fib(i -\
    \ 2)\n            if (isPrime(fib(i))) count += 1\n            i += 1\n      \
    \  }\n        fib(i - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp43z1x4wf.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 0l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpin31mus5.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  fibs += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n      \
    \  return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzvqjostk.scala:30)\n\tat Problem.main(tmpzvqjostk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798956
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2twmqzs6.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var f1 = 2l\n\
    \        var f2 = 3l\n        var f3 = 5l\n        var i = 3l\n        while (i\
    \ < n) {\n            f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n\
    \            i += 1\n        }\n        return f3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7mh2e4vo.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (k.isPrime) count += 1\n            i = j\n            j = k\n  \
    \      }\n        return k\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxjlw5x_8.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (k.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var a = 1l\n\
    \        var b = 1l\n        var c = 2l\n        var i = 1l\n        while (i\
    \ < n) {\n            a = b\n            b = c\n            c = a + b\n      \
    \      if (primes.isPrime(c)) i += 1\n        }\n        return c\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8qrkm0hy.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) count += 1\n            i = j\n            j = k\n \
    \       }\n        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnkqgkl88.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(100000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var p = 0l\n        while (i < n) {\n\
    \            p = fib.next\n            if (primes.contains(p)) {\n           \
    \     i += 1\n            }\n        }\n        return p\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp30nvqrxo.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m100000\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \             ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp30nvqrxo.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var p = 0l\n        while (i < n) {\n\
    \            p = fib.next\n            if (primes.contains(p)) {\n           \
    \     i += 1\n            }\n        }\n        return p\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfho1lt1p.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfho1lt1p.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 2l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjmmzw7x1.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798956
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        fib(2) = 2\n        var i = 3\n        while\
    \ (i <= n) {\n            fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n\
    \        }\n        var j = n\n        while (j >= 0) {\n            if (isPrime(fib(j.toInt)))\
    \ return fib(j.toInt)\n            j -= 1\n        }\n        return -1\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxhh6cpez.scala:27:16 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            \e[33mif\e[0m (isPrime(fib(j.toInt))) \e\
    [33mreturn\e[0m fib(j.toInt)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798956
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     while (k < n) {\n            val t = i + j\n            i = j\n        \
    \    j = t\n            if (isPrime(t)) {\n                k += 1\n          \
    \  }\n        }\n        return j\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmper1dy3x8.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(t)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798957
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFibHelper(n : Long, a : Long, b : Long, c : Long)\
    \ : Long = {\n            if (n == 0) c\n            else if (b.isPrime) primeFibHelper(n\
    \ - 1, b, a + b, b)\n            else primeFibHelper(n, b, a + b, c)\n       \
    \ }\n        primeFibHelper(n, 0, 1, 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbb_bfk3_.scala:18:23 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (b.isPrime)\
    \ primeFibHelper(n - \e[31m1\e[0m, b, a + b, b)\n\e[31m\e[31m   |\e[0m       \
    \              ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value isPrime\
    \ is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var result = fib(n.toInt)\n        while (!isPrime(result)) {\n           \
    \ result = fib(n.toInt - 1) + fib(n.toInt - 2)\n            n -= 1\n        }\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2zv8u53.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mwhile\e[0m (!isPrime(result)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg2zv8u53.scala:27:14\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else if (isPrime(b)) primeFib(n,\
    \ b, a + b, i + 1)\n            else primeFib(n, b, a + b, i)\n        }\n   \
    \     primeFib(n, 2, 3, 1)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9bd0hlx9.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        fib(2) = 2\n        var i = 3\n        while\
    \ (i <= n) {\n            fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n\
    \        }\n        var result = fib(n.toInt)\n        while (!isPrime(result))\
    \ {\n            result = fib(n.toInt - 1) + fib(n.toInt - 2)\n            n -=\
    \ 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7udhb3x_.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mwhile\e[0m (!isPrime(result)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7udhb3x_.scala:28:14\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var f1 = 2l\n\
    \        var f2 = 3l\n        var f3 = 5l\n        var i = 3l\n        while (i\
    \ < n) {\n            f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n\
    \            i += 1\n        }\n        return f3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7mh2e4vo.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpotve2v4c.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else {\n            \
    \    val c = a + b\n                if (isPrime(c)) primeFib(n, b, c, count +\
    \ 1)\n                else primeFib(n, b, c, count)\n            }\n        }\n\
    \        primeFib(n, 0, 1, 1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpure51a6l.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (isPrime(c)) primeFib(n,\
    \ b, c, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var i : Long = 2l\n        while (i < n) {\n            {\n                val\
    \ f3 : Long = f1 + f2\n                f1 = f2\n                f2 = f3\n    \
    \            if (f3.isPrime) i += 1\n            }\n        }\n        return\
    \ f2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprqle5ayu.scala:24:23 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                \e[33mif\e[0m (f3.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                    value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var count = 2l\n        while (count < n) {\n            i = j\n       \
    \     j = k\n            k = i + j\n            if (k.isPrime) count += 1\n  \
    \      }\n        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1dtcrp7l.scala:24:18 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (k.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  var fib = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(fib)) {\n   \
    \             fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqwci26xh.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci(1000000)\n        var count = 0l\n        var result = 0l\n      \
    \  while (count < n) {\n            result = fib.next\n            if (primes.contains(result))\
    \ count += 1\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqznpla5e.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqznpla5e.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m(\e[31m1000000\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \           Not found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         i = j\n            j = k\n            if (isPrime(k)) count += 1\n \
    \       }\n        return k\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqureds3.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var count = 0l\n        var f = 1l\n        var s = 1l\n\
    \        var t = 0l\n        while (count < n) {\n            t = f + s\n    \
    \        f = s\n            s = t\n            if (isPrime(t)) count += 1\n  \
    \      }\n        return t\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdxq46rsu.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(t)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var result = 0l\n        while (i <\
    \ n) {\n            result = fib.next\n            if (primes.contains(result))\
    \ i += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4coewtug.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4coewtug.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var p = 2l\n\
    \        var f = 1l\n        var f1 = 1l\n        var f2 = 1l\n        var i =\
    \ 1l\n        while (i < n) {\n            f = f1 + f2\n            if (primes.isPrime(f))\
    \ {\n                p = f\n                i += 1\n            }\n          \
    \  f2 = f1\n            f1 = f\n        }\n        return p\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgerjp7ir.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while(i <= n) {\n           \
    \ val next = fibs(i - 1) + fibs(i - 2);\n            if(isPrime(next)) {\n   \
    \             fibs += next;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5bat1_7q.scala:22:15 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m(isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m               ^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val t = i + j\n            i = j\n            j =\
    \ t\n            if (primes.isPrime(t)) {\n                count += 1\n      \
    \          k = t\n            }\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9lz1vur6.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 1\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  val primes = new Array[Boolean](fib(n.toInt).toInt + 1)\n        primes(0)\
    \ = false\n        primes(1) = false\n        i = 2\n        while (i < primes.length)\
    \ {\n            primes(i) = true\n            i += 1\n        }\n        i =\
    \ 2\n        while (i < primes.length) {\n            if (primes(i)) {\n     \
    \           var j = i * 2\n                while (j < primes.length) {\n     \
    \               primes(j) = false\n                    j += i\n              \
    \  }\n            }\n            i += 1\n        }\n        i = n.toInt\n    \
    \    while (i >= 0) {\n            if (primes(fib(i).toInt)) return fib(i)\n \
    \           i -= 1\n        }\n        return 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpip4jdycc.scala:51)\n\tat Problem.main(tmpip4jdycc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2twmqzs6.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_6l9hez8.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 2l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (BigInt(k).isProbablePrime(10)) count += 1\n            i = j\n \
    \           j = k\n        }\n        k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp28zidv9e.scala:30)\n\tat Problem.main(tmp28zidv9e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFibRec(n : Long, a : Long, b : Long, c : Long)\
    \ : Long = {\n            if (n == 0) c\n            else if (b.isPrime) primeFibRec(n\
    \ - 1, b, a + b, b)\n            else primeFibRec(n, b, a + b, c)\n        }\n\
    \        primeFibRec(n, 0, 1, 2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu6kvqjsh.scala:18:23 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (b.isPrime)\
    \ primeFibRec(n - \e[31m1\e[0m, b, a + b, b)\n\e[31m\e[31m   |\e[0m          \
    \           ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value isPrime\
    \ is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798965
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 1;\n\
    \        fibs += 2;\n        var i = 2;\n        while (i < n) {\n           \
    \ fibs += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n       \
    \ return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprxyxm6ru.scala:27)\n\tat Problem.main(tmprxyxm6ru.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var count = 2l\n        while (count < n) {\n            i = j\n       \
    \     j = k\n            k = i + j\n            if (k.isPrime) count += 1\n  \
    \      }\n        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1dtcrp7l.scala:24:18 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (k.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 0l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpin31mus5.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 0l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpin31mus5.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib0(n : Long, a : Long, b : Long, i : Long) :\
    \ Long = {\n            if (i == n) b\n            else if (isPrime(b)) primeFib0(n,\
    \ b, a + b, i + 1)\n            else primeFib0(n, b, a + b, i)\n        }\n  \
    \      primeFib0(n, 1, 2, 1)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbye_gpkt.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib0(n, b, a + b, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798964
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var count = 2l\n        while (count < n) {\n            i = j\n       \
    \     j = k\n            k = i + j\n            if (k.isPrime) count += 1\n  \
    \      }\n        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1dtcrp7l.scala:24:18 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (k.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci(1000000)\n        var i = 0l\n        var p = 0l\n        while (i\
    \ < n) {\n            p = fib.next\n            if (primes.contains(p)) i += 1\n\
    \        }\n        p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkj0tl126.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkj0tl126.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m(\e[31m1000000\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \           Not found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798964
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2twmqzs6.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var p = 0l\n        while (i < n) {\n\
    \            p = fib.next\n            if (primes.contains(p)) i += 1\n      \
    \  }\n        return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var i = 2l;\n\
    \        while (i < n) {\n            val c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(b)) {\n                i += 1;\n   \
    \         }\n        }\n        return b;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjeui1ce2.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(b)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798964
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var result = fib(n.toInt)\n        while (!isPrime(result)) {\n           \
    \ result = fib(n.toInt - 1) + fib(n.toInt - 2)\n            n -= 1\n        }\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2zv8u53.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mwhile\e[0m (!isPrime(result)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg2zv8u53.scala:27:14\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(a : Long, b : Long, count : Long) : Long =\
    \ {\n            if (count == n) b\n            else if (isPrime(b)) primeFib(b,\
    \ a + b, count + 1)\n            else primeFib(b, a + b, count)\n        }\n \
    \       primeFib(2, 3, 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6cebyvp.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798966
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f = new Array[Long](n.toInt + 1)\n        f(0) = 0\n\
    \        f(1) = 1\n        f(2) = 2\n        var i = 3\n        while (i <= n)\
    \ {\n            f(i) = f(i - 1) + f(i - 2)\n            i += 1\n        }\n \
    \       return f(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 2 out of bounds for length\
    \ 2\n\tat Problem$.primeFib(tmp4fjsgbmb.scala:19)\n\tat Problem$.main(tmp4fjsgbmb.scala:28)\n\
    \tat Problem.main(tmp4fjsgbmb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib : Long = 1l\n        var fib_prev : Long = 1l\n\
    \        var count : Long = 0l\n        while (count < n) {\n            val temp\
    \ = fib\n            fib += fib_prev\n            fib_prev = temp\n          \
    \  if (fib.isPrime) count += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa3q9oecn.scala:23:20 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (fib.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \              value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val next = i + j\n            if (primes.isPrime(next))\
    \ {\n                count += 1\n                k = next\n            }\n   \
    \         i = j\n            j = next\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb07mzqyv.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = new Fibonacci()\n        var i = 1l\n        var\
    \ p = fib.get(i)\n        while (i < n) {\n            p = fib.get(i)\n      \
    \      if (p.isPrime) {\n                i += 1\n            }\n        }\n  \
    \      return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph4sirhl6.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798967
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp794ygp7o.scala:30)\n\tat Problem.main(tmp794ygp7o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  var fib = fibs(i - 1) + fibs(i - 2);\n            if (fib.isPrime) {\n    \
    \            fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpihlunxjb.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (fib.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpotve2v4c.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798959
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = {\n            if (n <=\
    \ 1) return false\n            if (n == 2) return true\n            if (n % 2\
    \ == 0) return false\n            val sqrtN = math.sqrt(n).toLong\n          \
    \  var i = 3l\n            while (i <= sqrtN) {\n                if (n % i ==\
    \ 0) return false\n                i += 2\n            }\n            return true\n\
    \        }\n        var fib = 1l\n        var fibPrev = 1l\n        var count\
    \ = 1l\n        while (count < n) {\n            val temp = fib\n            fib\
    \ += fibPrev\n            fibPrev = temp\n            if (isPrime(fib)) count\
    \ += 1\n        }\n        return fib\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppk6z2kzv.scala:40)\n\tat Problem.main(tmppk6z2kzv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798973
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 = 2l;\n        var f2 = 3l;\n        var f3 = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            f1 = f2;\n        \
    \    f2 = f3;\n            f3 = f1 + f2;\n            i = i + 1;\n        }\n\
    \        return f3;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1fs1x4ua.scala:29)\n\tat Problem.main(tmp1fs1x4ua.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var c = 0l\n        while (c < n) {\n            if (isPrime(k)) {\n   \
    \             c += 1\n            }\n            i = j\n            j = k\n  \
    \          k = i + j\n        }\n        return k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf7u618zm.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n\
    \        fibs += 3\n        var i = 2\n        while (i <= n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2)\n            if (fibs(i) % 2 == 0) {\n        \
    \        fibs.remove(i)\n            } else {\n                i += 1\n      \
    \      }\n        }\n        return fibs(n - 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5odznxlj.scala:28:20\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mreturn\e[0m fibs(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Found:    Long\n\e[31m   |\e[0m                \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var p = 0l\n        while (i < n) {\n\
    \            p = fib.next\n            if (primes.contains(p)) i += 1\n      \
    \  }\n        return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val t = i + j\n            if (primes.isPrime(t))\
    \ {\n                count += 1\n                k = t\n            }\n      \
    \      i = j\n            j = t\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5s0y15yv.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  val fib = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(fib)) {\n   \
    \             fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw9jhwm1v.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else if (isPrime(b)) primeFib(n,\
    \ b, a + b, i + 1)\n            else primeFib(n, b, a + b, i)\n        }\n   \
    \     primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw4uqhb_x.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val fib = i + j\n            if (primes.isPrime(fib))\
    \ {\n                count += 1\n                k = fib\n            }\n    \
    \        i = j\n            j = fib\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsamggci8.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) count += 1\n            i = j\n            j = k\n \
    \       }\n        return k\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_vmdyhr2.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        var fib = 0l;\n        while\
    \ (i <= n) {\n            fib = fibs(i.toInt - 2) + fibs(i.toInt - 1);\n     \
    \       if (isPrime(fib)) {\n                fibs += fib;\n                i +=\
    \ 1;\n            }\n        }\n        return fib;\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpazapuk4t.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var i = 0l\n        var\
    \ f = 0l\n        while (i < n) {\n            f = fib.next\n            if (f.isPrime)\
    \ i += 1\n        }\n        return f\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1vwg9keo.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1vwg9keo.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (f.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else if (isPrime(b))\
    \ primeFib(n, b, a + b, count + 1)\n            else primeFib(n, b, a + b, count)\n\
    \        }\n        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzfwvmddd.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var fib = 1l\n        var fib_prev =\
    \ 1l\n        while (i < n) {\n            val fib_next = fib + fib_prev\n   \
    \         fib_prev = fib\n            fib = fib_next\n            if (isPrime(fib))\
    \ i += 1\n        }\n        fib\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0cq86v4h.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(fib)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798970
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i <= n) {\n        \
    \    var fib = fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            if (isPrime(fib))\
    \ {\n                fibs += fib;\n                i += 1l;\n            }\n \
    \       }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp165r8b6v.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, c : Long) : Long\
    \ = {\n            if (n == 1) a\n            else if (n == 2) b\n           \
    \ else if (n == 3) c\n            else {\n                val d = a + b + c\n\
    \                if (isPrime(d)) primeFib(n - 1, b, c, d)\n                else\
    \ primeFib(n, b, c, d)\n            }\n        }\n        primeFib(n, 2, 3, 5)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwuvvdsbe.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mif\e[0m (isPrime(d)) primeFib(n\
    \ - \e[31m1\e[0m, b, c, d)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 0l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (k.isPrime) {\n                count += 1\n            }\n      \
    \      i = j\n            j = k\n        }\n        return k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgktty9r6.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (k.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else {\n            \
    \    val c = a + b\n                if (Library.isPrime(c)) primeFib(n, b, c,\
    \ count + 1)\n                else primeFib(n, b, c, count)\n            }\n \
    \       }\n        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpatfbyj4l.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (Library.isPrime(c)) primeFib(n,\
    \ b, c, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: Library\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (fibs.length < n) {\n\
    \            val next = fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            if\
    \ (next.isPrime) {\n                fibs += next;\n            }\n           \
    \ i += 1;\n        }\n        fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_7d76wy.scala:22:21 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (next.isPrime) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \  value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798975
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var cnt = 0l\n        var i = 1l\n        var fib = 1l\n\
    \        while (cnt < n) {\n            if (isPrime(fib)) {\n                cnt\
    \ += 1\n                if (cnt == n) return fib\n            }\n            i\
    \ += 1\n            fib = fibonacci(i)\n        }\n        return fib\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpte3corjo.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpte3corjo.scala:25:18\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            fib = fibonacci(i)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \           Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798973
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 2;\n        var b : Long = 3;\n        var\
    \ c : Long = 5;\n        var i : Long = 1;\n        while (i < n) {\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n            while (!(isPrime(c)))\
    \ {\n                a = b;\n                b = c;\n                c = a + b;\n\
    \            }\n            i = i + 1;\n        }\n        return c;\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8qxj0v1l.scala:24:21 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mwhile\e[0m (!(isPrime(c))) {\n\e[31m\e\
    [31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \       Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798973
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var c = 1l\n        while (c < n) {\n            if (isPrime(k)) {\n   \
    \             c += 1\n            }\n            i = j\n            j = k\n  \
    \          k = i + j\n        }\n        return k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfgmfjm0u.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFibIter(a : Long, b : Long, n : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else {\n            \
    \    val c = a + b\n                if (isPrime(c)) primeFibIter(b, c, n, count\
    \ + 1)\n                else primeFibIter(b, c, n, count)\n            }\n   \
    \     }\n        primeFibIter(1, 2, n, 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbcfwpr77.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (isPrime(c)) primeFibIter(b,\
    \ c, n, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 0l\n\
    \        var j = 1l\n        var k = 0l\n        var count = 0l\n        while\
    \ (count < n) {\n            k = i + j\n            i = j\n            j = k\n\
    \            if (primes.isPrime(k)) count += 1\n        }\n        return k\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps2nh1om5.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798975
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var primes = new Array[Boolean](fib(n.toInt).toInt + 1)\n        i = 2\n  \
    \      while (i < primes.length) {\n            primes(i) = true\n           \
    \ i += 1\n        }\n        i = 2\n        while (i < primes.length) {\n    \
    \        if (primes(i)) {\n                var j = i * 2\n                while\
    \ (j < primes.length) {\n                    primes(j) = false\n             \
    \       j += i\n                }\n            }\n            i += 1\n       \
    \ }\n        i = n.toInt\n        while (i >= 0) {\n            if (primes(fib(i).toInt))\
    \ return fib(i)\n            i -= 1\n        }\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptclfye_s.scala:49)\n\tat Problem.main(tmptclfye_s.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 1l;\n\
    \        fibs += 2l;\n        var i = 2l;\n        while (fibs.length < n) {\n\
    \            fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i +=\
    \ 1l;\n        }\n        var primes = new ArrayBuffer[Long]();\n        primes\
    \ += 2l;\n        var j = 3l;\n        while (primes.length < n) {\n         \
    \   var isPrime = true;\n            for (p <- primes) {\n                if (j\
    \ % p == 0l) {\n                    isPrime = false;\n                    break;\n\
    \                }\n            }\n            if (isPrime) primes += j;\n   \
    \         j += 2l;\n        }\n        var k = 0;\n        while (k < fibs.length)\
    \ {\n            if (primes.contains(fibs(k))) return fibs(k);\n            k\
    \ += 1;\n        }\n        return -1l;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4lfo_1zq.scala:32:20 ------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m                    break;\n\e[31m\e[31m   |\e[0m   \
    \                 ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798977
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = {\n            if (n ==\
    \ 1) return false\n            if (n == 2) return true\n            if (n % 2\
    \ == 0) return false\n            val sqrtN = sqrt(n).toLong\n            for\
    \ (i <- 3l to sqrtN by 2) {\n                if (n % i == 0) return false\n  \
    \          }\n            return true\n        }\n        var fib = 1l\n     \
    \   var fib1 = 1l\n        var fib2 = 1l\n        var count = 1l\n        while\
    \ (count < n) {\n            fib = fib1 + fib2\n            fib2 = fib1\n    \
    \        fib1 = fib\n            if (isPrime(fib)) count += 1\n        }\n   \
    \     return fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe0vcmjed.scala:39)\n\tat Problem.main(tmpe0vcmjed.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i <= n) {\n            a = b;\n         \
    \   b = c;\n            c = a + b;\n            if (isPrime(c)) {\n          \
    \      i += 1;\n            }\n        }\n        return c;\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpacrqd2xi.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(c)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798976
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (k.isPrime) {\n                count += 1\n            }\n      \
    \      i = j\n            j = k\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoyh9h56k.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (k.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var c = 0l\n        while (c < n) {\n            k = i + j\n           \
    \ if (k.isPrime) {\n                c += 1\n            }\n            i = j\n\
    \            j = k\n        }\n        k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvmpufocn.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (k.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val sum = i + j\n            if (primes.isPrime(sum))\
    \ {\n                count += 1\n                k = sum\n            }\n    \
    \        i = j\n            j = sum\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqaupl33r.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798977
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var i = 1l\n        while (i\
    \ < n) {\n            a = b\n            b = c\n            c = a + b\n      \
    \      i += 1\n        }\n        return b\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dpk3qsr.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798977
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var p = 2l\n        var f = 1l\n        var f1 = 1l\n  \
    \      var f2 = 2l\n        var i = 1l\n        while (i < n) {\n            f\
    \ = f1 + f2\n            f1 = f2\n            f2 = f\n            if (f.isPrime)\
    \ {\n                p = f\n                i += 1\n            }\n        }\n\
    \        return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjt71lec7.scala:25:18 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mif\e[0m (f.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798981
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7k9i3uva.scala:30)\n\tat Problem.main(tmp7k9i3uva.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798982
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 2l\n        var count = 0l\n        while\
    \ (count < n) {\n            if (primes.contains(k)) {\n                count\
    \ += 1\n            }\n            val t = k\n            k = i + j\n        \
    \    i = j\n            j = t\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxvtlsen_.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var count =\
    \ 0l\n        var i = 1l\n        while (count < n) {\n            if (primes.isPrime(i)\
    \ && primes.isPrime(i + 2)) {\n                count += 1\n                if\
    \ (count == n) return i\n            }\n            i += 1\n        }\n      \
    \  return 0\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcbp9mrln.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp794ygp7o.scala:30)\n\tat Problem.main(tmp794ygp7o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i <= n) {\n        \
    \    var fib = fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            if (isPrime(fib))\
    \ {\n                fibs += fib;\n                i += 1l;\n            }\n \
    \       }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp165r8b6v.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 2l;\n        var f1 = 2l;\n        var f2 = 3l;\n\
    \        var f = 0l;\n        while (i <= n) {\n            f = f1 + f2;\n   \
    \         f1 = f2;\n            f2 = f;\n            if (f.isPrime) i += 1;\n\
    \        }\n        return f;\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0ut3kw1w.scala:24:18 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (f.isPrime) i += \e[31m1\e\
    [0m;\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \             value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var primes = new ArrayBuffer[Long]()\n        primes +=\
    \ 2l\n        primes += 3l\n        var fibs = new ArrayBuffer[Long]()\n     \
    \   fibs += 2l\n        fibs += 3l\n        var i = 2l\n        while (primes.length\
    \ < n) {\n            i += 1\n            if (isPrime(i)) {\n                primes\
    \ += i\n                if (isFib(i, fibs)) fibs += i\n            }\n       \
    \ }\n        return fibs(n.toInt - 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvgyfvwsh.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mif\e[0m (isPrime(i)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvgyfvwsh.scala:27:20\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m                \e[33mif\e\
    [0m (isFib(i, fibs)) fibs += i\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isFib\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        var j = 0;\n        while (j < fibs.length) {\n            if\
    \ (isPrime(fibs(j))) {\n                return fibs(j);\n            }\n     \
    \       j += 1;\n        }\n        return 0l;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1vn7433n.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m (isPrime(fibs(j))) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp794ygp7o.scala:30)\n\tat Problem.main(tmp794ygp7o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_6l9hez8.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var i = 3l\n        while (i\
    \ < n) {\n            a = b\n            b = c\n            c = a + b\n      \
    \      i += 1\n        }\n        return c\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0q30hhgb.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else if (isPrime(b)) primeFib(n,\
    \ b, a + b, i + 1)\n            else primeFib(n, b, a + b, i)\n        }\n   \
    \     primeFib(n, 2, 3, 1)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9bd0hlx9.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        var j = 0;\n        while (i\
    \ <= n) {\n            val fib = fibs(j) + fibs(j + 1);\n            if (isPrime(fib))\
    \ {\n                fibs += fib;\n                i += 1;\n            }\n  \
    \          j += 1;\n        }\n        return fibs(n.toInt - 1);\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgr5sn2j.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  val next = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(next)) {\n \
    \               fibs += next;\n                i += 1;\n            }\n      \
    \  }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu365lany.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib : Long = 0\n        var fib1 : Long = 1\n      \
    \  var fib2 : Long = 1\n        var count : Long = 0\n        while (count < n)\
    \ {\n            fib = fib1 + fib2\n            fib2 = fib1\n            fib1\
    \ = fib\n            if (fib.isPrime) count += 1\n        }\n        return fib\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk0jtllum.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (fib.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \              value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var i = 0l\n        var\
    \ f = 0l\n        while (i < n) {\n            f = fib.next()\n            if\
    \ (f.isPrime()) i += 1\n        }\n        return f\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphyoevqq6.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphyoevqq6.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (f.isPrime()) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1659798984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var prime = new Prime()\n\
    \        var i = 0l\n        var result = 0l\n        while (i < n) {\n      \
    \      result = fib.next\n            if (prime.isPrime(result)) i += 1\n    \
    \    }\n        return result\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe3_ekwoc.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe3_ekwoc.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mprime\e[0m = \e[33mnew\e\
    [0m \e[35mPrime\e[0m()\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: type Prime\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798982
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 2l;\n        var b : Long = 3l;\n       \
    \ var c : Long = 5l;\n        var i : Long = 3l;\n        while (i < n) {\n  \
    \          a = b;\n            b = c;\n            c = a + b;\n            i =\
    \ i + 1l;\n        }\n        return c;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpa5ai6bg8.scala:29)\n\tat Problem.main(tmpa5ai6bg8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798985
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var f3 : Long = 5l\n        var i : Long = 3l\n        while (i < n) {\n   \
    \         f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n           \
    \ while (f3 % 2 == 0) {\n                f3 = f3 / 2\n            }\n        \
    \    while (f3 % 3 == 0) {\n                f3 = f3 / 3\n            }\n     \
    \       while (f3 % 5 == 0) {\n                f3 = f3 / 5\n            }\n  \
    \          if (f3 != 1) {\n                i = i + 1\n            }\n        }\n\
    \        return f3\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fj17czu.scala:40)\n\tat Problem.main(tmp9fj17czu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798985
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var count = 0l\n        var i = 0l\n        while (count\
    \ < n) {\n            i += 1\n            if (isPrime(fib(i))) {\n           \
    \     count += 1\n            }\n        }\n        return fib(i)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp65ojdbvf.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp65ojdbvf.scala:20:24\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib(i))) {\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: fib\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp65ojdbvf.scala:24:15 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fib(i)\n\e[31m\e[31m   |\e\
    [0m               ^^^\e[0m\n\e[31m   |\e[0m               Not found: fib\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else if (isPrime(b))\
    \ primeFib(n, b, a + b, count + 1)\n            else primeFib(n, b, a + b, count)\n\
    \        }\n        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzfwvmddd.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f : Long = 1\n        var g : Long = 0\n        var\
    \ i : Long = 0\n        while (i < n) {\n            {\n                val h\
    \ : Long = f + g\n                f = g\n                g = h\n             \
    \   if (isPrime(g)) i += 1\n            }\n        }\n        return g\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6rzla7gi.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                \e[33mif\e[0m (isPrime(g)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  val fib = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(fib)) {\n   \
    \             fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw9jhwm1v.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else {\n                val c =\
    \ a + b\n                if (BigInt(c).isProbablePrime(10)) primeFib(n, b, c,\
    \ i + 1)\n                else primeFib(n, b, c, i)\n            }\n        }\n\
    \        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var prime = new Prime()\n\
    \        var i = 0l\n        var f = 0l\n        while (i < n) {\n           \
    \ f = fib.next()\n            if (prime.isPrime(f)) i += 1\n        }\n      \
    \  return f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyddrowfu.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyddrowfu.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mprime\e[0m = \e[33mnew\e\
    [0m \e[35mPrime\e[0m()\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: type Prime\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2\n        var f2 : Long = 3\n        var\
    \ count : Long = 2\n        while (count < n) {\n            var f3 : Long = f1\
    \ + f2\n            f1 = f2\n            f2 = f3\n            if (f3.isPrime)\
    \ {\n                count += 1\n            }\n        }\n        return f2\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwz5t60bo.scala:23:19 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (f3.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 1\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var result = fib(n.toInt)\n        while (!isPrime(result)) {\n           \
    \ result = fib(n.toInt - 1) + fib(n.toInt - 2)\n            n -= 1\n        }\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqd6b7ssn.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mwhile\e[0m (!isPrime(result)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqd6b7ssn.scala:27:14\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798989
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, c : Long) : Long\
    \ = {\n            if (n == 1) a\n            else if (n == 2) b\n           \
    \ else if (n == 3) c\n            else {\n                val d = a + b + c\n\
    \                if (isPrime(d)) primeFib(n - 1, b, c, d)\n                else\
    \ primeFib(n, b, c, d)\n            }\n        }\n        primeFib(n, 2, 3, 5)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwuvvdsbe.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mif\e[0m (isPrime(d)) primeFib(n\
    \ - \e[31m1\e[0m, b, c, d)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798971
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 2l;\n        var b : Long = 3l;\n       \
    \ var c : Long = 5l;\n        var i : Long = 3l;\n        while (i < n) {\n  \
    \          a = b;\n            b = c;\n            c = a + b;\n            i =\
    \ i + 1l;\n        }\n        return c;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpa5ai6bg8.scala:29)\n\tat Problem.main(tmpa5ai6bg8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var f3 : Long = 5l\n        var i : Long = 3l\n        while (i < n) {\n   \
    \         f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n           \
    \ if (f3.isPrime) {\n                i += 1\n            }\n        }\n      \
    \  return f3\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1z0si6rg.scala:24:19 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (f3.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var f3 : Long = 5l\n        var i : Long = 3l\n        while (i < n) {\n   \
    \         f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n           \
    \ while (!(f3.isPrime)) {\n                f1 = f2\n                f2 = f3\n\
    \                f3 = f1 + f2\n            }\n            i = i + 1\n        }\n\
    \        return f3\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa5j9vb2q.scala:24:24 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mwhile\e[0m (!(f3.isPrime)) {\n\e[31m\e\
    [31m   |\e[0m                     ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \          value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798989
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var prime = new Prime()\n\
    \        var i = 1l\n        var result = 0l\n        while (i <= n) {\n     \
    \       result = fib.next\n            if (prime.isPrime(result)) {\n        \
    \        i += 1\n            }\n        }\n        return result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp59sm7qii.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp59sm7qii.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mprime\e[0m = \e[33mnew\e\
    [0m \e[35mPrime\e[0m()\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: type Prime\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else if (isPrime(b))\
    \ primeFib(n, b, a + b, count + 1)\n            else primeFib(n, b, a + b, count)\n\
    \        }\n        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzfwvmddd.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val sum = i + j\n            if (primes.contains(sum))\
    \ {\n                count += 1\n                k = sum\n            }\n    \
    \        i = j\n            j = sum\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2punjjoy.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  val fib = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(fib)) {\n   \
    \             fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw9jhwm1v.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, c : Long) : Long\
    \ = {\n            if (n == 1) c\n            else if (n == 2) b\n           \
    \ else if (n == 3) a\n            else if (isPrime(a + b)) primeFib(n - 1, b,\
    \ a + b, a + b)\n            else primeFib(n, b, a + b, c)\n        }\n      \
    \  primeFib(n, 2, 3, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdd2y52ts.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(a\
    \ + b)) primeFib(n - \e[31m1\e[0m, b, a + b, a + b)\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  var fib = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(fib)) {\n   \
    \             fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqwci26xh.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 2l\n\
    \        var j = 3l\n        var k = 5l\n        var count = 3l\n        while\
    \ (count < n) {\n            val t = k\n            k = i + j\n            i =\
    \ j\n            j = t\n            if (primes.isPrime(k)) {\n               \
    \ count += 1\n            }\n        }\n        return k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjc93699x.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, i : Long) : Long\
    \ = {\n            if (i == n) b\n            else {\n                val c =\
    \ a + b\n                if (isPrime(c)) primeFib(n, b, c, i + 1)\n          \
    \      else primeFib(n, b, c, i)\n            }\n        }\n        primeFib(n,\
    \ 0, 1, 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvfqjj61a.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (isPrime(c)) primeFib(n,\
    \ b, c, i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt)\n        fib(0) = 2\n\
    \        fib(1) = 3\n        var i = 2\n        while (i < n) {\n            fib(i)\
    \ = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n        var j = n\
    \ - 1\n        while (j >= 0) {\n            if (isPrime(fib(j))) return fib(j)\n\
    \            j -= 1\n        }\n        return 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphlec1oaj.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m (isPrime(fib(j))) \e[33mreturn\e\
    [0m fib(j)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmphlec1oaj.scala:26:28 --------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            \e[33mif\e[0m (isPrime(fib(j))) \e[33mreturn\e[0m fib(j)\n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \                       Found:    (j : Long)\n\e[31m   |\e[0m                \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmphlec1oaj.scala:26:44 --------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            \e[33mif\e[0m (isPrime(fib(j))) \e[33mreturn\e[0m fib(j)\n\
    \e[31m\e[31m   |\e[0m                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                            Found:    (j : Long)\n\e\
    [31m   |\e[0m                                            Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2;\n\
    \        fibs += 3;\n        var i = 2;\n        while (i <= n) {\n          \
    \  var fib = fibs(i - 1) + fibs(i - 2);\n            if (isPrime(fib)) {\n   \
    \             fibs += fib;\n                i += 1;\n            }\n        }\n\
    \        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqwci26xh.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var count = 0l\n        while\
    \ (count < n) {\n            val next = i + j\n            if (primes.isPrime(next))\
    \ {\n                count += 1\n                k = next\n            }\n   \
    \         i = j\n            j = next\n        }\n        k\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb07mzqyv.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        fib(2) = 2\n        var i = 3\n        while\
    \ (i <= n) {\n            fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n\
    \        }\n        var count = 0\n        var j = 2\n        while (count < n)\
    \ {\n            if (isPrime(fib(j))) {\n                count += 1\n        \
    \    }\n            j += 1\n        }\n        return fib(j - 1)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpel_pd0rn.scala:28:16 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            \e[33mif\e[0m (isPrime(fib(j))) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798988
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, c : Long) : Long\
    \ = {\n            if (n == 1) {\n                a\n            } else if (n\
    \ == 2) {\n                b\n            } else {\n                if (isPrime(c))\
    \ {\n                    primeFib(n - 1, b, c, a + b + c)\n                } else\
    \ {\n                    primeFib(n, a, b, c + a + b)\n                }\n   \
    \         }\n        }\n        primeFib(n, 2, 3, 5)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgpgc7l5c.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mif\e[0m (isPrime(c)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798988
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var i = 0l\n        while\
    \ (i < n) {\n            val f = fib.next()\n            if (Library.isPrime(f))\
    \ i += 1\n            if (i == n) return f\n        }\n        return 0l\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc1zxb64k.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc1zxb64k.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (Library.isPrime(f)) i += \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: Library\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798988
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else if (isPrime(b))\
    \ primeFib(n, b, a + b, count + 1)\n            else primeFib(n, b, a + b, count)\n\
    \        }\n        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzfwvmddd.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFib(n, b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(100000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        while (i < n) {\n            val f\
    \ = fib.next\n            if (primes.contains(f)) i += 1\n        }\n        fib.current\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuqlm3rtj.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m100000\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \             ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuqlm3rtj.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798989
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 3l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            i = i + 1;\n        }\n       \
    \ return c;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ic4w6m5.scala:29)\n\tat Problem.main(tmp7ic4w6m5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFib(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else {\n            \
    \    val c = a + b\n                if (isPrime(c)) primeFib(n, b, c, count +\
    \ 1)\n                else primeFib(n, b, c, count)\n            }\n        }\n\
    \        primeFib(n, 1, 2, 1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw3dtecac.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (isPrime(c)) primeFib(n,\
    \ b, c, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798989
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var prime = new Prime()\n\
    \        var i = 1l\n        var p = 0l\n        while (i <= n) {\n          \
    \  p = fib.next\n            if (prime.isPrime(p)) i += 1\n        }\n       \
    \ return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt5zqqnlc.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt5zqqnlc.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mprime\e[0m = \e[33mnew\e\
    [0m \e[35mPrime\e[0m()\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: type Prime\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798989
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   var next = fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            if (isPrime(next))\
    \ {\n                fibs += next;\n                i += 1l;\n            }\n\
    \        }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwnyxukt8.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var count = 0l\n        var fib = 1l\n        var fib1 =\
    \ 1l\n        var fib2 = 2l\n        while (count < n) {\n            fib = fib1\
    \ + fib2\n            fib1 = fib2\n            fib2 = fib\n            if (fib.isPrime)\
    \ {\n                count += 1\n            }\n        }\n        return fib\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfxnz3pd1.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (fib.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci\n        var i = 0l\n        var\
    \ result = 0l\n        while (i < n) {\n            result = fib.next\n      \
    \      if (isPrime(result)) i += 1\n        }\n        return result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl62_4vwj.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl62_4vwj.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 1\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var result = fib(n.toInt)\n        while (!isPrime(result)) {\n           \
    \ result += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplxlqzgyk.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mwhile\e[0m (!isPrime(result)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFibHelper(n : Long, a : Long, b : Long, count :\
    \ Long) : Long = {\n            if (count == n) b\n            else if (isPrime(b))\
    \ primeFibHelper(n, b, a + b, count + 1)\n            else primeFibHelper(n, b,\
    \ a + b, count)\n        }\n        primeFibHelper(n, 1, 2, 1)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvza4yvfs.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFibHelper(n, b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        var j = 0l;\n        while\
    \ (i < n) {\n            val next = fibs(j.toInt) + fibs(j.toInt + 1);\n     \
    \       if (next.isPrime) {\n                fibs += next;\n                i\
    \ += 1;\n            }\n            j += 1;\n        }\n        fibs(n.toInt -\
    \ 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkdexsje1.scala:23:21 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (next.isPrime) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \  value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Array[Long](n.toInt + 1)\n        fib(0) =\
    \ 0\n        fib(1) = 1\n        var i = 2\n        while (i <= n) {\n       \
    \     fib(i) = fib(i - 1) + fib(i - 2)\n            i += 1\n        }\n      \
    \  var p = new Prime()\n        var j = 1\n        while (j <= n) {\n        \
    \    if (p.isPrime(fib(j))) {\n                j += 1\n            } else {\n\
    \                fib(j) = 0\n            }\n        }\n        fib(n.toInt)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsaapijb9.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mvar\e[0m \e[36mp\e[0m = \e[33mnew\e[0m\
    \ \e[35mPrime\e[0m()\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e\
    [31m   |\e[0m                    Not found: type Prime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659798992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var p = 0l\n        while (i < n) {\n\
    \            p = fib.next\n            if (primes.contains(p)) i += 1\n      \
    \  }\n        return p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpivix9fy8.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 0l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_6l9hez8.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 2l\n        var k = 3l\n   \
    \     var count = 2l\n        while (count < n) {\n            i = j\n       \
    \     j = k\n            k = i + j\n            if (k.isPrime) count += 1\n  \
    \      }\n        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1dtcrp7l.scala:24:18 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (k.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798963
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var c = 0l\n        while (c < n) {\n            k = i + j\n           \
    \ if (isPrime(k)) {\n                c += 1\n            }\n            i = j\n\
    \            j = k\n        }\n        return k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v7v2hhe.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (isPrime(k)) {\n                count += 1\n            }\n     \
    \       i = j\n            j = k\n        }\n        return k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpotve2v4c.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var i = 1l\n\
    \        var fib = 1l\n        var fib_prev = 1l\n        while (i < n) {\n  \
    \          val temp = fib\n            fib += fib_prev\n            fib_prev =\
    \ temp\n            if (primes.contains(fib)) i += 1\n        }\n        fib\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp83fl88cs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798992
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibs = new ArrayBuffer[Long]();\n        fibs += 2l;\n\
    \        fibs += 3l;\n        var i = 2l;\n        while (i < n) {\n         \
    \   fibs += fibs(i.toInt - 1) + fibs(i.toInt - 2);\n            i += 1l;\n   \
    \     }\n        return fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp794ygp7o.scala:30)\n\tat Problem.main(tmp794ygp7o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = new PrimeSet(1000000)\n        var fib = new\
    \ Fibonacci()\n        var i = 0l\n        var result = 0l\n        while (i <\
    \ n) {\n            result = fib.next()\n            if (primes.contains(result))\
    \ i += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppka174mj.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppka174mj.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798993
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var count = 1l\n        while (count < n) {\n            k = i + j\n   \
    \         if (BigInt(k).isProbablePrime(10)) {\n                count += 1\n \
    \           }\n            i = j\n            j = k\n        }\n        return\
    \ k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6hiw6b0x.scala:31)\n\tat Problem.main(tmp6hiw6b0x.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = new Fibonacci()\n        var i = 0l\n        var\
    \ p = 0l\n        while (i < n) {\n            p = fib.next\n            if (p.isPrime)\
    \ i += 1\n        }\n        return p\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3i_ans9x.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3i_ans9x.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (p.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1659798955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f1 : Long = 2l\n        var f2 : Long = 3l\n       \
    \ var f3 : Long = 5l\n        var i : Long = 3l\n        while(i < n) {\n    \
    \        f1 = f2\n            f2 = f3\n            f3 = f1 + f2\n            if(f3.isPrime)\
    \ {\n                i += 1\n            }\n        }\n        return f3\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk1w2vgg1.scala:24:18 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m(f3.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l;\n        var b = 3l;\n        var c = 5l;\n\
    \        var i = 2l;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            while (!isPrime(c)) {\n       \
    \         a = b;\n                b = c;\n                c = a + b;\n       \
    \     }\n            i += 1;\n        }\n        return c;\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf09w8hkd.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mwhile\e[0m (!isPrime(c)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798993
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var primes = new ArrayBuffer[Long]();\n        primes +=\
    \ 2l;\n        primes += 3l;\n        var fibs = new ArrayBuffer[Long]();\n  \
    \      fibs += 2l;\n        fibs += 3l;\n        var i = 2l;\n        while (fibs.length\
    \ < n) {\n            var j = 0;\n            while (j < primes.length && i %\
    \ primes(j) != 0) {\n                j += 1;\n            }\n            if (j\
    \ == primes.length) {\n                primes += i;\n                if (i ==\
    \ fibs(fibs.length - 1) + fibs(fibs.length - 2)) {\n                    fibs +=\
    \ i;\n                }\n            }\n            i += 1;\n        }\n     \
    \   return fibs(fibs.length - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnpww2tki.scala:39)\n\tat Problem.main(tmpnpww2tki.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def primeFibRec(n : Long, a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) b\n            else if (isPrime(b))\
    \ primeFibRec(n, b, a + b, count + 1)\n            else primeFibRec(n, b, a +\
    \ b, count)\n        }\n        primeFibRec(n, 0, 1, 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmarwiw03.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (isPrime(b))\
    \ primeFibRec(n, b, a + b, count + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: isPrime\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798993

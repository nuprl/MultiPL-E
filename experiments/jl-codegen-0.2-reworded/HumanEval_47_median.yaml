name: HumanEval_47_median
language: jl
prompt: "\"\"\"Return median of elements in the vector l.\n    >>> median([3, 1, 2,\
  \ 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\
  \nfunction median(l::Vector{Int64})::Float64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
  \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
  \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
  \ 7]) == 7)\nend\n"
completions: ['    return median_helper(l)', '    return median_helper(l, 0, len(l))',
  '    return median_i64(l)', '    return median_int64(l)', '    return median_helper(l,
    0, len(l))', '    return median_helper(l, 0, l.len)', '    return median_impl(l)',
  '    return median_i64(l)', '    return median_int64(l)', '    return median_helper(l)',
  '    return median_sorted(l)', '    return median_sorted(l)[Int64]', '    return
    median_int64(l)', '    return median_i64(l)', '    return median_helper(l, 0,
    l.length)', '    return median_i64(l)', '    return median_sorted(l)', '    return
    median_int64(l)', '    return median_helper(l)', '    return median_helper(l,
    0, len(l))', '    return median_impl(l)', '    return median_i64(l)', '    return
    median_sorted(l)', '    return median_helper(l, 0, len(l))', '    return median_core(l)',
  '    return median_core(l)', '    return median_helper(l, 0, len(l) - 1)', '    return
    median_i64(l)', '    return median_int64(l)', '    return median_int64(l)', '    return
    median_int64(l)', '    return median_helper(l, 0, len(l))', '    return median_int64(l)',
  '    return median_helper(l)', '    return median_helper(l)', '    return median_i64(l)',
  '    return median_impl(l)', '    return median_sorted(l)', '    return median_int64(l)',
  '    return median_helper(l)', '    return median_helper(l, 0, len(l))', '    return
    median_i64(l)', '    return median_helper(l, 0, len(l))', '    return median_helper(l,
    0, l.size())', '    return median_helper(l, 0, len(l))', '    return median_impl(l)',
  '    return median_int64(l)', '    return median_i64(l)', '    return median_int64(l)',
  '    return median_helper(l)', '    return median_i64(l)', '    return median_int64(l)',
  '    return median_core(l)', '    return median_sorted(l)', '    return median_helper(l,
    0, len(l))', '    return median_impl(l)', '    return median_i64(l)', '    return
    median_helper(l)', '    return median_int64(l)', '    return median_helper(l,
    0, len(l))', '    return median_sorted(l)', '    return median_helper(l, 0, len(l))',
  '    return median_helper(l, 0, len(l))', '    return median_helper(l)', '    return
    median_helper(l, 0, len(l))', '    return median_helper(l)', '    return median_helper(l,
    0, len(l))', '    return median_sorted(l)', '    return median_helper(l, 0, len(l))',
  '    return median_int64(l)', '    return median_int64(l)', '    return median_impl(l)',
  '    return median_i64(l)', '    return median_helper(l, 0, len(l))', '    return
    median_i64(l)', '    return median_sorted(l)', '    return median_sorted(l)',
  '    return median_i64(l)', '    return median_i64(l)', '    return median_core(l)',
  '    return median_impl(l)', '    return median_int64(l)', '    return median_impl(l)',
  '    return median_int64(l)', '    return median_sorted(l)[Int64]', '    return
    median_helper(l, 0, len(l))', '    return median_i64(l)', '    return median_core(l)',
  '    return median_int64(l)', '    return median_impl(l)', '    return median_int64(l)',
  '    return median_helper(l, 0, len(l))', '    return median_helper(l, 0, len(l)
    - 1)', '    return median_helper(l, 0, len(l))', '    return median_int64(l)',
  '    return median_i64(l)', '    return median_helper(l, 0, l.size())', '    return
    median_int64(l)', '    return median_sorted(l)', '    return median_int64(l)',
  '    return median_helper(l, 0, l.size())', '    return median_helper(l, 0, len(l))',
  '    return median_impl(l)', '    return median_impl(l)', '    return median_helper(l,
    0, l.len)', '    return median_sorted(l)[Int64]', '    return median_helper(l)',
  '    return median_sorted(l)', '    return median_helper(l, 0, l.length)', '    return
    median_impl(l)', '    return median_i64(l)', '    return median_helper(l, 0, len(l))',
  '    return median_int64(l)', '    return median_sorted(l)', '    return median_helper(l,
    0, len(l))', '    return median_i64(l)', '    return median_helper(l)', '    return
    median_helper(l, 0, len(l))', '    return median_impl(l)', '    return median_impl(l)',
  '    return median_sorted(l)', '    return median_helper(l, 0, len(l))', '    return
    median_helper(l)', '    return median_helper(l)', '    return median_helper(l,
    0, len(l))', '    return median_helper(l, 0, len(l))', '    return median_sorted(l)',
  '    return median_int64(l)', '    return median_core(l)', '    return median_i64(l)',
  '    return median_i64(l)', '    return median_helper(l)', '    return median_helper(l,
    0, l.size())', '    return median_helper(l, 0, len(l))', '    return median_i64(l)',
  '    return median_sorted(l)', '    return median_core(l)', '    return median_sorted(l)[0]',
  '    return median_impl(l)', '    return median_i64(l)', '    return median_int64(l)',
  '    return median_helper(l, 0, len(l))', '    return median_helper(l, 0, l.length)',
  '    return median_int64(l)', '    return median_core(l)', '    return median_helper(l,
    0, len(l) - 1)', '    return median_helper(l, 0, len(l))', '    return median_sorted(l)',
  '    return median_int64(l)', '    return median_int64(l)', '    return median_sorted(l)',
  '    return median_impl(l)', '    return median_int64(l)', '    return median_helper(l,
    0, len(l))', '    return median_helper(l)', '    return median_core(l)', '    return
    median_impl(l)', '    return median_int64(l)', '    return median_impl(l)', '    return
    median_sorted(l)', '    return median_helper(l)', '    return median_sorted(l)',
  '    return median_int64(l)', '    return median_sorted(l)', '    return median_helper(l,
    0, len(l))', '    return median_impl(l)', '    return median_int64(l)', '    return
    median_impl(l)', '    return median_i64(l)', '    return median_sorted(l)', '    return
    median_helper(l, 0, len(l))', '    return median_helper(l, 0, len(l))', '    return
    median_helper(l, 0, len(l))', '    return median_core(l)', '    return median_int64(l)',
  '    return median_helper(l, 0, len(l))', '    return median_helper(l, 0, len(l))',
  '    return median_int64(l)', '    return median_helper(l)', '    return median_helper(l,
    0, l.size())', '    return median_int64(l)', '    return median_int64(l)', '    return
    median_impl(l)', '    return median_helper(l, 0, len(l))', '    return median_int64(l)',
  '    return median_sorted(l)', '    return median_impl(l)', '    return median_int64(l)',
  '    return median_i64(l)', '    return median_helper(l, 0, len(l) - 1)', '    return
    median_helper(l, 0, len(l))', '    return median_helper(l)', '    return median_sorted(l)[Int64]',
  '    return median_helper(l, 0, len(l))', '    return median_impl(l)', '    return
    median_impl(l)', '    return median_int64(l)', '    return median_sorted(l)',
  '    return median_core(l)', '    return median_sorted(l)']
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

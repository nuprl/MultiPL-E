name: HumanEval_35_max_element
language: jl
prompt: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2, 3])\n\
  \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
  \    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
  \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
  end\n"
completions: ['    return max(l)', '    return max(l)', '    return max_element_impl(l,
    Int64)', '    return max_element_int64(l)', '    return max(l)', '    return max(l)',
  '    return max_element_int64(l)', '    return max(l)', '    return max(l)', '    return
    max_element_helper(l, 0, len(l) - 1)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max_element_aux(l, 0, l.size())', '    return max_element_int64(l)',
  '    return max_element_impl(l)', '    return max(l)', '    return max(l)', '    return
    max_element_impl(l, Int64)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max_element_helper(l,
    0, l.size())', '    return max_element_helper(l, 0, len(l) - 1)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max_element_helper(l,
    0, l.size())', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max_element_helper(l,
    0, len(l) - 1)', '    return max_element_impl(l)', '    return max(l)', '    return
    max_element_int64(l)', '    return max_element_impl(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max_element_helper(l,
    0, l.size())', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max_element_int64(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max_element_int64(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max_element_int64(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max_element_impl(l)', '    return
    max_element_impl(l, Int64)', '    return max_element_impl(l)', '    return max(l)',
  '    return max_element_impl(l)', '    return max(l)', '    return max(l)', '    return
    max_element_impl(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max_element_helper(l, 0, l.size())',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max_element_helper(l, 0, l.size())',
  '    return max(l)', '    return max_element_helper(l, 0, len(l) - 1)', '    return
    max(l)', '    return max(l)', '    return max_element_impl(l, Int64)', '    return
    max(l)', '    return max_element_int64(l)', '    return max(l)', '    return max(l)',
  '    return max_element_impl(l, Int64)', '    return max_element_impl(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max_element_int64(l)',
  '    return max_element_helper(l, 0, len(l) - 1)', '    return max_element_impl(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max_element_aux(l,
    0, len(l) - 1)', '    return max_element_helper(l, 0, len(l) - 1)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max_element_helper(l, 0, len(l) - 1)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max_element_impl(l)',
  '    return max_element_int64(l)', '    return max(l)', '    return max(l)', '    return
    max_element_impl(l, Int64)', '    return max_element_int64(l)', '    return max(l)',
  '    return max_element_impl(l)', '    return max(l)', '    return max(l)', '    return
    max(l)', '    return max(l)', '    return max(l)', '    return max_element_int64(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max(l)',
  '    return max(l)', '    return max(l)', '    return max(l)', '    return max_element_impl(l)',
  '    return max_element_impl(l)', '    return max(l)', '    return max(l)']
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

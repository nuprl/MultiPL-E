name: HumanEval_23_strlen
language: jl
prompt: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n    >>>\
  \ strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\"\
  ) == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") == 9)\n\
  end\n"
completions: ['    return len(string)', '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', "    if string\
    \ == \"\"\n        return 0\n    else\n        return len(string)", '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', "    if string == \"\"\n        return 0\n    else\n        return\
    \ len(string)", '    return len(string)', "    if string == \"\" then 0 else len(string)\n\
    end", '    return len(string)', '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', "    if string == \"\" then 0 else len(string)\nend", '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', "    if string == \"\" then 0\n    else 1 + strlen(string[1:])\n\
    end", '    return len(string)', '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', "    if string == \"\" then\
    \ 0 else len(string)\nend", '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', "    if string == \"\" then 0\n    else 1 + strlen(substring(string,\
    \ 1, length(string) - 1))\nend", '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', "    if string == \"\"\n        return\
    \ 0\n    else\n        return len(string)", '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', "    if string == \"\" then 0\n    else 1 + strlen(substring(string,\
    \ 1, length(string) - 1))\nend", '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', " \
    \   if string == \"\" then 0\n    else 1 + strlen(substring(string, 1, length(string)\
    \ - 1))\nend", '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', "    if string\
    \ == \"\"\n        return 0\n    else\n        return len(string)", '    return
    len(string)', '    return len(string)', '    return len(string)', "    if string\
    \ == \"\" then 0\n    else 1 + strlen(substring(string, 1, length(string) - 1))\n\
    end", '    return len(string)', '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', "    if string == \"\"\n        return 0\n    else\n        return\
    \ len(string)", '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', "    if string == \"\"\n        return\
    \ 0\n    else\n        return len(string)", '    return len(string)', "    if\
    \ string == \"\"\n        return 0\n    else\n        return len(string)", '    return
    len(string)', '    return len(string)', '    return len(string)', "    if string\
    \ == \"\" then 0\n    else 1 + strlen(substring(string, 1, length(string) - 1))\n\
    end", '    return len(string)', "    if string == \"\" then 0\n    else 1 + strlen(substring(string,\
    \ 1, length(string) - 1))\nend", '    return len(string)', '    return len(string)',
  '    return len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', "    if string\
    \ == \"\"\n        return 0\n    else\n        return len(string)", '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', "    if string == \"\"\n        return\
    \ 0\n    else\n        return len(string)", '    return len(string)', '    return
    len(string)', '    return len(string)', "    if string == \"\"\n        return\
    \ 0\n    else\n        return len(string)", '    return len(string)', '    return
    len(string)', '    return len(string)', "    if string == \"\"\n        return\
    \ 0\n    else\n        return len(string)", '    return len(string)', '    return
    len(string)', '    return len(string)', "    if string == \"\"\n        return\
    \ 0\n    else\n        return len(string)", '    return len(string)', "    if\
    \ string == \"\" then 0\n    else 1 + strlen(substring(string, 1, length(string)\
    \ - 1))\nend", '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)', '    return
    len(string)', '    return len(string)', '    return len(string)']
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

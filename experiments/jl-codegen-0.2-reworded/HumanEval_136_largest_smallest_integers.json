{
  "name": "HumanEval_136_largest_smallest_integers",
  "language": "jl",
  "prompt": "\"\"\"\n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a vector.\n    If there is no negative or positive integers, return them as nothing.\n\n    Examples:\n    >>> largest_smallest_integers([2, 4, 1, 3, 5, 7])\n    (nothing, 1)\n    >>> largest_smallest_integers([])\n    (nothing, nothing)\n    >>> largest_smallest_integers([0])\n    (nothing, nothing)\n    \"\"\"\nfunction largest_smallest_integers(lst::Vector{Int64})::Tuple{Union{Int64, Nothing}, Union{Int64, Nothing}} \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = largest_smallest_integers;\n\t@test(candidate([2, 4, 1, 3, 5, 7]) == (nothing, 1))\n\t@test(candidate([2, 4, 1, 3, 5, 7, 0]) == (nothing, 1))\n\t@test(candidate([1, 3, 2, 4, 5, 6, -2]) == (-2, 1))\n\t@test(candidate([4, 5, 3, 6, 2, 7, -7]) == (-7, 2))\n\t@test(candidate([7, 3, 8, 4, 9, 2, 5, -9]) == (-9, 2))\n\t@test(candidate(Vector{Int64}([])) == (nothing, nothing))\n\t@test(candidate([0]) == (nothing, nothing))\n\t@test(candidate([-1, -3, -5, -6]) == (-1, nothing))\n\t@test(candidate([-1, -3, -5, -6, 0]) == (-1, nothing))\n\t@test(candidate([-6, -4, -4, -3, 1]) == (-3, 1))\n\t@test(candidate([-6, -4, -4, -3, -100, 1]) == (-3, 1))\nend\n",
  "completions": [
    "    return max_min(lst)",
    "    return max_min_integers(lst)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    else:\n        return (max(lst, key=lambda x: -x), min(lst, key=lambda x: x))\n",
    "    return max_min_integers(lst)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) > 0:\n        return (min(neg_ints), max(pos_ints))\n    elif len(pos_ints) > 0:\n        return (max(pos_ints), min(neg_ints))\n    else:\n        return (Nothing, Nothing)",
    "    a = nothing\n    b = nothing\n    for x in lst:\n        if x < 0:\n            if a is nothing:\n                a = x\n            else:\n                a = max(a, x)\n        else:\n            if b is nothing:\n                b = x\n            else:\n                b = min(b, x)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        a = lst[0]\n        b = lst[0]\n        for i in range(1, len(lst)):\n            if lst[i] < 0:\n                a = max(a, lst[i])\n            else:\n                b = min(b, lst[i])\n        return (a, b)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        return (max(lst), min(lst))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg_ints = []\n        pos_ints = []\n        for i in lst:\n            if i < 0:\n                neg_ints.append(i)\n            elif i > 0:\n                pos_ints.append(i)\n        if len(neg_ints) > 0:\n            return (min(neg_ints), max(pos_ints))\n        elif len(pos_ints) > 0:\n            return (max(pos_ints), min(pos_ints))\n        else:\n            return (Nothing, Nothing)\n",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    negative_ints = [x for x in lst if x < 0]\n    positive_ints = [x for x in lst if x > 0]\n    if len(negative_ints) == 0 and len(positive_ints) == 0:\n        return (Nothing, Nothing)\n    if len(negative_ints) == 0:\n        return (Nothing, positive_ints[0])\n    if len(positive_ints) == 0:\n        return (negative_ints[0], Nothing)\n    return (max(negative_ints), min(positive_ints))\n",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = [i for i in lst if i < 0]\n    pos_ints = [i for i in lst if i > 0]\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], Nothing)\n    if len(pos_ints) == 0:\n        return (Nothing, neg_ints[0])\n    return (max(neg_ints), min(pos_ints))",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = filter(lambda x: x < 0, lst)\n    pos_ints = filter(lambda x: x > 0, lst)\n    if len(neg_ints) > 0:\n        return (max(neg_ints), min(pos_ints))\n    elif len(pos_ints) > 0:\n        return (max(pos_ints), min(neg_ints))\n    else:\n        return (Nothing, Nothing)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        if i > 0:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) > 0:\n        return (neg_ints[0], pos_ints[0])\n    elif len(pos_ints) > 0:\n        return (pos_ints[0], pos_ints[0])\n    else:\n        return (Nothing, Nothing)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = max(a, lst[i])\n        else:\n            b = min(b, lst[i])\n    return (a, b)\n",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            a = i\n        elif i > 0:\n            b = i\n    return a, b",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) > 0:\n        return (neg_lst[0], pos_lst[0])\n    elif len(pos_lst) > 0:\n        return (pos_lst[0], pos_lst[0])\n    else:\n        return (Nothing, Nothing)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = min(a, lst[i])\n        else:\n            b = max(b, lst[i])\n    return (a, b)\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst.filter(lambda x: x < 0)\n    pos = lst.filter(lambda x: x > 0)\n    if len(neg) == 0 and len(pos) == 0:\n        return (Nothing, Nothing)\n    if len(neg) == 0:\n        return (pos.min(), pos.max())\n    if len(pos) == 0:\n        return (neg.min(), neg.max())\n    return (neg.min(), pos.max())",
    "    return max_min(lst)",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    negative_integers = [i for i in lst if i < 0]\n    positive_integers = [i for i in lst if i > 0]\n    if len(negative_integers) == 0 and len(positive_integers) == 0:\n        return (nothing, nothing)\n    if len(negative_integers) == 0:\n        return (nothing, positive_integers[0])\n    if len(positive_integers) == 0:\n        return (negative_integers[0], nothing)\n    return (negative_integers[0], positive_integers[0])",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = [i for i in lst if i < 0]\n    pos_ints = [i for i in lst if i > 0]\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], Nothing)\n    if len(pos_ints) == 0:\n        return (neg_ints[0], Nothing)\n    return (max(neg_ints), min(pos_ints))",
    "    if lst is empty\n        return nothing, nothing\n    else\n        a, b = lst[0], lst[1]\n        for i in range(2, len(lst)):\n            if lst[i] < 0:\n                a = min(a, lst[i])\n            else:\n                b = max(b, lst[i])\n        return a, b\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = max(a, lst[i])\n        else:\n            b = min(b, lst[i])\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg = max(neg, i)\n        else:\n            pos = max(pos, i)\n    return (neg, pos)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = max(a, lst[i])\n        else:\n            b = min(b, lst[i])\n    return (a, b)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    neg_lst = [i for i in lst if i < 0]\n    pos_lst = [i for i in lst if i > 0]\n    if len(neg_lst) == 0 and len(pos_lst) == 0:\n        return (nothing, nothing)\n    if len(neg_lst) == 0:\n        return (nothing, min(pos_lst))\n    if len(pos_lst) == 0:\n        return (max(neg_lst), nothing)\n    return (max(neg_lst), min(pos_lst))",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    let\n        a = nothing\n        b = nothing\n    in\n        for i in lst\n            if i < 0\n                a = max(a, i)\n            else\n                b = min(b, i)\n    return a, b",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))\n",
    "    let a = nothing\n    let b = nothing\n    for i in lst\n        if i < 0\n            a = max(a, i)\n        else\n            b = min(b, i)\n    return a, b",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], pos_ints[1])\n    if len(pos_ints) == 0:\n        return (neg_ints[0], neg_ints[1])\n    return (max(neg_ints), min(pos_ints))",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    negative_ints = [x for x in lst if x < 0]\n    positive_ints = [x for x in lst if x > 0]\n    if len(negative_ints) == 0 and len(positive_ints) == 0:\n        return (Nothing, Nothing)\n    if len(negative_ints) == 0:\n        return (Nothing, positive_ints[0])\n    if len(positive_ints) == 0:\n        return (negative_ints[0], Nothing)\n    return (negative_ints[0], positive_ints[0])\n",
    "    return (\n        if lst == [] then (nothing, nothing)\n        else (\n            let (a, b) = lst[0]\n            in\n            if a < 0 then (a, b)\n            else (b, a)\n        )\n    )",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg_ints = []\n        pos_ints = []\n        for i in lst:\n            if i < 0:\n                neg_ints.append(i)\n            elif i > 0:\n                pos_ints.append(i)\n        if len(neg_ints) > 0:\n            return (min(neg_ints), max(pos_ints))\n        else:\n            return (Nothing, Nothing)\n",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst[0]\n    pos = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            neg = min(neg, lst[i])\n        else:\n            pos = max(pos, lst[i])\n    return (neg, pos)\n",
    "    return max_min(lst)",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst.filter(lambda x: x < 0)\n    pos = lst.filter(lambda x: x > 0)\n    if len(neg) > 0 and len(pos) > 0:\n        return (max(neg), min(pos))\n    elif len(neg) > 0:\n        return (max(neg), Nothing)\n    else:\n        return (Nothing, min(pos))\n",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    return (\n        if lst.empty() then (nothing, nothing)\n        else (\n            let (\n                a = lst.head\n                b = lst.tail\n            ) in\n            if a < 0 then (nothing, a)\n            else if b > 0 then (b, nothing)\n            else (a, b)\n        )\n    )",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            continue\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], Nothing)\n    if len(pos_ints) == 0:\n        return (Nothing, neg_ints[0])\n    return (max(neg_ints), min(pos_ints))\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg_ints = [i for i in lst if i < 0]\n        pos_ints = [i for i in lst if i > 0]\n        if len(neg_ints) == 0 and len(pos_ints) == 0:\n            return (Nothing, Nothing)\n        elif len(neg_ints) == 0:\n            return (pos_ints[0], Nothing)\n        elif len(pos_ints) == 0:\n            return (neg_ints[0], Nothing)\n        else:\n            return (max(neg_ints), min(pos_ints))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        return (max(lst), min(lst))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg = i\n        elif i > 0:\n            pos = i\n    return (neg, pos)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst.filter(lambda x: x < 0)\n    pos = lst.filter(lambda x: x > 0)\n    if len(neg) == 0 and len(pos) == 0:\n        return (Nothing, Nothing)\n    if len(neg) == 0:\n        return (pos.min(), pos.max())\n    if len(pos) == 0:\n        return (neg.min(), neg.max())\n    return (neg.min(), pos.max())",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    \n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        else:\n            pos_lst.append(i)\n    \n    if len(neg_lst) == 0 and len(pos_lst) == 0:\n        return (Nothing, Nothing)\n    \n    if len(neg_lst) > len(pos_lst):\n        return (Nothing, min(pos_lst))\n    else:\n        return (max(neg_lst), Nothing)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) > 0:\n        return (min(neg_ints), max(pos_ints))\n    elif len(pos_ints) > 0:\n        return (max(pos_ints), min(neg_ints))\n    else:\n        return (Nothing, Nothing)",
    "    return max(lst), min(lst)",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst, key=lambda x: x < 0)\n",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst, key=lambda x: x < 0), min(lst, key=lambda x: x > 0)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        return (max(lst), min(lst))",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg = 0\n        pos = 0\n        for i in lst:\n            if i < 0:\n                neg = max(neg, i)\n            else:\n                pos = max(pos, i)\n        return (neg, pos)\n",
    "    return max_min(lst)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    return max_min_integers(lst)",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], Nothing)\n    if len(pos_ints) == 0:\n        return (neg_ints[0], Nothing)\n    return (max(neg_ints), min(pos_ints))\n",
    "    return (\n        if lst.empty() then (nothing, nothing)\n        else (\n            let (a, b) = lst.head\n            in\n            if a < 0 then (nothing, a)\n            else (\n                if b > 0 then (b, nothing)\n                else (a, b)\n            )\n        )\n    )",
    "    return (\n        if lst == [] then (nothing, nothing)\n        else (\n            let (a, b) = lst[0]\n            in\n            if a < 0 then (nothing, a)\n            else (\n                if b > 0 then (b, nothing)\n                else (\n                    let (c, d) = lst[1]\n                    in\n                    if c < 0 then (nothing, c)\n                    else (\n                        if d > 0 then (d, nothing)\n                        else (\n                            let (e, f) = lst[2]\n                            in\n                            if e < 0 then (nothing, e)\n                            else (\n                                if f > 0 then (f, nothing)\n                                else (\n                                    let (g, h) = lst[3]\n                                    in\n                                    if g < 0 then (nothing, g)\n                                    else (\n                                        if h > 0 then (h, nothing)\n                                        else (\n                                            let (i, j) = lst[4]\n                                            in\n                                            if i < 0 then (nothing, i)\n                                            else (\n                                                if j > 0 then (j, nothing)\n                                                else (\n                                                    let (k, l) = lst[5]\n                                                    in\n                                                    if k < 0 then (nothing, k)\n                                                    else (\n                                                        if l > 0 then (l, nothing)\n                                                        else (\n                                                            let (m, n) = lst[6]\n                                                            in\n                                                            if m < 0 then (nothing, m)\n                                                            else (\n                                                                if n > 0 then (n, nothing)\n                                                                else (\n                                                                    let (o, p) = lst[7]\n                                                                    in\n                                                                    if o < 0 then (nothing, o)\n                                                                    ",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg = max(neg, i)\n        else:\n            pos = max(pos, i)\n    return (neg, pos)",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst, key=lambda x: x < 0), min(lst, key=lambda x: x > 0)\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = [i for i in lst if i < 0]\n    pos_ints = [i for i in lst if i > 0]\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], pos_ints[-1])\n    if len(pos_ints) == 0:\n        return (neg_ints[0], neg_ints[-1])\n    return (max(neg_ints), min(pos_ints))\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg_ints = [i for i in lst if i < 0]\n        pos_ints = [i for i in lst if i > 0]\n        if len(neg_ints) == 0 and len(pos_ints) == 0:\n            return (Nothing, Nothing)\n        elif len(neg_ints) == 0:\n            return (Nothing, pos_ints[0])\n        elif len(pos_ints) == 0:\n            return (neg_ints[0], Nothing)\n        else:\n            return (max(neg_ints), min(pos_ints))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst.filter(lambda x: x < 0)\n    pos = lst.filter(lambda x: x > 0)\n    if len(neg) == 0 and len(pos) == 0:\n        return (Nothing, Nothing)\n    if len(neg) == 0:\n        return (pos.min(), pos.max())\n    if len(pos) == 0:\n        return (neg.min(), neg.max())\n    return (neg.min(), pos.max())\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = -lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] > a:\n            a = lst[i]\n        if lst[i] < b:\n            b = lst[i]\n    return (a, b)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    \n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    \n    if len(neg_ints) > 0:\n        neg_ints.sort()\n        return (neg_ints[-1], pos_ints[0])\n    elif len(pos_ints) > 0:\n        pos_ints.sort()\n        return (pos_ints[0], pos_ints[-1])\n    else:\n        return (Nothing, Nothing)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        return (max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst)))\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg = lst.filter(lambda x: x < 0)\n        pos = lst.filter(lambda x: x > 0)\n        if len(neg) == 0 and len(pos) == 0:\n            return (Nothing, Nothing)\n        elif len(neg) == 0:\n            return (pos.min(), pos.max())\n        elif len(pos) == 0:\n            return (neg.min(), neg.max())\n        else:\n            return (neg.min(), pos.max())\n",
    "    if lst == []\n        return nothing, nothing\n    else\n        a = lst[0]\n        b = lst[0]\n        for i in lst[1:]:\n            if i < 0:\n                a = max(a, i)\n            else:\n                b = min(b, i)\n        return a, b\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], pos_ints[1])\n    if len(pos_ints) == 0:\n        return (neg_ints[0], neg_ints[1])\n    return (max(neg_ints), min(pos_ints))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n        else:\n            continue\n    if len(neg) == 0 and len(pos) == 0:\n        return (Nothing, Nothing)\n    if len(neg) > 0:\n        return (neg[0], pos[0])\n    else:\n        return (pos[0], neg[0])\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) > 0:\n        return (neg_ints[0], pos_ints[0])\n    else:\n        return (pos_ints[0], neg_ints[0])\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    neg_ints = filter(lambda x: x < 0, lst)\n    pos_ints = filter(lambda x: x > 0, lst)\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (nothing, nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], nothing)\n    if len(pos_ints) == 0:\n        return (neg_ints[0], nothing)\n    return (max(neg_ints), min(pos_ints))\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    negative_integers = [i for i in lst if i < 0]\n    positive_integers = [i for i in lst if i > 0]\n    if len(negative_integers) > 0:\n        return (negative_integers[0], positive_integers[0])\n    elif len(positive_integers) > 0:\n        return (positive_integers[0], negative_integers[0])\n    else:\n        return (nothing, nothing)\n",
    "    return (\n        Union.max(lst.filter(lambda x: x < 0)),\n        Union.min(lst.filter(lambda x: x > 0))\n    )",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return a, b\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = min(a, lst[i])\n        else:\n            b = max(b, lst[i])\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst[0] < 0\n    pos = lst[0] > 0\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            neg = True\n        if lst[i] > 0:\n            pos = True\n    if neg and pos:\n        return (Nothing, Nothing)\n    if neg:\n        return (Nothing, lst[0])\n    if pos:\n        return (lst[0], Nothing)\n    return (lst[0], lst[1])",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = max(a, lst[i])\n        else:\n            b = min(b, lst[i])\n    return (a, b)",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)",
    "    return max_min(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) > 0:\n        neg_ints.sort()\n        return (neg_ints[-1], pos_ints[0])\n    elif len(pos_ints) > 0:\n        pos_ints.sort()\n        return (pos_ints[0], pos_ints[-1])\n    else:\n        return (Nothing, Nothing)",
    "    return (\n        max(filter(lambda x: x < 0, lst)),\n        min(filter(lambda x: x > 0, lst))\n    )",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    \n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n    \n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    \n    if len(neg_ints) > 0:\n        return (neg_ints[0], pos_ints[0])\n    else:\n        return (pos_ints[0], neg_ints[0])",
    "    return (\n        max(\n            filter(\n                lambda x: x < 0,\n                lst\n            )\n        ),\n        min(\n            filter(\n                lambda x: x > 0,\n                lst\n            )\n        )\n    )\n",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_lst = filter(lambda x: x < 0, lst)\n    pos_lst = filter(lambda x: x > 0, lst)\n    if len(neg_lst) == 0 and len(pos_lst) == 0:\n        return (Nothing, Nothing)\n    if len(neg_lst) == 0:\n        return (pos_lst[0], Nothing)\n    if len(pos_lst) == 0:\n        return (Nothing, neg_lst[0])\n    return (max(neg_lst), min(pos_lst))\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            continue\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) > 0:\n        return (neg_ints[0], pos_ints[0])\n    else:\n        return (pos_ints[0], neg_ints[0])",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)",
    "    return max(lst, key=lambda x: x if x > 0 else -x), min(lst, key=lambda x: x if x < 0 else -x)",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        elif i > 0:\n            b = min(b, i)\n    return a, b",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    \n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        else:\n            pos_lst.append(i)\n    \n    if len(neg_lst) == 0 and len(pos_lst) == 0:\n        return (Nothing, Nothing)\n    \n    neg_lst.sort()\n    pos_lst.sort()\n    \n    return (neg_lst[-1], pos_lst[0])",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) > 0:\n        neg_ints.sort()\n        return (neg_ints[-1], pos_ints[0])\n    elif len(pos_ints) > 0:\n        pos_ints.sort()\n        return (pos_ints[0], pos_ints[-1])\n    else:\n        return (Nothing, Nothing)\n",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    a, b = nothing, nothing\n    for i in lst\n        if i < 0\n            a = max(a, i)\n        elif i > 0\n            b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = lst.filter(lambda x: x < 0)\n    pos = lst.filter(lambda x: x > 0)\n    if len(neg) == 0 and len(pos) == 0:\n        return (Nothing, Nothing)\n    if len(neg) == 0:\n        return (pos.min(), pos.max())\n    if len(pos) == 0:\n        return (neg.min(), neg.max())\n    return (neg.min(), pos.max())",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    a, b = nothing, nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        return (\n            max(\n                filter(\n                    lambda x: x < 0,\n                    lst\n                )\n            ),\n            min(\n                filter(\n                    lambda x: x > 0,\n                    lst\n                )\n            )\n        )\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = min(a, lst[i])\n        else:\n            b = max(b, lst[i])\n    return (a, b)\n",
    "    return max_min_integers(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    return max_min(lst)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = filter(lambda x: x < 0, lst)\n    pos_ints = filter(lambda x: x > 0, lst)\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], Nothing)\n    if len(pos_ints) == 0:\n        return (Nothing, neg_ints[0])\n    return (max(neg_ints), min(pos_ints))\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    if len(lst) == 0:\n        return (nothing, nothing)\n    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    return max_min(lst)",
    "    if lst == []\n        return nothing, nothing\n    else\n        return max(lst), min(lst)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a == nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n    if len(neg_ints) > 0:\n        return (max(neg_ints), min(pos_ints))\n    elif len(pos_ints) > 0:\n        return (min(pos_ints), max(pos_ints))\n    else:\n        return (Nothing, Nothing)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = min(a, lst[i])\n        else:\n            b = max(b, lst[i])\n    return (a, b)\n",
    "    return max_min(lst)",
    "    return max(filter(lambda x: x < 0, lst), key=abs), min(filter(lambda x: x > 0, lst), key=abs)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg_lst = []\n        pos_lst = []\n        for i in lst:\n            if i < 0:\n                neg_lst.append(i)\n            else:\n                pos_lst.append(i)\n        if len(neg_lst) == 0:\n            return (pos_lst[0], pos_lst[1])\n        elif len(pos_lst) == 0:\n            return (neg_lst[0], neg_lst[1])\n        else:\n            return (max(neg_lst), min(pos_lst))\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)\n",
    "    return max_min(lst)",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    return max(filter(lambda x: x < 0, lst)), min(filter(lambda x: x > 0, lst))\n",
    "    return max(lst, key=lambda x: x if x > 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg = max(neg, i)\n        else:\n            pos = max(pos, i)\n    return (neg, pos)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n        else:\n            pass\n    if len(neg_ints) > 0:\n        return (min(neg_ints), max(pos_ints))\n    elif len(pos_ints) > 0:\n        return (max(pos_ints), min(pos_ints))\n    else:\n        return (Nothing, Nothing)\n",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    else:\n        neg = lst[0]\n        pos = lst[0]\n        for i in range(1, len(lst)):\n            if lst[i] < 0:\n                neg = min(neg, lst[i])\n            else:\n                pos = max(pos, lst[i])\n        return (neg, pos)\n",
    "    return max(lst, key=lambda x: x if x < 0 else -x), min(lst, key=lambda x: x if x > 0 else -x)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = Nothing\n    b = Nothing\n    for i in lst:\n        if i < 0:\n            if a is Nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is Nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return (a, b)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = [i for i in lst if i < 0]\n    pos_ints = [i for i in lst if i > 0]\n    if len(neg_ints) > 0:\n        return (neg_ints[0], pos_ints[0])\n    elif len(pos_ints) > 0:\n        return (pos_ints[0], pos_ints[0])\n    else:\n        return (Nothing, Nothing)",
    "    a = nothing\n    b = nothing\n    for i in lst:\n        if i < 0:\n            if a is nothing:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is nothing:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    neg_ints = filter(lambda x: x < 0, lst)\n    pos_ints = filter(lambda x: x > 0, lst)\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return (Nothing, Nothing)\n    if len(neg_ints) == 0:\n        return (pos_ints[0], Nothing)\n    if len(pos_ints) == 0:\n        return (Nothing, neg_ints[0])\n    return (max(neg_ints), min(pos_ints))",
    "    return max_min(lst)",
    "    if len(lst) == 0:\n        return (Nothing, Nothing)\n    a = lst[0]\n    b = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < 0:\n            a = max(a, lst[i])\n        else:\n            b = min(b, lst[i])\n    return (a, b)\n",
    "    return max_min_integers(lst)"
  ],
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ]
}
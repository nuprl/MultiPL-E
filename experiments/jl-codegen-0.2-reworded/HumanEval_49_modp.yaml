name: HumanEval_49_modp
language: jl
prompt: "\"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n \
  \   3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3,\
  \ 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\nfunction modp(n::Int64,\
  \ p::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5)\
  \ == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
  @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
  \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
completions: ["    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if\
    \ p == 0:\n        raise ValueError(\"p must be > 0\")\n    if n == 0:\n     \
    \   return 1\n    if n == 1:\n        return p\n    if n % 2 == 0:\n        return\
    \ modp(n / 2, p) * modp(n / 2, p) % p\n    else:\n        return (modp(n / 2,\
    \ p) * modp(n / 2 + 1, p) % p) * 2 % p", "    if n == 0: return 1\n    return\
    \ (n * modp(n - 1, p)) % p", '    return n % p', "    if n < 0:\n        n = -n\n\
    \        p = -p\n    if p == 0:\n        return 0\n    if n == 0:\n        return\
    \ 1\n    if n == 1:\n        return p\n    if n % 2 == 0:\n        return modp(n\
    \ / 2, p) * modp(n / 2, p) % p\n    else:\n        return modp(n / 2, p) * modp(n\
    \ / 2, p) * modp(n / 2, p) % p", '    return n % p', '    return n % p', '    return
    n % p', "    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n\
    \    if n < 0:\n        n = -n\n        p = -p\n    return (n * modp(n - 1, p)\
    \ % p) * (p - 1) % p", "    if n < 0:\n        return modp(-n, p)\n    if n ==\
    \ 0:\n        return 0\n    if p == 0:\n        raise ZeroDivisionError\n    if\
    \ p == 1:\n        return 1\n    if p == 2:\n        return n & 1\n    if p ==\
    \ 3:\n        return (n * 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n\
    \    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n        return (n\
    \ * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n    if p == 8:\n   \
    \     return (n * 7) & 127\n    if p == 9:\n        return (n * 8) & 255\n   \
    \ if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n        return (n\
    \ * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n    if p == 13:\n\
    \        return (n * 12) & 4095\n    if p == 14:\n        return (n * 13) & 8191\n\
    \    if p == 15:\n        return (n * 14) & 16383\n    if p == 16:\n        return\
    \ (n * 15) & 32767\n    if p == 17:\n        return (n * 16) & 65535\n    if p\
    \ == 18:\n        return (n * 17) & 131071\n    if p == 19:\n        return (n\
    \ * 18) & 262143\n    if p == 20:\n        return (n * 19) & 524287\n    if p\
    \ == 21:\n        return (n * 20) & 1048575\n    if p == 22:\n        return (n\
    \ * 21) & 2097151\n    if p == 23:\n        return (n * 22) & 4194303\n    if\
    \ p == 24:\n        return (n * 23) & 8388607\n    if p == 25:\n        return\
    \ (n * 24) & 16777215\n    if p == 26:\n        return (n * 25) & 33554431\n \
    \   if p == 27:\n        return (n", "    if n < 0:\n        n = -n\n    if p\
    \ < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"p must be >\
    \ 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return p\n \
    \   if n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n    else:\n\
    \        return modp(n / 2, p) * modp(n / 2, p) * modp(n / 2, p) % p", '    return
    n % p', "    if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n     \
    \   return 0\n    if p == 1:\n        return n\n    if p == 2:\n        return\
    \ n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return\
    \ (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n \
    \       return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n   \
    \ if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n\
    \ * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n\
    \        return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67108863\n \
    \   if p", "    if p == 0:\n        return 1\n    if n == 0:\n        return 0\n\
    \    return (n * modp(n - 1, p) % p) % p", "    if n < 0:\n        n = -n\n  \
    \  if p < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"p must\
    \ be non-zero\")\n    if p == 1:\n        return 0\n    if n == 0:\n        return\
    \ 1\n    if n == 1:\n        return p\n    if n == 2:\n        return (p * p)\
    \ % p\n    if n % 2 == 0:\n        return (modp(n / 2, p) * modp(n / 2, p)) %\
    \ p\n    else:\n        return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p", " \
    \   if p == 0: \n        return 0 \n    if n == 0: \n        return 1 \n    return\
    \ (n % p) * modp(n / p, p) % p ", "    if n < 0:\n        return modp(-n, p)\n\
    \    if p == 0:\n        return 0\n    if p == 1:\n        return 1\n    if p\
    \ == 2:\n        return n & 1\n    if p == 3:\n        return (n * 2) & 3\n  \
    \  if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n        return (n *\
    \ 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n     \
    \   return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if\
    \ p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return (n *\
    \ 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n\
    \        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n\
    \    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return\
    \ (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p\
    \ == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return (n\
    \ * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if p\
    \ == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return (n\
    \ * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n    if\
    \ p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 33554431\n    if p == 27:\n        return\
    \ (n * 26) & 67108863\n    if p == 28", '    return n % p', '    return n % p',
  '    return n % p', '    return n % p', "    if n < 0:\n        return modp(-n,\
    \ p)\n    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n   \
    \ if p == 1:\n        return 0\n    if p == 2:\n        return n & 1\n    if p\
    \ == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return (n * 3) &\
    \ 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n        return\
    \ (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n    if p == 8:\n\
    \        return (n * 7) & 127\n    if p == 9:\n        return (n * 8) & 255\n\
    \    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n        return\
    \ (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n    if p ==\
    \ 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return (n * 13)\
    \ & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p == 16:\n\
    \        return (n * 15) & 32767\n    if p == 17:\n        return (n * 16) & 65535\n\
    \    if p == 18:\n        return (n * 17) & 131071\n    if p == 19:\n        return\
    \ (n * 18) & 262143\n    if p == 20:\n        return (n * 19) & 524287\n    if\
    \ p == 21:\n        return (n * 20) & 1048575\n    if p == 22:\n        return\
    \ (n * 21) & 2097151\n    if p == 23:\n        return (n * 22) & 4194303\n   \
    \ if p == 24:\n        return (n * 23) & 8388607\n    if p == 25:\n        return\
    \ (n * 24) & 16777215\n    if p == 26:\n        return (n * 25) & 33554431\n \
    \   if p == 27:\n        return (n * 26)", "    if n < 0:\n        n = -n\n  \
    \      p = -p\n    if p == 0:\n        return 0\n    if p == 1:\n        return\
    \ 1\n    if p == 2:\n        return n & 1\n    if p == 3:\n        return (n *\
    \ 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n       \
    \ return (n * 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p ==\
    \ 7:\n        return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n\
    \    if p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return\
    \ (n * 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p ==\
    \ 12:\n        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12)\
    \ & 4095\n    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n \
    \       return (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n\
    \    if p == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return\
    \ (n * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if\
    \ p == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return\
    \ (n * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n   \
    \ if p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 33554431\n    if p == 27:\n        return\
    \ (n * 26) & 67108863\n    if p", '    return n % p', '    return n % p', "  \
    \  if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n\
    \        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return\
    \ n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return\
    \ (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n \
    \       return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n   \
    \ if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n\
    \ * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n\
    \        return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67", '    return
    n % p', "    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n\
    \    if p == 1:\n        return 0\n    if n < 0:\n        n = -n\n        p =\
    \ -p\n    if n == 1:\n        return p\n    if n == 2:\n        return (p * p)\
    \ % p\n    if n % 2 == 0:\n        return (modp(n / 2, p) * modp(n / 2, p)) %\
    \ p\n    else:\n        return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p", " \
    \   if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n\
    \        return 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return\
    \ p\n    if p == 1:\n        return 0\n    if p == 2:\n        return n & 1\n\
    \    if p == 3:\n        return (n * n) & 1\n    if p == 4:\n        return (n\
    \ * n * n) & 1\n    if p == 5:\n        return (n * n * n * n) & 1\n    if p ==\
    \ 6:\n        return (n * n * n * n * n) & 1\n    if p == 7:\n        return (n\
    \ * n * n * n * n * n) & 1\n    if p == 8:\n        return (n * n * n * n * n\
    \ * n * n) & 1\n    if p == 9:\n        return (n * n * n * n * n * n * n * n)\
    \ & 1\n    if p == 10:\n        return (n * n * n * n * n * n * n * n * n) & 1\n\
    \    if p == 11:\n        return (n * n * n * n * n * n * n * n * n * n) & 1\n\
    \    if p == 12:\n        return (n * n * n * n * n * n * n * n * n * n * n) &\
    \ 1\n    if p == 13:\n        return (n * n * n * n * n * n * n * n * n * n *\
    \ n * n) & 1\n    if p == 14:\n        return (n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n) & 1\n    if p == 15:\n        return (n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n) & 1\n    if p == 16:\n        return (n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n) & 1\n    if p == 17:\n\
    \        return", '    return n % p', '    return (n % p) + (n / p) * p', '    return
    n % p', "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if\
    \ p == 0:\n        return 0\n    if n == 0:\n        return 1\n    if n == 1:\n\
    \        return p\n    if n == 2:\n        return (p * p) % p\n    if n % 2 ==\
    \ 0:\n        return (modp(n / 2, p) * modp(n / 2, p)) % p\n    else:\n      \
    \  return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p", '    return n % p', "  \
    \  if n < 0:\n        n = -n\n        if n % p == 0:\n            return 0\n \
    \   return n % p", '    return n % p', "    if n < 0:\n        return modp(-n,\
    \ p)\n    if n == 0:\n        return 0\n    if p == 0:\n        raise ValueError(\"\
    p cannot be zero\")\n    if p < 0:\n        raise ValueError(\"p cannot be negative\"\
    )\n    if n == 1:\n        return 1\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p) * modp(n // 2, p) % p\n    else:\n\
    \        return (modp(n // 2, p) * modp(n // 2, p) + p) % p", "    if n < 0:\n\
    \        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        return\
    \ 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n    else:\n\
    \        return modp(n / 2, p) * modp(n / 2, p) * modp(n / 2, p) % p", "    if\
    \ p == 0:\n        return 1\n    if n == 0:\n        return 0\n    return (n *\
    \ modp(n - 1, p) % p) % p", "    if n == 0:\n        return 1\n    return (n *\
    \ modp(n - 1, p)) % p", "    if p == 0:\n        return 0\n    if n == 0:\n  \
    \      return 1\n    return (n * modp(n - 1, p) % p) % p", "    if p == 0:\n \
    \       return 0\n    if n == 0:\n        return 1\n    return (n * modp(n - 1,\
    \ p) % p)", '    return n % p', "    if n < 0:\n        return modp(-n, p)\n \
    \   if p == 0:\n        return 0\n    if n == 0:\n        return 1\n    if p ==\
    \ 1:\n        return 0\n    if p == 2:\n        return n & 1\n    if p == 3:\n\
    \        return (n * 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n    if\
    \ p == 5:\n        return (n * 4) & 15\n    if p == 6:\n        return (n * 5)\
    \ & 31\n    if p == 7:\n        return (n * 6) & 63\n    if p == 8:\n        return\
    \ (n * 7) & 127\n    if p == 9:\n        return (n * 8) & 255\n    if p == 10:\n\
    \        return (n * 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n\
    \    if p == 12:\n        return (n * 11) & 2047\n    if p == 13:\n        return\
    \ (n * 12) & 4095\n    if p == 14:\n        return (n * 13) & 8191\n    if p ==\
    \ 15:\n        return (n * 14) & 16383\n    if p == 16:\n        return (n * 15)\
    \ & 32767\n    if p == 17:\n        return (n * 16) & 65535\n    if p == 18:\n\
    \        return (n * 17) & 131071\n    if p == 19:\n        return (n * 18) &\
    \ 262143\n    if p == 20:\n        return (n * 19) & 524287\n    if p == 21:\n\
    \        return (n * 20) & 1048575\n    if p == 22:\n        return (n * 21) &\
    \ 2097151\n    if p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n\
    \        return (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) &\
    \ 16777215\n    if p == 26:\n        return (n * 25) & 33554431\n    if p == 27:\n\
    \        return (n * 26)", "    if n < 0:\n        n = -n\n        p = -p\n  \
    \  if p == 0:\n        return 0\n    if p < 0:\n        raise ValueError(\"p must\
    \ be positive\")\n    if p == 1:\n        return 1\n    if p == 2:\n        return\
    \ n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return\
    \ (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n \
    \       return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n   \
    \ if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n\
    \ * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n\
    \        return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27", "    if n < 0:\n        return modp(-n,\
    \ p)\n    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n   \
    \ if p == 1:\n        return 0\n    if p == 2:\n        return n & 1\n    if p\
    \ == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return (n * 3) &\
    \ 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n        return\
    \ (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n    if p == 8:\n\
    \        return (n * 7) & 127\n    if p == 9:\n        return (n * 8) & 255\n\
    \    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n        return\
    \ (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n    if p ==\
    \ 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return (n * 13)\
    \ & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p == 16:\n\
    \        return (n * 15) & 32767\n    if p == 17:\n        return (n * 16) & 65535\n\
    \    if p == 18:\n        return (n * 17) & 131071\n    if p == 19:\n        return\
    \ (n * 18) & 262143\n    if p == 20:\n        return (n * 19) & 524287\n    if\
    \ p == 21:\n        return (n * 20) & 1048575\n    if p == 22:\n        return\
    \ (n * 21) & 2097151\n    if p == 23:\n        return (n * 22) & 4194303\n   \
    \ if p == 24:\n        return (n * 23) & 8388607\n    if p == 25:\n        return\
    \ (n * 24) & 16777215\n    if p == 26:\n        return (n * 25) & 33554431\n \
    \   if p == 27:\n        return (n * 26)", "    if n < 0:\n        return modp(-n,\
    \ p)\n    if p == 0:\n        return 0\n    if p == 1:\n        return 1\n   \
    \ if p == 2:\n        return n & 1\n    if p == 3:\n        return (n * 2) & 3\n\
    \    if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n        return (n\
    \ * 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n   \
    \     return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if\
    \ p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return (n *\
    \ 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n\
    \        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n\
    \    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return\
    \ (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p\
    \ == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return (n\
    \ * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if p\
    \ == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return (n\
    \ * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n    if\
    \ p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 33554431\n    if p == 27:\n        return\
    \ (n * 26) & 67108863\n    if p == 28", "    if n < 0:\n        n = -n\n     \
    \   p = -p\n    if p == 0:\n        return 0\n    if p == 1:\n        return 1\n\
    \    if p == 2:\n        return n & 1\n    if p == 3:\n        return (n * 2)\
    \ & 3\n    if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n        return\
    \ (n * 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n\
    \        return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n \
    \   if p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return\
    \ (n * 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p ==\
    \ 12:\n        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12)\
    \ & 4095\n    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n \
    \       return (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n\
    \    if p == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return\
    \ (n * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if\
    \ p == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return\
    \ (n * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n   \
    \ if p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 33554431\n    if p == 27:\n        return\
    \ (n * 26) & 67108863\n    if p", "    if p == 0:\n        return 1\n    if n\
    \ == 0:\n        return 0\n    return (n * modp(n - 1, p) % p) % p", "    if n\
    \ == 0:\n        return 1\n    return (n * modp(n - 1, p) % p)", '    return n
    % p', "    if n == 0: return 1\n    return (n * modp(n - 1, p) % p)", "    if\
    \ p == 0:\n        return 0\n    if n == 0:\n        return 1\n    return (n *\
    \ modp(n - 1, p) % p) % p", "    if p == 0: return 1\n    if n == 0: return 0\n\
    \    return (n % p) * modp(n / p, p) % p", "    if p == 0:\n        return 0\n\
    \    if n == 0:\n        return 1\n    return (n * modp(n - 1, p)) % p", "   \
    \ if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n        return 0\n\
    \    if p == 1:\n        return n\n    if n == 0:\n        return 1\n    if n\
    \ == 1:\n        return p\n    if n == p:\n        return 0\n    if n % p == 0:\n\
    \        return n / p\n    return (n * modp(n - p, p)) % p", "    if p == 0:\n\
    \        return 1\n    if n == 0:\n        return 0\n    return (n * modp(n -\
    \ 1, p) % p) % p", "    if n < 0:\n        n = -n\n        p = -p\n    if p ==\
    \ 0:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n   \
    \     return n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n\
    \        return (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n   \
    \ if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n        return (n *\
    \ 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n    \
    \    return (n * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n   \
    \ if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n        return\
    \ (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n    if p ==\
    \ 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return (n * 14)\
    \ & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p == 17:\n\
    \        return (n * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n\
    \    if p == 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return\
    \ (n * 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if\
    \ p == 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return\
    \ (n * 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n   \
    \ if p == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67108863\n \
    \   if p", '    return n % p', "    if n < 0:\n        n = -n\n        p = -p\n\
    \    if p == 0:\n        raise ValueError(\"p must be non-zero\")\n    if p ==\
    \ 1:\n        return 0\n    if p == 2:\n        return n & 1\n    if p < 0:\n\
    \        raise ValueError(\"p must be non-negative\")\n    if p < n:\n       \
    \ return 0\n    return (n * modp(n - 1, p)) % p", "    if p == 0: return 0\n \
    \   if n == 0: return 1\n    return (n % p) * modp(n / p, p) % p", "    if p ==\
    \ 0: return 1\n    if n == 0: return 0\n    return (n % p) * modp(n / p, p) %\
    \ p", '    return n % p', "    if n < 0:\n        n = -n\n        p = -p\n   \
    \ if p == 0:\n        return 0\n    if p == 1:\n        return n\n    if p ==\
    \ 2:\n        return n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if\
    \ p == 4:\n        return (n * 3) & 7\n    if p == 5:\n        return (n * 4)\
    \ & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n        return\
    \ (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n\
    \        return (n * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n\
    \    if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n        return\
    \ (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n    if p ==\
    \ 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return (n * 14)\
    \ & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p == 17:\n\
    \        return (n * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n\
    \    if p == 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return\
    \ (n * 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if\
    \ p == 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return\
    \ (n * 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n   \
    \ if p == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67108863\n \
    \   if p", '    return n % p', "    if n < 0:\n        n = -n\n    if p < 0:\n\
    \        p = -p\n    if p == 0:\n        return 0\n    if n == 0:\n        return\
    \ 1\n    if n == 1:\n        return p\n    if n % 2 == 0:\n        return modp(n\
    \ / 2, p) * modp(n / 2, p) % p\n    else:\n        return modp(n / 2, p) * modp(n\
    \ / 2, p) * modp(n / 2, p) % p", '    return n % p', "    if n < 0:\n        n\
    \ = -n\n        p = -p\n    if p == 0:\n        raise ValueError(\"p must be >\
    \ 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n \
    \   if n == 1:\n        return p\n    if n % 2 == 0:\n        return modp(n /\
    \ 2, p) * modp(n / 2, p) % p\n    else:\n        return (modp(n / 2, p) * modp(n\
    \ / 2 + 1, p) % p) * 2 % p", '    return n % p', "    if p == 0: \n        return\
    \ 1 \n    if n == 0: \n        return 0 \n    return (n % p) * modp(n // p, p)\
    \ % p ", '    return n % p', "    if n < 0:\n        n = -n\n    if p < 0:\n \
    \       p = -p\n    if p == 0:\n        raise ValueError(\"p must be > 0\")\n\
    \    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p\
    \ == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n\
    \        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return\
    \ 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if\
    \ p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p ==\
    \ 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n\
    \        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n    \
    \    return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return\
    \ 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n\
    \    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if\
    \ p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p ==\
    \ 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n\
    \        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n    \
    \    return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return\
    \ 30\n    if p == 32:\n        return 31\n    if p == 33:\n        return 32\n\
    \    if p == 34:\n        return 33\n    if p == 35:\n        return 34\n    if\
    \ p == 36:\n        return 35\n    if p == 37:\n        return 36\n    if p ==\
    \ 38:\n        return 37\n    if p == 39:\n        return 38\n    if p == 40:\n\
    \        return 39\n    if p == 41:\n        return 40\n    if p == 42:\n    \
    \    return 41\n    if p == 43", "    if n < 0:\n        n = -n\n        p = -p\n\
    \    if p == 0:\n        return 0\n    if p == 1:\n        return n\n    if p\
    \ == 2:\n        return n & 1\n    if p == 3:\n        return (n * 2) & 3\n  \
    \  if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n        return (n *\
    \ 2) & 3\n    if p == 6:\n        return (n * 3) & 7\n    if p == 7:\n       \
    \ return (n * 2) & 3\n    if p == 8:\n        return (n * 3) & 7\n    if p ==\
    \ 9:\n        return (n * 2) & 3\n    if p == 10:\n        return (n * 3) & 7\n\
    \    if p == 11:\n        return (n * 2) & 3\n    if p == 12:\n        return\
    \ (n * 3) & 7\n    if p == 13:\n        return (n * 2) & 3\n    if p == 14:\n\
    \        return (n * 3) & 7\n    if p == 15:\n        return (n * 2) & 3\n   \
    \ if p == 16:\n        return (n * 3) & 7\n    if p == 17:\n        return (n\
    \ * 2) & 3\n    if p == 18:\n        return (n * 3) & 7\n    if p == 19:\n   \
    \     return (n * 2) & 3\n    if p == 20:\n        return (n * 3) & 7\n    if\
    \ p == 21:\n        return (n * 2) & 3\n    if p == 22:\n        return (n * 3)\
    \ & 7\n    if p == 23:\n        return (n * 2) & 3\n    if p == 24:\n        return\
    \ (n * 3) & 7\n    if p == 25:\n        return (n * 2) & 3\n    if p == 26:\n\
    \        return (n * 3) & 7\n    if p == 27:\n        return (n * 2) & 3\n   \
    \ if p == 28:\n        return (n * 3) & 7\n    if p == 29:\n        return (n\
    \ * 2) & 3", '    return n % p', "    if p == 0:\n        return 1\n    if n ==\
    \ 0:\n        return 0\n    return (n * modp(n - 1, p) % p) % p", "    if p ==\
    \ 0:\n        return 1\n    if n == 0:\n        return 0\n    return (n % p) *\
    \ modp(n / p, p) % p", '    return n % p', "    if n < 0:\n        n = -n\n  \
    \      p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        raise\
    \ ZeroDivisionError\n    if p == 1:\n        return n\n    if n == 1:\n      \
    \  return 0\n    if n == 2:\n        return p\n    if n % 2 == 0:\n        return\
    \ modp(n / 2, p) * modp(n / 2, p) % p\n    return modp(n - 1, p) * modp(n - 1,\
    \ p) % p", '    return n % p', "    if n < 0:\n        return modp(-n, p)\n  \
    \  if p == 0:\n        return 0\n    if n == 0:\n        return 1\n    return\
    \ (n * modp(n - 1, p)) % p", '    return n % p', '    return n % p', '    return
    n % p', "    if n < 0:\n        n = -n\n        if n >= p:\n            return\
    \ n % p\n        else:\n            return n\n    else:\n        if n >= p:\n\
    \            return n % p\n        else:\n            return n\n", '    return
    n % p', "    if p == 0:\n        return 1\n    if n == 0:\n        return 0\n\
    \    return (n * modp(n - 1, p) % p) % p", '    return n % p', '    return n %
    p', "    if n < 0:\n        return modp(-n, p)\n    if p == 0:\n        return\
    \ 0\n    if p == 1:\n        return 1\n    if p < 0:\n        raise ValueError(\"\
    p must be a positive integer\")\n    if n == 0:\n        return 1\n    if n ==\
    \ 1:\n        return p\n    if n == -1:\n        return modp(p - 1, p)\n    if\
    \ n < p:\n        return modp(n, p)\n    if n % p == 0:\n        return 0\n  \
    \  return modp(n, p)", "    if p == 0: \n        return 0 \n    if n == 0: \n\
    \        return 1 \n    return (n * modp(n - 1, p) % p) * (p - 1) % p ", "   \
    \ if p == 0: return 0\n    if n == 0: return 1\n    if p < 0: p = -p\n    if n\
    \ < 0: n = -n\n    if n >= p: n %= p\n    if n < 0: n += p\n    return n", " \
    \   if n < 0:\n        n = -n\n        p = -p\n    if n == 0:\n        return\
    \ 1\n    if p == 0:\n        raise ValueError(\"p must be non-zero\")\n    if\
    \ p == 1:\n        return 0\n    if p == 2:\n        return n & 1\n    if p ==\
    \ 3:\n        return (n * 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n\
    \    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n        return (n\
    \ * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n    if p == 8:\n   \
    \     return (n * 7) & 127\n    if p == 9:\n        return (n * 8) & 255\n   \
    \ if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n        return (n\
    \ * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n    if p == 13:\n\
    \        return (n * 12) & 4095\n    if p == 14:\n        return (n * 13) & 8191\n\
    \    if p == 15:\n        return (n * 14) & 16383\n    if p == 16:\n        return\
    \ (n * 15) & 32767\n    if p == 17:\n        return (n * 16) & 65535\n    if p\
    \ == 18:\n        return (n * 17) & 131071\n    if p == 19:\n        return (n\
    \ * 18) & 262143\n    if p == 20:\n        return (n * 19) & 524287\n    if p\
    \ == 21:\n        return (n * 20) & 1048575\n    if p == 22:\n        return (n\
    \ * 21) & 2097151\n    if p == 23:\n        return (n * 22) & 4194303\n    if\
    \ p == 24:\n        return (n * 23) & 8388607\n    if p == 25:\n        return\
    \ (n * 24) & 16777215\n    if p == 26:\n        return (n * 25) & 33554431\n \
    \   if p", "    if n < 0:\n        return modp(-n, p)\n    if p == 0:\n      \
    \  return 0\n    if p < 0:\n        return modp(n, -p)\n    if n == 0:\n     \
    \   return 0\n    if n == 1:\n        return p\n    if n == 2:\n        return\
    \ (p * p) % p\n    if n % 2 == 0:\n        return (modp(n / 2, p) * modp(n / 2,\
    \ p)) % p\n    else:\n        return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p",
  "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n\
    \        return 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return\
    \ p\n    if n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n\
    \    else:\n        return (modp(n / 2, p) * modp(n / 2, p) + p) % p", "    if\
    \ n < 0:\n        return modp(-n, p)\n    if n == 0:\n        return 0\n    if\
    \ p == 0:\n        raise ValueError(\"p cannot be zero\")\n    if p == 1:\n  \
    \      return 1\n    if n == 1:\n        return p\n    if n == 2:\n        return\
    \ (p * p) % p\n    if n % 2 == 0:\n        return (modp(n / 2, p) * modp(n / 2,\
    \ p)) % p\n    else:\n        return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p",
  "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n\
    \        raise ZeroDivisionError\n    if n == 0:\n        return 1\n    if n ==\
    \ 1:\n        return p\n    if p == 1:\n        return 0\n    if p == 2:\n   \
    \     return n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n\
    \        return (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n   \
    \ if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n        return (n *\
    \ 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n    \
    \    return (n * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n   \
    \ if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n        return\
    \ (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n    if p ==\
    \ 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return (n * 14)\
    \ & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p == 17:\n\
    \        return (n * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n\
    \    if p == 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return\
    \ (n * 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if\
    \ p == 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return\
    \ (n * 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n   \
    \ if p == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n", '    return n % p', "    if n < 0:\n        return modp(-n, p)\n    if\
    \ p == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n == 0:\n\
    \        return 1\n    if n == 1:\n        return p\n    if n == p:\n        return\
    \ 0\n    if n % p == 0:\n        return 0\n    return (n * modp(n / p, p)) % p",
  "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n\
    \        raise ValueError(\"p must be > 0\")\n    if n == 0:\n        return 1\n\
    \    if n == 1:\n        return p\n    if n % 2 == 0:\n        return modp(n /\
    \ 2, p) * modp(n / 2, p) % p\n    else:\n        return modp(n / 2, p) * modp(n\
    \ / 2, p) * modp(n / 2, p) % p", '    return n % p', '    return n % p', "   \
    \ if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n \
    \       raise ValueError(\"p must be > 0\")\n    if n == 0:\n        return 1\n\
    \    if n == 1:\n        return p\n    if n % 2 == 0:\n        return modp(n /\
    \ 2, p) * modp(n / 2, p) % p\n    else:\n        return modp(n / 2, p) * modp(n\
    \ / 2, p) * modp(n / 2, p) % p", '    return n % p', '    return n % p', "   \
    \ if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n        return 0\n\
    \    if p < 0:\n        raise ValueError(\"p must be positive\")\n    if p ==\
    \ 1:\n        return 1\n    if p == 2:\n        return n & 1\n    if p == 3:\n\
    \        return (n * n) % 3\n    if p == 4:\n        return (n * n * n) % 4\n\
    \    if p == 5:\n        return (n * n * n * n) % 5\n    if p == 6:\n        return\
    \ (n * n * n * n * n) % 6\n    if p == 7:\n        return (n * n * n * n * n *\
    \ n) % 7\n    if p == 8:\n        return (n * n * n * n * n * n * n) % 8\n   \
    \ if p == 9:\n        return (n * n * n * n * n * n * n * n) % 9\n    if p ==\
    \ 10:\n        return (n * n * n * n * n * n * n * n * n) % 10\n    if p == 11:\n\
    \        return (n * n * n * n * n * n * n * n * n * n) % 11\n    if p == 12:\n\
    \        return (n * n * n * n * n * n * n * n * n * n * n) % 12\n    if p ==\
    \ 13:\n        return (n * n * n * n * n * n * n * n * n * n * n * n) % 13\n \
    \   if p == 14:\n        return (n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n) % 14\n    if p == 15:\n        return (n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n) % 15\n    if p == 16:\n        return (n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n) % 16\n    if p == 17:\n       \
    \ return (n * n * n * n * n *", '    return n % p', "    if n < 0:\n        n\
    \ = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"\
    p must be > 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return\
    \ p\n    if n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n\
    \    else:\n        return (modp(n / 2, p) * modp(n / 2, p) + p) % p", "    if\
    \ p == 0:\n        return 0\n    if n == 0:\n        return 1\n    return (n %\
    \ p) * modp(n / p, p) % p", "    if n < 0:\n        n = -n\n    if p < 0:\n  \
    \      p = -p\n    if p == 0:\n        raise ValueError(\"p must be > 0\")\n \
    \   if n == 0:\n        return 1\n    if n == 1:\n        return p\n    if n %\
    \ 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n    else:\n   \
    \     return modp(n / 2, p) * modp(n / 2, p) * modp(n / 2, p) % p", '    return
    n % p', "    if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n     \
    \   return 0\n    if p == 1:\n        return n\n    if p == 2:\n        return\
    \ n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return\
    \ (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n \
    \       return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n   \
    \ if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n\
    \ * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n\
    \        return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67108863\n \
    \   if p", '    return n % p', "    if n < 0:\n        return modp(-n, p)\n  \
    \  if p == 0:\n        return 0\n    return (n * (p - 1) + 1) % p", "    if n\
    \ < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n      \
    \  raise ValueError(\"p must be > 0\")\n    if n == 0:\n        return 1\n   \
    \ if n == 1:\n        return p\n    if n % 2 == 0:\n        return (modp(n / 2,\
    \ p) * modp(n / 2, p)) % p\n    return (modp(n / 2, p) * modp(n / 2 + 1, p)) %\
    \ p", '    return n % p', '    return n % p', '    return n % p', '    return
    n % p', "    if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n     \
    \   raise ValueError(\"p must be > 0\")\n    if n == 0:\n        return 1\n  \
    \  if p == 1:\n        return 0\n    if n == 1:\n        return p\n    if n ==\
    \ 2:\n        return (p * p) % p\n    if n % 2 == 0:\n        return (modp(n /\
    \ 2, p) * modp(n / 2, p)) % p\n    else:\n        return (modp(n / 2, p) * modp(n\
    \ / 2 + 1, p)) % p", "    if n < 0:\n        n = -n\n        if n >= p:\n    \
    \        return n % p\n        else:\n            return n\n    else:\n      \
    \  return n % p", '    return n % p', "    if n < 0:\n        n = -n\n    if p\
    \ < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"p must be >\
    \ 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return p\n \
    \   if n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n    else:\n\
    \        return modp(n / 2, p) * modp(n / 2 + 1, p) % p", "    if n < 0:\n   \
    \     n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        return 0\n\
    \    return (n * (p - 1) + 1) % p", '    return (n % p)', '    return n % p',
  '    return n % p', "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n\
    \    if p == 0:\n        raise ValueError(\"p must be non-zero\")\n    if p ==\
    \ 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n   \
    \     return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return\
    \ 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if\
    \ p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n\
    \        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n     \
    \   return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return\
    \ 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n\
    \    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if\
    \ p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p ==\
    \ 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n\
    \        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n    \
    \    return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return\
    \ 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n\
    \    if p == 30:\n        return 29\n    if p == 31:\n        return 30\n    if\
    \ p == 32:\n        return 31\n    if p == 33:\n        return 32\n    if p ==\
    \ 34:\n        return 33\n    if p == 35:\n        return 34\n    if p == 36:\n\
    \        return 35\n    if p == 37:\n        return 36\n    if p == 38:\n    \
    \    return 37\n    if p == 39:\n        return 38\n    if p == 40:\n        return\
    \ 39\n    if p == 41:\n        return 40\n    if p == 42:\n        return 41\n\
    \    if p ==", "    if p == 0:\n        return 1\n    if n == 0:\n        return\
    \ 0\n    return (n * modp(n - 1, p) % p) % p", "    if p == 0: return 1\n    if\
    \ n == 0: return 0\n    return (n % p) * modp(n / p, p) % p", "    if n < 0:\n\
    \        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        return\
    \ 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n    else:\n\
    \        return (modp(n / 2, p) * modp(n / 2, p) + p) % p", '    return n % p',
  "    if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n        return 0\n\
    \    if p < 0:\n        raise ValueError(\"p must be a positive integer\")\n \
    \   if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p ==\
    \ 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n   \
    \     return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return\
    \ 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if\
    \ p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p ==\
    \ 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n\
    \        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n    \
    \    return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return\
    \ 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n\
    \    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if\
    \ p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p ==\
    \ 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n\
    \        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n    \
    \    return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return\
    \ 30\n    if p == 32:\n        return 31\n    if p == 33:\n        return 32\n\
    \    if p == 34:\n        return 33\n    if p == 35:\n        return 34\n    if\
    \ p == 36:\n        return 35\n    if p == 37:\n        return 36\n    if p ==\
    \ 38:\n        return 37\n    if p == 39:\n        return 38\n    if p == 40:\n\
    \        return 39\n    if p == 41:\n        return 40\n    if p == 42:\n    \
    \    return 41\n", '    return n % p', "    if n < 0:\n        n = -n\n    if\
    \ p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n \
    \       raise ValueError(\"p must be non-zero\")\n    if p == 1:\n        return\
    \ 1\n    if p == 2:\n        return n & 1\n    if p == 3:\n        return (n *\
    \ 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n       \
    \ return (n * 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p ==\
    \ 7:\n        return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n\
    \    if p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return\
    \ (n * 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p ==\
    \ 12:\n        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12)\
    \ & 4095\n    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n \
    \       return (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n\
    \    if p == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return\
    \ (n * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if\
    \ p == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return\
    \ (n * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n   \
    \ if p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 3", "    if n < 0:\n        n = -n\n\
    \        if n % p == 0:\n            return 0\n    return (n % p) * (2 ** (p -\
    \ 1))", "    if n < 0:\n        return modp(-n, p)\n    if p == 0:\n        return\
    \ 0\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if\
    \ n == 1:\n        return p\n    if p == 2:\n        return (n & 1) == 1\n   \
    \ if p == 3:\n        return (n & 2) == 2\n    if p == 4:\n        return (n &\
    \ 3) == 3\n    if p == 5:\n        return (n & 4) == 4\n    if p == 6:\n     \
    \   return (n & 5) == 5\n    if p == 7:\n        return (n & 6) == 6\n    if p\
    \ == 8:\n        return (n & 7) == 7\n    if p == 9:\n        return (n & 8) ==\
    \ 8\n    if p == 10:\n        return (n & 9) == 9\n    if p == 11:\n        return\
    \ (n & 10) == 10\n    if p == 12:\n        return (n & 11) == 11\n    if p ==\
    \ 13:\n        return (n & 12) == 12\n    if p == 14:\n        return (n & 13)\
    \ == 13\n    if p == 15:\n        return (n & 14) == 14\n    if p == 16:\n   \
    \     return (n & 15) == 15\n    if p == 17:\n        return (n & 16) == 16\n\
    \    if p == 18:\n        return (n & 17) == 17\n    if p == 19:\n        return\
    \ (n & 18) == 18\n    if p == 20:\n        return (n & 19) == 19\n    if p ==\
    \ 21:\n        return (n & 20) == 20\n    if p == 22:\n        return (n & 21)\
    \ == 21\n    if p == 23:\n        return (n & 22) == 22\n    if p == 24:\n   \
    \     return (n & 23) == 23\n    if p == 25:\n        return (n & 24) == 24\n\
    \    if p == 26:\n        return (n & 25) == 25\n    if p == 27:\n        return\
    \ (n & 26) == 26\n    if p == 28:\n        return", "    if n < 0:\n        n\
    \ = -n\n        p = -p\n    if p == 0:\n        raise ValueError(\"p must be >\
    \ 0\")\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n \
    \   if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p ==\
    \ 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n   \
    \     return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return\
    \ 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n \
    \   if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if\
    \ p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p ==\
    \ 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n\
    \        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n    \
    \    return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return\
    \ 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n\
    \    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if\
    \ p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p ==\
    \ 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n\
    \        return 30\n    if p == 32:\n        return 31\n    if p == 33:\n    \
    \    return 32\n    if p == 34:\n        return 33\n    if p == 35:\n        return\
    \ 34\n    if p == 36:\n        return 35\n    if p == 37:\n        return 36\n\
    \    if p == 38:\n        return 37\n    if p == 39:\n        return 38\n    if\
    \ p == 40:\n        return 39\n    if p == 41:\n        return 40\n    if p ==\
    \ 42:\n        return 41\n    if p == 43:\n        return 42\n    ", '    return
    n % p', '    return n % p', "    if n < 0:\n        n = -n\n        p = -p\n \
    \   if p == 0:\n        raise ValueError(\"p must be > 0\")\n    if p == 1:\n\
    \        return 0\n    if n == 0:\n        return 1\n    return (n * modp(n -\
    \ 1, p)) % p", "    if p == 0:\n        return 1\n    if n == 0:\n        return\
    \ 0\n    return (n % p) * (modp(n / p, p) % p) % p", "    if n < 0:\n        return\
    \ modp(-n, p)\n    if p == 0:\n        return 0\n    if p < 0:\n        return\
    \ modp(n, -p)\n    if n == 0:\n        return 0\n    if n == 1:\n        return\
    \ p\n    if n == 2:\n        return (p * p) % p\n    if n % 2 == 0:\n        return\
    \ (modp(n / 2, p) * modp(n / 2, p)) % p\n    else:\n        return (modp(n / 2,\
    \ p) * modp(n / 2 + 1, p)) % p", '    return n % p', '    return n % p', '    return
    n % p', "    if n == 0:\n        return 1\n    return (n * modp(n - 1, p) % p)",
  "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n\
    \        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return\
    \ n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return\
    \ (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n \
    \       return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n   \
    \ if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n\
    \ * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n\
    \        return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67", "    if\
    \ n < 0:\n        return modp(-n, p)\n    if p == 0:\n        return 0\n    if\
    \ p == 1:\n        return 1\n    if n == 0:\n        return 1\n    if n == 1:\n\
    \        return p\n    if n == 2:\n        return (p * p) % p\n    if n % 2 ==\
    \ 0:\n        return (modp(n / 2, p) * modp(n / 2, p)) % p\n    return (modp(n\
    \ / 2, p) * modp(n / 2 + 1, p)) % p", '    return n % p', '    return n % p',
  "    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n    return\
    \ (n * modp(n - 1, p) % p) % p", "    if p == 0:\n        return 1\n    if n ==\
    \ 0:\n        return 0\n    return (n % p) * modp(n / p, p) % p", "    if n <\
    \ 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return\
    \ 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return n & 1\n\
    \    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return (n\
    \ * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n    \
    \    return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n    if\
    \ p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n * 8)\
    \ & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n    \
    \    return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67", '    return
    n % p', '    return n % p', '    return n % p', '    return n % p', '    return
    n % p', "    if n < 0:\n        n = -n\n        p = -p\n    if p == 0:\n     \
    \   raise ValueError(\"p must be > 0\")\n    if n == 0:\n        return 1\n  \
    \  if n == 1:\n        return p\n    if p == 1:\n        return 0\n    if p ==\
    \ 2:\n        return n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if\
    \ p == 4:\n        return (n * 3) & 7\n    if p == 5:\n        return (n * 4)\
    \ & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n        return\
    \ (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n\
    \        return (n * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n\
    \    if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n        return\
    \ (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n    if p ==\
    \ 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return (n * 14)\
    \ & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p == 17:\n\
    \        return (n * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n\
    \    if p == 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return\
    \ (n * 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if\
    \ p == 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return\
    \ (n * 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n   \
    \ if p == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25", '    return n % p', "    if n < 0:\n        n = -n\n    if p < 0:\n\
    \        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return\
    \ 1\n    if p == 1:\n        return n\n    if n == 1:\n        return 0\n    if\
    \ n == 2:\n        return p\n    if n % 2 == 0:\n        return modp(n / 2, p)\
    \ * modp(n / 2, p) % p\n    else:\n        return (modp(n / 2, p) * modp(n / 2\
    \ + 1, p) % p) * 2 % p", "    if p == 0:\n        return 0\n    if n == 0:\n \
    \       return 1\n    return (n * modp(n - 1, p) % p) % p", "    if n < 0:\n \
    \       n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"\
    p must be > 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return (p * p)\
    \ % p\n    if n % 2 == 0:\n        return (modp(n / 2, p) * modp(n / 2, p)) %\
    \ p\n    else:\n        return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p", " \
    \   if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n\
    \        raise ValueError(\"p must be > 0\")\n    if n == 0:\n        return 1\n\
    \    if n == 1:\n        return p\n    if n == 2:\n        return (p * p) % p\n\
    \    if n % 2 == 0:\n        return (modp(n / 2, p) * modp(n / 2, p)) % p\n  \
    \  else:\n        return (modp(n / 2, p) * modp(n / 2 + 1, p)) % p", "    if n\
    \ < 0:\n        n = -n\n        p = -p\n    if p == 0:\n        return 0\n   \
    \ if p == 1:\n        return n\n    if n == 0:\n        return 1\n    if n ==\
    \ 1:\n        return p\n    if n % 2 == 0:\n        return modp(n / 2, p) * modp(n\
    \ / 2, p) % p\n    else:\n        return modp(n / 2, p) * modp(n / 2, p) * modp(n\
    \ / 2, p) % p", '    return n % p', '    return n % p', "    if n < 0:\n     \
    \   n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"\
    p must be > 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return\
    \ 0\n    if p == 2:\n        return n & 1\n    if p == 3:\n        return (n *\
    \ 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n       \
    \ return (n * 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p ==\
    \ 7:\n        return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n\
    \    if p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return\
    \ (n * 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p ==\
    \ 12:\n        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12)\
    \ & 4095\n    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n \
    \       return (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n\
    \    if p == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return\
    \ (n * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if\
    \ p == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return\
    \ (n * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n   \
    \ if p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 3355", '    return n % p', "    if p\
    \ == 0:\n        return 1\n    if n == 0:\n        return 0\n    return (n % p)\
    \ * modp(n // p, p) % p", '    return (n % p)', '    return n % p', "    if p\
    \ == 0:\n        return 1\n    if n == 0:\n        return 0\n    return (n % p)\
    \ * modp(n / p, p) % p", "    if n < 0:\n        return modp(-n, p)\n    if p\
    \ == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n == 0:\n\
    \        return 1\n    if n == 1:\n        return 0\n    if n == 2:\n        return\
    \ p\n    if n % 2 == 0:\n        return modp(n / 2, p) * modp(n / 2, p) % p\n\
    \    else:\n        return (modp(n / 2, p) * modp(n / 2, p) + p) % p", '    return
    n % p', '    return n % p', "    if p == 0:\n        return 1\n    return (n %\
    \ p) % p", '    return n % p', "    if n < 0:\n        n = -n\n    if p < 0:\n\
    \        p = -p\n    if n == 0:\n        return 0\n    if p == 1:\n        return\
    \ 1\n    if p == 2:\n        return n & 1\n    if p == 3:\n        return (n *\
    \ 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n    if p == 5:\n       \
    \ return (n * 4) & 15\n    if p == 6:\n        return (n * 5) & 31\n    if p ==\
    \ 7:\n        return (n * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n\
    \    if p == 9:\n        return (n * 8) & 255\n    if p == 10:\n        return\
    \ (n * 9) & 511\n    if p == 11:\n        return (n * 10) & 1023\n    if p ==\
    \ 12:\n        return (n * 11) & 2047\n    if p == 13:\n        return (n * 12)\
    \ & 4095\n    if p == 14:\n        return (n * 13) & 8191\n    if p == 15:\n \
    \       return (n * 14) & 16383\n    if p == 16:\n        return (n * 15) & 32767\n\
    \    if p == 17:\n        return (n * 16) & 65535\n    if p == 18:\n        return\
    \ (n * 17) & 131071\n    if p == 19:\n        return (n * 18) & 262143\n    if\
    \ p == 20:\n        return (n * 19) & 524287\n    if p == 21:\n        return\
    \ (n * 20) & 1048575\n    if p == 22:\n        return (n * 21) & 2097151\n   \
    \ if p == 23:\n        return (n * 22) & 4194303\n    if p == 24:\n        return\
    \ (n * 23) & 8388607\n    if p == 25:\n        return (n * 24) & 16777215\n  \
    \  if p == 26:\n        return (n * 25) & 33554431\n    if p == 27:\n        return\
    \ (n * 26) & 67", '    return n % p', '    return n % p', '    return n % p',
  '    return n % p', '    return n % p', '    return n % p', "    if n == 0: return\
    \ 1\n    return (n * modp(n - 1, p) % p)", "    if n < 0:\n        return modp(-n,\
    \ p)\n    if n == 0:\n        return 0\n    if p == 0:\n        raise ValueError(\"\
    p must be > 0\")\n    if p == 1:\n        return 1\n    if p == 2:\n        return\
    \ n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p == 4:\n        return\
    \ (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n \
    \       return (n * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n   \
    \ if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n        return (n\
    \ * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n\
    \        return (n * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n\
    \    if p == 13:\n        return (n * 12) & 4095\n    if p == 14:\n        return\
    \ (n * 13) & 8191\n    if p == 15:\n        return (n * 14) & 16383\n    if p\
    \ == 16:\n        return (n * 15) & 32767\n    if p == 17:\n        return (n\
    \ * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n    if p ==\
    \ 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return (n *\
    \ 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if p ==\
    \ 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return (n *\
    \ 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n    if p\
    \ == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:", "    if p == 0: return 0\n    if n ==\
    \ 0: return 1\n    if n < 0: n = -n\n    if p < 0: p = -p\n    if n >= p: return\
    \ n % p\n    return (n * modp(n, p - 1)) % p", '    return n % p', "    if n <\
    \ 0:\n        n = -n\n        p = -p\n    if p == 0:\n        return 0\n    if\
    \ p == 1:\n        return 1\n    if p == 2:\n        return n & 1\n    if p ==\
    \ 3:\n        return (n * 2) & 3\n    if p == 4:\n        return (n * 3) & 7\n\
    \    if p == 5:\n        return (n * 4) & 15\n    if p == 6:\n        return (n\
    \ * 5) & 31\n    if p == 7:\n        return (n * 6) & 63\n    if p == 8:\n   \
    \     return (n * 7) & 127\n    if p == 9:\n        return (n * 8) & 255\n   \
    \ if p == 10:\n        return (n * 9) & 511\n    if p == 11:\n        return (n\
    \ * 10) & 1023\n    if p == 12:\n        return (n * 11) & 2047\n    if p == 13:\n\
    \        return (n * 12) & 4095\n    if p == 14:\n        return (n * 13) & 8191\n\
    \    if p == 15:\n        return (n * 14) & 16383\n    if p == 16:\n        return\
    \ (n * 15) & 32767\n    if p == 17:\n        return (n * 16) & 65535\n    if p\
    \ == 18:\n        return (n * 17) & 131071\n    if p == 19:\n        return (n\
    \ * 18) & 262143\n    if p == 20:\n        return (n * 19) & 524287\n    if p\
    \ == 21:\n        return (n * 20) & 1048575\n    if p == 22:\n        return (n\
    \ * 21) & 2097151\n    if p == 23:\n        return (n * 22) & 4194303\n    if\
    \ p == 24:\n        return (n * 23) & 8388607\n    if p == 25:\n        return\
    \ (n * 24) & 16777215\n    if p == 26:\n        return (n * 25) & 33554431\n \
    \   if p == 27:\n        return (n * 26) & 67108863\n    if p", "    if n < 0:\n\
    \        return modp(-n, p)\n    if p == 0:\n        return 0\n    if p == 1:\n\
    \        return 1\n    if p == 2:\n        return n & 1\n    if p == 3:\n    \
    \    return (n * 2) % 3\n    if p == 4:\n        return (n * 3) % 4\n    if p\
    \ == 5:\n        return (n * 5) % 5\n    if p == 6:\n        return (n * 7) %\
    \ 6\n    if p == 7:\n        return (n * 11) % 7\n    if p == 8:\n        return\
    \ (n * 13) % 8\n    if p == 9:\n        return (n * 17) % 9\n    if p == 10:\n\
    \        return (n * 19) % 10\n    if p == 11:\n        return (n * 23) % 11\n\
    \    if p == 12:\n        return (n * 29) % 12\n    if p == 13:\n        return\
    \ (n * 31) % 13\n    if p == 14:\n        return (n * 37) % 14\n    if p == 15:\n\
    \        return (n * 41) % 15\n    if p == 16:\n        return (n * 43) % 16\n\
    \    if p == 17:\n        return (n * 47) % 17\n    if p == 18:\n        return\
    \ (n * 53) % 18\n    if p == 19:\n        return (n * 59) % 19\n    if p == 20:\n\
    \        return (n * 61) % 20\n    if p == 21:\n        return (n * 67) % 21\n\
    \    if p == 22:\n        return (n * 71) % 22\n    if p == 23:\n        return\
    \ (n * 73) % 23\n    if p == 24:\n        return (n * 79) % 24\n    if p == 25:\n\
    \        return (n * 83) % 25\n    if p == 26:\n        return (n * 89) % 26\n\
    \    if p == 27:\n        return (n * 97) % 27\n    if p == 28:\n        return\
    \ (n * 101) % 28\n    if p == 29:\n        return (n * 103) % 29\n    ", "   \
    \ if p == 0:\n        return 0\n    if n == 0:\n        return 1\n    return (n\
    \ * modp(n - 1, p) % p) % p", '    return n % p', "    if n < 0:\n        n =\
    \ -n\n        p = -p\n    if p == 0:\n        raise ValueError(\"p must be > 0\"\
    )\n    if p == 1:\n        return 0\n    if p == 2:\n        return n & 1\n  \
    \  if p == 3:\n        return (n * 2) % 3\n    if p == 4:\n        return (n *\
    \ 3) % 4\n    if p == 5:\n        return (n * 5) % 5\n    if p == 6:\n       \
    \ return (n * 7) % 6\n    if p == 7:\n        return (n * 11) % 7\n    if p ==\
    \ 8:\n        return (n * 13) % 8\n    if p == 9:\n        return (n * 17) % 9\n\
    \    if p == 10:\n        return (n * 19) % 10\n    if p == 11:\n        return\
    \ (n * 23) % 11\n    if p == 12:\n        return (n * 29) % 12\n    if p == 13:\n\
    \        return (n * 31) % 13\n    if p == 14:\n        return (n * 37) % 14\n\
    \    if p == 15:\n        return (n * 41) % 15\n    if p == 16:\n        return\
    \ (n * 43) % 16\n    if p == 17:\n        return (n * 47) % 17\n    if p == 18:\n\
    \        return (n * 53) % 18\n    if p == 19:\n        return (n * 59) % 19\n\
    \    if p == 20:\n        return (n * 61) % 20\n    if p == 21:\n        return\
    \ (n * 67) % 21\n    if p == 22:\n        return (n * 71) % 22\n    if p == 23:\n\
    \        return (n * 73) % 23\n    if p == 24:\n        return (n * 79) % 24\n\
    \    if p == 25:\n        return (n * 83) % 25\n    if p == 26:\n        return\
    \ (n * 89) % 26\n    if p == 27:\n        return (n * 97) % 27\n    if p == 28:\n\
    \        return (n * 101) % 28\n    if p == 29:\n        ", "    if n < 0:\n \
    \       n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        raise ValueError(\"\
    p must be > 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return\
    \ p\n    if n % 2 == 0:\n        return modp(n // 2, p) * modp(n // 2, p) % p\n\
    \    else:\n        return modp(n // 2, p) * modp(n // 2, p) * modp(n // 2, p)\
    \ % p", "    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if\
    \ n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n\
    \        return n & 1\n    if p == 3:\n        return (n * 2) & 3\n    if p ==\
    \ 4:\n        return (n * 3) & 7\n    if p == 5:\n        return (n * 4) & 15\n\
    \    if p == 6:\n        return (n * 5) & 31\n    if p == 7:\n        return (n\
    \ * 6) & 63\n    if p == 8:\n        return (n * 7) & 127\n    if p == 9:\n  \
    \      return (n * 8) & 255\n    if p == 10:\n        return (n * 9) & 511\n \
    \   if p == 11:\n        return (n * 10) & 1023\n    if p == 12:\n        return\
    \ (n * 11) & 2047\n    if p == 13:\n        return (n * 12) & 4095\n    if p ==\
    \ 14:\n        return (n * 13) & 8191\n    if p == 15:\n        return (n * 14)\
    \ & 16383\n    if p == 16:\n        return (n * 15) & 32767\n    if p == 17:\n\
    \        return (n * 16) & 65535\n    if p == 18:\n        return (n * 17) & 131071\n\
    \    if p == 19:\n        return (n * 18) & 262143\n    if p == 20:\n        return\
    \ (n * 19) & 524287\n    if p == 21:\n        return (n * 20) & 1048575\n    if\
    \ p == 22:\n        return (n * 21) & 2097151\n    if p == 23:\n        return\
    \ (n * 22) & 4194303\n    if p == 24:\n        return (n * 23) & 8388607\n   \
    \ if p == 25:\n        return (n * 24) & 16777215\n    if p == 26:\n        return\
    \ (n * 25) & 33554431\n    if p == 27:\n        return (n * 26) & 67", '    return
    n % p', "    if n == 0: return 1\n    return (n % p) * modp(n / p, p) % p", '    return
    n % p', '    return n % p', "    if p == 0:\n        return 0\n    if n == 0:\n\
    \        return 1\n    return (n * modp(n - 1, p) % p) % p"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

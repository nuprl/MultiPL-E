{
  "name": "HumanEval_132_is_nested",
  "language": "jl",
  "prompt": "\"\"\"\n    Create a function that takes a string as input which contains only square brackets.\n    The function should return true if and only if there is a valid subsequence of brackets \n    where at least one bracket in the subsequence is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\")\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\")\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\")\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n",
  "completions": [
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1]) or is_nested(string[1:len(string) - 1] + \"]\")",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return false\n    return false",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[1] = \"]\" then return false\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[12] = \"]\" then return false\n    if",
    "    if string == \"\"\n        return false\n    else\n        return is_nested(string[1:]) or is_nested(string[0:len(string)-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return false\n    return false",
    "    return string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1",
    "    if string == \"\"\n        return False\n    else\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:]) or is_nested(string[0:1])",
    "    if string = \"\" then return false\n    if string[0] = \"[\" and string[len(string)-1] = \"]\" then return true\n    return is_nested(string[1:len(string)-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    if string[0] == ']':\n        return is_nested(string[1:])\n    return False",
    "    if string = \"\" then return false\n    if string[1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string)-1] = \"]\" then return true\n    return is_nested(string[1:len(string)-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[1] = \"]\" then return false\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[12] = \"]\" then return false\n    if",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return false\n    return false",
    "    return is_valid(string) and is_nested_rec(string, 0, len(string) - 1)",
    "    if string == \"\" or string == \"[]\" or string == \"[[][]]\" or string == \"[][]\":\n        return False\n    else:\n        return True",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    if string == \"\" or string == \" \":\n        return False\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return is_nested(string[1:-1])\n    return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[-1] = \"]\" then return false\n    if string[0] = \"[\" and string[-1] = \"]\" then return true\n    if string[0] = \"(\" and string[-1] = \")\" then return true\n    if string[0] = \"{\" and string[-1] = \"}\" then return true\n    if string[0] = \"[\" and string[-1] = \"]\" then return true\n    if string[0] = \"(\" and string[-1] = \")\" then return true\n    if string[0] = \"{\" and string[-1] = \"}\" then return true\n    return is_nested(string[1:-1])",
    "    return True if string.find(\"[[\") != -1 else False",
    "    return True if string.find(\"[[\") != -1 else False",
    "    if string == \"\" or string == \"[]\":\n        return True\n    else:\n        return is_nested(string[1:]) and is_nested(string[:-1])",
    "    if string == \"\" or string == \"[]\":\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\"",
    "    return is_valid(string) and is_nested_rec(string, 0, 0)",
    "    if string ==\"\"\n        return False\n    else\n        return True",
    "    if string = \"\" then return false\n    if string[1] = \"]\" then return false\n    if string[0] = \"[\" and string[-1] = \"]\" then return true\n    return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    return false",
    "    if string == \"\"\n        return False\n    else\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if",
    "    if string == \"\" or string == \" \":\n        return False\n    else:\n        return is_nested_rec(string, 0, len(string))",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i-1] = \"[\" then return true\n    return false",
    "    if string == \"\"\n        return False\n    else\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    else:\n        return is_nested(string[1:]) or is_nested(string[0:len(string)-1])",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" then return false\n    if string[len(string) - 1] = \"[\" then return false\n    if string[0] = \"(\" and string[len(string) - 1] = \")\" then return true\n    if string[0] = \"(\" then return false\n    if string[len(string) - 1] = \"(\" then return false\n    if string[0] = \"{\" and string[len(string) - 1] = \"}\" then return true\n    if string[0] = \"{\" then return false\n    if string[len(string) - 1] = \"{\" then return false\n    if string[0] = \")\" and string[len(string) - 1] = \"(\" then return true\n    if string[0] = \")\" then return false\n    if string[len(string) - 1] = \"(\" then return false\n    if string[0] = \"}\" and string[len(string) - 1] = \"{\" then return true\n    if string[0] = \"}\" then return false\n    if string[len(string) - 1] = \"{\" then return false\n    if string[0] = \"]\" and string[len(string) - 1] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"[\" then return false\n    return false",
    "    if string ==\"\" then return false\n    if string[0] = \"[\" and string[len(string)-1] = \"]\" then return true\n    return is_nested(string[1:len(string)-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    return True if is_valid(string) and is_nested_brackets(string) else False",
    "    if len(string) == 0:\n        return False\n    elif len(string) == 1:\n        return True\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    return True if is_nested_rec(string, 0, 0) else False",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"[\" then return is_nested(string[1:])\n    if string[len(string) - 1] = \"]\" then return is_nested(string[0:len(string) - 1])\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return false\n    return false",
    "    if string ==\"\"\n        return False\n    else:\n        if string[0]==\"[\" and string[-1]==\"]\":\n            return True\n        else:\n            return is_nested(string[1:-1])",
    "    return is_valid(string) and is_nested_rec(string, 0, 0)",
    "    if len(string) == 0:\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    return True if string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1 else False",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if string[18] = \"]\" then return false\n    if string[18] = \"[\"",
    "    if string == \"\"\n        return false\n    else\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string =~ /^\\[\\[.*\\]\\]$/\n        return true\n    else\n        return false",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return true\n    return false",
    "    if string ==\"\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]",
    "    if string == \"\" or string == \"[]\":\n        return False\n    else:\n        return is_nested_rec(string, 0, 0)",
    "    if string =~ /^\\[\\]$/ then return false\n    else\n        if string =~ /^\\[\\]\\[\\]\\[\\]$/ then return true\n        else\n            if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n            else\n                if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                else\n                    if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                    else\n                        if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                        else\n                            if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                            else\n                                if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                                else\n                                    if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                                    else\n                                        if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                                        else\n                                            if string =~ /^\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]$/ then return true\n                                            else\n                                                if string =~ /^\\[\\]\\[\\]\\",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i-1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n    return false",
    "    if string ==\"\": return False\n    else:\n        if string[0]==\"[\" and string[-1]==\"]\":\n            return is_nested(string[1:-1])\n        else:\n            return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\"",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] =",
    "    return True if string[0] == \"[\" and string[-1] == \"]\" else False",
    "    if string == \"\"\n        return False\n    else\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string == \"\" or string == \"[]\":\n        return False\n    else:\n        stack = []\n        for i in range(len(string)):\n            if string[i] == \"[\":\n                stack.append(i)\n            elif string[i] == \"]\":\n                if len(stack) == 0:\n                    return False\n                else:\n                    stack.pop()\n        return True",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    if string[0] == ']':\n        return is_nested(string[1:])\n    return False",
    "    if string ==\"\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string)-1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string)-1] = \"]\" then return true\n    return is_nested(string[1:len(string)-1]) or is_nested(string[1:len(string)-1])",
    "    if string.length == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    else:\n        return is_nested(string[1:]) or is_nested(string[0:string.length - 1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"(\" then return true\n    if string[0] = \"{\" then return true\n    if string[0] = \"|\" then return true\n    if string[0] = \"^\" then return true\n    if string[0] = \"!\" then return true\n    if string[0] = \"&\" then return true\n    if string[0] = \"-\" then return true\n    if string[0] = \"*\" then return true\n    if string[0] = \"+\" then return true\n    if string[0] = \"=\" then return true\n    if string[0] = \":\" then return true\n    if string[0] = \";\" then return true\n    if string[0] = \",\" then return true\n    if string[0] = \".\" then return true\n    if string[0] = \"\\\"\" then return true\n    if string[0] = \"'\" then return true\n    if string[0] = \"`\" then return true\n    if string[0] = \"|\" then return true\n    if string[0] = \"^\" then return true\n    if string[0] = \"!\" then return true\n    if string[0] = \"&\" then return true\n    if string[0] = \"-\" then return true\n    if string[0] = \"*\" then return true\n    if string[0] = \"+\" then return true\n    if string[0] = \"=\" then return true\n    if string[0] = \":\" then return true\n    if string[0] = \";\" then return true\n    if string[0] = \",\" then return true\n    if string[0] = \".\" then return true\n    if string[0] = \"\\\"\" then return true\n    if string[0] = \"'\" then return true\n    if string[0] = \"`\" then return true\n    if string[0] = \"|\" then return true\n    if string[0] = \"^\" then return true\n    if string[0] = \"!\" then return true\n    if string[0] = \"&\" then return true\n    if string[0] =",
    "    return True if string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1 else False",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:]) or is_nested(string[0:1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return false\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1]) or is_nested(string[1:len(string)])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if len(string) == 0:\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if len(string) == 0:\n        return False\n    \n    stack = []\n    for i in range(len(string)):\n        if string[i] == '[':\n            stack.append(i)\n        elif string[i] == ']':\n            if len(stack) == 0:\n                return False\n            else:\n                stack.pop()\n    return len(stack) == 0",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    for i in range(1, len(string) - 1):\n        if string[i] = \"]\" and string[i - 1] = \"[\" and string[i + 1] = \"[\":\n            return true\n    return false",
    "    return True if string.find(\"[[\") != -1 else False",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string = \"[\" then return true\n    if string = \"]\" then return false\n    if string[0] = \"[\" then return is_nested(string[1:])\n    if string[len(string) - 1] = \"]\" then return is_nested(string[0:len(string) - 1])\n    return false",
    "    return True if string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1 else False",
    "    if string.length == 0:\n        return False\n    else:\n        return is_nested(string.substring(1, string.length - 1))",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string = \"[\" then return true\n    if string = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[1] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[18",
    "    if string = \"\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1])",
    "    if string == \"\"\n        return False\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return is_nested(string[1:-1])\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    return True if is_valid(string) and is_nested_rec(string) else False",
    "    return is_valid(string) and is_nested_rec(string, 0, len(string))",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:]) or is_nested(string[0:len(string) - 1])",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return true\n    return false",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    return True if is_valid(string) and is_nested_rec(string, 0, len(string) - 1) else False",
    "    return True if string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -",
    "    if string == \"\" or string == \"[]\" or string == \"[]\":\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[0:len(string)-1])",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    else:\n        return is_nested(string[1:]) or is_nested(string[1:])",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true\n",
    "    return is_valid(string) and is_nested_rec(string, 0)",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" then return false\n    if string[len(string) - 1] = \"[\" then return false\n    if string[0] = \"(\" and string[len(string) - 1] = \")\" then return true\n    if string[0] = \"(\" then return false\n    if string[len(string) - 1] = \"(\" then return false\n    if string[0] = \"{\" and string[len(string) - 1] = \"}\" then return true\n    if string[0] = \"{\" then return false\n    if string[len(string) - 1] = \"{\" then return false\n    if string[0] = \")\" and string[len(string) - 1] = \"(\" then return true\n    if string[0] = \")\" then return false\n    if string[len(string) - 1] = \"(\" then return false\n    if string[0] = \"}\" and string[len(string) - 1] = \"{\" then return true\n    if string[0] = \"}\" then return false\n    if string[len(string) - 1] = \"{\" then return false\n    if string[0] = \"]\" and string[len(string) - 1] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"[\" then return false\n    if string[0] = \"(\" and string[len(string) - 1] = \")\" then return true\n    if string[0] = \"(\" then return false\n    if string[len(string) - 1] = \")\" then return false\n    if string[0] = \"{\" and string[len(string) - 1] = \"}\" then return true\n    if string[0] = \"{\" then return false\n    if string[len(string) - 1] = \"}\" then return false\n    if string[0]",
    "    if string = \"\" then return false\n    if string[1] = \"]\" then return false\n    if string[0] = \"[\" and string[-1] = \"]\" then return true\n    return is_nested(string[1:]) or is_nested(string[:-1])",
    "    return is_valid(string) and is_nested_rec(string, 0, len(string) - 1)",
    "    if len(string) == 0:\n        return False\n    \n    stack = []\n    for i in range(len(string)):\n        if string[i] == '[':\n            stack.append(i)\n        elif string[i] == ']':\n            if len(stack) == 0:\n                return False\n            else:\n                stack.pop()\n    return len(stack) == 0",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" then return is_nested(string[1:len(string) - 1])\n    if string[len(string) - 1] = \"]\" then return is_nested(string[0:len(string) - 2])\n    return false",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[1] = \"]\" then return false\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[12] = \"]\" then return false\n    if string[12] = \"[\" then return true",
    "    return (string.count(\"[\") > string.count(\"]\")) and (string.count(\"[\") < string.count(\"]\"))",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    else:\n        return is_nested(string[1:]) or is_nested(string[1:])",
    "    return True",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string ==\"\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]\": return False\n    if string[0] ==\"[\": return True\n    if string[0] ==\"]\": return False\n    if string[0] ==\"]",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] =",
    "    if string == \"\" or string == \"[]\" or string == \"[]\":\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    return is_valid(string) and is_nested_rec(string, 0, len(string) - 1)",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"[\" then return is_nested(string[1:])\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[1] = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[-1] = \"]\" then return false\n    if string[-2] = \"]\" then return false\n    if string[-3] = \"]\" then return false\n    if string[-4] = \"]\" then return false\n    if string[-5] = \"]\" then return false\n    if string[-6] = \"]\" then return false\n    if string[-7] = \"]\" then return false\n    if string[-8] = \"]\" then return false\n    if string[-9] = \"]\" then return false\n    if string[-10] = \"]\" then return false\n    if string[-11] = \"]\" then return false\n    if string[-12] = \"]\" then return false\n    if string[-13] = \"]\" then return false\n    if string[-14] = \"]\" then return false\n    if string[-15] = \"]\" then return false\n    if string[-16] = \"]\" then return false\n    if string[-17] = \"]\" then return false\n    if string[-18] = \"]\" then return false\n    if string[-19] = \"]\" then return false\n    if string[-20] = \"]\" then return false\n    if string[-21] = \"]\" then return false\n    if string[-22] = \"]\" then return false\n    if string[-23] = \"]\" then return false\n    if string[-24] = \"]\" then return false\n    if string[-25] = \"]\" then return false\n    if string[-26] = \"]\" then return false\n    if string[-27] = \"]\" then return false\n    if string[-28] = \"]\" then return false\n    if string[-29] = \"]\" then return false\n    if string[-30] = \"]\" then return false\n    if string[-31] = \"]\" then return false\n    if string[-32] = \"]\" then return false\n    if string[-33] = \"]\" then return false\n    if string[-",
    "    return is_valid(string) and is_nested_rec(string, 0, len(string))",
    "    if string == \"\" or string == \" \":\n        return False\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\":\n        return True\n    if string",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string == \"\" or string == \" \":\n        return False\n    \n    stack = []\n    for i in range(len(string)):\n        if string[i] == \"[\":\n            stack.append(i)\n        elif string[i] == \"]\":\n            if len(stack) == 0:\n                return False\n            else:\n                stack.pop()\n    return len(stack) == 0",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string == \"\" or string == \"[]\":\n        return False\n    else:\n        return is_nested_helper(string, 0, len(string))",
    "    return True if string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1 else False",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    if string[0] == ']':\n        return is_nested(string[1:])\n    return False\n",
    "    if string == \"\"\n        return false\n    else\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return is_nested(string[1:])\n    else:\n        return is_nested(string[1:]) or is_nested(string[0:])",
    "    if string == \"\" or string[0] != \"[\" or string[-1] != \"]\":\n        return False\n    stack = []\n    for i in range(len(string)):\n        if string[i] == \"[\":\n            stack.append(i)\n        elif string[i] == \"]\":\n            if len(stack) == 0:\n                return False\n            else:\n                stack.pop()\n    return len(stack) == 0",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return false\n    return false",
    "    return True if string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string)-1] = \"]\" then return true\n    return is_nested(string[1:]) or is_nested(string[0:len(string)-1])",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if string[18] = \"]\" then return false",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1]) or is_nested(string[1:len(string) - 1] + \"]\")",
    "    if string == \"\" or string == \"[]\":\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[:-1])",
    "    if string == \"\" or string == \"[]\":\n        return False\n    else:\n        stack = []\n        for i in range(len(string)):\n            if string[i] == \"[\":\n                stack.append(i)\n            else:\n                if len(stack) == 0:\n                    return False\n                else:\n                    stack.pop()\n        return True\n",
    "    return string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1",
    "    return is_valid(string) and is_nested_rec(string, 0, len(string) - 1)",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n        if string[i] = \"[\" and string[i - 1] = \"]\" then return false\n    return false",
    "    if string ==\"\" then return false\n    if string[1] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[1] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[18] = \"[\" then return true\n    if string[18] = \"]\"",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    return is_valid(string) and is_nested_helper(string, 0, len(string) - 1)",
    "    if string = \"\" then return false\n    if string[0] = \"[\" and string[-1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1])",
    "    return True if is_valid(string) and is_nested_rec(string) else False",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if string[18] = \"]\" then return false",
    "    return is_valid(string) and is_nested_rec(string, 0)",
    "    return True if is_nested_rec(string, 0, 0) else False",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string =~ /^\\[\\]$/\n        return true\n    else\n        return false",
    "    if len(string) == 0:\n        return False\n    elif len(string) == 1:\n        return True\n    else:\n        return is_nested(string[1:]) or is_nested(string[0:1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    return True if is_valid(string) and is_nested_rec(string, 0, len(string) - 1) else False",
    "    return True",
    "    if string ==\"\":\n        return False\n    else:\n        return (string[0]==\"[\" and string[-1]==\"]\") or is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"[\" and string[len(string)-1] = \"]\" then return true\n    return is_nested(string[1:len(string)-1])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string == \"\" or string == \" \":\n        return False\n    \n    stack = []\n    for i in range(len(string)):\n        if string[i] == \"[\":\n            stack.append(\"[\")\n        elif string[i] == \"]\":\n            if len(stack) == 0:\n                return False\n            elif stack[len(stack)-1] == \"[\":\n                stack.pop()\n            else:\n                return False\n    return True",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    if string[",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i in range(1, len(string)):\n        if string[i] = \"]\" and string[i-1] = \"[\":\n            return true\n        if string[i] = \"[\" and string[i-1] = \"]\":\n            return true\n    return false",
    "    return True",
    "    return True if string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1 else False",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    for i = 1 to len(string) - 1 do\n        if string[i] = \"]\" and string[i - 1] = \"[\" then return true\n    return false",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    return True if is_valid_subsequence(string, 0, len(string) - 1) else False",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    if string == \"\" or string == \" \":\n        return False\n    elif string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    else:\n        return is_nested(string[1:-1]) or is_nested(string[0:-2])",
    "    return (string.count(\"[\") > string.count(\"]\")) and (string.count(\"[\") > string.count(\"]\"))",
    "    if string == \"\" or string[0] != \"[\" or string[-1] != \"]\":\n        return False\n    stack = []\n    for i in range(len(string)):\n        if string[i] == \"[\":\n            stack.append(\"[\")\n        elif string[i] == \"]\":\n            if len(stack) == 0:\n                return False\n            if stack[len(stack) - 1] == \"[\":\n                stack.pop()\n            else:\n                return False\n    return True",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:]) or is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    return is_nested(string[1:])",
    "    return True if string.find('[') != -1 and string.find(']') != -1 and string.find('[', string.find('[')) != -1 else False",
    "    if string = \"\" then return false\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\"",
    "    if len(string) == 0:\n        return False\n    else:\n        return is_nested(string[1:]) or is_nested(string[1:])",
    "    return True if is_valid(string) and is_nested(string[1:]) else False",
    "    if string ==\"\": return False\n    if string[0] ==\"[\": return is_nested(string[1:])\n    if string[-1] ==\"]\": return is_nested(string[:-1])\n    return False",
    "    if len(string) == 0:\n        return False\n    if string[0] == '[':\n        return True\n    return is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    return is_nested(string[2:])",
    "    return string.find(\"[\") != -1 and string.find(\"]\") != -1 and string.find(\"]\") != -1 and string.find(\"[\") != -1",
    "    return True if is_valid(string) and is_nested_rec(string) else False",
    "    if string == \"\" or string == \" \":\n        return False\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n    if string[0] == \"[\" and string[-1] == \"]\":\n        return True\n    if string[0] == \"]\":\n        return False\n    if string[0] == \"[\" and string[-1] == \"[\":\n        return True\n",
    "    if string =~ /^\\[\\]$/\n        return false\n    else\n        return true",
    "    if string == \"\"\n        return False\n    else\n        return is_nested(string[1:]) or is_nested(string[1:])",
    "    if string = \"\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1])",
    "    if string = \"\" then return false\n    if string = \"]\" then return false\n    if string[0] = \"]\" then return false\n    if string[len(string) - 1] = \"]\" then return false\n    if string[0] = \"[\" and string[len(string) - 1] = \"]\" then return true\n    return is_nested(string[1:len(string) - 1])",
    "    return True",
    "    if string = \"\" then return false\n    if string = \"]\" then return true\n    if string[0] = \"]\" then return false\n    if string[0] = \"[\" then return true\n    if string[0] = \"]\" then return false\n    if string[1] = \"]\" then return false\n    if string[1] = \"[\" then return true\n    if string[2] = \"]\" then return false\n    if string[2] = \"[\" then return true\n    if string[3] = \"]\" then return false\n    if string[3] = \"[\" then return true\n    if string[4] = \"]\" then return false\n    if string[4] = \"[\" then return true\n    if string[5] = \"]\" then return false\n    if string[5] = \"[\" then return true\n    if string[6] = \"]\" then return false\n    if string[6] = \"[\" then return true\n    if string[7] = \"]\" then return false\n    if string[7] = \"[\" then return true\n    if string[8] = \"]\" then return false\n    if string[8] = \"[\" then return true\n    if string[9] = \"]\" then return false\n    if string[9] = \"[\" then return true\n    if string[10] = \"]\" then return false\n    if string[10] = \"[\" then return true\n    if string[11] = \"]\" then return false\n    if string[11] = \"[\" then return true\n    if string[12] = \"]\" then return false\n    if string[12] = \"[\" then return true\n    if string[13] = \"]\" then return false\n    if string[13] = \"[\" then return true\n    if string[14] = \"]\" then return false\n    if string[14] = \"[\" then return true\n    if string[15] = \"]\" then return false\n    if string[15] = \"[\" then return true\n    if string[16] = \"]\" then return false\n    if string[16] = \"[\" then return true\n    if string[17] = \"]\" then return false\n    if string[17] = \"[\" then return true\n    if string[18] = \"]\" then return false",
    "    return True"
  ],
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ]
}
{
  "name": "HumanEval_91_is_bored",
  "language": "jl",
  "prompt": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    # return 0\n    # return 1\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    # return 0\n    \nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd25vc5dh.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd25vc5dh.jl:1\nin expression starting at /tmp/tmpd25vc5dh.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith('I'), S.split('.')))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5kgiswfe.jl:13\nin expression starting at /tmp/tmp5kgiswfe.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) - len(S.split('?')) - len(S.split('!')) - len(S.split('I'))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpn57x17f7.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn57x17f7.jl:1\nin expression starting at /tmp/tmpn57x17f7.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\" words in the sentence\n    # Count the number of \"I\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzs0h7q58.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzs0h7q58.jl:1\nin expression starting at /tmp/tmpzs0h7q58.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxu8q0m1l.jl:14\nin expression starting at /tmp/tmpxu8q0m1l.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S == \"\":\n        return 0\n    else:\n        return 1 if S[0] == \"I\" else 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm_ht9c1_.jl:14\nin expression starting at /tmp/tmpm_ht9c1_.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == \"I\":\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphozoj6tr.jl:15\nin expression starting at /tmp/tmphozoj6tr.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_5c3ee0q.jl:13\nin expression starting at /tmp/tmp_5c3ee0q.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boreds(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgt6vphjo.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgt6vphjo.jl:1\nin expression starting at /tmp/tmpgt6vphjo.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count > 1:\n                return count\n    return count\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpigrlksm7.jl:16\nin expression starting at /tmp/tmpigrlksm7.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjpc93fag.jl:16\nin expression starting at /tmp/tmpjpc93fag.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxu8q0m1l.jl:14\nin expression starting at /tmp/tmpxu8q0m1l.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n    return count\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2jbjcwjq.jl:16\nin expression starting at /tmp/tmp2jbjcwjq.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len([i for i in S if i == \"I\"])\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3s8vx2b5.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3s8vx2b5.jl:1\nin expression starting at /tmp/tmp3s8vx2b5.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpme9uub1l.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpme9uub1l.jl:1\nin expression starting at /tmp/tmpme9uub1l.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjpc93fag.jl:16\nin expression starting at /tmp/tmpjpc93fag.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) - len(S.split('?')) - len(S.split('!')) - len(S.split('I'))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8go4qugj.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8go4qugj.jl:1\nin expression starting at /tmp/tmp8go4qugj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9uyum4y6.jl:24\nin expression starting at /tmp/tmp9uyum4y6.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the string\n    I = 0\n    for i in range(len(S)):\n        if S[i] == 'I':\n            I += 1\n    # Return the number of I's\n    return I\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdgv6aomu.jl:16\nin expression starting at /tmp/tmpdgv6aomu.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the string\n    i = 0\n    for c in S:\n        if c == 'I':\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoacsvq_z.jl:16\nin expression starting at /tmp/tmpoacsvq_z.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the sentence\n    I = 0\n    for c in S:\n        if c == 'I':\n            I += 1\n    # Return the number of I's\n    return I\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyalgs9a1.jl:16\nin expression starting at /tmp/tmpyalgs9a1.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for w in S.split():\n        if w == \"I\":\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpybn6guy5.jl:16\nin expression starting at /tmp/tmpybn6guy5.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr8rksxdv.jl:14\nin expression starting at /tmp/tmpr8rksxdv.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == 'I':\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr5rqgf64.jl:15\nin expression starting at /tmp/tmpr5rqgf64.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len([s for s in S if s.startswith(\"I\")])\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpixiasttv.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpixiasttv.jl:1\nin expression starting at /tmp/tmpixiasttv.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == 'I':\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr5rqgf64.jl:15\nin expression starting at /tmp/tmpr5rqgf64.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for s in S:\n        if s == \"I\":\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4wb4_ona.jl:16\nin expression starting at /tmp/tmp4wb4_ona.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxu8q0m1l.jl:14\nin expression starting at /tmp/tmpxu8q0m1l.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boreds(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgt6vphjo.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgt6vphjo.jl:1\nin expression starting at /tmp/tmpgt6vphjo.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.find(\"I\") == -1:\n        return 0\n    else:\n        return 1\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp744zgr1r.jl:14\nin expression starting at /tmp/tmp744zgr1r.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the string\n    i = 0\n    for c in S:\n        if c == 'I':\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoacsvq_z.jl:16\nin expression starting at /tmp/tmpoacsvq_z.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len([i for i in S if i.startswith(\"I\")])\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi2437_n_.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi2437_n_.jl:1\nin expression starting at /tmp/tmpi2437_n_.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    bored = 0\n    for i in range(len(S)):\n        if S[i] == 'I':\n            bored += 1\n        elif S[i] == '.' or S[i] == '?' or S[i] == '!':\n            bored = 0\n    return bored\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoqjcpwo5.jl:16\nin expression starting at /tmp/tmpoqjcpwo5.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == \"I\":\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphozoj6tr.jl:15\nin expression starting at /tmp/tmphozoj6tr.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjpc93fag.jl:16\nin expression starting at /tmp/tmpjpc93fag.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    var i:Int64 = 0\n    var j:Int64 = 0\n    var k:Int64 = 0\n    var l:Int64 = 0\n    var m:Int64 = 0\n    var n:Int64 = 0\n    var o:Int64 = 0\n    var p:Int64 = 0\n    var q:Int64 = 0\n    var r:Int64 = 0\n    var s:Int64 = 0\n    var t:Int64 = 0\n    var u:Int64 = 0\n    var v:Int64 = 0\n    var w:Int64 = 0\n    var x:Int64 = 0\n    var y:Int64 = 0\n    var z:Int64 = 0\n    var a:Int64 = 0\n    var b:Int64 = 0\n    var c:Int64 = 0\n    var d:Int64 = 0\n    var e:Int64 = 0\n    var f:Int64 = 0\n    var g:Int64 = 0\n    var h:Int64 = 0\n    var i:Int64 = 0\n    var j:Int64 = 0\n    var k:Int64 = 0\n    var l:Int64 = 0\n    var m:Int64 = 0\n    var n:Int64 = 0\n    var o:Int64 = 0\n    var p:Int64 = 0\n    var q:Int64 = 0\n    var r:Int64 = 0\n    var s:Int64 = 0\n    var t:Int64 = 0\n    var u:Int64 = 0\n    var v:Int64 = 0\n    var w:Int64 = 0\n    var x:Int64 = 0\n    var y:Int64 = 0\n    var z:Int64 = 0\n    var a:Int64 = 0\n    var b:Int64 = 0\n    var c:Int64 = 0\n    var d:Int64 = 0\n    var e:Int64 = 0\n    var f:Int64 = 0\n    var g:Int64 = 0\n    var h:Int64 = 0\n    var i:Int64 = 0\n    var j:Int64 = 0\n    var k:Int64 = 0\n    var l:Int64 = 0\n    var m:Int64 = 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: \"function\" at /tmp/tmp3_krg8oj.jl:12 expected \"end\", got \"i\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3_krg8oj.jl:13\nin expression starting at /tmp/tmp3_krg8oj.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for c in S:\n        if c == 'I':\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp0muuhft.jl:16\nin expression starting at /tmp/tmpp0muuhft.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the sentence\n    Icount = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            Icount += 1\n    return Icount\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpydz8xmy9.jl:16\nin expression starting at /tmp/tmpydz8xmy9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for w in S.split(' '):\n        if w == 'I':\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1e18e9lo.jl:16\nin expression starting at /tmp/tmp1e18e9lo.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == \"I\":\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphozoj6tr.jl:15\nin expression starting at /tmp/tmphozoj6tr.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.startsWith(\"I\")\n        return 1\n    else\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp4wg2kewg.jl:13 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4wg2kewg.jl:1\nin expression starting at /tmp/tmp4wg2kewg.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) - len(S.split('?')) - len(S.split('!')) - len(S.split('I'))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpn57x17f7.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn57x17f7.jl:1\nin expression starting at /tmp/tmpn57x17f7.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.find(\"I\") == -1:\n        return 0\n    else:\n        return 1\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp744zgr1r.jl:14\nin expression starting at /tmp/tmp744zgr1r.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == 'I':\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr4_47sgi.jl:16\nin expression starting at /tmp/tmpr4_47sgi.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr8rksxdv.jl:14\nin expression starting at /tmp/tmpr8rksxdv.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxu8q0m1l.jl:14\nin expression starting at /tmp/tmpxu8q0m1l.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == 'I':\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr5rqgf64.jl:15\nin expression starting at /tmp/tmpr5rqgf64.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of \"I\" words in the sentence\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none, return 1\n    # If there is one, return 2\n    # If there are more than one, return 0\n    # If there are none\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpascpvozc.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpascpvozc.jl:1\nin expression starting at /tmp/tmpascpvozc.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the string\n    I = 0\n    for c in S:\n        if c == 'I':\n            I += 1\n    return I\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdz4_47in.jl:16\nin expression starting at /tmp/tmpdz4_47in.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.startswith(\"I\")\n        return 1\n    else\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpsnc2kqqf.jl:13 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsnc2kqqf.jl:1\nin expression starting at /tmp/tmpsnc2kqqf.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for w in S:\n        if w == \"I\":\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm3a9e7ps.jl:16\nin expression starting at /tmp/tmpm3a9e7ps.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S[0] == \"I\":\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxu8q0m1l.jl:14\nin expression starting at /tmp/tmpxu8q0m1l.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.startswith(\"I\")\n        return 1\n    else\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpsnc2kqqf.jl:13 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsnc2kqqf.jl:1\nin expression starting at /tmp/tmpsnc2kqqf.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(S) - len(S.replace(\"I\", \"\"))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9vcvifs4.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9vcvifs4.jl:1\nin expression starting at /tmp/tmp9vcvifs4.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == 'I':\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr4_47sgi.jl:16\nin expression starting at /tmp/tmpr4_47sgi.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjpc93fag.jl:16\nin expression starting at /tmp/tmpjpc93fag.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for w in S:\n        if w == \"I\":\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm3a9e7ps.jl:16\nin expression starting at /tmp/tmpm3a9e7ps.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_5c3ee0q.jl:13\nin expression starting at /tmp/tmp_5c3ee0q.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_5c3ee0q.jl:13\nin expression starting at /tmp/tmp_5c3ee0q.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    #return len(S) - len(S.replace(\"I\", \"\"))\n    return len(S) - len(S.replace(\"I\", \"\"))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7q6h52xk.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7q6h52xk.jl:1\nin expression starting at /tmp/tmp7q6h52xk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for w in S.split():\n        if w == \"I\":\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpybn6guy5.jl:16\nin expression starting at /tmp/tmpybn6guy5.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) - len(S.split('?')) - len(S.split('!')) - len(S.split('I'))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpn57x17f7.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn57x17f7.jl:1\nin expression starting at /tmp/tmpn57x17f7.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len([word for word in S.split(' ') if word.startswith('I')])\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp13gsphxo.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp13gsphxo.jl:1\nin expression starting at /tmp/tmp13gsphxo.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the sentence\n    # If there are more than one, then the sentence is not boring\n    # If there are no I's, then the sentence is boring\n    # If there is only one I, then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is not boring\n    # If there is only one I, but the sentence starts with \"I\", then the sentence is boring\n    # If there is only one\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2q0flnbe.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2q0flnbe.jl:1\nin expression starting at /tmp/tmp2q0flnbe.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwkn5ktm.jl:13\nin expression starting at /tmp/tmpgwkn5ktm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjpc93fag.jl:16\nin expression starting at /tmp/tmpjpc93fag.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    i = 0\n    while i < len(S):\n        if S[i] == \"I\":\n            return 1\n        i += 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphozoj6tr.jl:15\nin expression starting at /tmp/tmphozoj6tr.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Count the number of I's in the string\n    I = 0\n    for c in S:\n        if c == 'I':\n            I += 1\n    return I\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdz4_47in.jl:16\nin expression starting at /tmp/tmpdz4_47in.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith('I'), S.split('.')))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplzl6i5j5.jl:13\nin expression starting at /tmp/tmplzl6i5j5.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    # Your code here\n    #\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp43e79jzz.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp43e79jzz.jl:1\nin expression starting at /tmp/tmp43e79jzz.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    i = 0\n    for w in S.split():\n        if w == \"I\":\n            i += 1\n    return i\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpybn6guy5.jl:16\nin expression starting at /tmp/tmpybn6guy5.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boreds(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgt6vphjo.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgt6vphjo.jl:1\nin expression starting at /tmp/tmpgt6vphjo.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            count += 1\n            if count == 2:\n                return 1\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjpc93fag.jl:16\nin expression starting at /tmp/tmpjpc93fag.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len([i for i in S if i == \"I\"])\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxgxn4wxv.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxgxn4wxv.jl:1\nin expression starting at /tmp/tmpxgxn4wxv.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.startswith(\"I\"):\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa14vq8tz.jl:14\nin expression starting at /tmp/tmpa14vq8tz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) - len(S.split('?')) - len(S.split('!'))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi9mdc4fr.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi9mdc4fr.jl:1\nin expression starting at /tmp/tmpi9mdc4fr.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split(\".\")))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_5c3ee0q.jl:13\nin expression starting at /tmp/tmp_5c3ee0q.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.find(\"I\") == -1:\n        return 0\n    else:\n        return 1\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp744zgr1r.jl:14\nin expression starting at /tmp/tmp744zgr1r.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda w: w.startswith(\"I\"), S.split(\".\")))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphnxi3knq.jl:13\nin expression starting at /tmp/tmphnxi3knq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    if S.startswith(\"I\"):\n        return 1\n    else:\n        return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa14vq8tz.jl:14\nin expression starting at /tmp/tmpa14vq8tz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return len(filter(lambda x: x.startswith(\"I\"), S.split('.')))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk3_emhul.jl:13\nin expression starting at /tmp/tmpk3_emhul.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len([i for i in S if i.startswith('I')])\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6mvznwod.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6mvznwod.jl:1\nin expression starting at /tmp/tmp6mvznwod.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    var i :: Int64\n    var j :: Int64\n    var count :: Int64\n    var words :: String\n    var word :: String\n    var word_count :: Int64\n    var word_index :: Int64\n    var word_index_count :: Int64\n    var word_index_count_2 :: Int64\n    var word_index_count_3 :: Int64\n    var word_index_count_4 :: Int64\n    var word_index_count_5 :: Int64\n    var word_index_count_6 :: Int64\n    var word_index_count_7 :: Int64\n    var word_index_count_8 :: Int64\n    var word_index_count_9 :: Int64\n    var word_index_count_10 :: Int64\n    var word_index_count_11 :: Int64\n    var word_index_count_12 :: Int64\n    var word_index_count_13 :: Int64\n    var word_index_count_14 :: Int64\n    var word_index_count_15 :: Int64\n    var word_index_count_16 :: Int64\n    var word_index_count_17 :: Int64\n    var word_index_count_18 :: Int64\n    var word_index_count_19 :: Int64\n    var word_index_count_20 :: Int64\n    var word_index_count_21 :: Int64\n    var word_index_count_22 :: Int64\n    var word_index_count_23 :: Int64\n    var word_index_count_24 :: Int64\n    var word_index_count_25 :: Int64\n    var word_index_count_26 :: Int64\n    var word_index_count_27 :: Int64\n    var word_index_count_28 :: Int64\n    var word_index_count_29 :: Int64\n    var word_index_count_30 :: Int64\n    var word_index_count_31 :: Int64\n    var word_index_count_32 :: Int64\n    var word_index_count_33 :: Int64\n    var word_index_count_34 :: Int64\n    var word_index_count_35 :: Int64\n    var word_index_count_\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: \"function\" at /tmp/tmpoz6v9une.jl:12 expected \"end\", got \"i\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoz6v9une.jl:13\nin expression starting at /tmp/tmpoz6v9une.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) - len(S.split('?')) - len(S.split('!'))\n\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpc97ll0w9.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpc97ll0w9.jl:1\nin expression starting at /tmp/tmpc97ll0w9.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpme9uub1l.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpme9uub1l.jl:1\nin expression starting at /tmp/tmpme9uub1l.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    # Your code here\n    return 0\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgzyexjdp.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgzyexjdp.jl:1\nin expression starting at /tmp/tmpgzyexjdp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64 \n    return count_boredoms(S)\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9jjoj29.jl:12 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9jjoj29.jl:1\nin expression starting at /tmp/tmpu9jjoj29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
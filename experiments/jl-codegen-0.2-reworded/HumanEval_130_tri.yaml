name: HumanEval_130_tri
language: jl
prompt: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1) =\
  \ 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n - 2)\
  \ + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2) = 2\n \
  \   tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 + 3 + 3 =\
  \ 8 \n    You are given a non-negative integer number n, you have to a return a\
  \ vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n    Examples:\n\
  \    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3) ==\
  \ [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
  \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7)\
  \ == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4,\
  \ 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20)\
  \ == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\
  \t@test(candidate(0) == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
completions: []
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

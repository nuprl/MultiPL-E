language: sh
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local len\n    local max\n   \
    \ local min\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n \
    \   local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ count=0\n    local i=0\n    local j=0\n    local k=0\n    local len=${#array[@]}\n\
    \    local max=0\n    local min=0\n    local maxlen=0\n    local minlen=0\n  \
    \  local maxlen2=0\n    local minlen2=0\n    local maxlen3=0\n    local minlen3=0\n\
    \    local maxlen4=0\n    local minlen4=0\n    local maxlen5=0\n    local minlen5=0\n\
    \    local maxlen6=0\n    local minlen6=0\n    local maxlen7=0\n    local minlen7=0\n\
    \    local maxlen8=0\n    local minlen8=0\n    local maxlen9=0\n    local minlen9=0\n\
    \    local maxlen10=0\n    local minlen10=0\n    local maxlen11=0\n    local minlen11=0\n\
    \    local maxlen12=0\n    local minlen12=0\n    local maxlen13=0\n    local minlen13=0\n\
    \    local maxlen14=0\n    local minlen14=0\n    local maxlen15=0\n    local minlen15=0\n\
    \    local maxlen16=0\n    local minlen16=0\n    local maxlen17=0\n    local minlen17=0\n\
    \    local maxlen18=0\n    local minlen18=0\n    local maxlen19=0\n    local minlen19=0\n\
    \    local maxlen20=0\n    local minlen20=0\n    local maxlen21=0\n    local minlen21=0\n\
    \    local maxlen22=0\n    local minlen22=0\n    local maxlen23=0\n    local minlen23=0\n\
    \    local maxlen24=0\n    local minlen24=0\n    local maxlen25=0\n    local minlen25=0\n\
    \    local maxlen26=0\n    local minlen26=0\n    local maxlen27=0\n    local minlen27=0\n\
    \    local maxlen28=0\n    local minlen28=0\n    local maxlen29=0\n    local minlen29=0\n\
    \    local maxlen30=0\n    local minlen30=0\n    local maxlen31=0\n    local minlen31=0\n\
    \    local maxlen32=0\n    local minlen32=0\n    local maxlen33=0\n    local minlen33=0\n\
    \    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a counts\n    local -a count\n   \
    \ local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a bin\n    local -a dec\n    local\
    \ -a decdec\n    local -a decdecdec\n    local -a decdecdecdec\n    local -a decdecdecdecdec\n\
    \    local -a decdecdecdecdecdec\n    local -a decdecdecdecdecdecdec\n    local\
    \ -a decdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdec\n    local\
    \ -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i=0\n    while [ $i -lt ${#array} ]; do\n        local j=0\n        while [\
    \ $j -le ${#sorted} ] && \\\n            [ ${array:$i:1} = ${sorted[$j]:0:1} ];\
    \ do\n            ((j++))\n        done\n        sorted[$j]=\"${sorted[$j]:0:1}${array:$i:1}\"\
    \n        ((i++))\n    done\n    local result=()\n    for element in \"${sorted[@]}\"\
    ; do\n        result+=(\"$element\")\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxcvxl74p.sh: line 21: [: 1: unary operator expected

    /tmp/tmpxcvxl74p.sh: line 21: [: =: unary operator expected

    /tmp/tmpxcvxl74p.sh: line 21: [: =: unary operator expected

    /tmp/tmpxcvxl74p.sh: line 21: [: =: unary operator expected

    /tmp/tmpxcvxl74p.sh: line 21: [: =: unary operator expected

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local temp\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ counts\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local tmp\n    local tmp2\n  \
    \  local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local IFS=$1\n    local -a array\n    local -a sorted\n\
    \    local -a count\n    local -a counts\n    local -a counts_sorted\n    local\
    \ -a counts_sorted2\n    local -a counts_sorted3\n    local -a counts_sorted4\n\
    \    local -a counts_sorted5\n    local -a counts_sorted6\n    local -a counts_sorted7\n\
    \    local -a counts_sorted8\n    local -a counts_sorted9\n    local -a counts_sorted10\n\
    \    local -a counts_sorted11\n    local -a counts_sorted12\n    local -a counts_sorted13\n\
    \    local -a counts_sorted14\n    local -a counts_sorted15\n    local -a counts_sorted16\n\
    \    local -a counts_sorted17\n    local -a counts_sorted18\n    local -a counts_sorted19\n\
    \    local -a counts_sorted20\n    local -a counts_sorted21\n    local -a counts_sorted22\n\
    \    local -a counts_sorted23\n    local -a counts_sorted24\n    local -a counts_sorted25\n\
    \    local -a counts_sorted26\n    local -a counts_sorted27\n    local -a counts_sorted28\n\
    \    local -a counts_sorted29\n    local -a counts_sorted30\n    local -a counts_sorted31\n\
    \    local -a counts_sorted32\n    local -a counts_sorted33\n    local -a counts_sorted34\n\
    \    local -a counts_sorted35\n    local -a counts_sorted36\n    local -a counts_sorted37\n\
    \    local -a counts_sorted38\n    local -a counts_sorted39\n    local -a counts_sorted40\n\
    \    local -a counts_sorted41\n    local -a counts_sorted42\n    local -a counts_sorted43\n\
    \    local -a counts_sorted44\n    local -a counts_sorted45\n    local -a counts_sorted46\n\
    \    local -a counts_sorted47\n    local -a counts_sorted48\n    local -a counts_sorted49\n\
    \    local -a counts_sorted50\n    local -a counts_sorted51\n    local -a counts_sorted52\n\
    \    local -a counts_sorted53\n    local -a \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local count\n    local decimal\n    local sign\n    local signs\n   \
    \ local signs_len\n    local signs_str\n    local signs_str_reversed\n    local\
    \ signs_str_sorted\n    local signs_str_sorted_reversed\n    local signs_str_sorted_reversed_len\n\
    \    local signs_str_sorted_reversed_len_reversed\n    local signs_str_sorted_reversed_len_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed\n    local\
    \ signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed\n    local\
    \ signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local signs_str_sorted_reversed_len_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reverse\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a binary\n  local -a decimal\n  local -a decimal2\n  local -a decimal3\n\
    \  local -a decimal4\n  local -a decimal5\n  local -a decimal6\n  local -a decimal7\n\
    \  local -a decimal8\n  local -a decimal9\n  local -a decimal10\n  local -a decimal11\n\
    \  local -a decimal12\n  local -a decimal13\n  local -a decimal14\n  local -a\
    \ decimal15\n  local -a decimal16\n  local -a decimal17\n  local -a decimal18\n\
    \  local -a decimal19\n  local -a decimal20\n  local -a decimal21\n  local -a\
    \ decimal22\n  local -a decimal23\n  local -a decimal24\n  local -a decimal25\n\
    \  local -a decimal26\n  local -a decimal27\n  local -a decimal28\n  local -a\
    \ decimal29\n  local -a decimal30\n  local -a decimal31\n  local -a decimal32\n\
    \  local -a decimal33\n  local -a decimal34\n  local -a decimal35\n  local -a\
    \ decimal36\n  local -a decimal37\n  local -a decimal38\n  local -a decimal39\n\
    \  local -a decimal40\n  local -a decimal41\n  local -a decimal42\n  local -a\
    \ decimal43\n  local -a decimal44\n  local -a decimal45\n  local -a decimal46\n\
    \  local -a decimal47\n  local -a decimal48\n  local -a decimal49\n  local -a\
    \ decimal50\n  local -a decimal51\n  local -a decimal52\n  local -a decimal53\n\
    \  local -a decimal54\n  local -a decimal55\n  local -a decimal56\n  local -a\
    \ decimal57\n  local -a decimal58\n  local -a decimal59\n  local -a decimal60\n\
    \  local -a decimal61\n  local -a decimal62\n  local -a decimal63\n  local -a\
    \ decimal64\n  local -a decimal65\n  local -a decimal66\n  local -a decimal67\n\
    \  local -a decimal68\n  local -a decimal69\n  local -a decimal70\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ counts\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsc5lvn9u.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local k\n    local count\n    local max\n    local min\n   \
    \ local temp\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ count\n    local -a ones\n    local -a dec\n    local -a decdec\n    local -a\
    \ decdecdec\n    local -a decdecdecdec\n    local -a decdecdecdecdec\n    local\
    \ -a decdecdecdecdecdec\n    local -a decdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdec\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a sign\n   \
    \ local -a signs\n    local -a signs_len\n    local -a signs_lens\n    local -a\
    \ signs_lens_len\n    local -a signs_lens_lens\n    local -a signs_lens_lens_len\n\
    \    local -a signs_lens_lens_lens\n    local -a signs_lens_lens_lens_len\n  \
    \  local -a signs_lens_lens_lens_lens\n    local -a signs_lens_lens_lens_lens_len\n\
    \    local -a signs_lens_lens_lens_lens_lens\n    local -a signs_lens_lens_lens_lens_lens_len\n\
    \    local -a signs_lens_lens_lens_lens_lens_lens\n    local -a signs_lens_lens_lens_lens_lens_lens_len\n\
    \    local -a signs_lens_lens_lens_lens_lens_lens_lens\n    local -a signs_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local -a signs_lens_lens_lens_lens_lens_lens_lens_lens\n    local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens\n    local -a\
    \ signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n    local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\n\
    \    local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n  \
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_s\n \
    \   local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local i\n\
    \    local j\n    local count\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local count=0\n    local max=0\n    local\
    \ min=0\n    local maxlen=0\n    local minlen=0\n    local maxdigit=0\n    local\
    \ mindigit=0\n    local maxlendigit=0\n    local minlendigit=0\n    local maxlendigitdigit=0\n\
    \    local minlendigitdigit=0\n    local maxdigitdigit=0\n    local mindigitdigit=0\n\
    \    local maxlendigitdigitdigit=0\n    local minlendigitdigitdigit=0\n    local\
    \ maxdigitdigitdigit=0\n    local mindigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit=0\n\
    \    local mindigitdigitdigitdigit=0\n    local maxlendigitdigitdigitdigit=0\n\
    \    local minlendigitdigitdigitdigit=0\n    local maxdigitdigitdigitdigit\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local j\n    local count\n    local temp\n    local length\n    local\
    \ max\n    local min\n    local max2\n    local min2\n    local max3\n    local\
    \ min3\n    local max4\n    local min4\n    local max5\n    local min5\n    local\
    \ max6\n    local min6\n    local max7\n    local min7\n    local max8\n    local\
    \ min8\n    local max9\n    local min9\n    local max10\n    local min10\n   \
    \ local max11\n    local min11\n    local max12\n    local min12\n    local max13\n\
    \    local min13\n    local max14\n    local min14\n    local max15\n    local\
    \ min15\n    local max16\n    local min16\n    local max17\n    local min17\n\
    \    local max18\n    local min18\n    local max19\n    local min19\n    local\
    \ max20\n    local min20\n    local max21\n    local min21\n    local max22\n\
    \    local min22\n    local max23\n    local min23\n    local max24\n    local\
    \ min24\n    local max25\n    local min25\n    local max26\n    local min26\n\
    \    local max27\n    local min27\n    local max28\n    local min28\n    local\
    \ max29\n    local min29\n    local max30\n    local min30\n    local max31\n\
    \    local min31\n    local max32\n    local min32\n    local max33\n    local\
    \ min33\n    local max34\n    local min34\n    local max35\n    local min35\n\
    \    local max36\n    local min36\n    local max37\n    local min37\n    local\
    \ max38\n    local min38\n    local max39\n    local min39\n    local max40\n\
    \    local min40\n    local max41\n    local min41\n    local max42\n    local\
    \ min42\n    local max43\n    local min43\n    local max44\n    local min44\n\
    \    local max45\n    local min45\n    local max46\n    local min46\n    local\
    \ max47\n    local min47\n    local max48\n    local min48\n    local \n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a binary\n    local -a decimal\n    local -a sorted\n\
    \    local -a counts\n    local -a binary\n    local -a decimal\n    local -a\
    \ sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n   \
    \ local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n    local -a counts\n    local -a binary\n    local -a decimal\n\
    \    local -a sorted\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local -a\
    \ sorted\n    local -a count\n    local -a counts\n    local -a counts_sorted\n\
    \    local -a counts_sorted_reverse\n    local -a counts_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse\n    local -a counts_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a decimal2\n\
    \    local -a decimal3\n    local -a decimal4\n    local -a decimal5\n    local\
    \ -a decimal6\n    local -a decimal7\n    local -a decimal8\n    local -a decimal9\n\
    \    local -a decimal10\n    local -a decimal11\n    local -a decimal12\n    local\
    \ -a decimal13\n    local -a decimal14\n    local -a decimal15\n    local -a decimal16\n\
    \    local -a decimal17\n    local -a decimal18\n    local -a decimal19\n    local\
    \ -a decimal20\n    local -a decimal21\n    local -a decimal22\n    local -a decimal23\n\
    \    local -a decimal24\n    local -a decimal25\n    local -a decimal26\n    local\
    \ -a decimal27\n    local -a decimal28\n    local -a decimal29\n    local -a decimal30\n\
    \    local -a decimal31\n    local -a decimal32\n    local -a decimal33\n    local\
    \ -a decimal34\n    local -a decimal35\n    local -a decimal36\n    local -a decimal37\n\
    \    local -a decimal38\n    local -a decimal39\n    local -a decimal40\n    local\
    \ -a decimal41\n    local -a decimal42\n    local -a decimal43\n    local -a decimal44\n\
    \    local -a decimal45\n    local -a decimal46\n    local -a decimal47\n    local\
    \ -a decimal48\n    local -a decimal49\n    local -a decimal50\n    local -a decimal51\n\
    \    local -a decimal52\n    local -a decimal53\n    local -a decimal54\n    local\
    \ -a decimal55\n    local -a decimal56\n    local -a decimal57\n    local -a decimal58\n\
    \    local -a decimal59\n    local -a decimal60\n    local -a decimal61\n    local\
    \ -a decimal62\n    local -a decimal63\n    local -a decimal64\n    local -a decimal65\n\
    \    local -a decimal66\n    local -a decimal67\n    local -a decimal68\n    local\
    \ -a decimal69\n    local -a decimal70\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeiveclje.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a decimal2\n\
    \    local -a decimal3\n    local -a decimal4\n    local -a decimal5\n    local\
    \ -a decimal6\n    local -a decimal7\n    local -a decimal8\n    local -a decimal9\n\
    \    local -a decimal10\n    local -a decimal11\n    local -a decimal12\n    local\
    \ -a decimal13\n    local -a decimal14\n    local -a decimal15\n    local -a decimal16\n\
    \    local -a decimal17\n    local -a decimal18\n    local -a decimal19\n    local\
    \ -a decimal20\n    local -a decimal21\n    local -a decimal22\n    local -a decimal23\n\
    \    local -a decimal24\n    local -a decimal25\n    local -a decimal26\n    local\
    \ -a decimal27\n    local -a decimal28\n    local -a decimal29\n    local -a decimal30\n\
    \    local -a decimal31\n    local -a decimal32\n    local -a decimal33\n    local\
    \ -a decimal34\n    local -a decimal35\n    local -a decimal36\n    local -a decimal37\n\
    \    local -a decimal38\n    local -a decimal39\n    local -a decimal40\n    local\
    \ -a decimal41\n    local -a decimal42\n    local -a decimal43\n    local -a decimal44\n\
    \    local -a decimal45\n    local -a decimal46\n    local -a decimal47\n    local\
    \ -a decimal48\n    local -a decimal49\n    local -a decimal50\n    local -a decimal51\n\
    \    local -a decimal52\n    local -a decimal53\n    local -a decimal54\n    local\
    \ -a decimal55\n    local -a decimal56\n    local -a decimal57\n    local -a decimal58\n\
    \    local -a decimal59\n    local -a decimal60\n    local -a decimal61\n    local\
    \ -a decimal62\n    local -a decimal63\n    local -a decimal64\n    local -a decimal65\n\
    \    local -a decimal66\n    local -a decimal67\n    local -a decimal68\n    local\
    \ -a decimal69\n    local -a decimal70\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n   \
    \ local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local \n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpch973xbe.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ count=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n  \
    \  local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n   \
    \ local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local\
    \ M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n\
    \    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n \
    \   local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n  \
    \  local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n   \
    \ local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local\
    \ M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n\
    \    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n \
    \   local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a ones\n    local -a dec\n    local\
    \ -a decdec\n    local -a decdecdec\n    local -a decdecdecdec\n    local -a decdecdecdecdec\n\
    \    local -a decdecdecdecdecdec\n    local -a decdecdecdecdecdecdec\n    local\
    \ -a decdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdec\n    local\
    \ -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdec\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local IFS=$1\n    local -a arr\n    local -a sorted\n\
    \    local -a count\n    local -a tmp\n    local i\n    local j\n    local k\n\
    \    local count\n    local tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a tmp\n    local\
    \ -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local\
    \ -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local\
    \ -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local\
    \ -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local\
    \ -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local\
    \ -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local\
    \ -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local\
    \ -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local\
    \ -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local\
    \ -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local\
    \ -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local\
    \ -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local\
    \ -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local\
    \ -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local\
    \ -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local\
    \ -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local\
    \ -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local counts\n    local count\n\
    \    local temp2\n    local temp3\n    local temp4\n    local temp5\n    local\
    \ temp6\n    local temp7\n    local temp8\n    local temp9\n    local temp10\n\
    \    local temp11\n    local temp12\n    local temp13\n    local temp14\n    local\
    \ temp15\n    local temp16\n    local temp17\n    local temp18\n    local temp19\n\
    \    local temp20\n    local temp21\n    local temp22\n    local temp23\n    local\
    \ temp24\n    local temp25\n    local temp26\n    local temp27\n    local temp28\n\
    \    local temp29\n    local temp30\n    local temp31\n    local temp32\n    local\
    \ temp33\n    local temp34\n    local temp35\n    local temp36\n    local temp37\n\
    \    local temp38\n    local temp39\n    local temp40\n    local temp41\n    local\
    \ temp42\n    local temp43\n    local temp44\n    local temp45\n    local temp46\n\
    \    local temp47\n    local temp48\n    local temp49\n    local temp50\n    local\
    \ temp51\n    local temp52\n    local temp53\n    local temp54\n    local temp55\n\
    \    local temp56\n    local temp57\n    local temp58\n    local temp59\n    local\
    \ temp60\n    local temp61\n    local temp62\n    local temp63\n    local temp64\n\
    \    local temp65\n    local temp66\n    local temp67\n    local temp68\n    local\
    \ temp69\n    local temp70\n    local temp71\n    local temp72\n    local temp73\n\
    \    local temp74\n    local temp75\n    local temp76\n    local temp77\n    local\
    \ temp78\n    local temp79\n    local temp80\n    local temp81\n    local temp82\n\
    \    local temp83\n    local temp84\n    local temp85\n    local temp86\n    local\
    \ temp87\n    local temp88\n    local temp89\n    local temp90\n    local temp91\n\
    \    local temp92\n    local temp93\n    local temp94\n    local temp95\n    local\
    \ temp96\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local count\n\
    \    local i\n    local j\n    local k\n    local temp\n    local temp2\n    local\
    \ temp3\n    local temp4\n    local temp5\n    local temp6\n    local temp7\n\
    \    local temp8\n    local temp9\n    local temp10\n    local temp11\n    local\
    \ temp12\n    local temp13\n    local temp14\n    local temp15\n    local temp16\n\
    \    local temp17\n    local temp18\n    local temp19\n    local temp20\n    local\
    \ temp21\n    local temp22\n    local temp23\n    local temp24\n    local temp25\n\
    \    local temp26\n    local temp27\n    local temp28\n    local temp29\n    local\
    \ temp30\n    local temp31\n    local temp32\n    local temp33\n    local temp34\n\
    \    local temp35\n    local temp36\n    local temp37\n    local temp38\n    local\
    \ temp39\n    local temp40\n    local temp41\n    local temp42\n    local temp43\n\
    \    local temp44\n    local temp45\n    local temp46\n    local temp47\n    local\
    \ temp48\n    local temp49\n    local temp50\n    local temp51\n    local temp52\n\
    \    local temp53\n    local temp54\n    local temp55\n    local temp56\n    local\
    \ temp57\n    local temp58\n    local temp59\n    local temp60\n    local temp61\n\
    \    local temp62\n    local temp63\n    local temp64\n    local temp65\n    local\
    \ temp66\n    local temp67\n    local temp68\n    local temp69\n    local temp70\n\
    \    local temp71\n    local temp72\n    local temp73\n    local temp74\n    local\
    \ temp75\n    local temp76\n    local temp77\n    local temp78\n    local temp79\n\
    \    local temp80\n    local temp81\n    local temp82\n    local temp83\n    local\
    \ temp84\n    local temp85\n    local temp86\n    local temp87\n    local temp88\n\
    \    local temp89\n    local temp90\n    local temp91\n    local temp92\n    local\
    \ temp93\n    local temp94\n    local temp95\n    local temp96\n    local temp97\n\
    \    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a counts\n  local -a counts_sorted\n  local -a counts_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted\n  local -a counts_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted\n  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n  local\
    \ -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n  local\
    \ -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local j\n    local count\n    local dec\n    local decstr\n    local\
    \ str\n    local strlen\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local string\n    local length\n\
    \    local sort\n    local sort2\n    local sort3\n    local sort4\n    local\
    \ sort5\n    local sort6\n    local sort7\n    local sort8\n    local sort9\n\
    \    local sort10\n    local sort11\n    local sort12\n    local sort13\n    local\
    \ sort14\n    local sort15\n    local sort16\n    local sort17\n    local sort18\n\
    \    local sort19\n    local sort20\n    local sort21\n    local sort22\n    local\
    \ sort23\n    local sort24\n    local sort25\n    local sort26\n    local sort27\n\
    \    local sort28\n    local sort29\n    local sort30\n    local sort31\n    local\
    \ sort32\n    local sort33\n    local sort34\n    local sort35\n    local sort36\n\
    \    local sort37\n    local sort38\n    local sort39\n    local sort40\n    local\
    \ sort41\n    local sort42\n    local sort43\n    local sort44\n    local sort45\n\
    \    local sort46\n    local sort47\n    local sort48\n    local sort49\n    local\
    \ sort50\n    local sort51\n    local sort52\n    local sort53\n    local sort54\n\
    \    local sort55\n    local sort56\n    local sort57\n    local sort58\n    local\
    \ sort59\n    local sort60\n    local sort61\n    local sort62\n    local sort63\n\
    \    local sort64\n    local sort65\n    local sort66\n    local sort67\n    local\
    \ sort68\n    local sort69\n    local sort70\n    local sort71\n    local sort72\n\
    \    local sort73\n    local sort74\n    local sort75\n    local sort76\n    local\
    \ sort77\n    local sort78\n    local sort79\n    local sort80\n    local sort81\n\
    \    local sort82\n    local sort83\n    local sort84\n    local sort85\n    local\
    \ sort86\n    local sort87\n    local sort88\n    local sort89\n    local sort90\n\
    \    local sort91\n    local sort92\n    local sort93\n    local sort94\n    local\
    \ sort95\n    local sort96\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a dec\n    local -a decdec\n    local\
    \ -a decdecdec\n    local -a decdecdecdec\n    local -a decdecdecdecdec\n    local\
    \ -a decdecdecdecdecdec\n    local -a decdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdec\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a ones=()\n    local -a dec=()\n    local -a decdec=()\n    local -a decdecdec=()\n\
    \    local -a decdecdecdec=()\n    local -a decdecdecdecdec=()\n    local -a decdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdecdecdecdecdecdec=()\n\
    \    local -a decdecdecdecdecdecdecdecdecdec=()\n    local -a decdecdecdecdec\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpebinu23y.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpch973xbe.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local temp\n\
    \    local string\n    local string2\n    local string3\n    local string4\n \
    \   local string5\n    local string6\n    local string7\n    local string8\n \
    \   local string9\n    local string10\n    local string11\n    local string12\n\
    \    local string13\n    local string14\n    local string15\n    local string16\n\
    \    local string17\n    local string18\n    local string19\n    local string20\n\
    \    local string21\n    local string22\n    local string23\n    local string24\n\
    \    local string25\n    local string26\n    local string27\n    local string28\n\
    \    local string29\n    local string30\n    local string31\n    local string32\n\
    \    local string33\n    local string34\n    local string35\n    local string36\n\
    \    local string37\n    local string38\n    local string39\n    local string40\n\
    \    local string41\n    local string42\n    local string43\n    local string44\n\
    \    local string45\n    local string46\n    local string47\n    local string48\n\
    \    local string49\n    local string50\n    local string51\n    local string52\n\
    \    local string53\n    local string54\n    local string55\n    local string56\n\
    \    local string57\n    local string58\n    local string59\n    local string60\n\
    \    local string61\n    local string62\n    local string63\n    local string64\n\
    \    local string65\n    local string66\n    local string67\n    local string68\n\
    \    local string69\n    local string70\n    local string71\n    local string72\n\
    \    local string73\n    local string74\n    local string75\n    local string76\n\
    \    local string77\n    local string78\n    local string79\n    local string80\n\
    \    local string81\n    local string82\n    local string83\n    local string84\n\
    \    local string85\n    local string86\n    local string87\n    local string88\n\
    \    local string89\n    local string90\n    local string91\n    local string92\n\
    \    local string93\n    local string94\n    local string95\n    local string96\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a sorted\n    local -a count\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a i\n    local -a j\n    local -a\
    \ k\n    local -a count\n    local -a counts\n    local -a count\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a count\n    local -a counts\n    local -a count\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a count\n    local -a counts\n    local -a\
    \ count\n    local -a i\n    local -a j\n    local -a k\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a i\n    local -a j\n   \
    \ local -a k\n    local -a count\n    local -a counts\n    local -a count\n  \
    \  local -a i\n    local -a j\n    local -a k\n    local -a count\n    local -a\
    \ counts\n    local -a count\n    local -a i\n    local -a j\n    local -a k\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a i\n\
    \    local -a j\n    local -a k\n    local -a count\n    local -a counts\n   \
    \ local -a count\n    local -a i\n    local -a j\n    local -a k\n    local -a\
    \ count\n    local -a counts\n    local -a count\n    local -a i\n    local -a\
    \ j\n    local -a k\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a i\n    local -a j\n    local -a k\n    local -a count\n    local\
    \ -a counts\n    local -a count\n    local -a i\n    local -a j\n    local -a\
    \ k\n    local -a count\n    local -a counts\n    local -a count\n    local -a\
    \ i\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local len=${#array[@]}\n    local count=0\n\
    \    local max=0\n    local min=0\n    local maxlen=0\n    local minlen=0\n  \
    \  local maxcount=0\n    local mincount=0\n    local maxval=0\n    local minval=0\n\
    \    local maxval2=0\n    local minval2=0\n    local maxval3=0\n    local minval3=0\n\
    \    local maxval4=0\n    local minval4=0\n    local maxval5=0\n    local minval5=0\n\
    \    local maxval6=0\n    local minval6=0\n    local maxval7=0\n    local minval7=0\n\
    \    local maxval8=0\n    local minval8=0\n    local maxval9=0\n    local minval9=0\n\
    \    local maxval10=0\n    local minval10=0\n    local maxval11=0\n    local minval11=0\n\
    \    local maxval12=0\n    local minval12=0\n    local maxval13=0\n    local minval13=0\n\
    \    local maxval14=0\n    local minval14=0\n    local maxval15=0\n    local minval15=0\n\
    \    local maxval16=0\n    local minval16=0\n    local maxval17=0\n    local minval17=0\n\
    \    local maxval18=0\n    local minval18=0\n    local maxval19=0\n    local minval19=0\n\
    \    local maxval20=0\n    local minval20=0\n    local maxval21=0\n    local minval21=0\n\
    \    local maxval22=0\n    local minval22=0\n    local maxval23=0\n    local minval23=0\n\
    \    local maxval24=0\n    local minval24=0\n    local maxval25=0\n    local minval25=0\n\
    \    local maxval26=0\n    local minval26=0\n    local maxval27=0\n    local minval27=0\n\
    \    local maxval28=0\n    local minval28=0\n    local maxval29=0\n    local minval29=0\n\
    \    local maxval30=0\n    local minval30=0\n    local maxval31=0\n    local minval31=0\n\
    \    local maxval32=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a tmp=()\n    local -i i\n    local j\n    local k\n\
    \    local count\n    local tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp830k5cxz.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local i\n\
    \    local count\n    local j\n    local k\n    local tmp\n    local tmp2\n  \
    \  local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local count\n    local dec\n    local sign\n    local signs\n    local\
    \ signs_len\n    local signs_lens\n    local signs_lens_len\n    local signs_lens_lens\n\
    \    local signs_lens_lens_len\n    local signs_lens_lens_lens\n    local signs_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens\n    local signs_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens\n    local signs_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens\n    local signs_lens_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens\n    local signs_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens_lens_len\n    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a result\n    local i\n    local j\n    local k\n    local\
    \ count\n    local -a binary\n    local -a decimal\n    local -a decimal2\n  \
    \  local -a decimal3\n    local -a decimal4\n    local -a decimal5\n    local\
    \ -a decimal6\n    local -a decimal7\n    local -a decimal8\n    local -a decimal9\n\
    \    local -a decimal10\n    local -a decimal11\n    local -a decimal12\n    local\
    \ -a decimal13\n    local -a decimal14\n    local -a decimal15\n    local -a decimal16\n\
    \    local -a decimal17\n    local -a decimal18\n    local -a decimal19\n    local\
    \ -a decimal20\n    local -a decimal21\n    local -a decimal22\n    local -a decimal23\n\
    \    local -a decimal24\n    local -a decimal25\n    local -a decimal26\n    local\
    \ -a decimal27\n    local -a decimal28\n    local -a decimal29\n    local -a decimal30\n\
    \    local -a decimal31\n    local -a decimal32\n    local -a decimal33\n    local\
    \ -a decimal34\n    local -a decimal35\n    local -a decimal36\n    local -a decimal37\n\
    \    local -a decimal38\n    local -a decimal39\n    local -a decimal40\n    local\
    \ -a decimal41\n    local -a decimal42\n    local -a decimal43\n    local -a decimal44\n\
    \    local -a decimal45\n    local -a decimal46\n    local -a decimal47\n    local\
    \ -a decimal48\n    local -a decimal49\n    local -a decimal50\n    local -a decimal51\n\
    \    local -a decimal52\n    local -a decimal53\n    local -a decimal54\n    local\
    \ -a decimal55\n    local -a decimal56\n    local -a decimal57\n    local -a decimal58\n\
    \    local -a decimal59\n    local -a decimal60\n    local -a decimal61\n    local\
    \ -a decimal62\n    local -a decimal63\n    local -a decimal64\n    local -a decimal65\n\
    \    local -a decimal66\n    local -a decimal\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ counts\n    local -a tmp\n    local -a tmp2\n    local -i i\n    local j\n \
    \   local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzm6dbcq3.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a temp=()\n    local -a temp2=()\n    local -a temp3=()\n\
    \    local -a temp4=()\n    local -a temp5=()\n    local -a temp6=()\n    local\
    \ -a temp7=()\n    local -a temp8=()\n    local -a temp9=()\n    local -a temp10=()\n\
    \    local -a temp11=()\n    local -a temp12=()\n    local -a temp13=()\n    local\
    \ -a temp14=()\n    local -a temp15=()\n    local -a temp16=()\n    local -a temp17=()\n\
    \    local -a temp18=()\n    local -a temp19=()\n    local -a temp20=()\n    local\
    \ -a temp21=()\n    local -a temp22=()\n    local -a temp23=()\n    local -a temp24=()\n\
    \    local -a temp25=()\n    local -a temp26=()\n    local -a temp27=()\n    local\
    \ -a temp28=()\n    local -a temp29=()\n    local -a temp30=()\n    local -a temp31=()\n\
    \    local -a temp32=()\n    local -a temp33=()\n    local -a temp34=()\n    local\
    \ -a temp35=()\n    local -a temp36=()\n    local -a temp37=()\n    local -a temp38=()\n\
    \    local -a temp39=()\n    local -a temp40=()\n    local -a temp41=()\n    local\
    \ -a temp42=()\n    local -a temp43=()\n    local -a temp44=()\n    local -a temp45=()\n\
    \    local -a temp46=()\n    local -a temp47=()\n    local -a temp48=()\n    local\
    \ -a temp49=()\n    local -a temp50=()\n    local -a temp51=()\n    local -a temp52=()\n\
    \    local -a temp53=()\n    local -a temp54=()\n    local -a temp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgzcba_fp.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpch973xbe.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a result\n    local i\n    local j\n    local k\n    local\
    \ -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a\
    \ tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a\
    \ tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local\
    \ -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local\
    \ -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local\
    \ -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local\
    \ -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local\
    \ -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local\
    \ -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local\
    \ -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local\
    \ -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local\
    \ -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local\
    \ -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local\
    \ -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local\
    \ -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local\
    \ -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local\
    \ -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    \n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result=()\n    local\
    \ count\n    local i\n    local j\n    local k\n    local l\n    local m\n   \
    \ local n\n    local o\n    local p\n    local q\n    local r\n    local s\n \
    \   local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a count\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a tmp\n    local -i i\n    local j\n    local k\n \
    \   local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjg_e5730.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local temp\n    local temp2\n\
    \    local temp3\n    local temp4\n    local temp5\n    local temp6\n    local\
    \ temp7\n    local temp8\n    local temp9\n    local temp10\n    local temp11\n\
    \    local temp12\n    local temp13\n    local temp14\n    local temp15\n    local\
    \ temp16\n    local temp17\n    local temp18\n    local temp19\n    local temp20\n\
    \    local temp21\n    local temp22\n    local temp23\n    local temp24\n    local\
    \ temp25\n    local temp26\n    local temp27\n    local temp28\n    local temp29\n\
    \    local temp30\n    local temp31\n    local temp32\n    local temp33\n    local\
    \ temp34\n    local temp35\n    local temp36\n    local temp37\n    local temp38\n\
    \    local temp39\n    local temp40\n    local temp41\n    local temp42\n    local\
    \ temp43\n    local temp44\n    local temp45\n    local temp46\n    local temp47\n\
    \    local temp48\n    local temp49\n    local temp50\n    local temp51\n    local\
    \ temp52\n    local temp53\n    local temp54\n    local temp55\n    local temp56\n\
    \    local temp57\n    local temp58\n    local temp59\n    local temp60\n    local\
    \ temp61\n    local temp62\n    local temp63\n    local temp64\n    local temp65\n\
    \    local temp66\n    local temp67\n    local temp68\n    local temp69\n    local\
    \ temp70\n    local temp71\n    local temp72\n    local temp73\n    local temp74\n\
    \    local temp75\n    local temp76\n    local temp77\n    local temp78\n    local\
    \ temp79\n    local temp80\n    local temp81\n    local temp82\n    local temp83\n\
    \    local temp84\n    local temp85\n    local temp86\n    local temp87\n    local\
    \ temp88\n    local temp89\n    local temp90\n    local temp91\n    local temp92\n\
    \    local temp93\n    local temp94\n    local temp95\n    local temp96\n    local\
    \ temp97\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a result\n \
    \   local -a counts\n    local -a count\n    local -a binary\n    local -a decimal\n\
    \    local -a result\n    local -a counts\n    local -a count\n    local -a binary\n\
    \    local -a decimal\n    local -a result\n    local -a counts\n    local -a\
    \ count\n    local -a binary\n    local -a decimal\n    local -a result\n    local\
    \ -a counts\n    local -a count\n    local -a binary\n    local -a decimal\n \
    \   local -a result\n    local -a counts\n    local -a count\n    local -a binary\n\
    \    local -a decimal\n    local -a result\n    local -a counts\n    local -a\
    \ count\n    local -a binary\n    local -a decimal\n    local -a result\n    local\
    \ -a counts\n    local -a count\n    local -a binary\n    local -a decimal\n \
    \   local -a result\n    local -a counts\n    local -a count\n    local -a binary\n\
    \    local -a decimal\n    local -a result\n    local -a counts\n    local -a\
    \ count\n    local -a binary\n    local -a decimal\n    local -a result\n    local\
    \ -a counts\n    local -a count\n    local -a binary\n    local -a decimal\n \
    \   local -a result\n    local -a counts\n    local -a count\n    local -a binary\n\
    \    local -a decimal\n    local -a result\n    local -a counts\n    local -a\
    \ count\n    local -a binary\n    local -a decimal\n    local -a result\n    local\
    \ -a counts\n    local -a count\n    local -a binary\n    local -a decimal\n \
    \   local -a result\n    local -a counts\n    local -a count\n    local -a binary\n\
    \    local -a decimal\n    local -a result\n    local -a counts\n    local -a\
    \ count\n    local -a binary\n    local -a decimal\n    local -a result\n    local\
    \ -a counts\n    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ counts\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsc5lvn9u.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a count\n\
    \    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a temp\n    local -a temp2\n    local\
    \ -a temp3\n    local -a temp4\n    local -a temp5\n    local -a temp6\n    local\
    \ -a temp7\n    local -a temp8\n    local -a temp9\n    local -a temp10\n    local\
    \ -a temp11\n    local -a temp12\n    local -a temp13\n    local -a temp14\n \
    \   local -a temp15\n    local -a temp16\n    local -a temp17\n    local -a temp18\n\
    \    local -a temp19\n    local -a temp20\n    local -a temp21\n    local -a temp22\n\
    \    local -a temp23\n    local -a temp24\n    local -a temp25\n    local -a temp26\n\
    \    local -a temp27\n    local -a temp28\n    local -a temp29\n    local -a temp30\n\
    \    local -a temp31\n    local -a temp32\n    local -a temp33\n    local -a temp34\n\
    \    local -a temp35\n    local -a temp36\n    local -a temp37\n    local -a temp38\n\
    \    local -a temp39\n    local -a temp40\n    local -a temp41\n    local -a temp42\n\
    \    local -a temp43\n    local -a temp44\n    local -a temp45\n    local -a temp46\n\
    \    local -a temp47\n    local -a temp48\n    local -a temp49\n    local -a temp50\n\
    \    local -a temp51\n    local -a temp52\n    local -a temp53\n    local -a temp54\n\
    \    local -a temp55\n    local -a temp56\n    local -a temp57\n    local -a temp58\n\
    \    local -a temp59\n    local -a temp60\n    local -a temp61\n    local -a temp62\n\
    \    local -a temp63\n    local -a temp64\n    local -a temp65\n    local -a temp66\n\
    \    local -a temp67\n    local -a temp68\n    local -a temp69\n    local -a temp\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a count\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local arr=$1\n  local -a sorted\n  local -a count\n\
    \  local -a ones\n  local -a dec\n  local -a decdec\n  local -a decdecdec\n  local\
    \ -a decdecdecdec\n  local -a decdecdecdecdec\n  local -a decdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdec\n  local\
    \ -a decdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdec\n  local\
    \ -a decdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdecdecdecdecdecdecdecdecdecdec\n\
    \  local -a decdecdecdecdecdecdecdecdecdecdecdec\n  local -a decdecdec\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local temp\n    local tmp\n  \
    \  local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a sorted2\n  local -a count2\n  local -a sorted3\n  local -a count3\n\
    \  local -a sorted4\n  local -a count4\n  local -a sorted5\n  local -a count5\n\
    \  local -a sorted6\n  local -a count6\n  local -a sorted7\n  local -a count7\n\
    \  local -a sorted8\n  local -a count8\n  local -a sorted9\n  local -a count9\n\
    \  local -a sorted10\n  local -a count10\n  local -a sorted11\n  local -a count11\n\
    \  local -a sorted12\n  local -a count12\n  local -a sorted13\n  local -a count13\n\
    \  local -a sorted14\n  local -a count14\n  local -a sorted15\n  local -a count15\n\
    \  local -a sorted16\n  local -a count16\n  local -a sorted17\n  local -a count17\n\
    \  local -a sorted18\n  local -a count18\n  local -a sorted19\n  local -a count19\n\
    \  local -a sorted20\n  local -a count20\n  local -a sorted21\n  local -a count21\n\
    \  local -a sorted22\n  local -a count22\n  local -a sorted23\n  local -a count23\n\
    \  local -a sorted24\n  local -a count24\n  local -a sorted25\n  local -a count25\n\
    \  local -a sorted26\n  local -a count26\n  local -a sorted27\n  local -a count27\n\
    \  local -a sorted28\n  local -a count28\n  local -a sorted29\n  local -a count29\n\
    \  local -a sorted30\n  local -a count30\n  local -a sorted31\n  local -a count31\n\
    \  local -a sorted32\n  local -a count32\n  local -a sorted33\n  local -a count33\n\
    \  local -a sorted34\n  local -a count34\n  local -a sorted35\n  local -a count35\n\
    \  local -a sorted36\n  local -a count36\n  local -a \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a binary\n  local -a decimal\n  local -a result\n  local -a tmp\n  local\
    \ -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a tmp5\n  local -a tmp6\n\
    \  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n  local -a tmp10\n  local\
    \ -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local -a tmp14\n  local -a tmp15\n\
    \  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n  local -a tmp19\n  local\
    \ -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local -a tmp23\n  local -a tmp24\n\
    \  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n  local -a tmp28\n  local\
    \ -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local -a tmp32\n  local -a tmp33\n\
    \  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n  local -a tmp37\n  local\
    \ -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local -a tmp41\n  local -a tmp42\n\
    \  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n  local -a tmp46\n  local\
    \ -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local -a tmp50\n  local -a tmp51\n\
    \  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n  local -a tmp55\n  local\
    \ -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local -a tmp59\n  local -a tmp60\n\
    \  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n  local -a tmp64\n  local\
    \ -a tmp65\n  local -a tmp66\n  local -a tmp67\n  local -a tmp68\n  \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a arr2\n    local -a sorted\n\
    \    local -a sorted2\n    local -a sorted3\n    local -a sorted4\n    local -a\
    \ sorted5\n    local -a sorted6\n    local -a sorted7\n    local -a sorted8\n\
    \    local -a sorted9\n    local -a sorted10\n    local -a sorted11\n    local\
    \ -a sorted12\n    local -a sorted13\n    local -a sorted14\n    local -a sorted15\n\
    \    local -a sorted16\n    local -a sorted17\n    local -a sorted18\n    local\
    \ -a sorted19\n    local -a sorted20\n    local -a sorted21\n    local -a sorted22\n\
    \    local -a sorted23\n    local -a sorted24\n    local -a sorted25\n    local\
    \ -a sorted26\n    local -a sorted27\n    local -a sorted28\n    local -a sorted29\n\
    \    local -a sorted30\n    local -a sorted31\n    local -a sorted32\n    local\
    \ -a sorted33\n    local -a sorted34\n    local -a sorted35\n    local -a sorted36\n\
    \    local -a sorted37\n    local -a sorted38\n    local -a sorted39\n    local\
    \ -a sorted40\n    local -a sorted41\n    local -a sorted42\n    local -a sorted43\n\
    \    local -a sorted44\n    local -a sorted45\n    local -a sorted46\n    local\
    \ -a sorted47\n    local -a sorted48\n    local -a sorted49\n    local -a sorted50\n\
    \    local -a sorted51\n    local -a sorted52\n    local -a sorted53\n    local\
    \ -a sorted54\n    local -a sorted55\n    local -a sorted56\n    local -a sorted57\n\
    \    local -a sorted58\n    local -a sorted59\n    local -a sorted60\n    local\
    \ -a sorted61\n    local -a sorted62\n    local -a sorted63\n    local -a sorted64\n\
    \    local -a sorted65\n    local -a sorted66\n    local -a sorted67\n    local\
    \ -a sorted68\n    local -a sorted69\n    local -a sorted70\n    local -a sorted71\n\
    \    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result=()\n    local\
    \ -a count\n    local -a sorted\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local count1\n    local count2\n    local count3\n\
    \    local count4\n    local count5\n    local count6\n    local count7\n    local\
    \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
    \    local count13\n    local count14\n    local count15\n    local count16\n\
    \    local count17\n    local count18\n    local count19\n    local count20\n\
    \    local count21\n    local count22\n    local count23\n    local count24\n\
    \    local count25\n    local count26\n    local count27\n    local count28\n\
    \    local count29\n    local count30\n    local count31\n    local count32\n\
    \    local count33\n    local count34\n    local count35\n    local count36\n\
    \    local count37\n    local count38\n    local count39\n    local count40\n\
    \    local count41\n    local count42\n    local count43\n    local count44\n\
    \    local count45\n    local count46\n    local count47\n    local count48\n\
    \    local count49\n    local count50\n    local count51\n    local count52\n\
    \    local count53\n    local count54\n    local count55\n    local count56\n\
    \    local count57\n    local count58\n    local count59\n    local count60\n\
    \    local count61\n    local count62\n    local count63\n    local count64\n\
    \    local count65\n    local count66\n    local count67\n    local count68\n\
    \    local count69\n    local count70\n    local count71\n    local count72\n\
    \    local count73\n    local count74\n    local count75\n    local count76\n\
    \    local count77\n    local count78\n    local count79\n    local count80\n\
    \    local count81\n    local count82\n    local count83\n    local count84\n\
    \    local count85\n    local count86\n    local count87\n    local count88\n\
    \    local count89\n    local count90\n    local count91\n    local count92\n\
    \    local count93\n    local count94\n    local count95\n    local count96\n\
    \    local count97\n    local count98\n\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local decimal\n    local decimal2\n    local\
    \ decimal3\n    local decimal4\n    local decimal5\n    local decimal6\n    local\
    \ decimal7\n    local decimal8\n    local decimal9\n    local decimal10\n    local\
    \ decimal11\n    local decimal12\n    local decimal13\n    local decimal14\n \
    \   local decimal15\n    local decimal16\n    local decimal17\n    local decimal18\n\
    \    local decimal19\n    local decimal20\n    local decimal21\n    local decimal22\n\
    \    local decimal23\n    local decimal24\n    local decimal25\n    local decimal26\n\
    \    local decimal27\n    local decimal28\n    local decimal29\n    local decimal30\n\
    \    local decimal31\n    local decimal32\n    local decimal33\n    local decimal34\n\
    \    local decimal35\n    local decimal36\n    local decimal37\n    local decimal38\n\
    \    local decimal39\n    local decimal40\n    local decimal41\n    local decimal42\n\
    \    local decimal43\n    local decimal44\n    local decimal45\n    local decimal46\n\
    \    local decimal47\n    local decimal48\n    local decimal49\n    local decimal50\n\
    \    local decimal51\n    local decimal52\n    local decimal53\n    local decimal54\n\
    \    local decimal55\n    local decimal56\n    local decimal57\n    local decimal58\n\
    \    local decimal59\n    local decimal60\n    local decimal61\n    local decimal62\n\
    \    local decimal63\n    local decimal64\n    local decimal65\n    local decimal66\n\
    \    local decimal67\n    local decimal68\n    local decimal69\n    local decimal70\n\
    \    local decimal71\n    local decimal72\n    local decimal73\n    local decimal74\n\
    \    local decimal75\n    local decimal76\n    local decimal77\n    local decimal78\n\
    \    local decimal79\n    local decimal80\n    local decimal81\n    local decimal82\n\
    \    local decimal83\n    local decimal84\n    local decimal85\n    local decimal86\n\
    \    local decimal87\n    local decimal88\n    local decimal89\n    local decimal90\n\
    \    local decimal91\n    local decimal92\n    local decimal93\n    local decimal94\n\
    \    local decimal95\n    local decimal96\n    local decimal97\n    local decimal98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a counts\n    local -a count\n   \
    \ local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local decimal\n    local decimal2\n    local\
    \ decimal3\n    local decimal4\n    local decimal5\n    local decimal6\n    local\
    \ decimal7\n    local decimal8\n    local decimal9\n    local decimal10\n    local\
    \ decimal11\n    local decimal12\n    local decimal13\n    local decimal14\n \
    \   local decimal15\n    local decimal16\n    local decimal17\n    local decimal18\n\
    \    local decimal19\n    local decimal20\n    local decimal21\n    local decimal22\n\
    \    local decimal23\n    local decimal24\n    local decimal25\n    local decimal26\n\
    \    local decimal27\n    local decimal28\n    local decimal29\n    local decimal30\n\
    \    local decimal31\n    local decimal32\n    local decimal33\n    local decimal34\n\
    \    local decimal35\n    local decimal36\n    local decimal37\n    local decimal38\n\
    \    local decimal39\n    local decimal40\n    local decimal41\n    local decimal42\n\
    \    local decimal43\n    local decimal44\n    local decimal45\n    local decimal46\n\
    \    local decimal47\n    local decimal48\n    local decimal49\n    local decimal50\n\
    \    local decimal51\n    local decimal52\n    local decimal53\n    local decimal54\n\
    \    local decimal55\n    local decimal56\n    local decimal57\n    local decimal58\n\
    \    local decimal59\n    local decimal60\n    local decimal61\n    local decimal62\n\
    \    local decimal63\n    local decimal64\n    local decimal65\n    local decimal66\n\
    \    local decimal67\n    local decimal68\n    local decimal69\n    local decimal70\n\
    \    local decimal71\n    local decimal72\n    local decimal73\n    local decimal74\n\
    \    local decimal75\n    local decimal76\n    local decimal77\n    local decimal78\n\
    \    local decimal79\n    local decimal80\n    local decimal81\n    local decimal82\n\
    \    local decimal83\n    local decimal84\n    local decimal85\n    local decimal86\n\
    \    local decimal87\n    local decimal88\n    local decimal89\n    local decimal90\n\
    \    local decimal91\n    local decimal92\n    local decimal93\n    local decimal94\n\
    \    local decimal95\n    local decimal96\n    local decimal97\n    local decimal98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local j\n    local k\n    local count\n    local max\n    local min\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local IFS=$1\n    local -a arr\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local len\n    local count\n  \
    \  local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n   \
    \ local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n   \
    \ local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local -a\
    \ sorted\n    local -a counts\n    local -a count\n    local -a ones\n    local\
    \ -a dec\n    local -a decstr\n    local -a decstrlen\n    local -a decstrlen2\n\
    \    local -a decstrlen3\n    local -a decstrlen4\n    local -a decstrlen5\n \
    \   local -a decstrlen6\n    local -a decstrlen7\n    local -a decstrlen8\n  \
    \  local -a decstrlen9\n    local -a decstrlen10\n    local -a decstrlen11\n \
    \   local -a decstrlen12\n    local -a decstrlen13\n    local -a decstrlen14\n\
    \    local -a decstrlen15\n    local -a decstrlen16\n    local -a decstrlen17\n\
    \    local -a decstrlen18\n    local -a decstrlen19\n    local -a decstrlen20\n\
    \    local -a decstrlen21\n    local -a decstrlen22\n    local -a decstrlen23\n\
    \    local -a decstrlen24\n    local -a decstrlen25\n    local -a decstrlen26\n\
    \    local -a decstrlen27\n    local -a decstrlen28\n    local -a decstrlen29\n\
    \    local -a decstrlen30\n    local -a decstrlen31\n    local -a decstrlen32\n\
    \    local -a decstrlen33\n    local -a decstrlen34\n    local -a decstrlen35\n\
    \    local -a decstrlen36\n    local -a decstrlen37\n    local -a decstrlen38\n\
    \    local -a decstrlen39\n    local -a decstrlen40\n    local -a decstrlen41\n\
    \    local -a decstrlen42\n    local -a decstrlen43\n    local -a decstrlen44\n\
    \    local -a decstrlen45\n    local -a decstrlen46\n    local -a decstrlen47\n\
    \    local -a decstrlen48\n    local -a decstrlen49\n    local -a decstrlen50\n\
    \    local -a decstrlen51\n    local -a dec\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local sorted=()\n  local i\n \
    \ local j\n  local count\n  local temp\n  local temp2\n  local temp3\n  local\
    \ temp4\n  local temp5\n  local temp6\n  local temp7\n  local temp8\n  local temp9\n\
    \  local temp10\n  local temp11\n  local temp12\n  local temp13\n  local temp14\n\
    \  local temp15\n  local temp16\n  local temp17\n  local temp18\n  local temp19\n\
    \  local temp20\n  local temp21\n  local temp22\n  local temp23\n  local temp24\n\
    \  local temp25\n  local temp26\n  local temp27\n  local temp28\n  local temp29\n\
    \  local temp30\n  local temp31\n  local temp32\n  local temp33\n  local temp34\n\
    \  local temp35\n  local temp36\n  local temp37\n  local temp38\n  local temp39\n\
    \  local temp40\n  local temp41\n  local temp42\n  local temp43\n  local temp44\n\
    \  local temp45\n  local temp46\n  local temp47\n  local temp48\n  local temp49\n\
    \  local temp50\n  local temp51\n  local temp52\n  local temp53\n  local temp54\n\
    \  local temp55\n  local temp56\n  local temp57\n  local temp58\n  local temp59\n\
    \  local temp60\n  local temp61\n  local temp62\n  local temp63\n  local temp64\n\
    \  local temp65\n  local temp66\n  local temp67\n  local temp68\n  local temp69\n\
    \  local temp70\n  local temp71\n  local temp72\n  local temp73\n  local temp74\n\
    \  local temp75\n  local temp76\n  local temp77\n  local temp78\n  local temp79\n\
    \  local temp80\n  local temp81\n  local temp82\n  local temp83\n  local temp84\n\
    \  local temp85\n  local temp86\n  local temp87\n  local temp88\n  local temp89\n\
    \  local temp90\n  local temp91\n  local temp92\n  local temp93\n  local temp94\n\
    \  local temp95\n  local temp96\n  local temp97\n  local temp98\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a count\n\
    \    local -a sorted2\n    local -a count2\n    local -a sorted3\n    local -a\
    \ count3\n    local -a sorted4\n    local -a count4\n    local -a sorted5\n  \
    \  local -a count5\n    local -a sorted6\n    local -a count6\n    local -a sorted7\n\
    \    local -a count7\n    local -a sorted8\n    local -a count8\n    local -a\
    \ sorted9\n    local -a count9\n    local -a sorted10\n    local -a count10\n\
    \    local -a sorted11\n    local -a count11\n    local -a sorted12\n    local\
    \ -a count12\n    local -a sorted13\n    local -a count13\n    local -a sorted14\n\
    \    local -a count14\n    local -a sorted15\n    local -a count15\n    local\
    \ -a sorted16\n    local -a count16\n    local -a sorted17\n    local -a count17\n\
    \    local -a sorted18\n    local -a count18\n    local -a sorted19\n    local\
    \ -a count19\n    local -a sorted20\n    local -a count20\n    local -a sorted21\n\
    \    local -a count21\n    local -a sorted22\n    local -a count22\n    local\
    \ -a sorted23\n    local -a count23\n    local -a sorted24\n    local -a count24\n\
    \    local -a sorted25\n    local -a count25\n    local -a sorted26\n    local\
    \ -a count26\n    local -a sorted27\n    local -a count27\n    local -a sorted28\n\
    \    local -a count28\n    local -a sorted29\n    local -a count29\n    local\
    \ -a sorted30\n    local -a count30\n    local -a sorted31\n    local -a count31\n\
    \    local -a sorted32\n    local -a count32\n    local -a sorted33\n    local\
    \ -a count33\n    local -a sorted34\n    local -a count34\n    local -a sorted35\n\
    \    local -a count35\n    local -a sorted36\n    local -a count36\n    local\
    \ -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local j\n    local len\n    local count\n    local tmp\n    local tmp2\n\
    \    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local temp\n    local temp2\n\
    \    local temp3\n    local temp4\n    local temp5\n    local temp6\n    local\
    \ temp7\n    local temp8\n    local temp9\n    local temp10\n    local temp11\n\
    \    local temp12\n    local temp13\n    local temp14\n    local temp15\n    local\
    \ temp16\n    local temp17\n    local temp18\n    local temp19\n    local temp20\n\
    \    local temp21\n    local temp22\n    local temp23\n    local temp24\n    local\
    \ temp25\n    local temp26\n    local temp27\n    local temp28\n    local temp29\n\
    \    local temp30\n    local temp31\n    local temp32\n    local temp33\n    local\
    \ temp34\n    local temp35\n    local temp36\n    local temp37\n    local temp38\n\
    \    local temp39\n    local temp40\n    local temp41\n    local temp42\n    local\
    \ temp43\n    local temp44\n    local temp45\n    local temp46\n    local temp47\n\
    \    local temp48\n    local temp49\n    local temp50\n    local temp51\n    local\
    \ temp52\n    local temp53\n    local temp54\n    local temp55\n    local temp56\n\
    \    local temp57\n    local temp58\n    local temp59\n    local temp60\n    local\
    \ temp61\n    local temp62\n    local temp63\n    local temp64\n    local temp65\n\
    \    local temp66\n    local temp67\n    local temp68\n    local temp69\n    local\
    \ temp70\n    local temp71\n    local temp72\n    local temp73\n    local temp74\n\
    \    local temp75\n    local temp76\n    local temp77\n    local temp78\n    local\
    \ temp79\n    local temp80\n    local temp81\n    local temp82\n    local temp83\n\
    \    local temp84\n    local temp85\n    local temp86\n    local temp87\n    local\
    \ temp88\n    local temp89\n    local temp90\n    local temp91\n    local temp92\n\
    \    local temp93\n    local temp94\n    local temp95\n    local temp96\n    local\
    \ temp97\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a result\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    \n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local decimal\n    local decimals\n    local decimals_str\n\
    \    local decimals_str_list\n    local decimals_str_list2\n    local decimals_str_list3\n\
    \    local decimals_str_list4\n    local decimals_str_list5\n    local decimals_str_list6\n\
    \    local decimals_str_list7\n    local decimals_str_list8\n    local decimals_str_list9\n\
    \    local decimals_str_list10\n    local decimals_str_list11\n    local decimals_str_list12\n\
    \    local decimals_str_list13\n    local decimals_str_list14\n    local decimals_str_list15\n\
    \    local decimals_str_list16\n    local decimals_str_list17\n    local decimals_str_list18\n\
    \    local decimals_str_list19\n    local decimals_str_list20\n    local decimals_str_list21\n\
    \    local decimals_str_list22\n    local decimals_str_list23\n    local decimals_str_list24\n\
    \    local decimals_str_list25\n    local decimals_str_list26\n    local decimals_str_list27\n\
    \    local decimals_str_list28\n    local decimals_str_list29\n    local decimals_str_list30\n\
    \    local decimals_str_list31\n    local decimals_str_list32\n    local decimals_str_list33\n\
    \    local decimals_str_list34\n    local decimals_str_list35\n    local decimals_str_list36\n\
    \    local decimals_str_list37\n    local decimals_str_list38\n    local decimals_str_list39\n\
    \    local decimals_str_list40\n    local decimals_str_list41\n    local decimals_str_list42\n\
    \    local decimals_str_list43\n    local decimals_str_list44\n    local decimals_str_list45\n\
    \    local decimals_str_list46\n    local decimals_str_list47\n    local decimals_str_list48\n\
    \    local decimals_str_list49\n    local decimals_str_list50\n    local decimals_str_list51\n\
    \    local decimals_str_list52\n    local decimals_str_list53\n    local decimals_str_list54\n\
    \    local decimals_str_list55\n    local decimals_str_list56\n    local decimals_str_list57\n\
    \    local decimals_str_list58\n    local decimals_str_list59\n    local decimals_str_list60\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local ones\n    local dec\n    local decstr\n    local decstrlen\n\
    \    local decstrlen2\n    local decstrlen3\n    local decstrlen4\n    local decstrlen5\n\
    \    local decstrlen6\n    local decstrlen7\n    local decstrlen8\n    local decstrlen9\n\
    \    local decstrlen10\n    local decstrlen11\n    local decstrlen12\n    local\
    \ decstrlen13\n    local decstrlen14\n    local decstrlen15\n    local decstrlen16\n\
    \    local decstrlen17\n    local decstrlen18\n    local decstrlen19\n    local\
    \ decstrlen20\n    local decstrlen21\n    local decstrlen22\n    local decstrlen23\n\
    \    local decstrlen24\n    local decstrlen25\n    local decstrlen26\n    local\
    \ decstrlen27\n    local decstrlen28\n    local decstrlen29\n    local decstrlen30\n\
    \    local decstrlen31\n    local decstrlen32\n    local decstrlen33\n    local\
    \ decstrlen34\n    local decstrlen35\n    local decstrlen36\n    local decstrlen37\n\
    \    local decstrlen38\n    local decstrlen39\n    local decstrlen40\n    local\
    \ decstrlen41\n    local decstrlen42\n    local decstrlen43\n    local decstrlen44\n\
    \    local decstrlen45\n    local decstrlen46\n    local decstrlen47\n    local\
    \ decstrlen48\n    local decstrlen49\n    local decstrlen50\n    local decstrlen51\n\
    \    local decstrlen52\n    local decstrlen53\n    local decstrlen54\n    local\
    \ decstrlen55\n    local decstrlen56\n    local decstrlen57\n    local decstrlen58\n\
    \    local decstrlen59\n    local decstrlen60\n    local decstrlen61\n    local\
    \ decstrlen62\n    local decstrlen63\n    local decstrlen64\n    local decstrlen65\n\
    \    local decstrlen66\n    local decstrlen67\n    local decstrlen68\n    local\
    \ decstrlen\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a result\n    local -a counts\n    local i\n    local j\n\
    \    local k\n    local count\n    local -a counts\n    local -a count\n    local\
    \ -a counts\n    local -a count\n    local -a counts\n    local -a count\n   \
    \ local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local i\n\
    \    local count\n    local j\n    local k\n    local temp\n    local temp2\n\
    \    local temp3\n    local temp4\n    local temp5\n    local temp6\n    local\
    \ temp7\n    local temp8\n    local temp9\n    local temp10\n    local temp11\n\
    \    local temp12\n    local temp13\n    local temp14\n    local temp15\n    local\
    \ temp16\n    local temp17\n    local temp18\n    local temp19\n    local temp20\n\
    \    local temp21\n    local temp22\n    local temp23\n    local temp24\n    local\
    \ temp25\n    local temp26\n    local temp27\n    local temp28\n    local temp29\n\
    \    local temp30\n    local temp31\n    local temp32\n    local temp33\n    local\
    \ temp34\n    local temp35\n    local temp36\n    local temp37\n    local temp38\n\
    \    local temp39\n    local temp40\n    local temp41\n    local temp42\n    local\
    \ temp43\n    local temp44\n    local temp45\n    local temp46\n    local temp47\n\
    \    local temp48\n    local temp49\n    local temp50\n    local temp51\n    local\
    \ temp52\n    local temp53\n    local temp54\n    local temp55\n    local temp56\n\
    \    local temp57\n    local temp58\n    local temp59\n    local temp60\n    local\
    \ temp61\n    local temp62\n    local temp63\n    local temp64\n    local temp65\n\
    \    local temp66\n    local temp67\n    local temp68\n    local temp69\n    local\
    \ temp70\n    local temp71\n    local temp72\n    local temp73\n    local temp74\n\
    \    local temp75\n    local temp76\n    local temp77\n    local temp78\n    local\
    \ temp79\n    local temp80\n    local temp81\n    local temp82\n    local temp83\n\
    \    local temp84\n    local temp85\n    local temp86\n    local temp87\n    local\
    \ temp88\n    local temp89\n    local temp90\n    local temp91\n    local temp92\n\
    \    local temp93\n    local temp94\n    local temp95\n    local temp96\n    local\
    \ temp97\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a counts\n    local -a count\n   \
    \ local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a prefix\n \
    \   local -a suffix\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local -a\
    \ tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a\
    \ tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a\
    \ tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpes6d5unn.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    \  local -a sorted\n  local -a counts\n  local -a sorted\n  local -a counts\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a result=()\n\n    for (( i = 0; i < ${#arr[@]}; i++\
    \ )); do\n        counts[${arr[i]}]=$(( ${counts[${arr[i]}]} + 1 ))\n    done\n\
    \n    for (( i = 0; i < ${#counts[@]}; i++ )); do\n        sorted+=( ${arr[i]}\
    \ )\n    done\n\n    for (( i = 0; i < ${#sorted[@]}; i++ )); do\n        result+=(\
    \ ${sorted[i]} )\n    done\n\n    echo ${result[@]}\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo1ul2lpr.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a result\n \
    \   local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n\
    \    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a\
    \ r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a result=()\n\n    for element in \"${arr[@]}\"; do\n\
    \        counts[$element]=$((${counts[$element]} + 1))\n    done\n\n    for element\
    \ in \"${!counts[@]}\"; do\n        sorted[$element]=\"${counts[$element]}\"\n\
    \    done\n\n    local -n max=$((${#sorted[@]} - 1))\n    for element in \"${!sorted[@]}\"\
    ; do\n        result[$element]=\"${sorted[$element]}\"\n    done\n\n    local\
    \ -n min=$((${#result[@]} - 1))\n    for element in \"${!result[@]}\"; do\n  \
    \      sorted[$element]=\"${result[$element]}\"\n    done\n\n    for element in\
    \ \"${!sorted[@]}\"; do\n        sorted[$element]=\"${sorted[$element]:0:$min}\"\
    \n    done\n\n    for element in \"${!sorted[@]}\"; do\n        sorted[$element]=\"\
    ${sorted[$element]:$max}\"\n    done\n\n    for element in \"${!sorted[@]}\";\
    \ do\n        result[$element]=\"${sorted[$element]}\"\n    done\n\n    for element\
    \ in \"${!result[@]}\"; do\n        sorted[$element]=\"${result[$element]}\"\n\
    \    done\n\n    for element in \"${!sorted[@]}\"; do\n        sorted[$element]=\"\
    ${sorted[$element]:0:$min}\"\n    done\n\n    for element in \"${!sorted[@]}\"\
    ; do\n        sorted[$element]=\"${sorted[$element]:$max}\"\n    done\n\n    for\
    \ element in \"${!sorted[@]}\"; do\n        result[$element]=\"${sorted[$element]}\"\
    \n    done\n\n    for element in \"${!result[@]}\"; do\n        sorted[$element]=\"\
    ${result[$element]}\"\n    done\n\n    for element in \"${!sorted[@]}\"; do\n\
    \        sorted[$element]=\"${sorted[$element]:0:$min}\"\n    done\n\n    for\
    \ element in \"${!sorted[@]}\"; do\n        sorted[$element]=\"${sorted[$element]:$max}\"\
    \n    done\n\n    for element in \"${!sorted[@]}\"; do\n        result[$element]=\"\
    ${sorted[$element]}\"\n    done\n\n    for element in \"${!result[@]}\"; do\n\
    \        sorted[$element]=\"${result[$element]}\"\n    done\n\n    for element\
    \ in \"${!sorted[@]}\"; do\n        sorted[$element]=\"${\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4hq5p7iv.sh: line 103: unexpected EOF while looking for matching
    `"''

    /tmp/tmp4hq5p7iv.sh: line 107: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reversed\n\
    \    local -a counts_sorted_reversed_reversed\n    local -a counts_sorted_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed\n    local -a\
    \ counts_sorted_reversed_reversed_reversed_reversed_reversed\n    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local i\n\
    \    local j\n    local count\n    local temp\n    local count1\n    local count2\n\
    \    local count3\n    local count4\n    local count5\n    local count6\n    local\
    \ count7\n    local count8\n    local count9\n    local count10\n    local count11\n\
    \    local count12\n    local count13\n    local count14\n    local count15\n\
    \    local count16\n    local count17\n    local count18\n    local count19\n\
    \    local count20\n    local count21\n    local count22\n    local count23\n\
    \    local count24\n    local count25\n    local count26\n    local count27\n\
    \    local count28\n    local count29\n    local count30\n    local count31\n\
    \    local count32\n    local count33\n    local count34\n    local count35\n\
    \    local count36\n    local count37\n    local count38\n    local count39\n\
    \    local count40\n    local count41\n    local count42\n    local count43\n\
    \    local count44\n    local count45\n    local count46\n    local count47\n\
    \    local count48\n    local count49\n    local count50\n    local count51\n\
    \    local count52\n    local count53\n    local count54\n    local count55\n\
    \    local count56\n    local count57\n    local count58\n    local count59\n\
    \    local count60\n    local count61\n    local count62\n    local count63\n\
    \    local count64\n    local count65\n    local count66\n    local count67\n\
    \    local count68\n    local count69\n    local count70\n    local count71\n\
    \    local count72\n    local count73\n    local count74\n    local count75\n\
    \    local count76\n    local count77\n    local count78\n    local count79\n\
    \    local count80\n    local count81\n    local count82\n    local count83\n\
    \    local count84\n    local count85\n    local count86\n    local count87\n\
    \    local count88\n    local count89\n    local count90\n    local count91\n\
    \    local count92\n    local count93\n    local count94\n    local count95\n\
    \    local count96\n    local count97\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a index\n    local -a count\n    local\
    \ -a counts\n    local -a count\n    local -a counts\n    local -a count\n   \
    \ local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local -a \n}\n\ncandidate() {\n \
    \   sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ count\n    local -a counts\n    local -a sorted\n    local -a count\n    local\
    \ -a counts\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6mt3hymv.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local maxIndex\n\
    \    local minIndex\n    local maxCount\n    local minCount\n    local maxValue\n\
    \    local minValue\n    local maxIndexValue\n    local minIndexValue\n    local\
    \ maxCountValue\n    local minCountValue\n    local maxValueValue\n    local minValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValueValue\n    local minIndexValueValueValue\n    local\
    \ maxCountValueValueValue\n    local minCountValueValueValue\n    local maxValueValueValue\n\
    \    local minValueValueValue\n    local maxIndexValueValueValue\n    local minIndexValueValueValue\n\
    \    local maxCountValueValueValue\n    local minCountValueValueValue\n    local\
    \ maxValueValueValue\n    local minValueValueValue\n    local maxIndexValueValueValue\n\
    \    local minIndexValueValueValue\n    local maxCountValueValueValue\n    local\
    \ minCountValueValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValueValue\n    local minIndexValueValueValue\n    local\
    \ maxCountValueValueValue\n    local minCountValueValueValue\n    local maxValueValueValue\n\
    \    local minValueValueValue\n    local maxIndexValueValueValue\n    local minIndexValueValueValue\n\
    \    local maxCountValueValueValue\n    local minCountValueValueValue\n    local\
    \ maxValueValueValue\n    local minValueValueValue\n    local maxIndexValueValueValue\n\
    \    local minIndexValueValueValue\n    local maxCountValueValueValue\n    local\
    \ minCountValueValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValueValue\n    local minIndexValueValueValue\n    local\
    \ maxCountValueValueValue\n    local minCountValueValueValue\n    local maxValueValueValue\n\
    \    local minValueValueValue\n    local maxIndexValueValueValue\n    local minIndexValueValueValue\n\
    \    local maxCountValueValueValue\n    local minCountValueValueValue\n    local\
    \ maxValueValueValue\n    local minValueValueValue\n    local maxIndexValueValue\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a sorted_by_dec=()\n    local -a sorted_by_dec_inv=()\n\
    \    local -a sorted_by_dec_inv_rev=()\n    local -a sorted_by_dec_inv_rev_rev=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv=()\n    local -a sorted_by_dec_inv_rev_rev_inv_rev=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv=()\n    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv=()\n    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv=()\n    local\
    \ -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev=()\n    local -a\
    \ sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv=()\n    local\
    \ -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev=()\n  \
    \  local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv=()\n\
    \    local -a sorted_by_dec_inv_rev_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_rev_inv_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe2x8y1ll.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeiveclje.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local max\n    local min\n    local temp\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a binary\n  local -a decimal\n  local -a sign\n  local -a signs\n  local\
    \ -a signs_len\n  local -a signs_lens\n  local -a signs_lens_len\n  local -a signs_lens_lens\n\
    \  local -a signs_lens_lens_len\n  local -a signs_lens_lens_lens\n  local -a signs_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens\n  local -a signs_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens\n  local -a signs_lens_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens\n  local -a signs_lens_lens_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens\n  local -a signs_lens_lens_lens_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens\n  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens\n  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\n  local -a\
    \ signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_s\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \  local -a signs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local result\n    local i\n\
    \    local j\n    local count\n    local count1\n    local count2\n    local count3\n\
    \    local count4\n    local count5\n    local count6\n    local count7\n    local\
    \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
    \    local count13\n    local count14\n    local count15\n    local count16\n\
    \    local count17\n    local count18\n    local count19\n    local count20\n\
    \    local count21\n    local count22\n    local count23\n    local count24\n\
    \    local count25\n    local count26\n    local count27\n    local count28\n\
    \    local count29\n    local count30\n    local count31\n    local count32\n\
    \    local count33\n    local count34\n    local count35\n    local count36\n\
    \    local count37\n    local count38\n    local count39\n    local count40\n\
    \    local count41\n    local count42\n    local count43\n    local count44\n\
    \    local count45\n    local count46\n    local count47\n    local count48\n\
    \    local count49\n    local count50\n    local count51\n    local count52\n\
    \    local count53\n    local count54\n    local count55\n    local count56\n\
    \    local count57\n    local count58\n    local count59\n    local count60\n\
    \    local count61\n    local count62\n    local count63\n    local count64\n\
    \    local count65\n    local count66\n    local count67\n    local count68\n\
    \    local count69\n    local count70\n    local count71\n    local count72\n\
    \    local count73\n    local count74\n    local count75\n    local count76\n\
    \    local count77\n    local count78\n    local count79\n    local count80\n\
    \    local count81\n    local count82\n    local count83\n    local count84\n\
    \    local count85\n    local count86\n    local count87\n    local count88\n\
    \    local count89\n    local count90\n    local count91\n    local count92\n\
    \    local count93\n    local count94\n    local count95\n    local count96\n\
    \    local count97\n    local count98\n\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a\
    \ sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n\
    \  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local\
    \ -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a\
    \ count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a\
    \ sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n\
    \  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local\
    \ -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a\
    \ count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a\
    \ sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n\
    \  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local\
    \ -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a\
    \ count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a counts\n    local -a counts_sorted\n    local -a counts_sorted_reversed\n\
    \    local -a counts_sorted_reversed_reversed\n    local -a counts_sorted_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed\n    local -a\
    \ counts_sorted_reversed_reversed_reversed_reversed_reversed\n    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a counts_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ -a sorted\n    local -a count\n    local -a counts\n    local -a counts_sorted\n\
    \    local -a counts_sorted_reverse\n    local -a counts_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse\n    local -a counts_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i\n    local count\n    local j\n    local k\n    local l\n    local m\n   \
    \ local n\n    local o\n    local p\n    local q\n    local r\n    local s\n \
    \   local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a result\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local -a \n}\n\ncandidate() {\n \
    \   sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a counts\n  local -a sorted\n  local -a count\n  local -a counts\n \
    \ local -a tmp\n  local -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a\
    \ tmp5\n  local -a tmp6\n  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n \
    \ local -a tmp10\n  local -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local\
    \ -a tmp14\n  local -a tmp15\n  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n\
    \  local -a tmp19\n  local -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local\
    \ -a tmp23\n  local -a tmp24\n  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n\
    \  local -a tmp28\n  local -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local\
    \ -a tmp32\n  local -a tmp33\n  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n\
    \  local -a tmp37\n  local -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local\
    \ -a tmp41\n  local -a tmp42\n  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n\
    \  local -a tmp46\n  local -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local\
    \ -a tmp50\n  local -a tmp51\n  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n\
    \  local -a tmp55\n  local -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local\
    \ -a tmp59\n  local -a tmp60\n  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n\
    \  local -a tmp64\n  local -a tmp65\n  local -a tmp66\n  local -a tmp67\n\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=\"$1\"\n    local -a sorted\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local count2\n    local count3\n    local count4\n\
    \    local count5\n    local count6\n    local count7\n    local count8\n    local\
    \ count9\n    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n    local count93\n\
    \    local count94\n    local count95\n    local count96\n    local count97\n\
    \    local count98\n    local count99\n\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n\
    \    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a\
    \ tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n\
    \    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local\
    \ -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n\
    \    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local\
    \ -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n\
    \    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local\
    \ -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n\
    \    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local\
    \ -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n\
    \    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local\
    \ -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local -a tmp46=()\n\
    \    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n    local\
    \ -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n    local -a tmp53=()\n\
    \    local -a tmp54=()\n    local -a tmp55=()\n    local -a \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4u6lbex0.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i=0\n    while [ $i -lt ${#array} ]; do\n        local j=0\n        while [\
    \ $j -lt ${#sorted} ]; do\n            local k=0\n            while [ $k -lt ${#array}\
    \ ]; do\n                if [ $array[$k] -eq 1 ]; then\n                    sorted[$j]=${array[$k]}\n\
    \                    array[$k]=0\n                    break\n                fi\n\
    \                ((k++))\n            done\n            ((j++))\n        done\n\
    \        ((i++))\n    done\n    echo \"${sorted[@]}\"\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local IFS=$1\n    local -a arr\n    local -a sorted\n\
    \    local -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a counts\n  local -a counts_sorted\n  local -a counts_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted\n  local -a counts_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted\n  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n  local\
    \ -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n  local\
    \ -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ -a count\n    local -a sorted\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local -a count\n    local\
    \ -a count\n    local -a count\n    local -a count\n    local \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted=()\n    local\
    \ -a counts=()\n    local -a sorted2=()\n    local -a counts2=()\n    local -a\
    \ sorted3=()\n    local -a counts3=()\n    local -a sorted4=()\n    local -a counts4=()\n\
    \    local -a sorted5=()\n    local -a counts5=()\n    local -a sorted6=()\n \
    \   local -a counts6=()\n    local -a sorted7=()\n    local -a counts7=()\n  \
    \  local -a sorted8=()\n    local -a counts8=()\n    local -a sorted9=()\n   \
    \ local -a counts9=()\n    local -a sorted10=()\n    local -a counts10=()\n  \
    \  local -a sorted11=()\n    local -a counts11=()\n    local -a sorted12=()\n\
    \    local -a counts12=()\n    local -a sorted13=()\n    local -a counts13=()\n\
    \    local -a sorted14=()\n    local -a counts14=()\n    local -a sorted15=()\n\
    \    local -a counts15=()\n    local -a sorted16=()\n    local -a counts16=()\n\
    \    local -a sorted17=()\n    local -a counts17=()\n    local -a sorted18=()\n\
    \    local -a counts18=()\n    local -a sorted19=()\n    local -a counts19=()\n\
    \    local -a sorted20=()\n    local -a counts20=()\n    local -a sorted21=()\n\
    \    local -a counts21=()\n    local -a sorted22=()\n    local -a counts22=()\n\
    \    local -a sorted23=()\n    local -a counts23=()\n    local -a sorted24=()\n\
    \    local -a counts24=()\n    local -a sorted25=()\n    local -a counts25=()\n\
    \    local -a sorted26=()\n    local -a counts26=()\n    local -a sorted27=()\n\
    \    local -a counts27=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx4sgskls.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a index\n  \
    \  local -a result\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local output\n  local i\n  local\
    \ j\n  local count\n  local tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local\
    \ tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n\
    \  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n \
    \ local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local\
    \ tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n\
    \  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n \
    \ local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local\
    \ tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n\
    \  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n \
    \ local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local\
    \ tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n\
    \  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n \
    \ local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local\
    \ tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n\
    \  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n \
    \ local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local\
    \ tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n\
    \  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n \
    \ local tmp96\n  local tmp97\n  local tmp98\n  \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local sorted=()\n    local\
    \ i=0\n    local count=0\n    local max=0\n    local min=0\n    local maxlen=0\n\
    \    local minlen=0\n    local maxnum=0\n    local minnum=0\n    local maxdec=0\n\
    \    local mindec=0\n    local maxdecnum=0\n    local mindecnum=0\n    local maxdecdec=0\n\
    \    local mindecdec=0\n    local maxdecdecnum=0\n    local mindecdecnum=0\n \
    \   local maxdecdecdec=0\n    local mindecdecdec=0\n    local maxdecdecdecnum=0\n\
    \    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n    local mindecdecdec=0\n\
    \    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n\
    \    local mindecdecdec=0\n    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n\
    \    local maxdecdecdecdec=0\n    local mindecdecdec=0\n    local maxdecdecdecnum=0\n\
    \    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n    local mindecdecdec=0\n\
    \    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n\
    \    local mindecdecdec=0\n    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n\
    \    local maxdecdecdecdec=0\n    local mindecdecdec=0\n    local maxdecdecdecnum=0\n\
    \    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n    local mindecdecdec=0\n\
    \    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n\
    \    local mindecdecdec=0\n    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n\
    \    local maxdecdecdecdec=0\n    local mindecdecdec=0\n    local maxdecdecdecnum=0\n\
    \    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n    local mindecdecdec=0\n\
    \    local maxdecdecdecnum=0\n    local mindecdecdecnum=0\n    local maxdecdecdecdec=0\n\
    \    local mindecdecdec=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local IFS=$'\\n'\n    local a=($(echo \"$1\" | tr\
    \ \" \" \"\\n\"))\n    local b=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local\
    \ c=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local d=($(echo \"$1\" | tr \" \"\
    \ \"\\n\"))\n    local e=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local f=($(echo\
    \ \"$1\" | tr \" \" \"\\n\"))\n    local g=($(echo \"$1\" | tr \" \" \"\\n\"))\n\
    \    local h=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local i=($(echo \"$1\" |\
    \ tr \" \" \"\\n\"))\n    local j=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local\
    \ k=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local l=($(echo \"$1\" | tr \" \"\
    \ \"\\n\"))\n    local m=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local n=($(echo\
    \ \"$1\" | tr \" \" \"\\n\"))\n    local o=($(echo \"$1\" | tr \" \" \"\\n\"))\n\
    \    local p=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local q=($(echo \"$1\" |\
    \ tr \" \" \"\\n\"))\n    local r=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local\
    \ s=$(echo \"$1\" | tr \" \" \"\\n\")\n    local t=($(echo \"$1\" | tr \" \" \"\
    \\n\"))\n    local u=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local v=($(echo\
    \ \"$1\" | tr \" \" \"\\n\"))\n    local w=($(echo \"$1\" | tr \" \" \"\\n\"))\n\
    \    local x=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local y=($(echo \"$1\" |\
    \ tr \" \" \"\\n\"))\n    local z=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local\
    \ A=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local B=($(echo \"$1\" | tr \" \"\
    \ \"\\n\"))\n    local C=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local D=($(echo\
    \ \"$1\" | tr \" \" \"\\n\"))\n    local E=($(echo \"$1\" | tr \" \" \"\\n\"))\n\
    \    local F=($(echo \"$1\" | tr \" \" \"\\n\"))\n    local G=($(echo \"$1\" |\
    \ tr \" \" \"\\n\"))\n    local H=($(echo \"$1\" | tr \" \n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp82sk06cf.sh: line 65: unexpected EOF while looking for matching
    `"''

    /tmp/tmp82sk06cf.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local temp\n    local counts\n\
    \    local count\n    local counts\n    local temp\n    local output\n    local\
    \ i\n    local count\n    local counts\n    local temp\n    local output\n   \
    \ local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local output\n\
    \    local i\n    local count\n    local counts\n    local temp\n    local \n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ counts\n    local -a sorted\n    local -a counts\n    local -a tmp\n    local\
    \ -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local\
    \ -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local\
    \ -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local\
    \ -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local\
    \ -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local\
    \ -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local\
    \ -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local\
    \ -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local\
    \ -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local\
    \ -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local\
    \ -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local\
    \ -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local\
    \ -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local\
    \ -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local\
    \ -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local\
    \ -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local\
    \ -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn07dheot.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeiveclje.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a count\n    local -a counts\n    local -a count\n   \
    \ local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeiveclje.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ count\n    local -a sorted\n    local -a count\n    local -a sorted\n    local\
    \ -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n   \
    \ local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n    local -a sorted\n\
    \    local -a count\n    local -a sorted\n    local -a count\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppdzi6n8g.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp71\n    local \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeiveclje.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a decimal2\n\
    \    local -a decimal3\n    local -a decimal4\n    local -a decimal5\n    local\
    \ -a decimal6\n    local -a decimal7\n    local -a decimal8\n    local -a decimal9\n\
    \    local -a decimal10\n    local -a decimal11\n    local -a decimal12\n    local\
    \ -a decimal13\n    local -a decimal14\n    local -a decimal15\n    local -a decimal16\n\
    \    local -a decimal17\n    local -a decimal18\n    local -a decimal19\n    local\
    \ -a decimal20\n    local -a decimal21\n    local -a decimal22\n    local -a decimal23\n\
    \    local -a decimal24\n    local -a decimal25\n    local -a decimal26\n    local\
    \ -a decimal27\n    local -a decimal28\n    local -a decimal29\n    local -a decimal30\n\
    \    local -a decimal31\n    local -a decimal32\n    local -a decimal33\n    local\
    \ -a decimal34\n    local -a decimal35\n    local -a decimal36\n    local -a decimal37\n\
    \    local -a decimal38\n    local -a decimal39\n    local -a decimal40\n    local\
    \ -a decimal41\n    local -a decimal42\n    local -a decimal43\n    local -a decimal44\n\
    \    local -a decimal45\n    local -a decimal46\n    local -a decimal47\n    local\
    \ -a decimal48\n    local -a decimal49\n    local -a decimal50\n    local -a decimal51\n\
    \    local -a decimal52\n    local -a decimal53\n    local -a decimal54\n    local\
    \ -a decimal55\n    local -a decimal56\n    local -a decimal57\n    local -a decimal58\n\
    \    local -a decimal59\n    local -a decimal60\n    local -a decimal61\n    local\
    \ -a decimal62\n    local -a decimal63\n    local -a decimal64\n    local -a decimal65\n\
    \    local -a decimal66\n    local -a decimal67\n    local -a decimal68\n    local\
    \ -a decimal69\n    local -a decimal70\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a decimal2\n\
    \    local -a decimal3\n    local -a decimal4\n    local -a decimal5\n    local\
    \ -a decimal6\n    local -a decimal7\n    local -a decimal8\n    local -a decimal9\n\
    \    local -a decimal10\n    local -a decimal11\n    local -a decimal12\n    local\
    \ -a decimal13\n    local -a decimal14\n    local -a decimal15\n    local -a decimal16\n\
    \    local -a decimal17\n    local -a decimal18\n    local -a decimal19\n    local\
    \ -a decimal20\n    local -a decimal21\n    local -a decimal22\n    local -a decimal23\n\
    \    local -a decimal24\n    local -a decimal25\n    local -a decimal26\n    local\
    \ -a decimal27\n    local -a decimal28\n    local -a decimal29\n    local -a decimal30\n\
    \    local -a decimal31\n    local -a decimal32\n    local -a decimal33\n    local\
    \ -a decimal34\n    local -a decimal35\n    local -a decimal36\n    local -a decimal37\n\
    \    local -a decimal38\n    local -a decimal39\n    local -a decimal40\n    local\
    \ -a decimal41\n    local -a decimal42\n    local -a decimal43\n    local -a decimal44\n\
    \    local -a decimal45\n    local -a decimal46\n    local -a decimal47\n    local\
    \ -a decimal48\n    local -a decimal49\n    local -a decimal50\n    local -a decimal51\n\
    \    local -a decimal52\n    local -a decimal53\n    local -a decimal54\n    local\
    \ -a decimal55\n    local -a decimal56\n    local -a decimal57\n    local -a decimal58\n\
    \    local -a decimal59\n    local -a decimal60\n    local -a decimal61\n    local\
    \ -a decimal62\n    local -a decimal63\n    local -a decimal64\n    local -a decimal65\n\
    \    local -a decimal66\n    local -a decimal67\n    local -a decimal68\n    local\
    \ -a decimal69\n    local -a decimal70\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a result\n    local -a ones\n    local -a dec\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -i i\n    local j\n    local k\n    local count\n    local dec\n\
    \    local str\n    local -a arr\n    local -a tmp\n    local -a sorted\n    local\
    \ -a tmp\n    local -i i\n    local j\n    local k\n    local count\n    local\
    \ dec\n    local str\n    local -a arr\n    local -a tmp\n    local -a sorted\n\
    \    local -a tmp\n    local -i i\n    local j\n    local k\n    local count\n\
    \    local dec\n    local str\n    local -a arr\n    local -a tmp\n    local -a\
    \ sorted\n    local -a tmp\n    local -i i\n    local j\n    local k\n    local\
    \ count\n    local dec\n    local str\n    local -a arr\n    local -a tmp\n  \
    \  local -a sorted\n    local -a tmp\n    local -i i\n    local j\n    local k\n\
    \    local count\n    local dec\n    local str\n    local -a arr\n    local -a\
    \ tmp\n    local -a sorted\n    local -a tmp\n    local -i i\n    local j\n  \
    \  local k\n    local count\n    local dec\n    local str\n    local -a arr\n\
    \    local -a tmp\n    local -a sorted\n    local -a tmp\n    local -i i\n   \
    \ local j\n    local k\n    local count\n    local dec\n    local str\n    local\
    \ -a arr\n    local -a tmp\n    local -a sorted\n    local -a tmp\n    local -i\
    \ i\n    local j\n    local k\n    local count\n    local dec\n    local str\n\
    \    local -a arr\n    local -a tmp\n    local -a sorted\n    local -a tmp\n \
    \   local -i i\n    local j\n    local k\n    local count\n    local dec\n   \
    \ local str\n    local -a arr\n    local -a tmp\n    local -a sorted\n    local\
    \ -a tmp\n    local -i i\n    local j\n    local k\n    local count\n    local\
    \ dec\n    local str\n    local -a arr\n    local -a tmp\n    local -a sorted\n\
    \    local -a tmp\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpomx885jm.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a prefix\n \
    \   local -a suffix\n    local -a result\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3lzubfpd.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local count\n    local j\n    local k\n    local temp\n    local temp2\n\
    \    local temp3\n    local temp4\n    local temp5\n    local temp6\n    local\
    \ temp7\n    local temp8\n    local temp9\n    local temp10\n    local temp11\n\
    \    local temp12\n    local temp13\n    local temp14\n    local temp15\n    local\
    \ temp16\n    local temp17\n    local temp18\n    local temp19\n    local temp20\n\
    \    local temp21\n    local temp22\n    local temp23\n    local temp24\n    local\
    \ temp25\n    local temp26\n    local temp27\n    local temp28\n    local temp29\n\
    \    local temp30\n    local temp31\n    local temp32\n    local temp33\n    local\
    \ temp34\n    local temp35\n    local temp36\n    local temp37\n    local temp38\n\
    \    local temp39\n    local temp40\n    local temp41\n    local temp42\n    local\
    \ temp43\n    local temp44\n    local temp45\n    local temp46\n    local temp47\n\
    \    local temp48\n    local temp49\n    local temp50\n    local temp51\n    local\
    \ temp52\n    local temp53\n    local temp54\n    local temp55\n    local temp56\n\
    \    local temp57\n    local temp58\n    local temp59\n    local temp60\n    local\
    \ temp61\n    local temp62\n    local temp63\n    local temp64\n    local temp65\n\
    \    local temp66\n    local temp67\n    local temp68\n    local temp69\n    local\
    \ temp70\n    local temp71\n    local temp72\n    local temp73\n    local temp74\n\
    \    local temp75\n    local temp76\n    local temp77\n    local temp78\n    local\
    \ temp79\n    local temp80\n    local temp81\n    local temp82\n    local temp83\n\
    \    local temp84\n    local temp85\n    local temp86\n    local temp87\n    local\
    \ temp88\n    local temp89\n    local temp90\n    local temp91\n    local temp92\n\
    \    local temp93\n    local temp94\n    local temp95\n    local temp96\n    local\
    \ temp97\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a counts\n\
    \  local -a count\n  local -a result\n  local -a element\n  local -a element2\n\
    \  local -a element3\n  local -a element4\n  local -a element5\n  local -a element6\n\
    \  local -a element7\n  local -a element8\n  local -a element9\n  local -a element10\n\
    \  local -a element11\n  local -a element12\n  local -a element13\n  local -a\
    \ element14\n  local -a element15\n  local -a element16\n  local -a element17\n\
    \  local -a element18\n  local -a element19\n  local -a element20\n  local -a\
    \ element21\n  local -a element22\n  local -a element23\n  local -a element24\n\
    \  local -a element25\n  local -a element26\n  local -a element27\n  local -a\
    \ element28\n  local -a element29\n  local -a element30\n  local -a element31\n\
    \  local -a element32\n  local -a element33\n  local -a element34\n  local -a\
    \ element35\n  local -a element36\n  local -a element37\n  local -a element38\n\
    \  local -a element39\n  local -a element40\n  local -a element41\n  local -a\
    \ element42\n  local -a element43\n  local -a element44\n  local -a element45\n\
    \  local -a element46\n  local -a element47\n  local -a element48\n  local -a\
    \ element49\n  local -a element50\n  local -a element51\n  local -a element52\n\
    \  local -a element53\n  local -a element54\n  local -a element55\n  local -a\
    \ element56\n  local -a element57\n  local -a element58\n  local -a element59\n\
    \  local -a element60\n  local -a element61\n  local -a element62\n  local -a\
    \ element63\n  local -a element64\n  local -a element65\n  local -a element66\n\
    \  local -a element67\n  local -a element68\n  local -a element69\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a tmp\n    local\
    \ -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local\
    \ -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local\
    \ -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local\
    \ -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local\
    \ -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local\
    \ -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local\
    \ -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local\
    \ -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local\
    \ -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local\
    \ -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local\
    \ -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local\
    \ -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local\
    \ -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local\
    \ -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local\
    \ -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local\
    \ -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local\
    \ -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local output\n  local i\n  local\
    \ count\n  local j\n  local tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local\
    \ tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n\
    \  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n \
    \ local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local\
    \ tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n\
    \  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n \
    \ local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local\
    \ tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n\
    \  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n \
    \ local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local\
    \ tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n\
    \  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n \
    \ local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local\
    \ tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n\
    \  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n \
    \ local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local\
    \ tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n\
    \  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n \
    \ local tmp96\n  local tmp97\n  local tmp98\n  \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local IFS=$1\n    local -a array\n    local -a sorted\n\
    \    local -a count\n    local -a counts\n    local -a counts_sorted\n    local\
    \ -a counts_sorted2\n    local -a counts_sorted3\n    local -a counts_sorted4\n\
    \    local -a counts_sorted5\n    local -a counts_sorted6\n    local -a counts_sorted7\n\
    \    local -a counts_sorted8\n    local -a counts_sorted9\n    local -a counts_sorted10\n\
    \    local -a counts_sorted11\n    local -a counts_sorted12\n    local -a counts_sorted13\n\
    \    local -a counts_sorted14\n    local -a counts_sorted15\n    local -a counts_sorted16\n\
    \    local -a counts_sorted17\n    local -a counts_sorted18\n    local -a counts_sorted19\n\
    \    local -a counts_sorted20\n    local -a counts_sorted21\n    local -a counts_sorted22\n\
    \    local -a counts_sorted23\n    local -a counts_sorted24\n    local -a counts_sorted25\n\
    \    local -a counts_sorted26\n    local -a counts_sorted27\n    local -a counts_sorted28\n\
    \    local -a counts_sorted29\n    local -a counts_sorted30\n    local -a counts_sorted31\n\
    \    local -a counts_sorted32\n    local -a counts_sorted33\n    local -a counts_sorted34\n\
    \    local -a counts_sorted35\n    local -a counts_sorted36\n    local -a counts_sorted37\n\
    \    local -a counts_sorted38\n    local -a counts_sorted39\n    local -a counts_sorted40\n\
    \    local -a counts_sorted41\n    local -a counts_sorted42\n    local -a counts_sorted43\n\
    \    local -a counts_sorted44\n    local -a counts_sorted45\n    local -a counts_sorted46\n\
    \    local -a counts_sorted47\n    local -a counts_sorted48\n    local -a counts_sorted49\n\
    \    local -a counts_sorted50\n    local -a counts_sorted51\n    local -a counts_sorted52\n\
    \    local -a counts_sorted53\n    local -a \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a counts\n\
    \    local -a count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a sorted\n    local -a count\n    local -a tmp\n    local\
    \ -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local\
    \ -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local\
    \ -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local\
    \ -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local\
    \ -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local\
    \ -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local\
    \ -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local\
    \ -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local\
    \ -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local\
    \ -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local\
    \ -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local\
    \ -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local\
    \ -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local\
    \ -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local\
    \ -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local\
    \ -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local\
    \ -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local temp\n    local temp2\n    local temp3\n\
    \    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local\
    \ temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n\
    \    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local\
    \ temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n\
    \    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local\
    \ temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n\
    \    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local\
    \ temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n\
    \    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local\
    \ temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n\
    \    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local\
    \ temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n\
    \    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local\
    \ temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n\
    \    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local\
    \ temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n\
    \    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local\
    \ temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n\
    \    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local\
    \ temp89\n    local temp90\n    local temp91\n    local temp92\n    local temp93\n\
    \    local temp94\n    local temp95\n    local temp96\n    local temp97\n    local\
    \ temp98\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a sorted2\n    local -a count2\n    local -a sorted3\n\
    \    local -a count3\n    local -a sorted4\n    local -a count4\n    local -a\
    \ sorted5\n    local -a count5\n    local -a sorted6\n    local -a count6\n  \
    \  local -a sorted7\n    local -a count7\n    local -a sorted8\n    local -a count8\n\
    \    local -a sorted9\n    local -a count9\n    local -a sorted10\n    local -a\
    \ count10\n    local -a sorted11\n    local -a count11\n    local -a sorted12\n\
    \    local -a count12\n    local -a sorted13\n    local -a count13\n    local\
    \ -a sorted14\n    local -a count14\n    local -a sorted15\n    local -a count15\n\
    \    local -a sorted16\n    local -a count16\n    local -a sorted17\n    local\
    \ -a count17\n    local -a sorted18\n    local -a count18\n    local -a sorted19\n\
    \    local -a count19\n    local -a sorted20\n    local -a count20\n    local\
    \ -a sorted21\n    local -a count21\n    local -a sorted22\n    local -a count22\n\
    \    local -a sorted23\n    local -a count23\n    local -a sorted24\n    local\
    \ -a count24\n    local -a sorted25\n    local -a count25\n    local -a sorted26\n\
    \    local -a count26\n    local -a sorted27\n    local -a count27\n    local\
    \ -a sorted28\n    local -a count28\n    local -a sorted29\n    local -a count29\n\
    \    local -a sorted30\n    local -a count30\n    local -a sorted31\n    local\
    \ -a count31\n    local -a sorted32\n    local -a count32\n    local -a sorted33\n\
    \    local -a count33\n    local -a sorted34\n    local -a count34\n    local\
    \ -a sorted35\n    local -a count35\n    local -a sorted36\n    local -a count36\n\
    \    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a\
    \ sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n\
    \  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local\
    \ -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a\
    \ count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a\
    \ sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n\
    \  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local\
    \ -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a\
    \ count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a\
    \ sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n\
    \  local -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local\
    \ -a count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a\
    \ count\n  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n\
    \  local -a sorted\n  local -a count\n  local -a sorted\n  local -a count\n  local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local array=\"$1\"\n  local -a sorted\n  local -a count\n\
    \  local -a counts\n  local -a counts_sorted\n  local -a counts_sorted2\n  local\
    \ -a counts_sorted3\n  local -a counts_sorted4\n  local -a counts_sorted5\n  local\
    \ -a counts_sorted6\n  local -a counts_sorted7\n  local -a counts_sorted8\n  local\
    \ -a counts_sorted9\n  local -a counts_sorted10\n  local -a counts_sorted11\n\
    \  local -a counts_sorted12\n  local -a counts_sorted13\n  local -a counts_sorted14\n\
    \  local -a counts_sorted15\n  local -a counts_sorted16\n  local -a counts_sorted17\n\
    \  local -a counts_sorted18\n  local -a counts_sorted19\n  local -a counts_sorted20\n\
    \  local -a counts_sorted21\n  local -a counts_sorted22\n  local -a counts_sorted23\n\
    \  local -a counts_sorted24\n  local -a counts_sorted25\n  local -a counts_sorted26\n\
    \  local -a counts_sorted27\n  local -a counts_sorted28\n  local -a counts_sorted29\n\
    \  local -a counts_sorted30\n  local -a counts_sorted31\n  local -a counts_sorted32\n\
    \  local -a counts_sorted33\n  local -a counts_sorted34\n  local -a counts_sorted35\n\
    \  local -a counts_sorted36\n  local -a counts_sorted37\n  local -a counts_sorted38\n\
    \  local -a counts_sorted39\n  local -a counts_sorted40\n  local -a counts_sorted41\n\
    \  local -a counts_sorted42\n  local -a counts_sorted43\n  local -a counts_sorted44\n\
    \  local -a counts_sorted45\n  local -a counts_sorted46\n  local -a counts_sorted47\n\
    \  local -a counts_sorted48\n  local -a counts_sorted49\n  local -a counts_sorted50\n\
    \  local -a counts_sorted51\n  local -a counts_sorted52\n  local -a counts_sorted53\n\
    \  local -a counts_sorted54\n  local \n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local arr=$1\n    local -a sorted\n    local -a count\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n \
    \   local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a count\n    local -a binary\n    local -a decimal\n    local -a length\n \
    \   local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n\
    \    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a\
    \ r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -n arr=$1\n    local -a sorted\n    local -a\
    \ tmp\n    local -i i\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n\
    \    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n\
    \    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp70\n    local -a \n}\n\ncandidate() {\n \
    \   sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqywqz9v7.sh: line 15: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local output\n    local i\n\
    \    local j\n    local count\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local array=\"$1\"\n    local -a sorted\n    local\
    \ -a counts\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050893

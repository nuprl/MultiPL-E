language: sh
name: HumanEval_111_histogram
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local letter\n    local count\n \
    \   local countsSorted\n    local maxCount\n    local maxLetter\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountLetter\n    local maxCountLetterIndex\n\
    \    local maxCountLetterValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local\
    \ maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n    local maxCountLetterIndexValue\n\
    \    local maxCountLetterIndexValue\n    local maxCount\n}\n\ncandidate() {\n\
    \    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n maxcount=0\n    local -n maxletter=\"\"\n    local -n maxcountletter=\"\
    \"\n    local -n maxcountlettercount=0\n    local -n maxlettercount=0\n    local\
    \ -n maxlettercountletter=\"\"\n    local -n maxlettercountlettercount=0\n   \
    \ local -n maxlettercountlettercountletter=\"\"\n    local -n maxlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountletter=\"\"\n    local -n maxlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountletter=\"\"\n   \
    \ local -n maxlettercountlettercountlettercountlettercountlettercount=0\n    local\
    \ -n maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local -n maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp50rf7a7t.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmp50rf7a7t.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmp50rf7a7t.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmp50rf7a7t.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 42: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 43: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 44: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 45: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 46: l'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local letter\n  local count\n  local counts\n\
    \  local max\n  local maxcount\n  local maxletter\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercount\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\"\
    \"\n    local maxlettercount=0\n    local maxlettercountletter=\"\"\n    local\
    \ maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\"\n\
    \    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercount\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=( )\n  local -n letters=( )\n  local -n counts=( )\n  local -n\
    \ max=0\n  local -n maxletter=\"\"\n  local -n maxcount=0\n  local -n maxcountletter=\"\
    \"\n  local -n maxcountletters=( )\n  local -n maxcountletters_count=( )\n  local\
    \ -n maxcountletters_letter=( )\n  local -n maxcountletters_letters=( )\n  local\
    \ -n maxcountletters_letters_count=( )\n  local -n maxcountletters_letters_letter=(\
    \ )\n  local -n maxcountletters_letters_letters=( )\n  local -n maxcountletters_letters_letters_count=(\n\
    \  )\n  local -n maxcountletters_letters_letters_letter=(\n  )\n  local -n maxcountletters_letters_letters_letters=(\n\
    \  )\n  local -n maxcountletters_letters_letters_letters_count=(\n  )\n  local\
    \ -n maxcountletters_letters_letters_letters_letter=(\n  )\n  local -n maxcountletters_letters_letters_letters_letters=(\n\
    \  )\n  local -n maxcountletters_letters_letters_letters_letters_count=(\n  )\n\
    \  local -n maxcountletters_letters_letters_letters_letters_letter=(\n  )\n  local\
    \ -n maxcountletters_letters_letters_letters_letters=(\n  )\n  local -n maxcountletters_letters_letters_letters_letters_count=(\n\
    \  )\n  local -n maxcountletters_letters_letters_letters_letters_letter=(\n  )\n\
    \  local -n maxcountletters_letters_letters_letters_letters=(\n  )\n  local -n\
    \ maxcountletters_letters_letters_letters_letters_count=(\n  )\n  local -n maxcountletters_letters_letters_letters_letters_letter=(\n\
    \  )\n  local -n maxcountletters_letters_letters_letters_letters=(\n  )\n  local\
    \ -n maxcountletters_letters_letters_letters_letters_count=(\n  )\n  local -n\
    \ maxcountletters_letters_letters_letters_letters_letter=(\n  )\n  local -n maxcountletters_letters_letters_letters_letters=(\n\
    \  )\n  local -n maxcountletters_letters_letters_letters_\n}\n\ncandidate() {\n\
    \    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt15whw72.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpt15whw72.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpt15whw72.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpt15whw72.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpt15whw72.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpt15whw72.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpt15whw72.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpt15whw72.sh: line 26: local: maxcountletters: reference variable cannot
    be an array

    /tmp/tmpt15whw72.sh: line 27: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpt15whw72.sh: line 28: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpt15whw72.sh: line 29: local: maxcountletters_letters: reference variable
    cannot be an array

    /tmp/tmpt15whw72.sh: line 30: local: maxcountletters_letters_count: reference
    variable cannot be an array

    /tmp/tmpt15whw72.sh: line 31: local: maxcountletters_letters_letter: reference
    variable cannot be an array

    /tmp/tmpt15whw72.sh: line 32: local: maxcountletters_letters_letters: reference
    variable cannot be an array

    /tmp/tmpt15whw72.sh: line 33: local: maxcountletters_letters_letters_count: reference
    variable cannot be an array

    /tmp/tmpt15whw72.sh: line 35: local: maxcountletters_letters_letters_letter: reference
    variable cannot be an array

    /tmp/tmpt15whw72.sh: line 37: local: maxcountletters_letters_letters_letters:
    reference variable cannot be an array

    /tmp/tmpt15whw72.sh: line 39: local: maxcountletters_letters_letters_letters_count:
    reference variable cannot be an array

    /tmp/tmpt15whw72.sh: line 41: local: maxcountletters_letters_letters_letters_letter:
    reference variable cannot be an array

    /tmp/tmpt15whw72.sh: line 43: local: maxcountletters_letters_letters_letters_letters:
    reference variable cannot be an array

    /tmp/tmpt15whw72.sh: line 45: local: maxcountletters_letters_letters_letters_'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local count\n    for letter in ${letters//[[:space:]]/}; do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in ${counts[*]}; do\n        if [[ ${counts[$letter]}\
    \ -gt ${maxcount} ]]; then\n            max=${counts[$letter]}\n            maxletter=$letter\n\
    \        fi\n    done\n    for letter in ${counts[*]}; do\n        if [[ ${counts[$letter]}\
    \ -eq ${max} ]]; then\n            if [[ ${counts[$letter]} -gt ${maxcountlettercount}\
    \ ]]; then\n                maxcountletter=${letter}\n                maxcountlettercount=${counts[$letter]}\n\
    \            fi\n        fi\n    done\n    echo \"${maxletter}=\\\"${maxcountletter}\\\
    \"\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" == \"$letter\" ]\n   \
    \         then\n                count=$(( $count + 1 ))\n                break\n\
    \            fi\n        done\n        counts[$letter]=$count\n    done\n    local\
    \ result\n    for letter in \"${!counts[@]}\"\n    do\n        result=\"$letter\
    \ \\\"${counts[$letter]}\\\"\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 2
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            (( count++ ))\n        done\n        counts[$letter]=$count\n\
    \    done\n    local sorted_counts=()\n    local sorted_letter\n    local sorted_count\n\
    \    for sorted_count in \"${counts[@]}\"\n    do\n        sorted_counts[$sorted_count]=$sorted_letter\n\
    \    done\n    local sorted_sorted_counts=()\n    local sorted_sorted_letter\n\
    \    local sorted_sorted_count\n    for sorted_sorted_count in \"${sorted_counts[@]}\"\
    \n    do\n        sorted_sorted_counts[$sorted_sorted_count]=$sorted_sorted_letter\n\
    \    done\n    local sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_count\n    for sorted_sorted_sorted_count in \"\
    ${sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_counts[$sorted_sorted_sorted_count]=$sorted_sorted_sorted_letter\n\
    \    done\n    local sorted_sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_sorted_count\n    for sorted_sorted_sorted_sorted_count\
    \ in \"${sorted_sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_count]=$sorted_sorted_sorted_sorted_letter\n\
    \    done\n    local sorted_sorted_sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_sorted_sorted_count\n    for sorted_sorted_sorted_sorted_sorted_count\
    \ in \"${sorted_sorted_sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_sorted_count]=$sorted_sorted_sorted_sorted_sorted_letter\n\
    \    done\n    local sorted_sorted_sorted_sorted_sorted_sorted_counts=()\n   \
    \ local sorted_sorted_sorted_sorted_sorted_sorted_letter\n    local sorted_sorted_sorted_sorted_sorted_sorted_count\n\
    \    for sorted_sorted_sorted_sorted_sorted_sorted_count in \"${sorted_sorted_sorted_sorted_sorted_counts[@]}\"\
    \n    do\n        sorted_sorted_sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_sorted_sorted_count]=$sorted_sorted_sorted_sorted_sorted_sorted_letter\n\
    \    done\n    local sorted_sorted_sorted_sorted_sorted_sorted_sorted_counts=()\n\
    \    local sorted_sorted_sorted_sorted_sorted_sorted_sorted_letter\n    local\
    \ sorted_sorted_sorted_sorted_sorted_sorted_sorted_count\n    for sorted_sorted_sorted_sorted_sorted_sorted_sorted_count\
    \ in \"${sorted_sorted_sorted_sorted_sorted_sorted_counts[@]}\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprd_fwikb.sh: line 78: syntax error near unexpected token `}''

    /tmp/tmprd_fwikb.sh: line 78: `}''

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local counts=()\n    local letters=()\n    local max=0\n\
    \    local maxletter=''\n    local maxcount=0\n    local maxcountletter=''\n \
    \   local maxcountlettercount=0\n    local maxcountlettercountletter=''\n    local\
    \ maxcountlettercountlettercount=0\n    local maxcountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercount=0\n    local maxcountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercount=0\n    local maxcountlettercountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=''\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxcountletter\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n   \
    \ [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") =\
    \ \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n   \
    \ [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n        if [[ ${counts[$letter]} -gt $max ]]\n        then\n        \
    \    max=$counts[$letter]\n            maxletter=$letter\n        fi\n    done\n\
    \    for letter in $letters\n    do\n        if [[ ${counts[$letter]} -eq $max\
    \ ]]\n        then\n            echo \"$letter\":\"${counts[$letter]}\"\n    \
    \    fi\n    done\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3113fnc_.sh: line 27: [[: 1[a]: syntax error: invalid arithmetic
    operator (error token is "[a]")

    /tmp/tmp3113fnc_.sh: line 27: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmp3113fnc_.sh: line 27: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmp3113fnc_.sh: line 35: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmp3113fnc_.sh: line 35: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmp3113fnc_.sh: line 35: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmp3113fnc_.sh: line 35: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    local counts\n    local max\n    local maxcount\n    local maxletter\n  \
    \  local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n    local maxcounts\n    local maxcount\n\
    \    local maxcounts\n    local maxcount\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in \"${letters[@]}\"; do\n        counts[$letter]=\"${counts[$letter]}\"\
    \ || echo \"${letter}=${counts[$letter]}\"\n    done\n    local result\n    for\
    \ letter in \"${!counts[@]}\"; do\n        count=${counts[$letter]}\n        if\
    \ [ -z \"$count\" ]; then\n            count=1\n        fi\n        result=\"\
    $letter \\\"$count\\\"\"\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8py088cq.sh: line 24: a b b a: syntax error in expression (error
    token is "b b a")

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ string=\"$1\"\n  local counts=()\n  local max=0\n  local maxstring=\"\"\n  local\
    \ maxcount=0\n  local maxcountstring=\"\"\n  local maxcountstring2=\"\"\n  local\
    \ maxcountstring3=\"\"\n  local maxcountstring4=\"\"\n  local maxcountstring5=\"\
    \"\n  local maxcountstring6=\"\"\n  local maxcountstring7=\"\"\n  local maxcountstring8=\"\
    \"\n  local maxcountstring9=\"\"\n  local maxcountstring10=\"\"\n  local maxcountstring11=\"\
    \"\n  local maxcountstring12=\"\"\n  local maxcountstring13=\"\"\n  local maxcountstring14=\"\
    \"\n  local maxcountstring15=\"\"\n  local maxcountstring16=\"\"\n  local maxcountstring17=\"\
    \"\n  local maxcountstring18=\"\"\n  local maxcountstring19=\"\"\n  local maxcountstring20=\"\
    \"\n  local maxcountstring21=\"\"\n  local maxcountstring22=\"\"\n  local maxcountstring23=\"\
    \"\n  local maxcountstring24=\"\"\n  local maxcountstring25=\"\"\n  local maxcountstring26=\"\
    \"\n  local maxcountstring27=\"\"\n  local maxcountstring28=\"\"\n  local maxcountstring29=\"\
    \"\n  local maxcountstring30=\"\"\n  local maxcountstring31=\"\"\n  local maxcountstring32=\"\
    \"\n  local maxcountstring33=\"\"\n  local maxcountstring34=\"\"\n  local maxcountstring35=\"\
    \"\n  local maxcountstring36=\"\"\n  local maxcountstring37=\"\"\n  local maxcountstring38=\"\
    \"\n  local maxcountstring39=\"\"\n  local maxcountstring40=\"\"\n  local maxcountstring41=\"\
    \"\n  local maxcountstring42=\"\"\n  local maxcountstring43=\"\"\n  local maxcountstring44=\"\
    \"\n  local maxcountstring45=\"\"\n  local maxcountstring46=\"\"\n  local maxcountstring47=\"\
    \"\n  local maxcountstring48=\"\"\n  local maxcountstring49=\"\"\n  local maxcountstring50=\"\
    \"\n  local maxcountstring51=\"\"\n  local maxcountstring52=\"\"\n  local maxcountstring53=\"\
    \"\n  local maxcountstring54=\"\"\n  local maxcountstring55=\"\"\n  local maxcountstring56=\"\
    \"\n  local maxcountstring57=\"\"\n  local maxcountstring58=\"\"\n  local maxcountstring59=\"\
    \"\n  local maxcountstring60=\"\"\n  local maxcount\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n maxcount=0\n    local -n maxletter=\"\"\n    local -n maxcountletter=\"\
    \"\n    local -n maxcountletters=0\n    local -n maxletters=0\n    local -n maxlettercount=0\n\
    \    local -n maxlettercounts=0\n    local -n maxlettercountletters=0\n    local\
    \ -n maxlettercountlettercount=0\n    local -n maxlettercountlettercounts=0\n\
    \    local -n maxlettercountlettercountletters=0\n    local -n maxlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercounts=0\n    local -n maxlettercountlettercountlettercountletters=0\n\
    \    local -n maxlettercountlettercountlettercountlettercount=0\n    local -n\
    \ maxlettercountlettercountlettercountlettercounts=0\n    local -n maxlettercountlettercountlettercountlettercountletters=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local -n maxlettercountlettercountlettercountlettercountlettercounts=0\n \
    \   local -n maxlettercountlettercountlettercountlettercountlettercountletters=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercounts=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountletters=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercounts=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercounts=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercounts=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletters=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n   \
    \ [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") =\
    \ \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n   \
    \ [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgcjmjp7n.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpgcjmjp7n.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpgcjmjp7n.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpgcjmjp7n.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpgcjmjp7n.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpgcjmjp7n.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 41: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 42: local: `0'': invalid variable name for name reference

    /tmp/tmpgcjmjp7n.sh: line 43: local: `0'': invalid variable name for name reference

    /tmp/tm'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    local max\n    max=${#counts[@]}\n    for letter in $letters\n\
    \    do\n        if [[ ${counts[$letter]} -gt $max ]]\n        then\n        \
    \    max=${counts[$letter]}\n        fi\n    done\n    local result\n    for letter\
    \ in $letters\n    do\n        if [[ ${counts[$letter]} -eq $max ]]\n        then\n\
    \            result=$letter\n            break\n        fi\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in \"${!counts[@]}\"\n    do\n        count=${counts[$letter]}\n\
    \        counts[$letter]=$((${counts[$letter]} - 1))\n        if [[ ${counts[$letter]}\
    \ -eq 0 ]]\n        then\n            unset counts[$letter]\n        fi\n    done\n\
    \    echo \"${counts[@]}\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[\
    \ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d\
    \ g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate\
    \ \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n  \
    \  [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=''\n\
    \    local maxcount=0\n    local maxcountletter=''\n    local maxcountletters=()\n\
    \    local maxcountletters_sorted=()\n    local maxcountletters_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted=()\n    local maxcountletters_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted=()\n    local\
    \ maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed=()\n    local\
    \ maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local maxcountletters_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" == \"$letter\" ]\n   \
    \         then\n                count=$(( $count + 1 ))\n                break\n\
    \            fi\n        done\n        counts[$letter]=$count\n    done\n    local\
    \ result\n    for letter in \"${!counts[@]}\"\n    do\n        result=\"$letter\
    \ \\\"${counts[$letter]}\\\"\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local count=0\n    local max=0\n    local letter\n\
    \    local key\n    local value\n    local counts\n    local maxcount\n    local\
    \ maxkey\n    local maxvalue\n    local maxcounts\n    local maxmaxcount\n   \
    \ local maxmaxkey\n    local maxmaxvalue\n    local maxmaxcounts\n    local maxmaxmaxcount\n\
    \    local maxmaxmaxkey\n    local maxmaxmaxvalue\n    local maxmaxmaxcounts\n\
    \    local maxmaxmaxmaxcount\n    local maxmaxmaxmaxkey\n    local maxmaxmaxmaxvalue\n\
    \    local maxmaxmaxmaxcounts\n    local maxmaxmaxmaxmaxcount\n    local maxmaxmaxmaxmaxkey\n\
    \    local maxmaxmaxmaxmaxvalue\n    local maxmaxmaxmaxmaxcounts\n    local maxmaxmaxmaxmaxmaxcount\n\
    \    local maxmaxmaxmaxmaxmaxkey\n    local maxmaxmaxmaxmaxmaxvalue\n    local\
    \ maxmaxmaxmaxmaxmaxcounts\n    local maxmaxmaxmaxmaxmaxmaxcount\n    local maxmaxmaxmaxmaxmaxmaxkey\n\
    \    local maxmaxmaxmaxmaxmaxmaxvalue\n    local maxmaxmaxmaxmaxmaxmaxcounts\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxcount\n    local maxmaxmaxmaxmaxmaxmaxmaxkey\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxvalue\n    local maxmaxmaxmaxmaxmaxmaxmaxcounts\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxcount\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxkey\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxvalue\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxcounts\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxcount\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxkey\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxvalue\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxcounts\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxcount\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxkey\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxvalue\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxcounts\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxcounts\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n maxcount=0\n    local -n maxletter=\"\"\n    local -n maxcountletter=\"\
    \"\n    local -n maxcountlettercount=0\n    local -n maxlettercount=0\n    local\
    \ -n maxlettercountletter=\"\"\n    local -n maxlettercountlettercount=0\n   \
    \ local -n maxlettercountlettercountletter=\"\"\n    local -n maxlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountletter=\"\"\n    local -n maxlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountletter=\"\"\n   \
    \ local -n maxlettercountlettercountlettercountlettercountlettercount=0\n    local\
    \ -n maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local -n maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp50rf7a7t.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmp50rf7a7t.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmp50rf7a7t.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmp50rf7a7t.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 42: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 43: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 44: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 45: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 46: l'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    for letter in ${letters//[[:space:]]/}; do\n   \
    \     counts[$letter]=$((${counts[$letter]} + 1))\n        if [[ ${counts[$letter]}\
    \ -gt $max ]]; then\n            max=${counts[$letter]}\n            maxletter=$letter\n\
    \        fi\n    done\n    echo ${counts[$maxletter]}\n}\n\ncandidate() {\n  \
    \  histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            (( count+=1 ))\n        done\n       \
    \ counts[$letter]=\"$count\"\n    done\n    local result\n    for letter in \"\
    ${!counts[@]}\"\n    do\n        result=\"$letter \\\"${counts[$letter]}\\\"\"\
    \n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" == \"$letter\" ]\n   \
    \         then\n                let count+=1\n                break\n        \
    \    fi\n        done\n        counts[$letter]=\"$count\"\n    done\n    local\
    \ sorted\n    local key\n    local value\n    sorted=()\n    for key in \"${!counts[@]}\"\
    \n    do\n        sorted+=(\"$key\" \"${counts[$key]}\")\n    done\n    sorted=(\"\
    ${sorted[@]}\")\n    local key\n    local value\n    local count\n    local letter\n\
    \    local counts\n    local sorted\n    local key\n    local value\n    local\
    \ count\n    local letter\n    local counts\n    local sorted\n    local key\n\
    \    local value\n    local count\n    local letter\n    local counts\n    local\
    \ sorted\n    local key\n    local value\n    local count\n    local letter\n\
    \    local counts\n    local sorted\n    local key\n    local value\n    local\
    \ count\n    local letter\n    local counts\n    local sorted\n    local key\n\
    \    local value\n    local count\n    local letter\n    local counts\n    local\
    \ sorted\n    local key\n    local value\n    local count\n    local letter\n\
    \    local counts\n    local sorted\n    local key\n    local value\n    local\
    \ count\n    local letter\n    local counts\n    local sorted\n    local key\n\
    \    local value\n    local count\n    local letter\n    local counts\n    local\
    \ sorted\n    local key\n    local value\n    local count\n    local letter\n\
    \    local counts\n    local sorted\n    local key\n    local value\n    local\
    \ count\n    local letter\n    local counts\n    local sorted\n    local key\n\
    \    local value\n    local count\n    local letter\n    local counts\n    local\
    \ sorted\n    local key\n    local value\n    local count\n    local letter\n\
    \    local counts\n    local sorted\n    local key\n    local value\n    local\
    \ count\n    local letter\n    local counts\n    local sorted\n    local key\n\
    \    local value\n    local count\n    local letter\n    local counts\n    local\
    \ sorted\n\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\"\
    \"\n    local maxlettercount=0\n    local maxlettercountletter=\"\"\n    local\
    \ maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\"\n\
    \    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=( )\n  local -n letters=( )\n  local -n counts=( )\n  local -n\
    \ maxcount=0\n  local -n maxletter=\"\"\n  local -n maxlettercount=0\n  local\
    \ -n maxlettercountletter=\"\"\n  local -n maxlettercountlettercount=0\n  local\
    \ -n maxlettercountlettercountletter=\"\"\n  local -n maxlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountletter=0\n  local -n maxlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountletter=0\n  local -n\
    \ maxlettercountlettercountlettercountlettercountlettercount=0\n  local -n maxlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxlettercountlettercountletter\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9zawfrbl.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmp9zawfrbl.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmp9zawfrbl.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmp9zawfrbl.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp9zawfrbl.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp9zawfrbl.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp9zawfrbl.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 41: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 42: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line 43: local: `0'': invalid variable name for name reference

    /tmp/tmp9zawfrbl.sh: line '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=mapfile\n    local -n letters=$1\n    local -n counts=$2\n\
    \    local -n max=$3\n    local -n maxcount=${max}\n    local -n maxletter=${max}\n\
    \    local -n maxcountletter=${max}\n    local -n maxcountletters=${max}\n   \
    \ local -n maxcountletter=${max}\n    local -n maxcountletters=${max}\n    local\
    \ -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n\
    \ maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n\
    \    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n  \
    \  local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local\
    \ -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n\
    \ maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n\
    \    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n  \
    \  local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local\
    \ -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n\
    \ maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n\
    \    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n  \
    \  local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local\
    \ -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n\
    \ maxcountletters=${max}\n    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n\
    \    local -n maxcountletters=${max}\n    local -n maxcountletters=${max}\n  \
    \  local -n \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4untsic3.sh: line 20: local: `a b b a'': invalid variable name
    for name reference

    /tmp/tmp4untsic3.sh: line 21: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 22: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 26: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 28: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 30: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 32: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 34: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 36: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 38: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 40: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 42: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 43: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 44: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 45: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 46: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 47: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 48: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 49: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 50: local: `'': not a valid identifier

    /tmp/tmp4untsic3.sh: line 51: local: `'''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n maxcount=0\n    local -n maxletter=\"\"\n    local -n maxcountletter=\"\
    \"\n    local -n maxcountlettercount=0\n    local -n maxlettercount=0\n    local\
    \ -n maxlettercountletter=\"\"\n    local -n maxlettercountlettercount=0\n   \
    \ local -n maxlettercountlettercountletter=\"\"\n    local -n maxlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountletter=\"\"\n    local -n maxlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountletter=\"\"\n   \
    \ local -n maxlettercountlettercountlettercountlettercountlettercount=0\n    local\
    \ -n maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local -n maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp50rf7a7t.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmp50rf7a7t.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmp50rf7a7t.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmp50rf7a7t.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 42: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 43: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 44: local: `0'': invalid variable name for name reference

    /tmp/tmp50rf7a7t.sh: line 45: local: `'': not a valid identifier

    /tmp/tmp50rf7a7t.sh: line 46: l'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local counts=()\n    local max=0\n    local maxkey=\"\
    \"\n    local maxcount=0\n    local maxcountkey=\"\"\n    local maxcountvalue=0\n\
    \    local maxcountkeyvalue=\"\"\n    local maxcountkeyvaluecount=0\n    local\
    \ maxcountkeyvaluecountkey=\"\"\n    local maxcountkeyvaluecountkeyvalue=0\n \
    \   local maxcountkeyvaluecountkeyvaluekey=\"\"\n    local maxcountkeyvaluecountkeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekey=\"\"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekey=\"\"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekey=\"\"\n   \
    \ local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n    local\
    \ maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekey=\"\"\n    local\
    \ maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n  \
    \  local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekey=\"\
    \"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekey=\"\
    \"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekey=\"\
    \"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekey=\"\
    \"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n\
    \    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekey=\"\
    \"\n    local maxcountkeyvaluecountkeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvaluekeyvalue=0\n\
    \    \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            (( count+=1 ))\n        done\n       \
    \ counts[$letter]=$count\n    done\n    local result=()\n    for letter in \"\
    ${!counts[@]}\"\n    do\n        result+=(\"\\\"$letter\\\": \\\"$counts[$letter]\\\
    \"\")\n    done\n    echo \"{${result[@]}}\"\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local str=$1\n    local counts=()\n    local max=0\n    local maxstr=\"\"\n\
    \    local maxcount=0\n    local maxcountstr=\"\"\n    local maxcountstrlen=0\n\
    \    local maxcountstrlen2=0\n    local maxcountstrlen3=0\n    local maxcountstrlen4=0\n\
    \    local maxcountstrlen5=0\n    local maxcountstrlen6=0\n    local maxcountstrlen7=0\n\
    \    local maxcountstrlen8=0\n    local maxcountstrlen9=0\n    local maxcountstrlen10=0\n\
    \    local maxcountstrlen11=0\n    local maxcountstrlen12=0\n    local maxcountstrlen13=0\n\
    \    local maxcountstrlen14=0\n    local maxcountstrlen15=0\n    local maxcountstrlen16=0\n\
    \    local maxcountstrlen17=0\n    local maxcountstrlen18=0\n    local maxcountstrlen19=0\n\
    \    local maxcountstrlen20=0\n    local maxcountstrlen21=0\n    local maxcountstrlen22=0\n\
    \    local maxcountstrlen23=0\n    local maxcountstrlen24=0\n    local maxcountstrlen25=0\n\
    \    local maxcountstrlen26=0\n    local maxcountstrlen27=0\n    local maxcountstrlen28=0\n\
    \    local maxcountstrlen29=0\n    local maxcountstrlen30=0\n    local maxcountstrlen31=0\n\
    \    local maxcountstrlen32=0\n    local maxcountstrlen33=0\n    local maxcountstrlen34=0\n\
    \    local maxcountstrlen35=0\n    local maxcountstrlen36=0\n    local maxcountstrlen37=0\n\
    \    local maxcountstrlen38=0\n    local maxcountstrlen39=0\n    local maxcountstrlen40=0\n\
    \    local maxcountstrlen41=0\n    local maxcountstrlen42=0\n    local maxcountstrlen43=0\n\
    \    local maxcountstrlen44=0\n    local maxcountstrlen45=0\n    local maxcountstrlen46=0\n\
    \    local maxcountstrlen47=0\n    local maxcountstrlen48=0\n    local maxcountstrlen49=0\n\
    \    local maxcountstrlen50=0\n    local maxcountstrlen51=0\n    local maxcountstrlen52=0\n\
    \    local maxcountstrlen53=0\n\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=( )\n  local -n letters=( )\n  local -n counts=( )\n  local -n\
    \ max=0\n  local -n maxletter=\"\"\n  local -n maxcount=0\n  local -n maxcountletter=\"\
    \"\n  local -n maxcountletters=( )\n  local -n maxcountletters_count=( )\n  local\
    \ -n maxcountletters_count_letters=( )\n  local -n maxcountletters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters=( )\n  local -n maxcountletters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters=( )\n\
    \  local -n maxcountletters_count_letters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqf54ra5r.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpqf54ra5r.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpqf54ra5r.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpqf54ra5r.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpqf54ra5r.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpqf54ra5r.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpqf54ra5r.sh: line 26: local: maxcountletters: reference variable cannot
    be an array

    /tmp/tmpqf54ra5r.sh: line 27: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpqf54ra5r.sh: line 28: local: maxcountletters_count_letters: reference
    variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 29: local: maxcountletters_count_letters_count: reference
    variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 30: local: maxcountletters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 31: local: maxcountletters_count_letters_count_letters_count:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 32: local: maxcountletters_count_letters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 33: local: maxcountletters_count_letters_count_letters_count_letters_count:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 34: local: maxcountletters_count_letters_count_letters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 35: local: maxcountletters_count_letters_count_letters_count_letters_count_letters_count:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 36: local: maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 37: local: maxcountletters_count_letters_count_letters_count_letters_count_letters_'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=mapfile\n  local -n mapfile=$1\n  local -n max=0\n  local -n maxkey\n\
    \  local -n maxkeycount\n  local -n maxkeycounts\n  local -n maxkeycount\n  local\
    \ -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n\
    \ maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n\
    \  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n \
    \ local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local\
    \ -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n\
    \ maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n\
    \  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n \
    \ local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local\
    \ -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n\
    \ maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n\
    \  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n \
    \ local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local\
    \ -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n\
    \ maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n\
    \  local -n maxkeycounts\n  local -n maxkeycounts\n  local -n maxkeycounts\n \
    \ local -n maxkeycounts\n  local -n maxkey\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbomuzo1h.sh: line 20: local: `a b b a'': invalid variable name
    for name reference

    /tmp/tmpbomuzo1h.sh: line 21: local: `0'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n  local maxcountletter\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[\
    \ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d\
    \ g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate\
    \ \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n  \
    \  [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" -gt \"$count\" ] \n  \
    \          then\n                count=$count\n            fi\n        done\n\
    \        counts+=(\"$count\")\n    done\n    local result\n    for letter in \"\
    ${counts[@]}\"\n    do\n        if [ \"$letter\" -gt 1 ]\n        then\n     \
    \       result+=\"\\\"$letter\\\": \\\"$letter\\\"\\n\"\n        fi\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\\
    nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t\
    \ g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ string=\"$1\"\n  local counts=()\n  local letters=()\n  local max=0\n  local\
    \ maxletter=''\n  local maxcount=0\n  local maxcountletter=''\n  local maxcountletters=()\n\
    \n  for letter in \"${string//[[:space:]]/}\"; do\n    counts[$letter]=\"${counts[$letter]}\"\
    \ || 1\n  done\n\n  for letter in \"${!counts[@]}\"; do\n    count=\"${counts[$letter]}\"\
    \n    if [ \"$count\" -gt \"$maxcount\" ]; then\n      maxcount=\"$count\"\n \
    \     maxcountletter=\"$letter\"\n      maxcountletters=\"${maxcountletters} $letter\"\
    \n    fi\n  done\n\n  echo \"${maxcountletters}: ${maxcount}\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2bq07vc0.sh: line 34: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local letter\n  local count\n  local counts\n\
    \  local key\n  local max\n  local maxCount\n  local maxLetter\n  local maxCount\n\
    \  local maxCountLetter\n  local maxCountLetters\n  local maxCountLettersCount\n\
    \  local maxCountLettersCountLetter\n  local maxCountLettersCountLetters\n  local\
    \ maxCountLettersCountLettersCount\n  local maxCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLetters\n  local maxCountLettersCountLettersCountLettersCount\n\
    \  local maxCountLettersCountLettersCountLettersCountLetter\n  local maxCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLetters\n  local maxCountLettersCountLettersCountLettersCountLetters\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCount\n  local maxCountLettersCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLetters\n  local\
    \ maxCountLettersCountLettersCountLettersCountLettersCountLettersCount\n  local\
    \ maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCount\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCount\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCount\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCount\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLettersCountLetter\n\
    \  local maxCountLettersCountLettersCountLettersCountLettersCountLettersCount\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n        if [[ ${counts[$letter]} -gt $max ]]\n        then\n        \
    \    max=${counts[$letter]}\n            maxletter=$letter\n        fi\n    done\n\
    \    for letter in $letters\n    do\n        if [[ ${counts[$letter]} -eq $max\
    \ ]]\n        then\n            echo \"$maxletter=\\\"$max\\\"\"\n        fi\n\
    \    done\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local count\n  local max\n  local maxletter\n  local maxcount\n\
    \  local maxcountletter\n  local maxcountlettercount\n  local maxcountlettercountletter\n\
    \  local maxcountlettercountlettercount\n  local maxcountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercount\n  local maxcountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercount\n  local maxcountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercount\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercountletter\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount\n\
    \  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n        if [[ ${counts[$letter]} -gt $max ]]\n        then\n        \
    \    max=$counts[$letter]\n            maxletter=$letter\n        fi\n    done\n\
    \    local sorted=()\n    for letter in $letters\n    do\n        sorted+=(\"\
    $letter\")\n    done\n    for letter in $sorted\n    do\n        if [[ ${counts[$letter]}\
    \ -eq $max ]]\n        then\n            sorted+=($letter)\n        fi\n    done\n\
    \    echo ${sorted[@]}\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\\
    nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t\
    \ g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiahaamfg.sh: line 27: [[: 1[a]: syntax error: invalid arithmetic
    operator (error token is "[a]")

    /tmp/tmpiahaamfg.sh: line 27: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmpiahaamfg.sh: line 27: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    /tmp/tmpiahaamfg.sh: line 40: [[: 1[a]: syntax error: invalid arithmetic operator
    (error token is "[a]")

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=( )\n  local -n letters=( )\n  local -n counts=( )\n  local -n\
    \ maxcount=0\n  local -n maxletter=\"\"\n  local -n maxcountletter=\"\"\n  local\
    \ -n maxcountlettercount=0\n  local -n maxcountlettercountletter=\"\"\n  local\
    \ -n maxcountlettercountlettercount=0\n  local -n maxcountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercount=0\n  local -n maxcountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercountlettercount=0\n  local\
    \ -n maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ -n maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local\
    \ -n maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local -n maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcc_a6_9z.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpcc_a6_9z.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpcc_a6_9z.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpcc_a6_9z.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 41: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 43: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 44: local: `'': not a valid identifier

    /tmp/tmpcc_a6_9z.sh: line 45: local: `0'': invalid variable name for name reference

    /tmp/tmpcc_a6_9z.sh: line 46: l'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" == \"$letter\" ]\n   \
    \         then\n                count=$(( $count + 1 ))\n                break\n\
    \            fi\n        done\n        counts[$letter]=\"$count\"\n    done\n\
    \    echo ${counts[@]}\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\\
    nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t\
    \ g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" -gt \"$count\" ]\n   \
    \         then\n                count=$count\n            fi\n        done\n \
    \       counts+=(\"$count\")\n    done\n    local sorted_counts=($(sort -n <<<\"\
    ${counts[@]}\"))\n    local sorted_letters=($(sort <<<\"${letters[@]}\"))\n  \
    \  local sorted_counts_sorted\n    local sorted_letters_sorted\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n    local sorted_counts_sorted_index\n\
    \    local sorted_letters_sorted_index\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in $letters\n    do\n        count=${counts[$letter]}\n\
    \        if [ $count -gt 1 ]\n        then\n            counts[$letter]=$count\n\
    \        fi\n    done\n    local result\n    for letter in $letters\n    do\n\
    \        count=${counts[$letter]}\n        if [ $count -gt 1 ]\n        then\n\
    \            result=$letter\n            break\n        fi\n    done\n    echo\
    \ \"${result}\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ string=\"$1\"\n  local count=0\n  local letters=()\n  local key\n  local max=0\n\
    \  local maxletter\n  local maxcount\n  local maxkey\n  local maxcountkey\n  local\
    \ maxcountkey2\n  local maxcountkey3\n  local maxcountkey4\n  local maxcountkey5\n\
    \  local maxcountkey6\n  local maxcountkey7\n  local maxcountkey8\n  local maxcountkey9\n\
    \  local maxcountkey10\n  local maxcountkey11\n  local maxcountkey12\n  local\
    \ maxcountkey13\n  local maxcountkey14\n  local maxcountkey15\n  local maxcountkey16\n\
    \  local maxcountkey17\n  local maxcountkey18\n  local maxcountkey19\n  local\
    \ maxcountkey20\n  local maxcountkey21\n  local maxcountkey22\n  local maxcountkey23\n\
    \  local maxcountkey24\n  local maxcountkey25\n  local maxcountkey26\n  local\
    \ maxcountkey27\n  local maxcountkey28\n  local maxcountkey29\n  local maxcountkey30\n\
    \  local maxcountkey31\n  local maxcountkey32\n  local maxcountkey33\n  local\
    \ maxcountkey34\n  local maxcountkey35\n  local maxcountkey36\n  local maxcountkey37\n\
    \  local maxcountkey38\n  local maxcountkey39\n  local maxcountkey40\n  local\
    \ maxcountkey41\n  local maxcountkey42\n  local maxcountkey43\n  local maxcountkey44\n\
    \  local maxcountkey45\n  local maxcountkey46\n  local maxcountkey47\n  local\
    \ maxcountkey48\n  local maxcountkey49\n  local maxcountkey50\n  local maxcountkey51\n\
    \  local maxcountkey52\n  local maxcountkey53\n  local maxcountkey54\n  local\
    \ maxcountkey55\n  local maxcountkey56\n  local maxcountkey57\n  local maxcountkey58\n\
    \  local maxcountkey59\n  local maxcountkey60\n  local maxcountkey61\n  local\
    \ maxcountkey62\n  local maxcountkey63\n  local maxcountkey64\n  local maxcountkey65\n\
    \  local maxcountkey66\n  local maxcountkey67\n  local max\n}\n\ncandidate() {\n\
    \    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\"\
    \"\n    local maxlettercount=0\n    local maxlettercountletter=\"\"\n    local\
    \ maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\"\n\
    \    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n        if [[ ${counts[$letter]} -gt $max ]]\n        then\n        \
    \    max=${counts[$letter]}\n            maxletter=$letter\n        fi\n    done\n\
    \    for letter in $letters\n    do\n        if [[ ${counts[$letter]} -eq $max\
    \ ]]\n        then\n            echo \"${letter}=${maxcount}\"\n        fi\n \
    \   done\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" == \"$letter\" ]\n   \
    \         then\n                count=$(( $count + 1 ))\n                break\n\
    \            fi\n        done\n        counts[$letter]=\"$count\"\n    done\n\
    \    local result\n    for letter in \"${!counts[@]}\"\n    do\n        result=\"\
    $letter \\\"${counts[$letter]}\\\"\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local letter\n  local count\n  local countsSorted\n\
    \  local maxCount\n  local maxLetter\n  local maxCountLetter\n  local maxCountValue\n\
    \  local maxCountValueLetter\n  local maxCountValueLetterCount\n  local maxCountValueLetterCountLetter\n\
    \  local maxCountValueLetterCountLetterCount\n  local maxCountValueLetterCountLetterCountLetter\n\
    \  local maxCountValueLetterCountLetterCountLetterCount\n  local maxCountValueLetterCountLetterCountLetterCountLetter\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCount\n  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetter\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCount\n\
    \  local maxCountValueLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local letter\n  local count\n  local counts\n\
    \  local count\n  local max\n  local maxcount\n  local maxletter\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  \n}\n\ncandidate() {\n\
    \    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountletters=()\n\
    \    local maxcountlettercount=0\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local\
    \ maxcountlettercounts=()\n    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n\
    \    local maxcountlettercounts=()\n    local maxcountlettercounts=()\n    \n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxcountletter\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n   \
    \ [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") =\
    \ \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n   \
    \ [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n maxcount=0\n    local -n maxletter=( )\n    local -n maxlettercount=0\n\
    \    local -n maxletters=( )\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount=0\n\
    \    local -n maxcounts=( )\n    local -n maxcount=0\n    local -n maxcounts=(\
    \ )\n    local -n maxcount=0\n    local -n maxcounts=( )\n    local -n maxcount\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpipz359ci.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpipz359ci.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpipz359ci.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 23: local: maxletter: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 25: local: maxletters: reference variable cannot be
    an array

    /tmp/tmpipz359ci.sh: line 26: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 28: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 30: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 32: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 34: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 36: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 38: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 40: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.sh: line 41: local: `0'': invalid variable name for name reference

    /tmp/tmpipz359ci.sh: line 42: local: maxcounts: reference variable cannot be an
    array

    /tmp/tmpipz359ci.s'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" == \"$letter\" ]\n   \
    \         then\n                count=$(( count + 1 ))\n                break\n\
    \            fi\n        done\n        counts[$letter]=\"$count\"\n    done\n\
    \    local result\n    for letter in \"${!counts[@]}\"\n    do\n        result=\"\
    $letter \\\"${counts[$letter]}\\\"\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 2
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            (( count++ ))\n        done\n        counts[$letter]=$count\n\
    \    done\n    local sorted_counts=()\n    local sorted_letter\n    local sorted_count\n\
    \    for sorted_letter in \"${!counts[@]}\"\n    do\n        sorted_count=\"${counts[$sorted_letter]}\"\
    \n        sorted_counts[$sorted_letter]=$sorted_count\n    done\n    local sorted_sorted_counts=()\n\
    \    local sorted_sorted_letter\n    local sorted_sorted_count\n    for sorted_sorted_letter\
    \ in \"${!sorted_counts[@]}\"\n    do\n        sorted_sorted_count=\"${sorted_counts[$sorted_sorted_letter]}\"\
    \n        sorted_sorted_counts[$sorted_sorted_letter]=$sorted_sorted_count\n \
    \   done\n    local sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_count\n    for sorted_sorted_sorted_letter in\
    \ \"${!sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_count=\"\
    ${sorted_sorted_counts[$sorted_sorted_sorted_letter]}\"\n        sorted_sorted_sorted_counts[$sorted_sorted_sorted_letter]=$sorted_sorted_sorted_count\n\
    \    done\n    local sorted_sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_sorted_count\n    for sorted_sorted_sorted_sorted_letter\
    \ in \"${!sorted_sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_sorted_count=\"\
    ${sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_letter]}\"\n      \
    \  sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_letter]=$sorted_sorted_sorted_sorted_count\n\
    \    done\n    local sorted_sorted_sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_sorted_sorted_count\n    for sorted_sorted_sorted_sorted_sorted_letter\
    \ in \"${!sorted_sorted_sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_sorted_sorted_sorted_count=\"\
    ${sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_sorted_letter]}\"\
    \n        sorted_sorted_sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_sorted_letter]=$sorted_sorted_sorted_sorted_sorted_sorted_count\n\
    \    done\n    local sorted_sorted_sorted_sorted_sorted_sorted_counts=()\n   \
    \ local sorted_sorted_sorted_sorted_sorted_sorted_letter\n    local sorted_sorted_sorted_sorted_sorted_sorted_count\n\
    \    for sorted_sorted_sorted_sorted_sorted_sorted_letter in \"${!sorted_\n}\n\
    \ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa4ugm1rw.sh: line 91: unexpected EOF while looking for matching
    `"''

    /tmp/tmpa4ugm1rw.sh: line 95: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    local countsKey\n    local countsValue\n    local countsKeys\n    local countsValues\n\
    \    local maxCount\n    local maxCountKey\n    local maxCountValue\n    local\
    \ maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n\
    \    local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n  \
    \  local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n  \
    \  local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local\
    \ maxCountValues\n    local maxCountKeys\n    local maxCountValues\n    local\
    \ maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n\
    \    local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n  \
    \  local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n  \
    \  local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local\
    \ maxCountValues\n    local maxCountKeys\n    local maxCountValues\n    local\
    \ maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n\
    \    local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n  \
    \  local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n  \
    \  local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local\
    \ maxCountValues\n    local maxCountKeys\n    local maxCountValues\n    local\
    \ maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n\
    \    local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n  \
    \  local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n  \
    \  local maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local\
    \ maxCountValues\n    local maxCountKeys\n    local maxCountValues\n    local\
    \ maxCountKeys\n    local maxCountValues\n    local maxCountKeys\n    local maxCountValues\n\
    \    local maxCountKeys\n\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[\
    \ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d\
    \ g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate\
    \ \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n  \
    \  [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in \"${!counts[@]}\"\n    do\n        count=${counts[$letter]}\n\
    \        counts[$letter]=$((${counts[$letter]} - 1))\n        if [[ ${counts[$letter]}\
    \ -eq 0 ]]\n        then\n            unset counts[$letter]\n        fi\n    done\n\
    \    echo \"${counts[@]}\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[\
    \ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d\
    \ g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate\
    \ \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n  \
    \  [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in \"${letters}\" ; do\n        counts[$letter]=\"${counts[$letter]}\"\
    \ || 1\n    done\n    for letter in \"${!counts[@]}\" ; do\n        count=${counts[$letter]}\n\
    \        counts[$letter]=\"${counts[$letter]} ${count}\"\n    done\n    echo \"\
    ${counts[@]}\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc_1j8rcp.sh: line 24: a b b a: syntax error in expression (error
    token is "b b a")

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            if [ \"$count\" -gt \"$count\" ]\n   \
    \         then\n                count=\"$count\"\n            fi\n        done\n\
    \        counts[$letter]=\"$count\"\n    done\n    local sorted_counts=()\n  \
    \  local sorted_letter\n    local sorted_count\n    for sorted_letter in \"${!counts[@]}\"\
    \n    do\n        sorted_count=\"${counts[$sorted_letter]}\"\n        sorted_counts[$sorted_letter]=\"\
    $sorted_count\"\n    done\n    local sorted_sorted_counts=()\n    local sorted_sorted_letter\n\
    \    local sorted_sorted_count\n    for sorted_sorted_letter in \"${!sorted_counts[@]}\"\
    \n    do\n        sorted_sorted_count=\"${sorted_counts[$sorted_sorted_letter]}\"\
    \n        sorted_sorted_counts[$sorted_sorted_letter]=\"$sorted_sorted_count\"\
    \n    done\n    local sorted_sorted_sorted_counts=()\n    local sorted_sorted_sorted_letter\n\
    \    local sorted_sorted_sorted_count\n    for sorted_sorted_sorted_letter in\
    \ \"${!sorted_sorted_counts[@]}\"\n    do\n        sorted_sorted_sorted_count=\"\
    ${sorted_sorted_counts[$sorted_sorted_sorted_letter]}\"\n        sorted_sorted_sorted_counts[$sorted_sorted_sorted_letter]=\"\
    $sorted_sorted_sorted_count\"\n    done\n    local sorted_sorted_sorted_sorted_counts=()\n\
    \    local sorted_sorted_sorted_sorted_letter\n    local sorted_sorted_sorted_sorted_count\n\
    \    for sorted_sorted_sorted_sorted_letter in \"${!sorted_sorted_sorted_counts[@]}\"\
    \n    do\n        sorted_sorted_sorted_sorted_count=\"${sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_letter]}\"\
    \n        sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_letter]=\"\
    $sorted_sorted_sorted_sorted_count\"\n    done\n    local sorted_sorted_sorted_sorted_sorted_counts=()\n\
    \    local sorted_sorted_sorted_sorted_sorted_letter\n    local sorted_sorted_sorted_sorted_sorted_sorted_count\n\
    \    for sorted_sorted_sorted_sorted_sorted_sorted_letter in \"${!sorted_sorted_sorted_sorted_counts[@]}\"\
    \n    do\n        sorted_sorted_sorted_sorted_sorted_sorted_count=\"${sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_sorted_letter]}\"\
    \n        sorted_sorted_sorted_sorted_sorted_sorted_counts[$sorted_sorted_sorted_sorted_sorted_letter]=\"\
    $sorted_sorted_sorted_sorted_sorted_count\"\n    done\n    local sorted_sorted_sorted_sorted_sorted_sorted_counts=()\n\
    \    local sorted_sorted_sorted_sorted_sorted_sorted_letter\n\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local letter\n  local count\n  local\
    \ counts\n  local max\n  local maxcount\n  local maxletter\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcount\n}\n\n\
    candidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n max=0\n    local -n maxletter=\"\"\n    local -n maxcount=0\n  \
    \  local -n maxcountletter=\"\"\n    local -n maxcountletters=( )\n    local -n\
    \ maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n max\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa1tuyc4r.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpa1tuyc4r.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpa1tuyc4r.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpa1tuyc4r.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpa1tuyc4r.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpa1tuyc4r.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpa1tuyc4r.sh: line 26: local: maxcountletters: reference variable cannot
    be an array

    /tmp/tmpa1tuyc4r.sh: line 27: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 28: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 29: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 30: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 31: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 32: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 33: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 34: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 35: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 36: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 37: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 38: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 39: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 40: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 41: '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=$1\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n  local\
    \ maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n  local\
    \ maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n \
    \ local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercount\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ string=\"$1\"\n  local counts=()\n  local letters=()\n  local max=0\n  local\
    \ maxletter=''\n  local maxcount=0\n  local maxcountletter=''\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=''\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=''\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=''\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=''\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=''\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local count=0\n    local letter\n    local letterCount\n\
    \    local maxCount\n    local maxLetter\n    local maxLetterCount\n    local\
    \ maxLetterCountKey\n    local maxLetterCountValue\n    local maxLetterKey\n \
    \   local maxLetterValue\n    local maxLetterValueKey\n    local maxLetterValueValue\n\
    \    local maxLetterValueKeyValue\n    local maxLetterValueValueKey\n    local\
    \ maxLetterValueValueKeyValue\n    local maxLetterValueValueKeyValueValue\n  \
    \  local maxLetterValueValueKeyValueValue\n    local maxLetterValueValueKeyValueValueKey\n\
    \    local maxLetterValueValueKeyValueKeyValue\n    local maxLetterValueValueKeyValueKeyValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKeyValueValue\n\
    \    local maxLetterValueValueKeyValueKeyValueValue\n    local maxLetterValueValueKeyValueKey\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n max=0\n    local -n maxletter=\"\"\n    local -n maxcount=0\n  \
    \  local -n maxcountletter=\"\"\n    local -n maxcountletters=( )\n    local -n\
    \ maxcountletters_count=( )\n    local -n maxcountletters_letters=( )\n    local\
    \ -n maxcountletters_letters_count=( )\n    local -n maxcountletters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_count=( )\n    local -n maxcountletters_letters_letters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_count=( )\n    local\
    \ -n maxcountletters_letters_letters_letters_letters_letters=( )\n    local -n\
    \ maxcountletters_letters_letters_letters_letters_count=( )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_count=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_count=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_count=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_count=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_letters=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_letters_count=(\
    \ )\n    local -n maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_letters_letters=(\
    \ )\n\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp107a817h.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmp107a817h.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmp107a817h.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmp107a817h.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp107a817h.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmp107a817h.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp107a817h.sh: line 26: local: maxcountletters: reference variable cannot
    be an array

    /tmp/tmp107a817h.sh: line 27: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmp107a817h.sh: line 28: local: maxcountletters_letters: reference variable
    cannot be an array

    /tmp/tmp107a817h.sh: line 29: local: maxcountletters_letters_count: reference
    variable cannot be an array

    /tmp/tmp107a817h.sh: line 30: local: maxcountletters_letters_letters: reference
    variable cannot be an array

    /tmp/tmp107a817h.sh: line 31: local: maxcountletters_letters_letters_count: reference
    variable cannot be an array

    /tmp/tmp107a817h.sh: line 32: local: maxcountletters_letters_letters_letters_letters:
    reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 33: local: maxcountletters_letters_letters_letters_count:
    reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 34: local: maxcountletters_letters_letters_letters_letters_letters:
    reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 35: local: maxcountletters_letters_letters_letters_letters_count:
    reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 36: local: maxcountletters_letters_letters_letters_letters_letters_letters:
    reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 37: local: maxcountletters_letters_letters_letters_letters_letters_count:
    reference variable cannot be an array

    /tmp/tmp107a817h.sh: line 38: local: maxcountletters_letters_letters_letters_letters_letters_lett'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local letter\n    local count\n \
    \   local countsCount\n    local maxCount\n    local maxLetter\n    local maxCountLetter\n\
    \    local maxCountLetterCount\n    local maxCountLetterCountLetter\n    local\
    \ maxCountLetterCountLetterCount\n    local maxCountLetterCountLetterCountLetter\n\
    \    local maxCountLetterCountLetterCountLetterCount\n    local maxCountLetterCountLetterCountLetterCountLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterLetter\n    local maxCountLetterCountLetterCountLetterCountLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterLetterLetterLetterLetterLetter\n\
    \    local maxCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetterCountLetter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local letter\n  local count\n  local counts\n\
    \  local max\n  local maxcount\n  local maxletter\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=\n    local -n letters=\n    local -n counts=\n\n    local\
    \ -n letter=\n    local -n count=\n\n    local -n key=\n    local -n value=\n\n\
    \    local -n letterCount=\n    local -n letterCountValue=\n\n    local -n letterCountKey=\n\
    \    local -n letterCountValue=\n\n    local -n letterCountKey=\n    local -n\
    \ letterCountValue=\n\n    local -n letterCountKey=\n    local -n letterCountValue=\n\
    \n    local -n letterCountKey=\n    local -n letterCountValue=\n\n    local -n\
    \ letterCountKey=\n    local -n letterCountValue=\n\n    local -n letterCountKey=\n\
    \    local -n letterCountValue=\n\n    local -n letterCountKey=\n    local -n\
    \ letterCountValue=\n\n    local -n letterCountKey=\n    local -n letterCountValue=\n\
    \n    local -n letterCountKey=\n    local -n letterCountValue=\n\n    local -n\
    \ letterCountKey=\n    local -n letterCountValue=\n\n    local -n letterCountKey=\n\
    \    local -n letterCountValue=\n\n    local -n letterCountKey=\n    local -n\
    \ letterCountValue=\n\n    local -n letterCountKey=\n    local -n letterCountValue=\n\
    \n    local -n letterCountKey=\n    local -n letterCountValue=\n\n    local -n\
    \ letterCountKey=\n    local -n letterCountValue=\n\n    local -n letterCountKey=\n\
    \    local -n letterCountValue=\n\n    local -n letterCountKey=\n    local -n\
    \ letterCountValue=\n\n    local -n letterCountKey=\n    local -n letterCountValue=\n\
    \n    local -n letterCountKey=\n    local -n letterCountValue=\n\n    local -n\
    \ letterCountKey=\n    local -n letterCountValue=\n\n    local -n letterCountKey=\n\
    \    local -n letterCountValue=\n\n    local -n letterCountKey=\n    local -n\
    \ letterCountValue=\n\n    local -n letterCountKey=\n    local -n letterCountValue=\n\
    \n    local -n letterCountKey=\n    local -n letterCountValue=\n\n    local -n\
    \ letterCountKey=\n    local -n letterCountValue=\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5d5uuu34.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 21: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 26: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 30: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 32: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 36: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 38: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 42: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 44: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 45: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 47: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 48: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 50: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 51: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 53: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 54: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 56: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 57: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 59: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 60: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 62: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 63: local: `'': not a valid identifier

    /tmp/tmp5d5uuu34.sh: line 65: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=\"${2}\"\n  local sorted_counts=\"${3}\"\n\
    \  local sorted_letters=\"${4}\"\n  local result\n  local count\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  local sorted_letters\n  local sorted_counts\n  local letter\n\
    \  local counts\n  \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\n\
    \    local maxlettercount=0\n    local maxletters=\n    local maxlettercounts=()\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxlettercount\n\
    \    local maxlettercounts\n    local maxlettercount\n    local maxlettercounts\n\
    \    local maxlettercount\n    local maxlettercounts\n    local maxletter\n}\n\
    \ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local count\n    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in $letters\n    do\n        count=${counts[$letter]}\n\
    \        if [ \"$count\" -gt \"$maxcount\" ]\n        then\n            maxcount=$count\n\
    \            maxcountletter=$letter\n        fi\n    done\n    for letter in $letters\n\
    \    do\n        count=${counts[$letter]}\n        if [ \"$count\" -gt \"$maxcountlettercount\"\
    \ ]\n        then\n            maxcountlettercount=$count\n            maxcountletter=$letter\n\
    \        fi\n    done\n    echo ${maxcountletter}\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local maxcount=0\n  local maxletter=\"\"\
    \n  local maxlettercount=0\n  local maxlettercountletter=\"\"\n  local maxlettercountlettercount=0\n\
    \  local maxlettercountlettercountletter=\"\"\n  local maxlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountletter=\"\"\n  local maxlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountletter=\"\"\n  local maxlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n  local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n  local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 2
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=\"${2}\"\n    local sorted_letters=\"\
    ${letters}\"\n    local sorted_counts=\"${counts}\"\n    local sorted_letters_sorted=\"\
    $(echo \"${sorted_letters}\" | tr '[:upper:]' '[:lower:]')\"\n    local sorted_counts_sorted=\"\
    $(echo \"${sorted_counts}\" | tr '[:upper:]' '[:lower:]')\"\n    local sorted_letters_sorted_counts=\"\
    $(echo \"${sorted_letters_sorted} ${sorted_counts_sorted}\" | sort | uniq -c |\
    \ sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted=\"$(echo\
    \ \"${sorted_letters_sorted_counts}\" | sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted}\" | sort -n | tail -n 1)\"\n \
    \   local sorted_letters_sorted_counts_sorted_sorted_sorted=\"$(echo \"${sorted_letters_sorted_counts_sorted_sorted}\"\
    \ | sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted}\" | sort -n | tail\
    \ -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted_sorted}\" | sort\
    \ -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted}\"\
    \ | sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted}\"\
    \ | sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted}\"\
    \ | sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted}\"\
    \ | sort -n | tail -n 1)\"\n    local sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=\"\
    $(echo \"${sorted_letters_sorted_counts_sorted_sorted_sorted_sorted_sorted_sorted_sorted}\"\
    \ | sort \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplo5vjon9.sh: line 35: unexpected EOF while looking for matching
    `)''

    /tmp/tmplo5vjon9.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local count\n  local letter\n  local countletter\n  local countlettercount\n\
    \  local countlettercount2\n  local countlettercount3\n  local countlettercount4\n\
    \  local countlettercount5\n  local countlettercount6\n  local countlettercount7\n\
    \  local countlettercount8\n  local countlettercount9\n  local countlettercount10\n\
    \  local countlettercount11\n  local countlettercount12\n  local countlettercount13\n\
    \  local countlettercount14\n  local countlettercount15\n  local countlettercount16\n\
    \  local countlettercount17\n  local countlettercount18\n  local countlettercount19\n\
    \  local countlettercount20\n  local countlettercount21\n  local countlettercount22\n\
    \  local countlettercount23\n  local countlettercount24\n  local countlettercount25\n\
    \  local countlettercount26\n  local countlettercount27\n  local countlettercount28\n\
    \  local countlettercount29\n  local countlettercount30\n  local countlettercount31\n\
    \  local countlettercount32\n  local countlettercount33\n  local countlettercount34\n\
    \  local countlettercount35\n  local countlettercount36\n  local countlettercount37\n\
    \  local countlettercount38\n  local countlettercount39\n  local countlettercount40\n\
    \  local countlettercount41\n  local countlettercount42\n  local countlettercount43\n\
    \  local countlettercount44\n  local countlettercount45\n  local countlettercount46\n\
    \  local countlettercount47\n  local countlettercount48\n  local countlettercount49\n\
    \  local countlettercount50\n  local countlettercount51\n  local countlettercount52\n\
    \  local countlettercount53\n  local countlettercount54\n  local countlettercount55\n\
    \  local countlettercount56\n  local countlettercount57\n  local countlettercount58\n\
    \  local countlettercount59\n  local countlettercount60\n  local countlettercount61\n\
    \  local countlettercount62\n  local countlettercount63\n  local countlettercount64\n\
    \  local countlettercount65\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[\
    \ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d\
    \ g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate\
    \ \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n  \
    \  [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local maxcount=0\n    local\
    \ maxletter=\"\"\n    local maxlettercount=0\n    local maxlettercountletter=\"\
    \"\n    local maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n max=0\n    local -n maxletter=\"\"\n    local -n maxcount=0\n  \
    \  local -n maxcountletter=\"\"\n    local -n maxcountletters=( )\n    local -n\
    \ maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n maxcountletters_letter=( )\n    local\
    \ -n maxcountletters_count=( )\n    local -n max\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa1tuyc4r.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpa1tuyc4r.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpa1tuyc4r.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpa1tuyc4r.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpa1tuyc4r.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpa1tuyc4r.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpa1tuyc4r.sh: line 26: local: maxcountletters: reference variable cannot
    be an array

    /tmp/tmpa1tuyc4r.sh: line 27: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 28: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 29: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 30: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 31: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 32: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 33: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 34: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 35: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 36: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 37: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 38: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 39: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 40: local: maxcountletters_letter: reference variable
    cannot be an array

    /tmp/tmpa1tuyc4r.sh: line 41: '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local count\n    for letter in $letters\n    do\n        count=$(echo \"\
    $letters\" | grep -c \"$letter\")\n        if [ \"$count\" -gt \"$maxcount\" ]\n\
    \        then\n            maxcount=$count\n            maxcountletter=$letter\n\
    \            maxcountlettercount=$count\n        fi\n        counts+=(\"$letter\"\
    )\n    done\n    echo ${counts[@]}\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local counts=()\n    local letters=()\n    local max=0\n\
    \    local maxletter=\"\"\n    local maxcount=0\n    local maxcountletter=\"\"\
    \n    local maxcountlettercount=0\n    local maxcountlettercountletter=\"\"\n\
    \    local maxcountlettercountlettercount=0\n    local maxcountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercount=0\n    local maxcountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercount=0\n    local\
    \ maxcountlettercountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercount\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\"\
    \"\n    local maxlettercount=0\n    local maxlettercountletter=\"\"\n    local\
    \ maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\"\n\
    \    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=''\n\
    \    local maxcount=0\n    local maxcountletter=''\n    local maxcountletters=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local\
    \ maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n\
    \    local maxcountletters_quoted=''\n    local maxcountletters_quoted=''\n  \
    \  local maxcountletters_quoted=''\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercount\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        count=0\n        for count in \"\
    ${counts[@]}\"\n        do\n            (( count++ ))\n        done\n        counts[$letter]=$count\n\
    \    done\n    local sorted=()\n    local key\n    for key in \"${!counts[@]}\"\
    \n    do\n        sorted+=(\"$key\" \"${counts[$key]}\")\n    done\n    local\
    \ result\n    for (( i=1; i<${#sorted[@]}; i++ ))\n    do\n        if [[ ${sorted[$i]}\
    \ == ${sorted[$((i-1))} ]]\n        then\n            result+=(\"${sorted[$i]}\"\
    )\n        else\n            result+=(\"${sorted[$i]} ${sorted[$((i-1))]}\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptex1ifsv.sh: line 41: ${sorted[$((i-1))}: bad substitution

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histo=\"$(declare -f histogram)\"\n  local -n histocount=\"$(declare -f histogramcount)\"\
    \n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\n  local -n histocountmin=\"\
    $(declare -f histogramcountmin)\"\n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    \n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\n  local -n histocountmax=\"\
    $(declare -f histogramcountmax)\"\n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    \n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\n  local -n histocountmin=\"\
    $(declare -f histogramcountmin)\"\n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    \n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\n  local -n histocountmax=\"\
    $(declare -f histogramcountmax)\"\n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    \n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\n  local -n histocountmin=\"\
    $(declare -f histogramcountmin)\"\n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    \n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\n  local -n histocountmax=\"\
    $(declare -f histogramcountmax)\"\n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    \n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\n  local -n histocountmin=\"\
    $(declare -f histogramcountmin)\"\n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    \n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\n  local -n histocountmax=\"\
    $(declare -f histogramcountmax)\"\n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    \n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\n  local -n histocountmin=\"\
    $(declare -f histogramcountmin)\"\n  local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    \n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\n  local -n histocountmax=\"\
    $(declare -f histogramcountmax)\"\n  local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    \n  local -n histocount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\\
    nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t\
    \ g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "/tmp/tmp2fmryggo.sh: line 19: local: `histogram () \n{ \n    local -n histo=\"\
    $(declare -f histogram)\";\n    local -n histocount=\"$(declare -f histogramcount)\"\
    ;\n    local -n histocountmax=\"$(declare -f histogramcountmax)\";\n    local\
    \ -n histocountmin=\"$(declare -f histogramcountmin)\";\n    local -n histocountmax=\"\
    $(declare -f histogramcountmax)\";\n    local -n histocountmin=\"$(declare -f\
    \ histogramcountmin)\";\n    local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    ;\n    local -n histocountmin=\"$(declare -f histogramcountmin)\";\n    local\
    \ -n histocountmax=\"$(declare -f histogramcountmax)\";\n    local -n histocountmin=\"\
    $(declare -f histogramcountmin)\";\n    local -n histocountmax=\"$(declare -f\
    \ histogramcountmax)\";\n    local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    ;\n    local -n histocountmax=\"$(declare -f histogramcountmax)\";\n    local\
    \ -n histocountmin=\"$(declare -f histogramcountmin)\";\n    local -n histocountmax=\"\
    $(declare -f histogramcountmax)\";\n    local -n histocountmin=\"$(declare -f\
    \ histogramcountmin)\";\n    local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    ;\n    local -n histocountmin=\"$(declare -f histogramcountmin)\";\n    local\
    \ -n histocountmax=\"$(declare -f histogramcountmax)\";\n    local -n histocountmin=\"\
    $(declare -f histogramcountmin)\";\n    local -n histocountmax=\"$(declare -f\
    \ histogramcountmax)\";\n    local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    ;\n    local -n histocountmax=\"$(declare -f histogramcountmax)\";\n    local\
    \ -n histocountmin=\"$(declare -f histogramcountmin)\";\n    local -n histocountmax=\"\
    $(declare -f histogramcountmax)\";\n    local -n histocountmin=\"$(declare -f\
    \ histogramcountmin)\";\n    local -n histocountmax=\"$(declare -f histogramcountmax)\"\
    ;\n    local -n histocountmin=\"$(declare -f histogramcountmin)\";\n    local\
    \ -n histocountmax=\"$(declare -f histogramcountmax)\";\n    local -n histocountmin=\"\
    $(declare -f histogramcountmin)\";\n    local -n histocountmax=\"$(declare -f\
    \ histogramcountmax)\";\n    local -n histocountmin=\"$(declare -f histogramcountmin)\"\
    ;\n    local -n histocount\n}': inv"
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=( )\n  local -n letters=( )\n  local -n counts=( )\n  local -n\
    \ max=0\n  local -n maxletter=\"\"\n  local -n maxcount=0\n  local -n maxcountletter=\"\
    \"\n  local -n maxcountletters=( )\n  local -n maxcountletters_count=( )\n  local\
    \ -n maxcountletters_count_letters=( )\n  local -n maxcountletters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters=( )\n  local -n maxcountletters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters=( )\n\
    \  local -n maxcountletters_count_letters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters_count_letters=(\
    \ )\n  local -n maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters_count_\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqf54ra5r.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpqf54ra5r.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpqf54ra5r.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpqf54ra5r.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpqf54ra5r.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpqf54ra5r.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpqf54ra5r.sh: line 26: local: maxcountletters: reference variable cannot
    be an array

    /tmp/tmpqf54ra5r.sh: line 27: local: maxcountletters_count: reference variable
    cannot be an array

    /tmp/tmpqf54ra5r.sh: line 28: local: maxcountletters_count_letters: reference
    variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 29: local: maxcountletters_count_letters_count: reference
    variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 30: local: maxcountletters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 31: local: maxcountletters_count_letters_count_letters_count:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 32: local: maxcountletters_count_letters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 33: local: maxcountletters_count_letters_count_letters_count_letters_count:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 34: local: maxcountletters_count_letters_count_letters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 35: local: maxcountletters_count_letters_count_letters_count_letters_count_letters_count:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 36: local: maxcountletters_count_letters_count_letters_count_letters_count_letters_count_letters:
    reference variable cannot be an array

    /tmp/tmpqf54ra5r.sh: line 37: local: maxcountletters_count_letters_count_letters_count_letters_count_letters_'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n \
    \ local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercount\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxcountletter\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n   \
    \ [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") =\
    \ \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n   \
    \ [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local str=$1\n    local counts=()\n    local letters=()\n    local max=0\n \
    \   local maxletter=\"\"\n    local maxcount=0\n    local maxcountletter=\"\"\n\
    \    local maxcountlettercount=0\n    local maxcountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercount=0\n    local maxcountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercount=0\n    local maxcountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercount=0\n    local\
    \ maxcountlettercountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercount\n}\n\ncandidate() {\n\
    \    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local counts=()\n    local max=0\n    local maxkey=\"\
    \"\n    local maxcount=0\n    local maxkeycount=0\n    local maxkeycountkey=\"\
    \"\n    local maxkeycountkeycount=0\n    local maxkeycountkeycountkey=\"\"\n \
    \   local maxkeycountkeycountkeycount=0\n    local maxkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycount=0\n    local maxkeycountkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycount=0\n    local maxkeycountkeycountkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycount=0\n    local\
    \ maxkeycountkeycountkeycountkeycountkeycountkeycountkey=\"\"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycount=0\n\
    \    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkey=\"\"\
    \n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycount=0\n\
    \    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycount=0\n\
    \    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycount=0\n\
    \    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycount=0\n\
    \    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkey=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycount=0\n\
    \    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycount=\"\
    \"\n    local maxkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkeycountkey\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local letter\n  local count\n  local\
    \ counts\n  local max\n  local maxcount\n  local maxletter\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcounts\n  local maxcounts\n  local maxcounts\n \
    \ local maxcounts\n  local maxcount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local str=\"$1\"\n    local counts=()\n    local letters=()\n    local max=0\n\
    \    local maxletter=\"\"\n    local maxcount=0\n    local maxcountletter=\"\"\
    \n    local maxcountlettercount=0\n    local maxcountlettercountletter=\"\"\n\
    \    local maxcountlettercountlettercount=0\n    local maxcountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercount=0\n    local maxcountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercount=0\n    local\
    \ maxcountlettercountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountletter\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 2
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ -n histogram=( )\n  local -n letters=( )\n  local -n counts=( )\n  local -n\
    \ maxcount=0\n  local -n maxletter=( )\n  local -n maxlettercount=0\n  local -n\
    \ maxletters=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n\
    \  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ )\n  local -n maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n\
    \ maxlettercount=( )\n  local -n maxlettercount=( )\n  local -n maxlettercount=(\
    \ \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\\
    nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcefesgl4.sh: line 73: syntax error near unexpected token `(''

    /tmp/tmpcefesgl4.sh: line 73: `candidate() {''

    /tmp/tmpcefesgl4.sh: line 74: histogram: command not found

    /tmp/tmpcefesgl4.sh: line 75: syntax error near unexpected token `}''

    /tmp/tmpcefesgl4.sh: line 75: `}''

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"$1\"\n  local counts=()\n  local letter\n  local count\n  local counts\n\
    \  local max\n  local maxcount\n  local maxletter\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n\
    \  local maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local\
    \ maxcount\n  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n\
    \  local maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n  local\
    \ maxcounts\n  local maxcount\n  local maxcounts\n  local maxcount\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in ${letters//[[:space:]]/}; do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in ${!counts[@]}; do\n        count=${counts[$letter]}\n\
    \        counts[$letter]=$((${counts[$letter]} - 1))\n        if [[ ${counts[$letter]}\
    \ -eq 0 ]]; then\n            counts[$letter]=$count\n        fi\n    done\n \
    \   echo \"${counts[@]}\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[\
    \ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d\
    \ g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate\
    \ \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n  \
    \  [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in $letters\n    do\n        if [[ ${counts[$letter]}\
    \ -gt 1 ]]\n        then\n            counts[$letter]=$((${counts[$letter]} -\
    \ 1))\n        fi\n    done\n    local result\n    for letter in $letters\n  \
    \  do\n        if [[ ${counts[$letter]} -eq 1 ]]\n        then\n            result=$letter\n\
    \            break\n        fi\n    done\n    echo \"${result}\"\n}\n\ncandidate()\
    \ {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b\
    \ b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\
    b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=$1\n    local -n letters=$2\n    local -n counts=$3\n   \
    \ local -n maxcount=$4\n    local -n maxletter=$5\n    local -n maxcountletter=$6\n\
    \    local -n maxlettercount=$7\n    local -n maxlettercountletter=$8\n    local\
    \ -n maxlettercountlettercount=$9\n    local -n maxlettercountlettercountletter=$10\n\
    \    local -n maxlettercountlettercountlettercount=$11\n    local -n maxlettercountlettercountlettercountletter=$12\n\
    \    local -n maxlettercountlettercountlettercountlettercount=$13\n    local -n\
    \ maxlettercountlettercountlettercountlettercountletter=$14\n    local -n maxlettercountlettercountlettercountlettercountlettercount=$15\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountletter=$16\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercount=$17\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountletter=$18\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$19\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=$20\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$21\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=$22\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=$23\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$24\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$25\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$26\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$27\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=$28\n\
    \    local -n maxlettercountlettercountlettercountlettercountlettercount\n}\n\n\
    candidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpln5f0wuf.sh: line 19: local: `a b b a'': invalid variable name
    for name reference

    /tmp/tmpln5f0wuf.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpln5f0wuf.sh: line 28: local: `a b b a0'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 29: local: `a b b a1'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 30: local: `a b b a2'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 31: local: `a b b a3'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 32: local: `a b b a4'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 33: local: `a b b a5'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 34: local: `a b b a6'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 35: local: `a b b a7'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 36: local: `a b b a8'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 37: local: `a b b a9'': invalid variable name for name
    reference

    /tmp/tmpln5f0wuf.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpln5f0wuf.sh: line 39: local: `1'': invalid variable name for name reference

    /tmp/tmpln5f0wuf.sh: line 40: local: `2'': invalid variable name for name reference

    /tmp/tmpln5f0wuf.sh: line 41: local: `3'': invalid variable name for name reference

    /tmp/tmpln5f0wuf.sh: line 42: local: `4'': invalid variable name for name reference

    /tmp/tmpln5f0wuf.sh: line 43: local: `5'': invalid variable name for name reference

    /tmp/tmpln5f0wuf.sh: line 44: local: `6'': invalid'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local counts=()\n    local letters=()\n    local max=0\n\
    \    local maxletter=''\n    local maxcount=0\n    local maxcountletter=''\n \
    \   local maxcountletters=()\n    local maxcountletters_count=()\n    local maxcountletters_letter=()\n\
    \    local maxcountletters_letters=()\n    local maxcountletters_letters_count=()\n\
    \    local maxcountletters_letters_letter=()\n    local maxcountletters_letters_letters=()\n\
    \    local maxcountletters_letters_letters_count=0\n    local maxcountletters_letters_letters_letter=()\n\
    \    local maxcountletters_letters_letters_letters=()\n    local maxcountletters_letters_letters_letters_count=0\n\
    \    local maxcountletters_letters_letters_letters_letter=()\n    local maxcountletters_letters_letters_letters_letters=()\n\
    \    local maxcountletters_letters_letters_letters_letters_count=0\n    local\
    \ maxcountletters_letters_letters_letters_letters_letter=()\n    local maxcountletters_letters_letters_letters_letters_letters=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_count=0\n \
    \   local maxcountletters_letters_letters_letters_letters_letters_letter=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_count=0\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letter=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letters=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letters_count=0\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letters_letter=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_count=0\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_letters_letters_letter=()\n\
    \    local maxcountletters_letters_letters_letters_letters_letters_letters_\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ string=\"$1\"\n  local counts=()\n  local letters=()\n  local max=0\n  local\
    \ maxletter=\"\"\n  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercount\n}\n\ncandidate() {\n  \
    \  histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b\
    \ b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local maxcount=0\n    local\
    \ maxletter=\"\"\n    local maxlettercount=0\n    local maxlettercountletter=\"\
    \"\n    local maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local count\n  local letter\n  local countletter\n  local countlettercount\n\
    \  local countlettercounts\n  local countlettercount\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercount\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercount\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercount\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercount\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercount\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercount\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercount\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercounts\n\
    \  local countlettercounts\n  local countlettercounts\n  local countlettercount\n\
    \  local count\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local str=\"$1\"\n    local counts=()\n    local max=0\n    local maxstr=\"\"\
    \n    local maxcount=0\n    local maxcountstr=\"\"\n    local maxcountstrlen=0\n\
    \    local maxcountstrlen2=0\n    local maxcountstrlen3=0\n    local maxcountstrlen4=0\n\
    \    local maxcountstrlen5=0\n    local maxcountstrlen6=0\n    local maxcountstrlen7=0\n\
    \    local maxcountstrlen8=0\n    local maxcountstrlen9=0\n    local maxcountstrlen10=0\n\
    \    local maxcountstrlen11=0\n    local maxcountstrlen12=0\n    local maxcountstrlen13=0\n\
    \    local maxcountstrlen14=0\n    local maxcountstrlen15=0\n    local maxcountstrlen16=0\n\
    \    local maxcountstrlen17=0\n    local maxcountstrlen18=0\n    local maxcountstrlen19=0\n\
    \    local maxcountstrlen20=0\n    local maxcountstrlen21=0\n    local maxcountstrlen22=0\n\
    \    local maxcountstrlen23=0\n    local maxcountstrlen24=0\n    local maxcountstrlen25=0\n\
    \    local maxcountstrlen26=0\n    local maxcountstrlen27=0\n    local maxcountstrlen28=0\n\
    \    local maxcountstrlen29=0\n    local maxcountstrlen30=0\n    local maxcountstrlen31=0\n\
    \    local maxcountstrlen32=0\n    local maxcountstrlen33=0\n    local maxcountstrlen34=0\n\
    \    local maxcountstrlen35=0\n    local maxcountstrlen36=0\n    local maxcountstrlen37=0\n\
    \    local maxcountstrlen38=0\n    local maxcountstrlen39=0\n    local maxcountstrlen40=0\n\
    \    local maxcountstrlen41=0\n    local maxcountstrlen42=0\n    local maxcountstrlen43=0\n\
    \    local maxcountstrlen44=0\n    local maxcountstrlen45=0\n    local maxcountstrlen46=0\n\
    \    local maxcountstrlen47=0\n    local maxcountstrlen48=0\n    local maxcountstrlen49=0\n\
    \    local maxcountstrlen50=0\n    local maxcountstrlen51=0\n    local maxcountstrlen52=0\n\
    \    local maxcountstrlen53=0\n\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histogram=( )\n    local -n letters=( )\n    local -n counts=( )\n\
    \    local -n max=0\n    local -n maxletter=\"\"\n    local -n maxcount=0\n  \
    \  local -n maxcountletter=\"\"\n    local -n maxcountlettercount=0\n    local\
    \ -n maxcountlettercountletter=\"\"\n    local -n maxcountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountletter=\"\"\n    local -n maxcountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountletter=0\n    local -n\
    \ maxcountlettercountlettercountlettercountlettercount=0\n    local -n maxcountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \    local -n maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=0\n\
    \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\\
    nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpilcb7qx0.sh: line 19: local: histogram: reference variable cannot
    be an array

    /tmp/tmpilcb7qx0.sh: line 20: local: letters: reference variable cannot be an
    array

    /tmp/tmpilcb7qx0.sh: line 21: local: counts: reference variable cannot be an array

    /tmp/tmpilcb7qx0.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpilcb7qx0.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpilcb7qx0.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpilcb7qx0.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpilcb7qx0.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 41: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 42: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 43: local: `0'': invalid variable name for name reference

    /tmp/tmpilcb7qx0.sh: line 44: local: `0'': inv'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\"\
    \"\n    local maxlettercount=0\n    local letter\n    local count\n    for letter\
    \ in $letters\n    do\n        count=0\n        for count in \"${counts[@]}\"\n\
    \        do\n            if [ \"$count\" -gt \"$maxcount\" ]\n            then\n\
    \                maxcount=\"$count\"\n                maxletter=\"$letter\"\n\
    \                maxlettercount=\"$count\"\n            fi\n        done\n   \
    \     counts+=(\"$count\")\n    done\n    echo \"{\\\"$maxletter\\\":\\\"$maxlettercount\\\
    \"}\"\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c\
    \ a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ letters=\"${1}\"\n  local counts=()\n  local max=0\n  local maxletter=\"\"\n\
    \  local maxcount=0\n  local maxcountletter=\"\"\n  local maxcountlettercount=0\n\
    \  local maxcountlettercountletter=\"\"\n  local maxcountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountletter=\"\"\n  local maxcountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n  local\
    \ maxcountlettercountlettercountlettercountlettercountlettercount=0\n  local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \  local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n  local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n \
    \   [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b\
    \ c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local letter\n    local count\n\
    \    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n    done\n    for letter in $letters\n    do\n        count=${counts[$letter]}\n\
    \        if [[ $count -gt 1 ]]\n        then\n            counts[$letter]=$count\n\
    \        fi\n    done\n    local result=()\n    for letter in $letters\n    do\n\
    \        result+=($letter ${counts[$letter]})\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\\
    nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local string=\"$1\"\n    local count=0\n    local letters=()\n    local max=0\n\
    \    local key\n    for letter in $string; do\n        ((count++))\n        letters+=(\"\
    $letter\")\n        if [ \"$count\" -gt \"$max\" ]; then\n            max=\"$count\"\
    \n        fi\n    done\n    for key in \"${letters[@]}\"; do\n        echo \"\\\
    \"$key\\\"=\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercount\n}\n\ncandidate() {\n    histogram \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n\
    \    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a\
    \ b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n \
    \   [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local count\n    local letter\n    for letter in \"${letters//,/ }\"; do\n\
    \        counts[$letter]=\"${counts[$letter]}\"\n    done\n    for letter in \"\
    ${!counts[@]}\"; do\n        count=$(echo \"${counts[$letter]}\" | tr -cd '[:digit:]')\n\
    \        if [ \"$count\" -gt \"$maxcount\" ]; then\n            maxcount=$count\n\
    \            maxcountletter=$letter\n        fi\n    done\n    echo \"${counts[$maxcountletter]}\"\
    \n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\"\
    ) = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\\
    nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[\
    \ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"\
    r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmput1j4jfv.sh: line 29: a b b a: syntax error in expression (error
    token is "b b a")

    '
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"${1}\"\n    local count=0\n    local max=\"\"\n    local maxcount=0\n\
    \    local maxletter=\"\"\n    local maxlettercount=0\n    local maxcountletter=\"\
    \"\n    local maxcountlettercount=0\n    local maxcountlettercountletter=\"\"\n\
    \    local maxcountlettercountlettercount=0\n    local maxcountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercount=0\n    local maxcountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercount=0\n    local\
    \ maxcountlettercountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local maxcount=0\n    local maxletter=\"\
    \"\n    local maxlettercount=0\n    local maxlettercountletter=\"\"\n    local\
    \ maxlettercountlettercount=0\n    local maxlettercountlettercountletter=\"\"\n\
    \    local maxlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercount=0\n    local maxlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercount=0\n \
    \   local maxlettercountlettercountlettercountlettercountlettercountletter=\"\"\
    \n    local maxlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=\"\
    \"\n    local maxlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxlettercountlettercountlettercountlettercountlettercountlettercountletter\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=$1\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercount\n}\n\ncandidate() {\n    histogram\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    local maxcountletter=\"\"\n    local maxcountlettercount=0\n\
    \    local maxcountlettercountletter=\"\"\n    local maxcountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountletter=\"\"\n    local maxcountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountletter=\"\"\n \
    \   local maxcountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercount=0\n\
    \    local maxcountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountlettercountletter=\"\
    \"\n    local maxcountlettercountletter\n}\n\ncandidate() {\n    histogram \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\"\
    \ ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate\
    \ \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r\
    \ t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"b b b b a\") = \"b,4\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local -n histo=\"$1\"\n    local -n histodict=\"$2\"\n    local -n histocount=\"\
    $3\"\n    local -n histomax=\"$4\"\n    local -n histomaxcount=\"$5\"\n    local\
    \ -n histomaxkey=\"$6\"\n    local -n histomaxvalue=\"$7\"\n    local -n histomaxkeycount=\"\
    $8\"\n    local -n histomaxkeycount=\"$9\"\n    local -n histomaxkeycount=\"$10\"\
    \n    local -n histomaxkeycount=\"$11\"\n    local -n histomaxkeycount=\"$12\"\
    \n    local -n histomaxkeycount=\"$13\"\n    local -n histomaxkeycount=\"$14\"\
    \n    local -n histomaxkeycount=\"$15\"\n    local -n histomaxkeycount=\"$16\"\
    \n    local -n histomaxkeycount=\"$17\"\n    local -n histomaxkeycount=\"$18\"\
    \n    local -n histomaxkeycount=\"$19\"\n    local -n histomaxkeycount=\"$20\"\
    \n    local -n histomaxkeycount=\"$21\"\n    local -n histomaxkeycount=\"$22\"\
    \n    local -n histomaxkeycount=\"$23\"\n    local -n histomaxkeycount=\"$24\"\
    \n    local -n histomaxkeycount=\"$25\"\n    local -n histomaxkeycount=\"$26\"\
    \n    local -n histomaxkeycount=\"$27\"\n    local -n histomaxkeycount=\"$28\"\
    \n    local -n histomaxkeycount=\"$29\"\n    local -n histomaxkeycount=\"$30\"\
    \n    local -n histomaxkeycount=\"$31\"\n    local -n histomaxkeycount=\"$32\"\
    \n    local -n histomaxkeycount=\"$33\"\n    local -n histomaxkeycount=\"$34\"\
    \n    local -n histomaxkeycount=\"$35\"\n    local -n histomaxkeycount=\"$36\"\
    \n    local -n histomaxkeycount=\"$37\"\n    local -n histomaxkeycount=\"$38\"\
    \n    local -n histomaxkeycount=\"$39\"\n    local -n histomaxkeycount=\"$40\"\
    \n    local -n histomaxkeycount=\"$41\"\n    local -n histomaxkeycount=\"$42\"\
    \n    local -n histomaxkeycount=\"$43\"\n    local -n histomaxkeycount=\"$44\"\
    \n    local -\n}\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"\
    a b c a b\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\\
    nc,1\\nd,1\\ng,1\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n\
    \    [[ $(candidate \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\"\
    ) = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"a\") = \"a,1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwkty7sdo.sh: line 19: local: `a b b a'': invalid variable name
    for name reference

    /tmp/tmpwkty7sdo.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpwkty7sdo.sh: line 28: local: `a b b a0'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 29: local: `a b b a1'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 30: local: `a b b a2'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 31: local: `a b b a3'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 32: local: `a b b a4'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 33: local: `a b b a5'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 34: local: `a b b a6'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 35: local: `a b b a7'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 36: local: `a b b a8'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 37: local: `a b b a9'': invalid variable name for name
    reference

    /tmp/tmpwkty7sdo.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpwkty7sdo.sh: line 39: local: `1'': invalid variable name for name reference

    /tmp/tmpwkty7sdo.sh: line 40: local: `2'': invalid variable name for name reference

    /tmp/tmpwkty7sdo.sh: line 41: local: `3'': invalid variable name for name reference

    /tmp/tmpwkty7sdo.sh: line 42: local: `4'': invalid variable name for name reference

    /tmp/tmpwkty7sdo.sh: line 43: local: `5'': invalid variable name for name reference

    /tmp/tmpwkty7sdo.sh: line 44: local: `6'': invalid'
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n   \
    \ local letters=\"$1\"\n    local counts=()\n    local max=0\n    local maxletter=\"\
    \"\n    local maxcount=0\n    for letter in $letters\n    do\n        counts[$letter]=$((${counts[$letter]}\
    \ + 1))\n        if [[ ${counts[$letter]} -gt $max ]]\n        then\n        \
    \    max=${counts[$letter]}\n            maxletter=$letter\n        fi\n    done\n\
    \    for letter in $letters\n    do\n        if [[ ${counts[$letter]} -eq $max\
    \ ]]\n        then\n            echo \"$maxletter: $max\"\n        fi\n    done\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419
- exit_code: 1
  program: "#!/bin/bash\n# Given a string representing a space separated lowercase\
    \ letters, return a dictionary\n# of the letter with the most repetition and containing\
    \ the corresponding count.\n# If several letters have the same occurrence, return\
    \ all of them.\n# Example:\n# >>> $(histogram \"a b c\")\n# {'\"a\"': '\"1\"',\
    \ '\"b\"': '\"1\"', '\"c\"': '\"1\"'}\n# >>> $(histogram \"a b b a\")\n# {'\"\
    a\"': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"a b c a b\")\n# {'\"a\"\
    ': '\"2\"', '\"b\"': '\"2\"'}\n# >>> $(histogram \"b b b b a\")\n# {'\"b\"': '\"\
    4\"'}\n# >>> $(histogram \"\")\n# {}\n#\n# $1 is a string\nhistogram() {\n  local\
    \ string=\"$1\"\n  local count=0\n  local letters=()\n  local max=0\n  local maxletter=''\n\
    \  local maxcount=0\n  local maxcountletter=''\n  local maxcountletters=()\n \
    \ local maxcountletters_string=''\n  local maxcountletters_strings=()\n  local\
    \ maxcountletters_strings_string=''\n  local maxcountletters_strings_strings=()\n\
    \  local maxcountletters_strings_strings_string=''\n  local maxcountletters_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_string=''\n  local maxcountletters_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_string=''\n  local maxcountletters_strings_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_string=''\n \
    \ local maxcountletters_strings_strings_strings_strings_strings_strings=()\n \
    \ local maxcountletters_strings_strings_strings_strings_strings_strings_string=''\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_string=''\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_string=''\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_strings_string=''\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_strings_strings_string=''\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings=()\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings_string=''\n\
    \  local maxcountletters_strings_strings_strings_strings_strings_strings_strings_string\n\
    }\n\ncandidate() {\n    histogram \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a b b a\") = \"a,2\\nb,2\" ]]\n    [[ $(candidate \"a b c a b\") = \"a,2\\\
    nb,2\" ]]\n    [[ $(candidate \"a b c d g\") = \"a,1\\nb,1\\nc,1\\nd,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\" ]]\n    [[ $(candidate\
    \ \"b b b b a\") = \"b,4\" ]]\n    [[ $(candidate \"r t g\") = \"r,1\\nt,1\\ng,1\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"a\") = \"a,1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053419

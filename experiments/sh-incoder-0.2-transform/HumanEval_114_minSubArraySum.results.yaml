language: sh
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=$2\n    local i sum\n    local numsArray\n    local minSumArray\n   \
    \ local minSumIndex\n    local minSumIndexArray\n    local minSumIndexArrayLength\n\
    \    local minSumArrayLength\n    local minSumArrayLengthLength\n    local minSumArrayLengthLength\n\
    \    local minSumArrayLengthLengthLength\n    local minSumArrayLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local minSumArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumArrayLengthLengthLengthLengthLengthLength\n    local \n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ numsArray\n    local minSumArray\n    local minSumIndex\n    local minSumIndexArray\n\
    \    local minSumIndexArrayLength\n    local minSumIndexArrayLengthLength\n  \
    \  local minSumIndexArrayLengthLength\n    local minSumIndexArrayLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLength\n    local minSumIndexArrayLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLength\n    local minSumIndexArrayLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLength\n    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \    local minSumIndexArrayLengthLengthLengthLengthLengthLength\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local minIndex\n\
    \    local minSum\n    local minSumIndex\n    local minSumIndex2\n    local minSumIndex3\n\
    \    local minSumIndex4\n    local minSumIndex5\n    local minSumIndex6\n    local\
    \ minSumIndex7\n    local minSumIndex8\n    local minSumIndex9\n    local minSumIndex10\n\
    \    local minSumIndex11\n    local minSumIndex12\n    local minSumIndex13\n \
    \   local minSumIndex14\n    local minSumIndex15\n    local minSumIndex16\n  \
    \  local minSumIndex17\n    local minSumIndex18\n    local minSumIndex19\n   \
    \ local minSumIndex20\n    local minSumIndex21\n    local minSumIndex22\n    local\
    \ minSumIndex23\n    local minSumIndex24\n    local minSumIndex25\n    local minSumIndex26\n\
    \    local minSumIndex27\n    local minSumIndex28\n    local minSumIndex29\n \
    \   local minSumIndex30\n    local minSumIndex31\n    local minSumIndex32\n  \
    \  local minSumIndex33\n    local minSumIndex34\n    local minSumIndex35\n   \
    \ local minSumIndex36\n    local minSumIndex37\n    local minSumIndex38\n    local\
    \ minSumIndex39\n    local minSumIndex40\n    local minSumIndex41\n    local minSumIndex42\n\
    \    local minSumIndex43\n    local minSumIndex44\n    local minSumIndex45\n \
    \   local minSumIndex46\n    local minSumIndex47\n    local minSumIndex48\n  \
    \  local minSumIndex49\n    local minSumIndex50\n    local minSumIndex51\n   \
    \ local minSumIndex52\n    local minSumIndex53\n    local minSumIndex54\n    local\
    \ minSumIndex55\n    local minSumIndex56\n    local minSumIndex57\n    local minSumIndex58\n\
    \    local minSumIndex59\n    local minSumIndex60\n    local minSumIndex61\n \
    \   local minSumIndex62\n    local minSumIndex63\n    local minSumIndex64\n  \
    \  local minSumIndex65\n    local minSumIndex66\n    local minSumIndex67\n   \
    \ local minSumIndex68\n\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minNum\n    local i\n    local j\n\
    \    local sum\n    local num\n    local numsArray\n    local numsArrayLen\n \
    \   local numsArrayLenLen\n    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLen\n \
    \   local numsArrayLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \   local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minSumIndex=0\n    local numsCount=0\n    local numsCountMax=0\n\
    \    local numsCountMaxIndex=0\n    local numsCountMin=0\n    local numsCountMinIndex=0\n\
    \    local numsCountMaxIndexMin=0\n    local numsCountMinIndexMin=0\n    local\
    \ numsCountMaxIndexMinIndex=0\n    local numsCountMinIndexMinIndex=0\n    local\
    \ numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local numsCountMaxIndexMinIndexIndex=0\n    local numsCountMinIndexMinIndexIndex=0\n\
    \    local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local i\n  local j\n  local k\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n \
    \ local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minVal=0\n    local num\n    local\
    \ i\n    local j\n    local sum\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n \
    \       sum=0\n        for ((j=0; j<${#nums[@]}; j++)); do\n            if [[\
    \ ${nums[$i]} -gt ${nums[$j]} ]]; then\n                sum=$((sum+nums[$j]))\n\
    \            fi\n        done\n        if [[ ${sum} -gt ${minSum} ]]; then\n \
    \           minSum=${sum}\n            minIndex=$i\n        fi\n    done\n   \
    \ echo \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwyo0u4me.sh: line 24: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i j sum\n    for ((i=0; i<${#nums[@]}; i++)); do\n\
    \        sum=0\n        for ((j=0; j<${#nums[@]}; j++)); do\n            ((sum+=${nums[$j]}))\n\
    \        done\n        if (( ${sum} < ${minSum} )); then\n            minSum=${sum}\n\
    \        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ow0g6en.sh: line 18: ((: sum+=2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmp7ow0g6en.sh: line 20: ((: 2 <  : syntax error: operand expected (error
    token is "<  ")

    '
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local\
    \ i\n    local j\n    local num\n    local numsArray\n    local numsArrayLen\n\
    \    local numsArrayLenMax\n    local numsArrayLenMin\n    local numsArrayLenSum\n\
    \    local numsArraySum\n    local numsArraySumMax\n    local numsArraySumMin\n\
    \    local numsArraySumSum\n    local numsArraySumSumMax\n    local numsArraySumSumMin\n\
    \    local numsArraySumSumSum\n    local numsArraySumSumSumMax\n    local numsArraySumSumSumMin\n\
    \    local numsArraySumSumSumSum\n    local numsArraySumSumSumSumMax\n    local\
    \ numsArraySumSumSumSumMin\n    local numsArraySumSumSumSumSum\n    local numsArraySumSumSumSumSumMax\n\
    \    local numsArraySumSumSumSumSumMin\n    local numsArraySumSumSumSumSumSum\n\
    \    local numsArraySumSumSumSumSumSumMax\n    local numsArraySumSumSumSumSumSumMin\n\
    \    local numsArraySumSumSumSumSumSumSum\n    local numsArraySumSumSumSumSumSumMax\n\
    \    local numsArraySumSumSumSumSumSumMin\n    local numsArraySumSumSumSumSumSumSum\n\
    \    local numsArraySumSumSumSumSumSumSumMax\n    local numsArraySumSumSumSumSumSumSumMin\n\
    \    local numsArraySumSumSumSumSumSumSumSum\n    local numsArraySumSumSumSumSumSumSumSumMax\n\
    \    local numsArraySumSumSumSumSumSumSumMin\n    local numsArraySumSumSumSumSumSumSumSum\n\
    \    local numsArraySumSumSumSumSumSumSumSumMax\n    local numsArraySumSumSumSumSumSumSumSumMin\n\
    \    local numsArraySumSumSumSumSumSumSumSumSum\n    local numsArraySumSumSumSumSumSumSumSumMax\n\
    \    local numsArraySumSumSumSumSumSumSumSumMin\n    local numsArraySumSumSumSumSumSumSumSumSum\n\
    \    local numsArraySumSumSumSumSumSumSumSumMax\n    local numsArraySumSumSumSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local numsLength=${#nums[@]}\n    for ((\
    \ i=0; i<numsLength; i++ )); do\n        local sum=0\n        for (( j=0; j<i;\
    \ j++ )); do\n            sum=$(( sum + nums[j] ))\n        done\n        if ((\
    \ sum < minSum )); then\n            minSum=$sum\n            minIndex=$i\n  \
    \      fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local n\n \
    \   local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    local m\n    local l\n    local n\n    local m\n    local l\n    local n\n\
    \    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \n    len=${#nums[@]}\n    for ((i=0; i<len; i++)); do\n        sum=$((sum+nums[i]))\n\
    \    done\n    min=$((sum))\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            sum=$((sum+nums[j]))\n            if ((sum<min))\
    \ ; then\n                min=$((sum))\n                k=i\n            fi\n\
    \        done\n    done\n    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5tuq5wyq.sh: line 22: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local currentSum=0\n\
    \    local currentIndex=0\n    local currentMax=0\n    local currentMin=0\n  \
    \  local maxSum=0\n    local minSum=0\n    local maxIndex=0\n    local minIndex=0\n\
    \    local currentSum=0\n    local currentIndex=0\n    local currentMax=0\n  \
    \  local currentMin=0\n    local maxSum=0\n    local minSum=0\n    local maxIndex=0\n\
    \    local minIndex=0\n    local currentSum=0\n    local currentIndex=0\n    local\
    \ currentMax=0\n    local currentMin=0\n    local maxSum=0\n    local minSum=0\n\
    \    local maxIndex=0\n    local minIndex=0\n    local currentSum=0\n    local\
    \ currentIndex=0\n    local currentMax=0\n    local currentMin=0\n    local maxSum=0\n\
    \    local minSum=0\n    local maxIndex=0\n    local minIndex=0\n    local currentSum=0\n\
    \    local currentIndex=0\n    local currentMax=0\n    local currentMin=0\n  \
    \  local maxSum=0\n    local minSum=0\n    local maxIndex=0\n    local minIndex=0\n\
    \    local currentSum=0\n    local currentIndex=0\n    local currentMax=0\n  \
    \  local currentMin=0\n    local maxSum=0\n    local minSum=0\n    local maxIndex=0\n\
    \    local minIndex=0\n    local currentSum=0\n    local currentIndex=0\n    local\
    \ currentMax=0\n    local currentMin=0\n    local maxSum=0\n    local minSum=0\n\
    \    local maxIndex=0\n    local minIndex=0\n    local currentSum=0\n    local\
    \ currentIndex=0\n    local currentMax=0\n    local currentMin=0\n    local maxSum=0\n\
    \    local minSum=0\n    local maxIndex=0\n    local minIndex=0\n    local currentSum=0\n\
    \    local currentIndex=0\n    local currentMax=0\n    local currentMin=0\n  \
    \  local maxSum=0\n    local minSum=0\n    local maxIndex=0\n    local minIndex=0\n\
    \    local currentSum=0\n    local currentIndex=0\n    local currentMax=0\n  \
    \  local currentMin=0\n    local maxSum=0\n    local minSum=0\n    local maxIndex=0\n\
    \    local minIndex=0\n    local currentSum=0\n    local \n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local num\n\
    \    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n    local\
    \ numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \   local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minNum\n    local num\n    local sum\n\
    \    local i\n    local j\n    local k\n    local numsCount\n    local numsCount2\n\
    \    local numsCount3\n    local numsCount4\n    local numsCount5\n    local numsCount6\n\
    \    local numsCount7\n    local numsCount8\n    local numsCount9\n    local numsCount10\n\
    \    local numsCount11\n    local numsCount12\n    local numsCount13\n    local\
    \ numsCount14\n    local numsCount15\n    local numsCount16\n    local numsCount17\n\
    \    local numsCount18\n    local numsCount19\n    local numsCount20\n    local\
    \ numsCount21\n    local numsCount22\n    local numsCount23\n    local numsCount24\n\
    \    local numsCount25\n    local numsCount26\n    local numsCount27\n    local\
    \ numsCount28\n    local numsCount29\n    local numsCount30\n    local numsCount31\n\
    \    local numsCount32\n    local numsCount33\n    local numsCount34\n    local\
    \ numsCount35\n    local numsCount36\n    local numsCount37\n    local numsCount38\n\
    \    local numsCount39\n    local numsCount40\n    local numsCount41\n    local\
    \ numsCount42\n    local numsCount43\n    local numsCount44\n    local numsCount45\n\
    \    local numsCount46\n    local numsCount47\n    local numsCount48\n    local\
    \ numsCount49\n    local numsCount50\n    local numsCount51\n    local numsCount52\n\
    \    local numsCount53\n    local numsCount54\n    local numsCount55\n    local\
    \ numsCount56\n    local numsCount57\n    local numsCount58\n    local numsCount59\n\
    \    local numsCount60\n    local numsCount61\n    local numsCount62\n    local\
    \ numsCount63\n    local numsCount64\n    local numsCount65\n    local numsCount66\n\
    \    local numsCount67\n    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local num\n    local numsArray\n    local numsArrayLength\n    local\
    \ numsArrayLengthMinusOne\n    local numsArrayLengthMinusOneMinusOne\n    local\
    \ numsArrayLengthMinusOneMinusOneMinusOne\n    local numsArrayLengthMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOne\n    local\
    \ numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \    local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinus\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local maxSum=0\n  local sum=0\n  local\
    \ i\n  local j\n  local k\n  local num\n  local sumOfMin\n  local sumOfMax\n \
    \ local min\n  local max\n  local numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n\
    \  local numsArrayLenLenLen\n  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \    local minlen\n    local minsum\n    local minsumlen\n    local minsumlen2\n\
    \    local minsumlen3\n    local minsumlen4\n    local minsumlen5\n    local minsumlen6\n\
    \    local minsumlen7\n    local minsumlen8\n    local minsumlen9\n    local minsumlen10\n\
    \    local minsumlen11\n    local minsumlen12\n    local minsumlen13\n    local\
    \ minsumlen14\n    local minsumlen15\n    local minsumlen16\n    local minsumlen17\n\
    \    local minsumlen18\n    local minsumlen19\n    local minsumlen20\n    local\
    \ minsumlen21\n    local minsumlen22\n    local minsumlen23\n    local minsumlen24\n\
    \    local minsumlen25\n    local minsumlen26\n    local minsumlen27\n    local\
    \ minsumlen28\n    local minsumlen29\n    local minsumlen30\n    local minsumlen31\n\
    \    local minsumlen32\n    local minsumlen33\n    local minsumlen34\n    local\
    \ minsumlen35\n    local minsumlen36\n    local minsumlen37\n    local minsumlen38\n\
    \    local minsumlen39\n    local minsumlen40\n    local minsumlen41\n    local\
    \ minsumlen42\n    local minsumlen43\n    local minsumlen44\n    local minsumlen45\n\
    \    local minsumlen46\n    local minsumlen47\n    local minsumlen48\n    local\
    \ minsumlen49\n    local minsumlen50\n    local minsumlen51\n    local minsumlen52\n\
    \    local minsumlen53\n    local minsumlen54\n    local minsumlen55\n    local\
    \ minsumlen56\n    local minsumlen57\n    local minsumlen58\n    local minsumlen59\n\
    \    local minsumlen60\n    local minsumlen61\n    local minsumlen62\n    local\
    \ minsumlen63\n    local minsumlen64\n    local minsumlen65\n    local minsumlen66\n\
    \    local minsumlen67\n    local min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $(seq 0 $((${#nums[@]} - 1))); do\n    local j\n    for\
    \ j in $(seq 0 $((${#nums[@]} - 1))); do\n      if [ $i -eq 0 ]; then\n      \
    \  sum=$((${sum} + ${nums[$j]}))\n      else\n        local k\n        for k in\
    \ $(seq 0 $((${#nums[@]} - 1))); do\n          if [[ $j -eq $k ]]; then\n    \
    \        sum=$((${sum} + ${nums[$j]}))\n          fi\n        done\n      fi\n\
    \    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbi9xkb6y.sh: line 19: 0 + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenMax\n\
    \    local numsArrayLenMin\n    local numsArrayLenSum\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMaxMin\n    local numsArrayLenSumMaxMinMin\n\
    \    local numsArrayLenSumMaxMinMin\n    local numsArrayLenSumMaxMinMinMin\n \
    \   local numsArrayLenSumMaxMinMinMin\n    local numsArrayLenSumMaxMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMinMinMinMinMinMin\n\
    \    local numsArrayLen\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ minSum=\"$2\"\n  local i sum\n  local numsArray=($nums)\n  local minSumArray=($minSum)\n\
    \n  for i in \"${!numsArray[@]}\"; do\n    sum=$(( ${numsArray[i]} + ${minSumArray[i]}\
    \ ))\n    if [ $sum -gt ${minSumArray[i]} ]; then\n      minSumArray[i]=$sum\n\
    \    fi\n  done\n\n  echo \"${minSumArray[@]}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf1wxudoo.sh: line 19: 2 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minSumIndex=0\n    local numsLength=${#nums[@]}\n    for\
    \ (( i=0; i<numsLength; i++ )); do\n        local sum=0\n        for (( j=0; j<numsLength;\
    \ j++ )); do\n            sum=$(( sum + nums[$j] ))\n        done\n        if\
    \ (( sum < minSum )); then\n            minSum=$sum\n            minSumIndex=$i\n\
    \        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9e2yn1rg.sh: line 19: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local min\n  local max\n  local minIndex\n\
    \  local maxIndex\n  local minVal\n  local maxVal\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayIndex\n  local numsArrayIndexLen\n  local\
    \ numsArrayIndexVal\n  local numsArrayIndexValLen\n  local numsArrayIndexValVal\n\
    \  local numsArrayIndexValValLen\n  local numsArrayIndexValValVal\n  local numsArrayIndexValValValLen\n\
    \  local numsArrayIndexValValValVal\n  local numsArrayIndexValValValValLen\n \
    \ local numsArrayIndexValValValValVal\n  local numsArrayIndexValValValValValLen\n\
    \  local numsArrayIndexValValValValValVal\n  local numsArrayIndexValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValVal\n  local numsArrayIndexValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValVal\n  local numsArrayIndexValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValVal\n  local numsArrayIndexValValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValValVal\n  local numsArrayIndexValValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValValVal\n  local numsArrayIndexValValValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValValValLen\n  local numsArrayIndexValValValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValValValLen\n  local numsArrayIndexValValValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValValValLen\n  local numsArrayIndexValValValValValValValValValLen\n\
    \  local numsArrayIndexValValValValValValValValValLen\n  local numsArrayIndexValValValValValValValValValLen\n\
    \  local numsArrayIndexVal\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \    local num\n    local tmp\n    local minIndex\n    local minSum\n    local\
    \ minSumIndex\n    local minSumVal\n    local minSumValIndex\n    local minSumValIndexLen\n\
    \    local minSumValIndexLenLen\n    local minSumValIndexLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local\
    \ minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n    local minSumValIndexLenLenLen\n\
    \    local minSumValIndexLenLen\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local numsLength=${#nums[@]}\n    for ((\
    \ i=0; i<numsLength; i++ )); do\n        local sum=0\n        for (( j=0; j<i;\
    \ j++ )); do\n            sum=$(( sum + nums[j] ))\n        done\n        if ((\
    \ sum < minSum )); then\n            minSum=$sum\n            minIndex=$i\n  \
    \      fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n  local\
    \ num\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n\
    \  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local\
    \ sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n\
    \  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n \
    \ local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local\
    \ sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n\
    \  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n \
    \ local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local\
    \ sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n\
    \  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n \
    \ local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local\
    \ sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n\
    \  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n \
    \ local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local\
    \ sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n\
    \  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n \
    \ local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local\
    \ sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local minVal=0\n  local numsLength=${#nums[@]}\n  local\
    \ i\n  local j\n  local sum\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local numsLength\n  local numsLength\n\
    \  local numsLength\n  local numsLength\n  local \n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local numsCount=0\n    local numsIndex=0\n\
    \    local numsCountMin=0\n    local numsIndexMin=0\n    local numsCountMinIndex=0\n\
    \    local numsIndexMinIndex=0\n    local numsCountMinIndexMin=0\n    local numsIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndex=0\n\
    \    local numsCountMinIndexMinIndexMin=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCountMinIndexMinIndexMinIndex=0\n    local numsIndexMinIndexMinIndexMin=0\n\
    \    local numsCount\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ sumOfMin\n  local sumOfMax\n  local minOfMax\n  local minOfMin\n  local minOfSum\n\
    \  local maxOfSum\n  local minOfSumOfMax\n  local maxOfSumOfMin\n  local minOfSumOfMin\n\
    \  local maxOfSumOfMax\n  local minOfSumOfMaxOfMin\n  local maxOfSumOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMin\n  local minOfSumOfMaxOfMinOfMax\n  local maxOfSumOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMin\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minVal\n    local maxVal\n\
    \    local minSum\n    local maxSum\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    local maxSumVal\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumVal\n    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local num\n  local i\n  local j\n  local sum\n  local numsLength\n\
    \  local numsLengthMax\n  local numsLengthMin\n  local numsLengthMinMax\n  local\
    \ numsLengthMinMaxSum\n  local numsLengthMinMaxSumIndex\n  local numsLengthMinMaxSumIndexMin\n\
    \  local numsLengthMinMaxSumIndexMax\n  local numsLengthMinMaxSumIndexMinMax\n\
    \  local numsLengthMinMaxSumIndexMinMaxSum\n  local numsLengthMinMaxSumIndexMinMaxSumIndex\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMin\n  local numsLengthMinMaxSumIndexMinMaxSumIndexMax\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMax\n  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSum\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndex\n  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMin\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMax\n  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMax\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSum\n  local\
    \ numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndex\n  local\
    \ numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMin\n  local\
    \ numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMax\n  local\
    \ numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMax\n \
    \ local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSum\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndex\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMax\n\
    \  local numsLengthMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMaxSumIndexMinMax\n\
    \  local numsLengthMinMax\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n\
    \    local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $(seq 0 $((${#nums[@]} - 1))); do\n    local j\n    for\
    \ j in $(seq 0 $((${#nums[@]} - 1))); do\n      if [[ ${nums[$i]} -gt ${nums[$j]}\
    \ ]]; then\n        sum=$((sum + ${nums[$i]}))\n      fi\n    done\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm1105b38.sh: line 18: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local len\n    local minlen\n    local maxlen\n    local minsum\n    local\
    \ maxsum\n    local minnum\n    local maxnum\n    local minnums\n    local maxnums\n\
    \    local minnumslen\n    local maxnumslen\n    local minnumslen2\n    local\
    \ maxnumslen2\n    local minnumslen3\n    local maxnumslen3\n    local minnumslen4\n\
    \    local maxnumslen4\n    local minnumslen5\n    local maxnumslen5\n    local\
    \ minnumslen6\n    local maxnumslen6\n    local minnumslen7\n    local maxnumslen7\n\
    \    local minnumslen8\n    local maxnumslen8\n    local minnumslen9\n    local\
    \ maxnumslen9\n    local minnumslen10\n    local maxnumslen10\n    local minnumslen11\n\
    \    local maxnumslen11\n    local minnumslen12\n    local maxnumslen12\n    local\
    \ minnumslen13\n    local maxnumslen13\n    local minnumslen14\n    local maxnumslen14\n\
    \    local minnumslen15\n    local maxnumslen15\n    local minnumslen16\n    local\
    \ maxnumslen16\n    local minnumslen17\n    local maxnumslen17\n    local minnumslen18\n\
    \    local maxnumslen18\n    local minnumslen19\n    local maxnumslen19\n    local\
    \ minnumslen20\n    local maxnumslen20\n    local minnumslen21\n    local maxnumslen21\n\
    \    local minnumslen22\n    local maxnumslen22\n    local minnumslen23\n    local\
    \ maxnumslen23\n    local minnumslen24\n    local maxnumslen24\n    local minnumslen25\n\
    \    local maxnumslen25\n    local minnumslen26\n    local maxnumslen26\n    local\
    \ minnumslen27\n    local maxnumslen27\n    local minnums\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minVal\n    local maxVal\n\
    \    local minSum\n    local maxSum\n    local minSubArray\n    local maxSubArray\n\
    \    local minSubArraySum\n    local maxSubArraySum\n    local minSubArraySumIndex\n\
    \    local maxSubArraySumIndex\n    local minSubArraySumVal\n    local maxSubArraySumVal\n\
    \    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local\
    \ minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n\
    \    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local\
    \ maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n\
    \    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local\
    \ minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n\
    \    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local\
    \ maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n\
    \    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local\
    \ minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n\
    \    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local\
    \ maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n\
    \    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local\
    \ minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n\
    \    local maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local\
    \ maxSubArraySumValIndex\n    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n\
    \    local minSubArraySumValIndex\n    local maxSubArraySumValIndex\n    local\
    \ minSubArraySumValIndex\n    local maxSubArraySum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ minSum=\"$2\"\n  local i sum\n  local numsArray=($nums)\n  local minSumArray=($minSum)\n\
    \  local minSumIndex\n  local minSumIndexArray\n  local minSumIndexArrayLength\n\
    \  local minSumIndexArrayLengthLength\n  local minSumIndexArrayLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLength\n  local minSumIndexArrayLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLength\n  local minSumIndexArrayLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLength\n  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLength\n  local\
    \ minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLength\n  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArrayLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\n\
    \  local minSumIndexArray\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n  local\
    \ minlen\n  local maxlen\n  local minsum\n  local maxsum\n  local minsumlen\n\
    \  local maxsumlen\n  local minmaxlen\n  local maxmaxlen\n  local minmaxsum\n\
    \  local maxmaxsum\n  local minmaxsumlen\n  local maxmaxsumlen\n  local minmaxmaxlen\n\
    \  local maxmaxmaxlen\n  local minmaxmaxsum\n  local maxmaxmaxsum\n  local minmaxmaxsumlen\n\
    \  local maxmaxmaxsumlen\n  local minmaxmaxmaxlen\n  local maxmaxmaxmaxlen\n \
    \ local minmaxmaxmaxsum\n  local maxmaxmaxmaxsum\n  local minmaxmaxmaxsumlen\n\
    \  local maxmaxmaxmaxsumlen\n  local minmaxmaxmaxmaxlen\n  local maxmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxsumlen\n\
    \  local maxmaxmaxmaxmaxsumlen\n  local minmaxmaxmaxmaxmaxlen\n  local maxmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxsumlen\n\
    \  local maxmaxmaxmaxmaxsumlen\n  local minmaxmaxmaxmaxmaxlen\n  local maxmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxsumlen\n\
    \  local maxmaxmaxmaxmaxsumlen\n  local minmaxmaxmaxmaxmaxlen\n  local maxmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxsumlen\n\
    \  local maxmaxmaxmaxmaxsumlen\n  local minmaxmaxmaxmaxmaxlen\n  local maxmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxsumlen\n\
    \  local maxmaxmaxmaxmaxsumlen\n  local minmaxmaxmaxmaxmaxlen\n  local maxmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxsum\n  \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local sum=0\n  local i\n  local j\n\
    \  local sumOfSubArray\n\n  for i in \"${nums[@]}\"; do\n    sum=0\n    for j\
    \ in \"${!nums[@]}\"; do\n      if [ $j -gt $i ]; then\n        sum=$((sum+nums[$j]))\n\
    \      fi\n    done\n    sumOfSubArray=$((sum+i))\n    if [ $sumOfSubArray -gt\
    \ $minSum ]; then\n      minSum=$sumOfSubArray\n      minIndex=$i\n      maxIndex=$j\n\
    \    fi\n  done\n  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsp0q3m5w.sh: line 24: [: too many arguments

    /tmp/tmpsp0q3m5w.sh: line 28: 2 3 4 1 2 4: syntax error in expression (error token
    is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minVal\n    local maxVal\n\
    \    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n    local\
    \ numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local i\n    local j\n    local sum\n  \
    \  local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenMax\n\
    \    local numsArrayLenMin\n    local numsArrayLenSum\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minNum\n    local i\n    local j\n\
    \    local sum\n    local num\n    local numsArray\n    local numsArrayLen\n \
    \   local numsArrayLenLen\n    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLen\n \
    \   local numsArrayLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=$2\n    local i sum\n    local minSumIndex\n    local minSumIndexCount\n\
    \    local minSumIndexCountMax\n    local minSumIndexCountMin\n    local minSumIndexCountMaxIndex\n\
    \    local minSumIndexCountMinIndex\n    local minSumIndexCountMaxIndexIndex\n\
    \    local minSumIndexCountMinIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    \    local minSumIndexCountMinIndexIndexIndex\n    local minSumIndexCountMaxIndexIndexIndex\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n\
    \    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local num\n\
    \  local numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n\
    \  local numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMaxMin\n  local numsArrayLenSumMaxMinMin\n  local numsArrayLenSumMaxMinMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMin\n  local numsArrayLenSumMaxMinMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMin\n  local numsArrayLenSumMaxMinMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMin\n  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMin\n  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMin\n  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n  local\
    \ numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n  local\
    \ numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local numsArrayLenSumMaxMinMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \  local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n\
    \  local numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMax\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minVal=0\n    local numsLen=${#nums[@]}\n\
    \    for (( i=0; i<numsLen; i++ )); do\n        local sum=0\n        for (( j=0;\
    \ j<i; j++ )); do\n            sum=$(( sum + nums[j] ))\n        done\n      \
    \  if (( sum < minVal )); then\n            minVal=sum\n            minIndex=$i\n\
    \        fi\n    done\n    minSum=$(( minVal + nums[minIndex] ))\n    echo \"\
    $minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkywyi984.sh: line 27: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local n\n  local m\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i1\n  local i2\n  local j1\n\
    \  local j2\n  local k1\n  local k2\n  local l1\n  local l2\n  local m1\n  local\
    \ m2\n  local n1\n  local n2\n  local o1\n  local o2\n  local p1\n  local p2\n\
    \  local q1\n  local q2\n  local r1\n  local r2\n  local s1\n  local s2\n  local\
    \ t1\n  local t2\n  local u1\n  local u2\n  local v1\n  local v2\n  local w1\n\
    \  local w2\n  local x1\n  local x2\n  local y1\n  local y2\n  local z1\n  local\
    \ z2\n  local a1\n  local a2\n  local b1\n  local b2\n  local c1\n  local c2\n\
    \  local d1\n  local d2\n  local e1\n  local e2\n  local f1\n  local f2\n  local\
    \ g1\n  local g2\n  local h1\n  local h2\n  local i3\n  local j3\n  local k3\n\
    \  local l3\n  local m3\n  local n3\n  local o3\n  local p3\n  local q3\n  local\
    \ r3\n  local s3\n  local t3\n  local u3\n  local v3\n  local w3\n  local x4\n\
    \  local y4\n  local z4\n  local a4\n  local b4\n  local c4\n  local d4\n  local\
    \ e4\n  local f4\n  local g4\n  local h4\n  local i4\n  local j4\n  local k4\n\
    \  local l4\n  local m4\n  local n4\n  local o4\n  local p4\n  local q4\n  local\
    \ r4\n  local s4\n  local t4\n  \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minSumIndex=0\n  local numsIndex=0\n  local numsLength=${#nums[@]}\n\
    \  while [ $numsIndex -le $numsLength ]; do\n    local sum=0\n    local numsIndex=$((numsIndex\
    \ + 1))\n    while [ $numsIndex -le $numsLength ]; do\n      local num=$((nums[$numsIndex]))\n\
    \      local sum=$((sum + num))\n      numsIndex=$((numsIndex + 1))\n    done\n\
    \    local sum=$((sum + nums[$numsIndex]))\n    if [ $sum -gt $minSum ]; then\n\
    \      minSum=$sum\n      minSumIndex=$numsIndex\n    fi\n  done\n  echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local min\n  local max\n  local minIndex\n\
    \  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n\
    \  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n\
    \  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n\
    \  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n\
    \  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n\
    \  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n\
    \  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n\
    \  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n\
    \  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n\
    \  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n\
    \  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n\
    \  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n\
    \  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n\
    \  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n\
    \  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n\
    \  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n\
    \  local maxIndex\n  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n\
    \  local minSum\n  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n\
    \  local maxSum\n  local minIndex\n  local maxIndex\n  local minSum\n  local maxSum\n\
    \  \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  local j\n  local k\n  local min\n  local max\n  local minIndex\n\
    \  local maxIndex\n  local minSum\n  local maxSum\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n \
    \ local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local n\n    local m\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ tmp\n  local len\n  local tmplen\n  local minlen\n  local maxlen\n  local minsum\n\
    \  local maxsum\n  local minnum\n  local maxnum\n  local minnums\n  local maxnums\n\
    \  local minnumslen\n  local maxnumslen\n  local minnumslen2\n  local maxnumslen2\n\
    \  local minnumslen3\n  local maxnumslen3\n  local minnumslen4\n  local maxnumslen4\n\
    \  local minnumslen5\n  local maxnumslen5\n  local minnumslen6\n  local maxnumslen6\n\
    \  local minnumslen7\n  local maxnumslen7\n  local minnumslen8\n  local maxnumslen8\n\
    \  local minnumslen9\n  local maxnumslen9\n  local minnumslen10\n  local maxnumslen10\n\
    \  local minnumslen11\n  local maxnumslen11\n  local minnumslen12\n  local maxnumslen12\n\
    \  local minnumslen13\n  local maxnumslen13\n  local minnumslen14\n  local maxnumslen14\n\
    \  local minnumslen15\n  local maxnumslen15\n  local minnumslen16\n  local maxnumslen16\n\
    \  local minnumslen17\n  local maxnumslen17\n  local minnumslen18\n  local maxnumslen18\n\
    \  local minnumslen19\n  local maxnumslen19\n  local minnumslen20\n  local maxnumslen20\n\
    \  local minnumslen21\n  local maxnumslen21\n  local minnumslen22\n  local maxnumslen22\n\
    \  local minnumslen23\n  local maxnumslen23\n  local minnumslen24\n  local maxnumslen24\n\
    \  local minnumslen25\n  local maxnumslen25\n  local minnumslen26\n  local maxnumslen26\n\
    \  local minnumslen27\n\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n\
    \    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n  local\
    \ numsArrayLenMaxMin\n  local numsArrayLenMaxMinMin\n  local numsArrayLenMaxMinMinMin\n\
    \  local numsArrayLenMaxMinMinMin\n  local numsArrayLenMaxMinMinMinMin\n  local\
    \ numsArrayLenMaxMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMin\n  local\
    \ numsArrayLenMaxMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMin\n  local\
    \ numsArrayLenMaxMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenMaxMinMinMin\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local minSum=100000000000\n  local minSumIndex=0\n  local minSumIndexCount=0\n\
    \  local minSumIndexCountMax=100\n  local minSumIndexCountMaxIndex=0\n  local\
    \ minSumIndexCountMaxIndexCount=0\n  local minSumIndexCountMaxIndexCountMax=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndex=0\n  local minSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCount=0\n  local minSumIndexCountMaxIndexCountMaxIndexCountMax=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCount=0\n  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMax=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n \
    \ local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n  local\
    \ minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCount=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMax=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCount=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMax=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \  local minSumIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndexCountMaxIndex=0\n\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minVal=0\n    local minLen=0\n   \
    \ local numsLen=${#nums[@]}\n    for (( i=0; i<numsLen; i++ )); do\n        local\
    \ curSum=0\n        local curIndex=0\n        local curVal=${nums[$i]}\n     \
    \   local curLen=${#curVal}\n        for (( j=0; j<curLen; j++ )); do\n      \
    \      local curNum=${curVal:$j:1}\n            local curNumLen=${#curNum}\n \
    \           local curSum=${curSum}${curNum:0:curNumLen}\n            local curIndex=${curIndex}${curNum:1:curNumLen}\n\
    \        done\n        if (( curSum < minSum )); then\n            minSum=${curSum}\n\
    \            minIndex=${curIndex}\n            minVal=${curVal}\n            minLen=${curLen}\n\
    \        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx5_z775v.sh: line 29: ((: 02 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local sum=0\n  local i\n  local j\n  local k\n  local num\n\
    \  local numsArray\n  local numsArrayLength\n  local numsArrayLengthMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOne\n  local numsArrayLengthMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOne\n  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n  local\
    \ numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n  local\
    \ numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local numsArrayLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMin\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local n\n  local m\n  local sums\n\
    \  local mins\n  local min\n  local max\n  local maxs\n  local max\n  local mins\n\
    \  local min\n  local max\n  local maxs\n  local max\n  local mins\n  local min\n\
    \  local max\n  local maxs\n  local max\n  local mins\n  local min\n  local max\n\
    \  local maxs\n  local max\n  local mins\n  local min\n  local max\n  local maxs\n\
    \  local max\n  local mins\n  local min\n  local max\n  local maxs\n  local max\n\
    \  local mins\n  local min\n  local max\n  local maxs\n  local max\n  local mins\n\
    \  local min\n  local max\n  local maxs\n  local max\n  local mins\n  local min\n\
    \  local max\n  local maxs\n  local max\n  local mins\n  local min\n  local max\n\
    \  local maxs\n  local max\n  local mins\n  local min\n  local max\n  local maxs\n\
    \  local max\n  local mins\n  local min\n  local max\n  local maxs\n  local max\n\
    \  local mins\n  local min\n  local max\n  local maxs\n  local max\n  local mins\n\
    \  local min\n  local max\n  local maxs\n  local max\n  local mins\n  local min\n\
    \  local max\n  local maxs\n  local max\n  local mins\n  local min\n  local max\n\
    \  local maxs\n  local max\n  local mins\n  local min\n  local max\n  local maxs\n\
    \  local max\n  local mins\n  local min\n  local max\n  local maxs\n  local max\n\
    \  local mins\n  local min\n  local max\n  local maxs\n  local max\n  local mins\n\
    \  local min\n  local max\n  local maxs\n  local max\n  local mins\n  local min\n\
    \  local max\n  local maxs\n  local max\n  local mins\n  local min\n  \n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i sum\n    local numsArray=(${nums//[[:space:]]/ })\n\
    \    for ((i=0; i<${#numsArray[@]}; i++)); do\n        sum=0\n        for ((j=0;\
    \ j<${#numsArray[@]}; j++)); do\n            (( sum += numsArray[j] ))\n     \
    \   done\n        if (( sum < minSum )); then\n            minSum=sum\n      \
    \  fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \    local minlen\n    local minsum\n    local minsumlen\n    local minsumlen2\n\
    \    local minsumlen3\n    local minsumlen4\n    local minsumlen5\n    local minsumlen6\n\
    \    local minsumlen7\n    local minsumlen8\n    local minsumlen9\n    local minsumlen10\n\
    \    local minsumlen11\n    local minsumlen12\n    local minsumlen13\n    local\
    \ minsumlen14\n    local minsumlen15\n    local minsumlen16\n    local minsumlen17\n\
    \    local minsumlen18\n    local minsumlen19\n    local minsumlen20\n    local\
    \ minsumlen21\n    local minsumlen22\n    local minsumlen23\n    local minsumlen24\n\
    \    local minsumlen25\n    local minsumlen26\n    local minsumlen27\n    local\
    \ minsumlen28\n    local minsumlen29\n    local minsumlen30\n    local minsumlen31\n\
    \    local minsumlen32\n    local minsumlen33\n    local minsumlen34\n    local\
    \ minsumlen35\n    local minsumlen36\n    local minsumlen37\n    local minsumlen38\n\
    \    local minsumlen39\n    local minsumlen40\n    local minsumlen41\n    local\
    \ minsumlen42\n    local minsumlen43\n    local minsumlen44\n    local minsumlen45\n\
    \    local minsumlen46\n    local minsumlen47\n    local minsumlen48\n    local\
    \ minsumlen49\n    local minsumlen50\n    local minsumlen51\n    local minsumlen52\n\
    \    local minsumlen53\n    local minsumlen54\n    local minsumlen55\n    local\
    \ minsumlen56\n    local minsumlen57\n    local minsumlen58\n    local minsumlen59\n\
    \    local minsumlen60\n    local minsumlen61\n    local minsumlen62\n    local\
    \ minsumlen63\n    local minsumlen64\n    local minsumlen65\n    local minsumlen66\n\
    \    local minsumlen67\n    local min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minSumIndex=0\n    local numsLength=${#nums[@]}\n    for\
    \ (( i=0; i<numsLength; i++ )); do\n        local sum=0\n        for (( j=0; j<i;\
    \ j++ )); do\n            sum=$(( sum + nums[j] ))\n        done\n        if ((\
    \ sum < minSum )); then\n            minSum=${sum}\n            minSumIndex=${i}\n\
    \        fi\n    done\n    echo \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minVal\n    local maxVal\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n\
    \    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local num\n\
    \    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n    local\
    \ numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \   local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n \
    \ local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local num\n    local sum2\n    local min2\n    local max2\n    local\
    \ min3\n    local max3\n    local min4\n    local max4\n    local min5\n    local\
    \ max5\n    local min6\n    local max6\n    local min7\n    local max7\n    local\
    \ min8\n    local max8\n    local min9\n    local max9\n    local min10\n    local\
    \ max10\n    local min11\n    local max11\n    local min12\n    local max12\n\
    \    local min13\n    local max13\n    local min14\n    local max14\n    local\
    \ min15\n    local max15\n    local min16\n    local max16\n    local min17\n\
    \    local max17\n    local min18\n    local max18\n    local min19\n    local\
    \ max19\n    local min20\n    local max20\n    local min21\n    local max21\n\
    \    local min22\n    local max22\n    local min23\n    local max23\n    local\
    \ min24\n    local max24\n    local min25\n    local max25\n    local min26\n\
    \    local max26\n    local min27\n    local max27\n    local min28\n    local\
    \ max28\n    local min29\n    local max29\n    local min30\n    local max30\n\
    \    local min31\n    local max31\n    local min32\n    local max32\n    local\
    \ min33\n    local max33\n    local min34\n    local max34\n    local min35\n\
    \    local max35\n    local min36\n    local max36\n    local min37\n    local\
    \ max37\n    local min38\n    local max38\n    local min39\n    local max39\n\
    \    local min40\n    local max40\n    local min41\n    local max41\n    local\
    \ min42\n    local max42\n    local min43\n    local max43\n    local min44\n\
    \    local max44\n    local min45\n    local max45\n    local min46\n    local\
    \ max46\n    local min47\n    local max47\n    local min48\n    local max48\n\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local m\n  local\
    \ n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=$2\n\
    \  local minSumIndex=0\n  local numsIndex=0\n  local numsLength=${#nums[@]}\n\
    \  local numsLengthMinusOne=$((numsLength-1))\n\n  while ((numsIndex < numsLengthMinusOne));\
    \ do\n    local sum=0\n    local numsIndexMinusOne=$((numsIndex+1))\n\n    while\
    \ ((numsIndexMinusOne < numsLengthMinusOne)); do\n      sum=$((sum + nums[numsIndexMinusOne]))\n\
    \      numsIndexMinusOne=$((numsIndexMinusOne + 1))\n    done\n\n    if ((sum\
    \ < minSum)); then\n      minSum=$sum\n      minSumIndex=$numsIndex\n    fi\n\n\
    \    numsIndex=$((numsIndex + 1))\n  done\n\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i j sum\n    local numsArray=($nums)\n    local minSumArray=($minSum)\n\
    \    local minSumIndex\n    local minSumIndexArray\n    local minSumArrayIndex\n\
    \    local minSumArrayIndexArray\n    local minSumArrayIndexArrayIndex\n    local\
    \ minSumArrayIndexArrayIndexArray\n    local minSumArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArray\n    local minSumArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArray\n    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n    local\
    \ minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArray\n   \
    \ local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n \
    \   local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArray\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArrayIndex\n\
    \    local minSumArrayIndexArrayIndexArrayIndexArrayIndexArrayIndexArray\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local num\n    for (( i=0; i<${#nums[@]};\
    \ i++ )); do\n        if [[ ${nums[$i]} -gt 0 ]]; then\n            num=${nums[$i]}\n\
    \            minSum=$(( minSum + num ))\n            minIndex=$(( minIndex + 1\
    \ ))\n        fi\n    done\n    echo \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo3ehduao.sh: line 17: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  for i in $(seq 0 $((${#nums[@]} - 1))); do\n    sum=$((sum\
    \ + ${nums[$i]}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfr9ba_qr.sh: line 16: sum + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local i\n  local j\n  local k\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n \
    \ local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local min\n  local max\n  local minIndex\n\
    \  local maxIndex\n  local minVal\n  local maxVal\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n  local\
    \ numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local\
    \ numsArrayLenSumMaxMin\n  local numsArrayLenSumMaxMinMin\n  local numsArrayLenSumMaxMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMin\n  local numsArrayLenSumMaxMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local sum=0\n    local numsLength=${#nums[@]}\n\
    \    for (( i=0; i<numsLength; i++ )); do\n        sum=$(( sum + nums[i] ))\n\
    \        if [ $sum -gt $minSum ]; then\n            minSum=$sum\n            minIndex=$i\n\
    \        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_xd1s70j.sh: line 18: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n\
    \  local numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumSum\n  local numsArrayLenSumSumMax\n  local numsArrayLenSumSumMin\n\
    \  local numsArrayLenSumSumSum\n  local numsArrayLenSumSumSumMax\n  local numsArrayLenSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSum\n  local numsArrayLenSumSumSumSumMax\n  local\
    \ numsArrayLenSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local num\n\
    \  local numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n\
    \  local numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumSum\n  local numsArrayLenSumSumMax\n  local numsArrayLenSumSumMin\n\
    \  local numsArrayLenSumSumSum\n  local numsArrayLenSumSumSumMax\n  local numsArrayLenSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSum\n  local numsArrayLenSumSumSumSumMax\n  local\
    \ numsArrayLenSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumSumMin\n  local numsArrayLen\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i sum\n    for ((i=0; i<${#nums[@]}; i++)); do\n  \
    \      sum=0\n        for ((j=0; j<${#nums[@]}; j++)); do\n            if [[ ${nums[$i]}\
    \ -eq ${nums[$j]} ]]; then\n                sum=$((sum + ${nums[$i]}))\n     \
    \       fi\n        done\n        if [[ ${sum} -gt ${minSum} ]]; then\n      \
    \      minSum=${sum}\n        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp81th5iwl.sh: line 18: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local len\n  local minlen\n \
    \ local minsum\n  local minsumlen\n  local minsumlen2\n  local minsumlen3\n  local\
    \ minsumlen4\n  local minsumlen5\n  local minsumlen6\n  local minsumlen7\n  local\
    \ minsumlen8\n  local minsumlen9\n  local minsumlen10\n  local minsumlen11\n \
    \ local minsumlen12\n  local minsumlen13\n  local minsumlen14\n  local minsumlen15\n\
    \  local minsumlen16\n  local minsumlen17\n  local minsumlen18\n  local minsumlen19\n\
    \  local minsumlen20\n  local minsumlen21\n  local minsumlen22\n  local minsumlen23\n\
    \  local minsumlen24\n  local minsumlen25\n  local minsumlen26\n  local minsumlen27\n\
    \  local minsumlen28\n  local minsumlen29\n  local minsumlen30\n  local minsumlen31\n\
    \  local minsumlen32\n  local minsumlen33\n  local minsumlen34\n  local minsumlen35\n\
    \  local minsumlen36\n  local minsumlen37\n  local minsumlen38\n  local minsumlen39\n\
    \  local minsumlen40\n  local minsumlen41\n  local minsumlen42\n  local minsumlen43\n\
    \  local minsumlen44\n  local minsumlen45\n  local minsumlen46\n  local minsumlen47\n\
    \  local minsumlen48\n  local minsumlen49\n  local minsumlen50\n  local minsumlen51\n\
    \  local minsumlen52\n  local minsumlen53\n  local minsumlen54\n  local minsumlen55\n\
    \  local minsumlen56\n  local minsumlen57\n  local minsumlen58\n  local minsumlen59\n\
    \  local minsumlen60\n  local minsumlen61\n  local minsumlen62\n  local minsumlen63\n\
    \  local minsumlen64\n  local minsumlen65\n  local minsumlen66\n  local minsumlen67\n\
    \  local min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local len\n\
    \  local minSum\n  local maxSum\n  local curSum\n  local curMax\n  local curMin\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n  local curMinSum\n\
    \  local curMaxSum\n  local curMinSum\n  local curMaxSum\n\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local minIndex\n\
    \    local minSum\n    local minSumIndex\n    local minSumIndex2\n    local minSumIndex3\n\
    \    local minSumIndex4\n    local minSumIndex5\n    local minSumIndex6\n    local\
    \ minSumIndex7\n    local minSumIndex8\n    local minSumIndex9\n    local minSumIndex10\n\
    \    local minSumIndex11\n    local minSumIndex12\n    local minSumIndex13\n \
    \   local minSumIndex14\n    local minSumIndex15\n    local minSumIndex16\n  \
    \  local minSumIndex17\n    local minSumIndex18\n    local minSumIndex19\n   \
    \ local minSumIndex20\n    local minSumIndex21\n    local minSumIndex22\n    local\
    \ minSumIndex23\n    local minSumIndex24\n    local minSumIndex25\n    local minSumIndex26\n\
    \    local minSumIndex27\n    local minSumIndex28\n    local minSumIndex29\n \
    \   local minSumIndex30\n    local minSumIndex31\n    local minSumIndex32\n  \
    \  local minSumIndex33\n    local minSumIndex34\n    local minSumIndex35\n   \
    \ local minSumIndex36\n    local minSumIndex37\n    local minSumIndex38\n    local\
    \ minSumIndex39\n    local minSumIndex40\n    local minSumIndex41\n    local minSumIndex42\n\
    \    local minSumIndex43\n    local minSumIndex44\n    local minSumIndex45\n \
    \   local minSumIndex46\n    local minSumIndex47\n    local minSumIndex48\n  \
    \  local minSumIndex49\n    local minSumIndex50\n    local minSumIndex51\n   \
    \ local minSumIndex52\n    local minSumIndex53\n    local minSumIndex54\n    local\
    \ minSumIndex55\n    local minSumIndex56\n    local minSumIndex57\n    local minSumIndex58\n\
    \    local minSumIndex59\n    local minSumIndex60\n    local minSumIndex61\n \
    \   local minSumIndex62\n    local minSumIndex63\n    local minSumIndex64\n  \
    \  local minSumIndex65\n    local minSumIndex66\n    local minSumIndex67\n   \
    \ local minSumIndex68\n\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n  local\
    \ minlen\n  local maxlen\n  local minsum\n  local maxsum\n  local mindiff\n  local\
    \ maxdiff\n  local mindiff2\n  local maxdiff2\n  local mindiff3\n  local maxdiff3\n\
    \  local mindiff4\n  local maxdiff4\n  local mindiff5\n  local maxdiff5\n  local\
    \ mindiff6\n  local maxdiff6\n  local mindiff7\n  local maxdiff7\n  local mindiff8\n\
    \  local maxdiff8\n  local mindiff9\n  local maxdiff9\n  local mindiff10\n  local\
    \ maxdiff10\n  local mindiff11\n  local maxdiff11\n  local mindiff12\n  local\
    \ maxdiff12\n  local mindiff13\n  local maxdiff13\n  local mindiff14\n  local\
    \ maxdiff14\n  local mindiff15\n  local maxdiff15\n  local mindiff16\n  local\
    \ maxdiff16\n  local mindiff17\n  local maxdiff17\n  local mindiff18\n  local\
    \ maxdiff18\n  local mindiff19\n  local maxdiff19\n  local mindiff20\n  local\
    \ maxdiff20\n  local mindiff21\n  local maxdiff21\n  local mindiff22\n  local\
    \ maxdiff22\n  local mindiff23\n  local maxdiff23\n  local mindiff24\n  local\
    \ maxdiff24\n  local mindiff25\n  local maxdiff25\n  local mindiff26\n  local\
    \ maxdiff26\n  local mindiff27\n  local maxdiff27\n  local mindiff28\n  local\
    \ maxdiff28\n  local mindiff29\n  local maxdiff29\n  local mindiff30\n  local\
    \ maxdiff30\n  local mindiff31\n  local maxdiff31\n  local mindiff32\n  local\
    \ maxdiff32\n  local mindiff33\n  local maxdiff33\n  local mindiff34\n  local\
    \ maxdiff34\n  local mindiff35\n  local maxdiff35\n  local mindiff36\n  local\
    \ maxdiff36\n  local mindiff37\n  local maxdiff37\n  local mindiff38\n  local\
    \ maxdiff38\n  local min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local numsCount=0\n    local minNum\n  \
    \  local minNumIndex\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local numsCount\n    local numsCount\n    local numsCount\n    local numsCount\n\
    \    local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local maxSum=0\n  local sum=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local\
    \ g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local\
    \ c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  \n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minValue\n    local maxValue\n\
    \    local minSum\n    local maxSum\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumValue\n    local maxSumValue\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumValue\n    local maxSumValue\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumValue\n    local maxSumValue\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumValue\n    local maxSumValue\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumValue\n    local\
    \ maxSumValue\n    local minSumIndex\n    local maxSumIndex\n    local minSumValue\n\
    \    local maxSumValue\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumValue\n    local maxSumValue\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumValue\n    local maxSumValue\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumValue\n    local maxSumValue\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumValue\n    local maxSumValue\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumValue\n    local maxSumValue\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumValue\n    local\
    \ maxSumValue\n    local minSumIndex\n    local maxSumIndex\n    local minSumValue\n\
    \    local maxSumValue\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumValue\n    local maxSumValue\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumValue\n    local maxSumValue\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumValue\n    local maxSumValue\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumValue\n    local maxSumValue\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumValue\n    local maxSumValue\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumValue\n    \n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local minIndex\n    local maxIndex\n\
    \    local minIndex2\n    local maxIndex2\n    local minIndex3\n    local maxIndex3\n\
    \    local minIndex4\n    local maxIndex4\n    local minIndex5\n    local maxIndex5\n\
    \    local minIndex6\n    local maxIndex6\n    local minIndex7\n    local maxIndex7\n\
    \    local minIndex8\n    local maxIndex8\n    local minIndex9\n    local maxIndex9\n\
    \    local minIndex10\n    local maxIndex10\n    local minIndex11\n    local maxIndex11\n\
    \    local minIndex12\n    local maxIndex12\n    local minIndex13\n    local maxIndex13\n\
    \    local minIndex14\n    local maxIndex14\n    local minIndex15\n    local maxIndex15\n\
    \    local minIndex16\n    local maxIndex16\n    local minIndex17\n    local maxIndex17\n\
    \    local minIndex18\n    local maxIndex18\n    local minIndex19\n    local maxIndex19\n\
    \    local minIndex20\n    local maxIndex20\n    local minIndex21\n    local maxIndex21\n\
    \    local minIndex22\n    local maxIndex22\n    local minIndex23\n    local maxIndex23\n\
    \    local minIndex24\n    local maxIndex24\n    local minIndex25\n    local maxIndex25\n\
    \    local minIndex26\n    local maxIndex26\n    local minIndex27\n    local maxIndex27\n\
    \    local minIndex28\n    local maxIndex28\n    local minIndex29\n    local maxIndex29\n\
    \    local minIndex30\n    local maxIndex30\n    local minIndex31\n    local maxIndex31\n\
    \    local minIndex32\n    local maxIndex32\n    local minIndex33\n    local maxIndex33\n\
    \    local minIndex34\n    local maxIndex34\n    local minIndex35\n    local maxIndex35\n\
    \    local minIndex36\n    local maxIndex36\n    local minIndex37\n    local maxIndex37\n\
    \    local minIndex38\n    local maxIndex38\n    local minIndex39\n    local maxIndex39\n\
    \    local minIndex\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local i\n  local j\n  local k\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n \
    \ local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  for i in $(seq 0 $((${#nums[@]} - 1))); do\n    sum=$((sum\
    \ + ${nums[$i]}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfr9ba_qr.sh: line 16: sum + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \n    len=${#nums[@]}\n    for ((i=0; i<len; i++)); do\n        sum=$((sum+nums[i]))\n\
    \    done\n    min=$((sum))\n    for ((j=0; j<len; j++)); do\n        for ((k=0;\
    \ k<j; k++)); do\n            if ((nums[k]<min)); then\n                min=$((nums[k]))\n\
    \            fi\n        done\n    done\n    echo \"$min\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpov61048j.sh: line 22: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local sum=0\n    local\
    \ numsArray=($nums)\n    local numsLength=${#numsArray[@]}\n    local i\n    local\
    \ j\n    local k\n    local sumOfMin\n    local minSumIndex\n    local minSumIndexLength\n\
    \    local minSumIndexLength2\n    local minSumIndexLength3\n    local minSumIndexLength4\n\
    \    local minSumIndexLength5\n    local minSumIndexLength6\n    local minSumIndexLength7\n\
    \    local minSumIndexLength8\n    local minSumIndexLength9\n    local minSumIndexLength10\n\
    \    local minSumIndexLength11\n    local minSumIndexLength12\n    local minSumIndexLength13\n\
    \    local minSumIndexLength14\n    local minSumIndexLength15\n    local minSumIndexLength16\n\
    \    local minSumIndexLength17\n    local minSumIndexLength18\n    local minSumIndexLength19\n\
    \    local minSumIndexLength20\n    local minSumIndexLength21\n    local minSumIndexLength22\n\
    \    local minSumIndexLength23\n    local minSumIndexLength24\n    local minSumIndexLength25\n\
    \    local minSumIndexLength26\n    local minSumIndexLength27\n    local minSumIndexLength28\n\
    \    local minSumIndexLength29\n    local minSumIndexLength30\n    local minSumIndexLength31\n\
    \    local minSumIndexLength32\n    local minSumIndexLength33\n    local minSumIndexLength34\n\
    \    local minSumIndexLength35\n    local minSumIndexLength36\n    local minSumIndexLength37\n\
    \    local minSumIndexLength38\n    local minSumIndexLength39\n    local minSumIndexLength40\n\
    \    local minSumIndexLength41\n    local minSumIndexLength42\n    local minSumIndexLength43\n\
    \    local minSumIndexLength44\n    local minSumIndexLength45\n    local minSumIndexLength46\n\
    \    local minSumIndexLength47\n    local minSumIndexLength48\n    local minSumIndexLength49\n\
    \    local minSumIndexLength50\n    local minSumIndexLength51\n    local minSumIndexLength52\n\
    \    local minSumIndexLength53\n    local minSumIndexLength54\n    local minSumIndex\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local num\n  local sum2\n  local\
    \ min2\n  local minSum\n  local numsArray\n  local numsArrayLen\n  local numsArrayLen2\n\
    \  local numsArrayLen3\n  local numsArrayLen4\n  local numsArrayLen5\n  local\
    \ numsArrayLen6\n  local numsArrayLen7\n  local numsArrayLen8\n  local numsArrayLen9\n\
    \  local numsArrayLen10\n  local numsArrayLen11\n  local numsArrayLen12\n  local\
    \ numsArrayLen13\n  local numsArrayLen14\n  local numsArrayLen15\n  local numsArrayLen16\n\
    \  local numsArrayLen17\n  local numsArrayLen18\n  local numsArrayLen19\n  local\
    \ numsArrayLen20\n  local numsArrayLen21\n  local numsArrayLen22\n  local numsArrayLen23\n\
    \  local numsArrayLen24\n  local numsArrayLen25\n  local numsArrayLen26\n  local\
    \ numsArrayLen27\n  local numsArrayLen28\n  local numsArrayLen29\n  local numsArrayLen30\n\
    \  local numsArrayLen31\n  local numsArrayLen32\n  local numsArrayLen33\n  local\
    \ numsArrayLen34\n  local numsArrayLen35\n  local numsArrayLen36\n  local numsArrayLen37\n\
    \  local numsArrayLen38\n  local numsArrayLen39\n  local numsArrayLen40\n  local\
    \ numsArrayLen41\n  local numsArrayLen42\n  local numsArrayLen43\n  local numsArrayLen44\n\
    \  local numsArrayLen45\n  local numsArrayLen46\n  local numsArrayLen47\n  local\
    \ numsArrayLen48\n  local numsArrayLen49\n  local numsArrayLen50\n  local numsArrayLen51\n\
    \  local numsArrayLen52\n  local numsArrayLen53\n  local numsArrayLen54\n  local\
    \ numsArrayLen55\n  local numsArrayLen56\n  local numsArrayLen57\n  local numsArray\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local i\n    local j\n    local sum\n  \
    \  local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenMax\n\
    \    local numsArrayLenMin\n    local numsArrayLenMaxMin\n    local numsArrayLenMaxMinMin\n\
    \    local numsArrayLenMaxMinMinMin\n    local numsArrayLenMaxMinMinMin\n    local\
    \ numsArrayLenMaxMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    local numsArrayLenMaxMinMinMinMin\n\
    \    local numsArrayLenMaxMinMinMinMin\n    \n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  for i in $(seq 0 $((${#nums[@]} - 1))); do\n    local j\n\
    \    for j in $(seq 0 $((${#nums[@]} - 1))); do\n      if [[ $((${nums[$i]} +\
    \ ${nums[$j]})) -gt 0 ]]; then\n        sum=$((${sum} + ${nums[$i]} + ${nums[$j]}))\n\
    \      fi\n    done\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphd4pywtp.sh: line 18: 2 3 4 1 2 4 + 2 3 4 1 2 4: syntax error in
    expression (error token is "3 4 1 2 4 + 2 3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local numsCount=0\n  local numsIndex=0\n  local numsLastIndex=0\n\
    \  local numsLastSum=0\n  local numsLastSumIndex=0\n  local numsLastSumIndexCount=0\n\
    \  local numsLastSumIndexCountMax=0\n  local numsLastSumIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCount=0\n  local numsLastSumIndexCountMaxIndexCountMax=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n  local numsLastSumIndexCountMaxIndexCountMaxIndex=0\n\
    \  local numsLast\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local maxSum=0\n  local sum=0\n  local\
    \ i\n\n  for i in \"${nums[@]}\"; do\n    sum=$((sum + i))\n  done\n\n  for i\
    \ in \"${nums[@]}\"; do\n    if [[ $((sum - i)) -gt $minSum ]]; then\n      minSum=$((sum\
    \ - i))\n      minIndex=$i\n    fi\n  done\n\n  for i in \"${nums[@]}\"; do\n\
    \    if [[ $((sum - i)) -lt $maxSum ]]; then\n      maxSum=$((sum - i))\n    \
    \  maxIndex=$i\n    fi\n  done\n\n  echo \"$minIndex\"\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0esmeapn.sh: line 21: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenMax\n\
    \    local numsArrayLenMin\n    local numsArrayLenSum\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \    local minlen\n    local minsum\n    local minsumlen\n    local minsumlen2\n\
    \    local minsumlen3\n    local minsumlen4\n    local minsumlen5\n    local minsumlen6\n\
    \    local minsumlen7\n    local minsumlen8\n    local minsumlen9\n    local minsumlen10\n\
    \    local minsumlen11\n    local minsumlen12\n    local minsumlen13\n    local\
    \ minsumlen14\n    local minsumlen15\n    local minsumlen16\n    local minsumlen17\n\
    \    local minsumlen18\n    local minsumlen19\n    local minsumlen20\n    local\
    \ minsumlen21\n    local minsumlen22\n    local minsumlen23\n    local minsumlen24\n\
    \    local minsumlen25\n    local minsumlen26\n    local minsumlen27\n    local\
    \ minsumlen28\n    local minsumlen29\n    local minsumlen30\n    local minsumlen31\n\
    \    local minsumlen32\n    local minsumlen33\n    local minsumlen34\n    local\
    \ minsumlen35\n    local minsumlen36\n    local minsumlen37\n    local minsumlen38\n\
    \    local minsumlen39\n    local minsumlen40\n    local minsumlen41\n    local\
    \ minsumlen42\n    local minsumlen43\n    local minsumlen44\n    local minsumlen45\n\
    \    local minsumlen46\n    local minsumlen47\n    local minsumlen48\n    local\
    \ minsumlen49\n    local minsumlen50\n    local minsumlen51\n    local minsumlen52\n\
    \    local minsumlen53\n    local minsumlen54\n    local minsumlen55\n    local\
    \ minsumlen56\n    local minsumlen57\n    local minsumlen58\n    local minsumlen59\n\
    \    local minsumlen60\n    local minsumlen61\n    local minsumlen62\n    local\
    \ minsumlen63\n    local minsumlen64\n    local minsumlen65\n    local minsumlen66\n\
    \    local minsumlen67\n    local min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=$(echo \"$nums\" | tr \" \" \"\\n\" | sort -n | head -n 1 | cut -d \" \"\
    \ -f 1)\n    for num in $(echo \"$nums\" | tr \" \" \"\\n\" | sort -n | tail -n\
    \ +2 | cut -d \" \" -f 1); do\n        sum=$((sum + num))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  \n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local numsLen=${#nums[@]}\n  local\
    \ numsSum=0\n  local numsSumIndex=0\n  local numsSumIndexMax=0\n  local numsSumIndexMin=0\n\
    \  local numsSumIndexMaxMin=0\n  local numsSumIndexMaxMinMin=0\n  local numsSumIndexMinMax=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMinMin=0\n\
    \  local numsSumIndexMinMaxMinMin=0\n  local numsSumIndexMinMaxMinMin=0\n  local\
    \ numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n\
    \  local numsSumIndexMinMaxMin=0\n  local numsSumIndexMinMaxMin=0\n  local \n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=$2\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n  \
    \  local numsCount=0\n    local minSumCount=0\n    local minSumIndex=0\n    local\
    \ minSumCountIndex=0\n    local minSumCountIndex2=0\n    local minSumCountIndex3=0\n\
    \    local minSumCountIndex4=0\n    local minSumCountIndex5=0\n    local minSumCountIndex6=0\n\
    \    local minSumCountIndex7=0\n    local minSumCountIndex8=0\n    local minSumCountIndex9=0\n\
    \    local minSumCountIndex10=0\n    local minSumCountIndex11=0\n    local minSumCountIndex12=0\n\
    \    local minSumCountIndex13=0\n    local minSumCountIndex14=0\n    local minSumCountIndex15=0\n\
    \    local minSumCountIndex16=0\n    local minSumCountIndex17=0\n    local minSumCountIndex18=0\n\
    \    local minSumCountIndex19=0\n    local minSumCountIndex20=0\n    local minSumCountIndex21=0\n\
    \    local minSumCountIndex22=0\n    local minSumCountIndex23=0\n    local minSumCountIndex24=0\n\
    \    local minSumCountIndex25=0\n    local minSumCountIndex26=0\n    local minSumCountIndex27=0\n\
    \    local minSumCountIndex28=0\n    local minSumCountIndex29=0\n    local minSumCountIndex30=0\n\
    \    local minSumCountIndex31=0\n    local minSumCountIndex32=0\n    local minSumCountIndex33=0\n\
    \    local minSumCountIndex34=0\n    local minSumCountIndex35=0\n    local minSumCountIndex36=0\n\
    \    local minSumCountIndex37=0\n    local minSumCountIndex38=0\n    local minSumCountIndex39=0\n\
    \    local minSumCountIndex40=0\n    local minSumCountIndex41=0\n    local minSumCountIndex42=0\n\
    \    local minSumCountIndex43=0\n    local minSumCountIndex44=0\n    local minSumCountIndex45=0\n\
    \    local minSumCountIndex46=0\n    local minSumCountIndex47=0\n    local minSumCountIndex48=0\n\
    \    local minSumCountIndex49=0\n    local minSumCountIndex50=0\n    local minSumCountIndex51=0\n\
    \    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local sum=0\n    local\
    \ i\n    local j\n    local k\n    local num\n    local min\n    local max\n \
    \   local sumOfMin\n    local sumOfMax\n    local sumOfMinOfMax\n    local sumOfMinOfMin\n\
    \    local sumOfMaxOfMax\n    local sumOfMinOfMaxOfMax\n    local sumOfMaxOfMinOfMax\n\
    \    local sumOfMaxOfMaxOfMin\n    local sumOfMaxOfMinOfMin\n    local sumOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMin\n    local sumOfMaxOfMaxOfMinOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMin\n    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n    local\
    \ sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMin\n\
    \    local sumOfMax\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local i sum\n    local num\n    for ((i=0; i<${#nums[@]}; i++));\
    \ do\n        sum=0\n        for ((j=0; j<${#nums[@]}; j++)); do\n           \
    \ if ((j<i)) ; then\n                sum=$((sum+nums[$j]))\n            else\n\
    \                sum=$((sum+nums[$j]))\n            fi\n        done\n       \
    \ if ((sum<minSum)) ; then\n            minSum=$sum\n        fi\n    done\n  \
    \  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuqvpv0ks.sh: line 22: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local n\n  local max\n  local\
    \ minIndex\n  local maxIndex\n  local minVal\n  local maxVal\n  local minSum\n\
    \  local maxSum\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local minSumVal\n\
    \  local maxSumVal\n  local minSumIndex\n  local maxSumIndex\n  local min\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local num\n    local numsArray\n    local sumArray\n    local minArray\n\
    \    local maxArray\n    local minArraySum\n    local maxArraySum\n    local minArraySumArray\n\
    \    local maxArraySumArray\n    local minArraySumArrayLength\n    local maxArraySumArrayLength\n\
    \    local minArraySumArrayLength2\n    local maxArraySumArrayLength2\n    local\
    \ minArraySumArrayLength3\n    local maxArraySumArrayLength3\n    local minArraySumArrayLength4\n\
    \    local maxArraySumArrayLength4\n    local minArraySumArrayLength5\n    local\
    \ maxArraySumArrayLength5\n    local minArraySumArrayLength6\n    local maxArraySumArrayLength6\n\
    \    local minArraySumArrayLength7\n    local maxArraySumArrayLength7\n    local\
    \ minArraySumArrayLength8\n    local maxArraySumArrayLength8\n    local minArraySumArrayLength9\n\
    \    local maxArraySumArrayLength9\n    local minArraySumArrayLength10\n    local\
    \ maxArraySumArrayLength10\n    local minArraySumArrayLength11\n    local maxArraySumArrayLength11\n\
    \    local minArraySumArrayLength12\n    local maxArraySumArrayLength12\n    local\
    \ minArraySumArrayLength13\n    local maxArraySumArrayLength13\n    local minArraySumArrayLength14\n\
    \    local maxArraySumArrayLength14\n    local minArraySumArrayLength15\n    local\
    \ maxArraySumArrayLength15\n    local minArraySumArrayLength16\n    local maxArraySumArrayLength16\n\
    \    local minArraySumArrayLength17\n    local maxArraySumArrayLength17\n    local\
    \ minArraySumArrayLength18\n    local maxArraySumArrayLength18\n    local minArraySumArrayLength19\n\
    \    local maxArraySumArrayLength19\n    local minArraySumArrayLength20\n    local\
    \ maxArraySumArrayLength20\n    local minArraySumArrayLength21\n    local maxArraySumArrayLength21\n\
    \    local minArraySumArrayLength22\n    local maxArraySumArrayLength22\n    local\
    \ minArraySumArrayLength23\n    local maxArraySumArrayLength23\n    local minArraySumArrayLength24\n\
    \    local maxArraySumArrayLength\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local len\n    local num\n    local numsArray\n    local numsArrayLen\n \
    \   local numsArrayLenMax\n    local numsArrayLenMin\n    local numsArrayLenSum\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMaxMin\n\
    \    local numsArrayLenSumMaxMinMax\n    local numsArrayLenSumMaxMinMaxMin\n \
    \   local numsArrayLenSumMaxMinMaxMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \    local numsArrayLenSumMaxMinMaxMinMinMinMinMinMin\n    local numsArrayLenSumMaxMinMaxMinMinMinMinMin\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n\
    \  local numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local min\n  local max\n  local num\n  local numsArray\n\
    \  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n  local\
    \ numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n  local\
    \ numsArrayLenSumSum\n  local numsArrayLenSumSumMax\n  local numsArrayLenSumSumMin\n\
    \  local numsArrayLenSumSumSum\n  local numsArrayLenSumSumSumMax\n  local numsArrayLenSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSum\n  local numsArrayLenSumSumSumSumMax\n  local\
    \ numsArrayLenSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMax\n  local numsArrayLenSumSumSumSumSumSumSumSumMin\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumSum\n  local numsArrayLenSumSumSumSumSumSumSumSumSumMax\n\
    \  local numsArrayLenSumSumSumSumSumSumSumSumMin\n  local numsArrayLenSumSumSumSumSumSumSumSumSum\n\
    \  local numsArrayLenSumSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minVal=0\n    local i\n    local j\n\
    \    local sum\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=0\n   \
    \     for ((j=0; j<${#nums[@]}; j++)); do\n            sum=$((sum+nums[j]))\n\
    \        done\n        if ((sum < minVal)); then\n            minVal=sum\n   \
    \         minIndex=$i\n        fi\n    done\n    echo \"${minIndex}\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4suf9vhn.sh: line 23: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n\
    \  local sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local\
    \ sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n\
    \  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n \
    \ local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local\
    \ sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n\
    \  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n \
    \ local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local\
    \ sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n\
    \  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n \
    \ local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local\
    \ sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n\
    \  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n \
    \ local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local\
    \ sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n\
    \  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n \
    \ local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local\
    \ sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n\
    \  local sum92\n  local sum93\n  local sum94\n  local sum95\n  \n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local \n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ minSum=\"$2\"\n  local i sum\n  local numsArray=(${nums//[[:space:]]/})\n  for\
    \ ((i=0; i<${#numsArray[@]}; i++)); do\n    sum=0\n    for ((j=0; j<${#numsArray[@]};\
    \ j++)); do\n      if [[ ${numsArray[j]} -gt ${numsArray[i]} ]]; then\n      \
    \  sum=$((sum+numsArray[j]))\n      fi\n    done\n    if [[ ${sum} -lt ${minSum}\
    \ ]]; then\n      minSum=${sum}\n    fi\n  done\n  echo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local num\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local\
    \ i\n    local j\n    local k\n    local sumOfMin\n    local sumOfMax\n    local\
    \ minOfMax\n    local minOfMin\n    local maxOfMin\n    local maxOfMax\n    local\
    \ minIndexOfMax\n    local maxIndexOfMax\n    local minIndexOfMin\n    local maxIndexOfMin\n\
    \    local minSumOfMin\n    local maxSumOfMin\n    local minSumOfMax\n    local\
    \ maxSumOfMax\n    local minOfMaxOfMax\n    local maxOfMaxOfMax\n    local minOfMinOfMin\n\
    \    local maxOfMinOfMin\n    local minOfMaxOfMin\n    local maxOfMaxOfMin\n \
    \   local minOfMinOfMax\n    local maxOfMinOfMax\n    local minOfMaxOfMax\n  \
    \  local maxOfMaxOfMax\n    local minOfMinOfMin\n    local maxOfMinOfMin\n   \
    \ local minOfMaxOfMin\n    local maxOfMaxOfMin\n    local minOfMinOfMax\n    local\
    \ maxOfMinOfMax\n    local maxOfMaxOfMax\n    local minOfMinOfMin\n    local maxOfMinOfMin\n\
    \    local minOfMaxOfMin\n    local maxOfMaxOfMin\n    local minOfMinOfMax\n \
    \   local maxOfMinOfMax\n    local maxOfMaxOfMax\n    local minOfMinOfMin\n  \
    \  local maxOfMinOfMin\n    local minOfMaxOfMin\n    local maxOfMaxOfMin\n   \
    \ local minOfMinOfMax\n    local maxOfMinOfMax\n    local maxOfMaxOfMax\n    local\
    \ minOfMinOfMin\n    local maxOfMinOfMin\n    local minOfMaxOfMin\n    local maxOfMaxOfMin\n\
    \    local maxOfMaxOfMax\n    local minOfMinOfMin\n    local maxOfMinOfMin\n \
    \   local minOfMaxOfMin\n    local maxOfMaxOfMin\n    local maxOfMaxOfMax\n  \
    \  local minOfMinOfMin\n    local maxOfMinOfMin\n    local minOfMaxOfMin\n   \
    \ local maxOfMaxOfMin\n    local maxOfMaxOfMax\n    local minOfMinOfMin\n    local\
    \ max\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local currentSum=0\n\
    \    local currentIndex=0\n    local currentMax=0\n    local currentMin=0\n  \
    \  local currentMinIndex=0\n    local currentMaxIndex=0\n    local numsLength=${#nums[@]}\n\
    \    for (( i=0; i<numsLength; i++ )); do\n        currentSum=0\n        currentIndex=0\n\
    \        currentMax=0\n        currentMin=0\n        currentMinIndex=0\n     \
    \   currentMaxIndex=0\n        for (( j=0; j<numsLength; j++ )); do\n        \
    \    if [ $j -eq $i ]; then\n                currentSum=$(( currentSum + nums[$j]\
    \ ))\n                currentIndex=$(( currentIndex + 1 ))\n                if\
    \ [ $currentIndex -gt $currentMax ]; then\n                    currentMax=$currentIndex\n\
    \                    currentMaxIndex=$j\n                fi\n                if\
    \ [ $currentIndex -gt $currentMin ]; then\n                    currentMin=$currentIndex\n\
    \                    currentMinIndex=$j\n                fi\n            else\n\
    \                currentSum=$(( currentSum - nums[$j] ))\n                currentIndex=$((\
    \ currentIndex - 1 ))\n                if [ $currentIndex -gt $currentMax ]; then\n\
    \                    currentMax=$currentIndex\n                    currentMaxIndex=$j\n\
    \                fi\n                if [ $currentIndex -gt $currentMin ]; then\n\
    \                    currentMin=$currentIndex\n                    currentMinIndex=$j\n\
    \                fi\n            fi\n        done\n        if [ $currentMin -gt\
    \ $minSum ]; then\n            minSum=$currentMin\n            minIndex=$currentMinIndex\n\
    \        fi\n        if [ $currentMax -gt $maxSum ]; then\n            maxSum=$currentMax\n\
    \            maxIndex=$currentMaxIndex\n        fi\n    done\n    echo \"$minSum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzpdcy4jg.sh: line 32: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local min\n  local max\n  local minIndex\n  local maxIndex\n\
    \  local num\n  local numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n\
    \  local numsArrayLenMin\n  local numsArrayLenSum\n  local numsArrayLenSumMax\n\
    \  local numsArrayLenSumMin\n  local numsArrayLenSumMaxMin\n  local numsArrayLenSumMaxMinMin\n\
    \  local numsArrayLenSumMaxMinMinMin\n  local numsArrayLenSumMaxMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMin\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local n\n    local m\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min=0\n  local max=0\n  local i\n  local j\n  local k\n  local num\n\
    \  local sum2\n  local min2\n  local max2\n  local min3\n  local max3\n  local\
    \ min4\n  local max4\n  local min5\n  local max5\n  local min6\n  local max6\n\
    \  local min7\n  local max7\n  local min8\n  local max8\n  local min9\n  local\
    \ max9\n  local min10\n  local max10\n  local min11\n  local max11\n  local min12\n\
    \  local max12\n  local min13\n  local max13\n  local min14\n  local max14\n \
    \ local min15\n  local max15\n  local min16\n  local max16\n  local min17\n  local\
    \ max17\n  local min18\n  local max18\n  local min19\n  local max19\n  local min20\n\
    \  local max20\n  local min21\n  local max21\n  local min22\n  local max22\n \
    \ local min23\n  local max23\n  local min24\n  local max24\n  local min25\n  local\
    \ max25\n  local min26\n  local max26\n  local min27\n  local max27\n  local min28\n\
    \  local max28\n  local min29\n  local max29\n  local min30\n  local max30\n \
    \ local min31\n  local max31\n  local min32\n  local max32\n  local min33\n  local\
    \ max33\n  local min34\n  local max34\n  local min35\n  local max35\n  local min36\n\
    \  local max36\n  local min37\n  local max37\n  local min38\n  local max38\n \
    \ local min39\n  local max39\n  local min40\n  local max40\n  local min41\n  local\
    \ max41\n  local min42\n  local max42\n  local min43\n  local max43\n  local min44\n\
    \  local max44\n  local min45\n  local max45\n  local min46\n  local max46\n \
    \ local min47\n  local max47\n  local min48\n  local max48\n\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local len\n  local num\n  local\
    \ tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n\
    \  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local\
    \ tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n\
    \  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n \
    \ local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local\
    \ tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n\
    \  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n \
    \ local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local\
    \ tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n\
    \  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n \
    \ local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local\
    \ tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n\
    \  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n \
    \ local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local\
    \ tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n\
    \  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n \
    \ local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local\
    \ tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local\
    \ maxSum=0\n    local maxSumIndex=0\n    local minIndexCount=0\n    local maxIndexCount=0\n\
    \    local maxSumCount=0\n    local minSumCount=0\n    local minIndexCountMax=0\n\
    \    local maxIndexCountMax=0\n    local maxSumCountMax=0\n    local minSumCountMax=0\n\
    \    local minIndexCountMin=0\n    local maxIndexCountMin=0\n    local maxSumCountMin=0\n\
    \    local minSumCountMin=0\n    local minIndexCountMinMax=0\n    local maxIndexCountMinMax=0\n\
    \    local maxSumCountMinMax=0\n    local minSumCountMinMax=0\n    local minIndexCountMinMaxMin=0\n\
    \    local maxIndexCountMinMaxMin=0\n    local maxSumCountMinMaxMin=0\n    local\
    \ minSumCountMinMaxMin=0\n    local minIndexCountMinMaxMinMax=0\n    local maxIndexCountMinMaxMinMax=0\n\
    \    local maxSumCountMinMaxMinMax=0\n    local minSumCountMinMaxMinMax=0\n  \
    \  local minIndexCountMinMaxMinMaxMin=0\n    local maxIndexCountMinMaxMinMaxMin=0\n\
    \    local maxSumCountMinMaxMinMaxMin=0\n    local minSumCountMinMaxMinMaxMin=0\n\
    \    local minIndexCountMinMaxMinMaxMinMax=0\n    local maxIndexCountMinMaxMinMaxMinMax=0\n\
    \    local maxSumCountMinMaxMinMaxMinMax=0\n    local minSumCountMinMaxMinMaxMinMax=0\n\
    \    local minIndexCountMinMaxMinMaxMinMaxMin=0\n    local maxIndexCountMinMaxMinMaxMinMaxMin=0\n\
    \    local maxSumCountMinMaxMinMaxMinMaxMin=0\n    local minSumCountMinMaxMinMaxMinMaxMin=0\n\
    \    local minIndexCountMinMaxMinMaxMinMaxMinMax=0\n    local maxIndexCountMinMaxMinMaxMinMaxMinMax=0\n\
    \    local maxSumCountMinMaxMinMaxMinMaxMinMax=0\n    local minSumCountMinMaxMinMaxMinMaxMinMax=0\n\
    \    local minIndexCountMinMaxMinMaxMinMaxMinMaxMin=0\n    local maxIndexCountMinMaxMinMaxMinMaxMinMaxMin=0\n\
    \    local maxSumCountMinMaxMinMaxMin\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local len\n\
    \    local minLen\n    local minSum\n    local minSumIndex\n    local minSumIndex2\n\
    \    local minSumIndex3\n    local minSumIndex4\n    local minSumIndex5\n    local\
    \ minSumIndex6\n    local minSumIndex7\n    local minSumIndex8\n    local minSumIndex9\n\
    \    local minSumIndex10\n    local minSumIndex11\n    local minSumIndex12\n \
    \   local minSumIndex13\n    local minSumIndex14\n    local minSumIndex15\n  \
    \  local minSumIndex16\n    local minSumIndex17\n    local minSumIndex18\n   \
    \ local minSumIndex19\n    local minSumIndex20\n    local minSumIndex21\n    local\
    \ minSumIndex22\n    local minSumIndex23\n    local minSumIndex24\n    local minSumIndex25\n\
    \    local minSumIndex26\n    local minSumIndex27\n    local minSumIndex28\n \
    \   local minSumIndex29\n    local minSumIndex30\n    local minSumIndex31\n  \
    \  local minSumIndex32\n    local minSumIndex33\n    local minSumIndex34\n   \
    \ local minSumIndex35\n    local minSumIndex36\n    local minSumIndex37\n    local\
    \ minSumIndex38\n    local minSumIndex39\n    local minSumIndex40\n    local minSumIndex41\n\
    \    local minSumIndex42\n    local minSumIndex43\n    local minSumIndex44\n \
    \   local minSumIndex45\n    local minSumIndex46\n    local minSumIndex47\n  \
    \  local minSumIndex48\n    local minSumIndex49\n    local minSumIndex50\n   \
    \ local minSumIndex51\n    local minSumIndex52\n    local minSumIndex53\n    local\
    \ minSumIndex54\n    local minSumIndex55\n    local minSumIndex56\n    local minSumIndex57\n\
    \    local minSumIndex58\n    local minSumIndex59\n    local minSumIndex60\n \
    \   local minSumIndex61\n    local minSumIndex62\n    local minSumIndex63\n  \
    \  local minSumIndex64\n    local minSumIndex65\n    local minSumIndex66\n   \
    \ local minSumIndex67\n    local min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local num\n    local i\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        num=\"${nums[$i]}\"\n        if (( num == 0 )); then\n  \
    \          minSum=$((minSum+num))\n            minIndex=$i\n        elif (( num\
    \ > 0 )); then\n            minSum=$((minSum+num))\n            minIndex=$i\n\
    \        elif (( num < 0 )); then\n            minSum=$((minSum-num))\n      \
    \      minIndex=$((i-1))\n        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp1rvyixn.sh: line 19: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmpp1rvyixn.sh: line 22: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmpp1rvyixn.sh: line 25: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minSumIndex=0\n    local numsLength=${#nums[@]}\n    local\
    \ i\n    local j\n    local sum\n    local sumIndex\n    local numsLength\n  \
    \  local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minSumIndex=0\n  local numsLength=${#nums[@]}\n  local numsIndex=0\n\
    \  local numsSum=0\n  local numsSumIndex=0\n\n  while [ $numsIndex -le $numsLength\
    \ ]; do\n    local numsSum=${nums[$numsIndex]}\n    local numsSumIndex=$numsIndex\n\
    \    while [ $numsSumIndex -le $numsLength ]; do\n      local numsSum=${nums[$numsSumIndex]}\n\
    \      local numsSumIndex=$numsSumIndex\n      local numsSum=$((numsSum + numsSum))\n\
    \    done\n    local numsSum=${nums[$numsSumIndex]}\n    local numsSumIndex=$numsSumIndex\n\
    \    local numsSum=$((numsSum + numsSum))\n    if [ $numsSum -gt $minSum ]; then\n\
    \      minSum=$numsSum\n      minSumIndex=$numsIndex\n    fi\n    numsIndex=$((numsIndex\
    \ + 1))\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdbnx0ptd.sh: line 26: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  \n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local len\n    local minSum\n\n    len=${#nums[@]}\n    for (( i=0; i<len;\
    \ i++ )); do\n        sum=0\n        for (( j=0; j<i; j++ )); do\n           \
    \ sum=$(( sum + nums[j] ))\n        done\n        if (( sum < min )); then\n \
    \           min=sum\n        fi\n        if (( sum > max )); then\n          \
    \  max=sum\n        fi\n    done\n\n    minSum=$(( min + max ))\n    echo \"$minSum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  for i in $(seq 0 $((${#nums[@]} - 1))); do\n    local j\n\
    \    for j in $(seq 0 $((${#nums[@]} - 1))); do\n      if [[ ${nums[$i]} -eq ${nums[$j]}\
    \ ]]; then\n        sum=$((sum + ${nums[$i]}))\n      fi\n    done\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuu38d0v9.sh: line 18: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local min\n  local minIndex\n  local minSum\n\
    \  local minSumIndex\n  local minSumIndex2\n  local minSumIndex3\n  local minSumIndex4\n\
    \  local minSumIndex5\n  local minSumIndex6\n  local minSumIndex7\n  local minSumIndex8\n\
    \  local minSumIndex9\n  local minSumIndex10\n  local minSumIndex11\n  local minSumIndex12\n\
    \  local minSumIndex13\n  local minSumIndex14\n  local minSumIndex15\n  local\
    \ minSumIndex16\n  local minSumIndex17\n  local minSumIndex18\n  local minSumIndex19\n\
    \  local minSumIndex20\n  local minSumIndex21\n  local minSumIndex22\n  local\
    \ minSumIndex23\n  local minSumIndex24\n  local minSumIndex25\n  local minSumIndex26\n\
    \  local minSumIndex27\n  local minSumIndex28\n  local minSumIndex29\n  local\
    \ minSumIndex30\n  local minSumIndex31\n  local minSumIndex32\n  local minSumIndex33\n\
    \  local minSumIndex34\n  local minSumIndex35\n  local minSumIndex36\n  local\
    \ minSumIndex37\n  local minSumIndex38\n  local minSumIndex39\n  local minSumIndex40\n\
    \  local minSumIndex41\n  local minSumIndex42\n  local minSumIndex43\n  local\
    \ minSumIndex44\n  local minSumIndex45\n  local minSumIndex46\n  local minSumIndex47\n\
    \  local minSumIndex48\n  local minSumIndex49\n  local minSumIndex50\n  local\
    \ minSumIndex51\n  local minSumIndex52\n  local minSumIndex53\n  local minSumIndex54\n\
    \  local minSumIndex55\n  local minSumIndex56\n  local minSumIndex57\n  local\
    \ minSumIndex58\n  local minSumIndex59\n  local minSumIndex60\n  local minSumIndex61\n\
    \  local minSumIndex62\n  local minSumIndex63\n  local minSumIndex64\n  local\
    \ minSumIndex65\n  local minSumIndex66\n  local minSumIndex67\n  local minSumIndex68\n\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenLen\n  local numsArrayLenLenLen\n\
    \  local numsArrayLenLenLenLen\n  local numsArrayLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n \
    \ local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046952
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n\
    \    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local minSum=0\n    local minNum\n    local minIndex\n    local numsLength\n\
    \    local i\n    local j\n    local k\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    \    local numsLength\n    local numsLength\n    local numsLength\n    local numsLength\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local maxSum=0\n  local sum=0\n  local\
    \ i\n\n  for i in ${nums[@]}; do\n    sum=$(( sum + i ))\n  done\n\n  for i in\
    \ ${nums[@]}; do\n    if [ $i -gt 0 ]; then\n      minSum=$(( minSum + sum ))\n\
    \      minIndex=$(( minIndex + 1 ))\n    fi\n  done\n\n  for i in ${nums[@]};\
    \ do\n    if [ $i -lt 0 ]; then\n      maxSum=$(( maxSum + sum ))\n      maxIndex=$((\
    \ maxIndex + 1 ))\n    fi\n  done\n\n  minSum=$(( minSum + sum ))\n  minIndex=$((\
    \ minIndex + 1 ))\n\n  if [ $minIndex -eq $maxIndex ]; then\n    return $minSum\n\
    \  fi\n\n  local min=$minSum\n  local max=$maxSum\n\n  for i in ${nums[@]}; do\n\
    \    if [ $i -gt 0 ]; then\n      min=$(( min + sum ))\n    fi\n  done\n\n  for\
    \ i in ${nums[@]}; do\n    if [ $i -lt 0 ]; then\n      max=$(( max + sum ))\n\
    \    fi\n  done\n\n  local diff=$(( max - min ))\n\n  if [ $diff -eq 0 ]; then\n\
    \    return $min\n  fi\n\n  local mid=$(( min + diff / 2 ))\n\n  for i in ${nums[@]};\
    \ do\n    if [ $i -gt $mid ]; then\n      min=$(( min + sum ))\n    fi\n  done\n\
    \n  for i in ${nums[@]}; do\n    if [ $i -lt $mid ]; then\n      max=$(( max +\
    \ sum ))\n    fi\n  done\n\n  local diff=$(( max - min ))\n\n  if [ $diff -eq\
    \ 0 ]; then\n    return $min\n  fi\n\n  local mid=$(( min + diff / 2 ))\n\n  for\
    \ i in ${nums[@]}; do\n    if [ $i -gt $mid ]; then\n      min=$(( min + sum ))\n\
    \    fi\n  done\n\n  for i in ${nums[@]}; do\n    if [ $i -lt $mid ]; then\n \
    \     max=$(( max + sum ))\n    fi\n  done\n\n  local diff=$(( max - min ))\n\n\
    \  if [ $diff -eq\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5amder2b.sh: line 103: syntax error near unexpected token `}''

    /tmp/tmp5amder2b.sh: line 103: `}''

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local min\n  local max\n  local cur\n  local tmp\n  local\
    \ num\n  local len\n\n  num=${nums[*]}\n  len=${#nums[@]}\n\n  for ((i=0; i<len;\
    \ i++)); do\n    sum=$((sum+num))\n  done\n\n  min=$((sum))\n  max=$((sum))\n\n\
    \  for ((i=0; i<len; i++)); do\n    cur=${nums[$i]}\n    for ((j=0; j<i; j++));\
    \ do\n      tmp=${nums[$j]}\n      if ((cur < tmp)); then\n        ((min=min))\n\
    \        break\n      fi\n    done\n  done\n\n  ((min=min))\n\n  for ((i=0; i<len;\
    \ i++)); do\n    cur=${nums[$i]}\n    for ((j=i+1; j<len; j++)); do\n      tmp=${nums[$j]}\n\
    \      if ((cur < tmp)); then\n        ((min=min))\n        break\n      fi\n\
    \    done\n  done\n\n  ((min=min))\n\n  for ((i=0; i<len; i++)); do\n    cur=${nums[$i]}\n\
    \    for ((j=i+1; j<len; j++)); do\n      tmp=${nums[$j]}\n      if ((cur < tmp));\
    \ then\n        ((min=min))\n        break\n      fi\n    done\n  done\n\n  ((min=min))\n\
    \n  for ((i=0; i<len; i++)); do\n    cur=${nums[$i]}\n    for ((j=i+1; j<len;\
    \ j++)); do\n      tmp=${nums[$j]}\n      if ((cur < tmp)); then\n        ((min=min))\n\
    \        break\n      fi\n    done\n  done\n\n  ((min=min))\n\n  for ((i=0; i<len;\
    \ i++)); do\n    cur=${nums[$i]}\n    for ((j=i+1; j<len; j++)); do\n      tmp=${nums[$j]}\n\
    \      if ((cur < tmp)); then\n        ((min=min))\n        break\n      fi\n\
    \    done\n  done\n\n  ((min=min))\n\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzjsn8g42.sh: line 27: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local maxSum=0\n  local sum=0\n  local\
    \ i\n  local j\n  local k\n  local sumOfCurrentSubArray\n  local sumOfCurrentSubArrayIndex\n\
    \  local currentSum\n  local currentSumIndex\n  local currentSumOfCurrentSubArray\n\
    \  local currentSumOfCurrentSubArrayIndex\n  local currentMaxSum\n  local currentMaxSumIndex\n\
    \  local currentMaxSumOfCurrentSubArray\n  local currentMaxSumOfCurrentSubArrayIndex\n\
    \  local currentMinSum\n  local currentMinSumIndex\n  local currentMinSumOfCurrentSubArray\n\
    \  local currentMinSumOfCurrentSubArrayIndex\n  local currentIndex\n  local currentMaxIndex\n\
    \  local currentMinIndex\n  local currentMaxSum\n  local currentMinSum\n  local\
    \ currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n\
    \  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local\
    \ currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n\
    \  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local\
    \ currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n\
    \  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local\
    \ currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n\
    \  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local\
    \ currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n\
    \  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local\
    \ currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n\
    \  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local\
    \ currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n\
    \  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n  local\
    \ currentMinSum\n  local currentMaxIndex\n  local currentMinSum\n  local currentMaxIndex\n\
    \  local current\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local len\n\n  len=${#nums[@]}\n\
    \  for i in $(seq 0 $((len-1))); do\n    sum=$((sum+nums[i]))\n  done\n  min=$((sum))\n\
    \  for i in $(seq 0 $((len-1))); do\n    for j in $(seq 0 $((len-1))); do\n  \
    \    if ((nums[i]>nums[j])); then\n        sum=$((sum+nums[j]))\n      fi\n  \
    \  done\n    if ((sum<min)); then\n      min=$((sum))\n    fi\n    sum=0\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbawbhom2.sh: line 22: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  local j\n  local k\n  local min\n  local max\n  local sumOfMin\n\
    \  local sumOfMax\n  local minOfMax\n  local minOfMin\n  local maxOfMin\n  local\
    \ maxOfMax\n  local minOfSum\n  local maxOfSum\n  local minOfSumOfMax\n  local\
    \ maxOfSumOfMax\n  local minOfSumOfMin\n  local maxOfSumOfMin\n  local minOfSumOfMaxOfMin\n\
    \  local maxOfSumOfMaxOfMin\n  local minOfSumOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMax\n\
    \  local minOfSumOfMinOfMaxOfMinOfMax\n  local maxOfSumOfMaxOfMinOfMaxOfMin\n\
    \  local minOfSumOfMinOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local minOfSumOfMinOfMaxOfMinOfMaxOfMinOfMax\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local minOfSumOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n\
    \  local minOfSumOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMax\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local minOfSumOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local minOfSumOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local\
    \ maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n  local\
    \ minOfSumOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local maxOfSumOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMinOfMaxOfMin\n\
    \  local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local maxIndex=0\n  local sum=0\n  local i\n\n  for ((i=0;\
    \ i<${#nums[@]}; i++)); do\n    sum=$((${sum}+${nums[$i]}))\n    if ((${sum} <\
    \ ${minSum})); then\n      minSum=${sum}\n      minIndex=$i\n    fi\n    if ((${sum}\
    \ > ${maxSum})); then\n      maxSum=${sum}\n      maxIndex=$i\n    fi\n  done\n\
    \n  echo \"${nums[$minIndex]}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdhm0k_4s.sh: line 20: 0+2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minSumIndex=0\n  local numsLength=${#nums[@]}\n  local numsLengthMinusOne=$((numsLength\
    \ - 1))\n  local numsLengthMinusOneMinusOne=$((numsLengthMinusOne - 1))\n  local\
    \ numsLengthMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOne - 1))\n  local\
    \ numsLengthMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1))\n  local numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne=$((numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinus\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmpif3_s7.sh: line 26: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmpif3_s7.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n\
    \  local minlen\n  local maxlen\n  local minsum\n  local maxsum\n  local minmax\n\
    \  local maxmin\n  local minmaxlen\n  local maxminlen\n  local minmaxsum\n  local\
    \ maxminsum\n  local minmaxmax\n  local maxminmax\n  local minmaxmaxlen\n  local\
    \ maxminmaxlen\n  local minmaxmaxsum\n  local maxminmaxsum\n  local minmaxmaxmax\n\
    \  local maxminmaxmaxlen\n  local maxminmaxmaxlen\n  local minmaxmaxmaxsum\n \
    \ local maxminmaxmaxsum\n  local minmaxmaxmaxmax\n  local maxminmaxmaxmaxlen\n\
    \  local maxminmaxmaxmaxlen\n  local minmaxmaxmaxmaxsum\n  local maxminmaxmaxmaxsum\n\
    \  local minmaxmaxmaxmaxmax\n  local maxminmaxmaxmaxmaxlen\n  local maxminmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxmaxsum\n  local maxminmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxmaxmax\n\
    \  local maxminmaxmaxmaxmaxlen\n  local maxminmaxmaxmaxmaxlen\n  local minmaxmaxmaxmaxmaxsum\n\
    \  local maxminmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxmaxmax\n  local maxminmaxmaxmaxmaxlen\n\
    \  local maxminmaxmaxmaxmaxlen\n  local minmaxmaxmaxmaxmaxsum\n  local maxminmaxmaxmaxmaxsum\n\
    \  local minmaxmaxmaxmaxmaxmax\n  local maxminmaxmaxmaxmaxlen\n  local maxminmaxmaxmaxmaxlen\n\
    \  local minmaxmaxmaxmaxmaxsum\n  local maxminmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxmaxmax\n\
    \  local maxminmaxmaxmaxmaxlen\n  local maxminmaxmaxmaxmaxlen\n  local minmaxmaxmaxmaxmaxsum\n\
    \  local maxminmaxmaxmaxmaxsum\n  local minmaxmaxmaxmaxmaxmax\n  local maxminmaxmaxmaxmaxlen\n\
    \  local maxminmaxmaxmaxmaxlen\n  local minmaxmaxmaxmaxmaxsum\n  local maxminmaxmaxmaxmaxsum\n\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local num\n    for (( i=0; i<${#nums[@]};\
    \ i++ )); do\n        if [[ ${nums[$i]} == \"\" ]]; then\n            continue\n\
    \        fi\n        for (( j=0; j<${#nums[@]}; j++ )); do\n            if [[\
    \ ${nums[$j]} == \"\" ]]; then\n                continue\n            fi\n   \
    \         if [[ ${nums[$i]} -gt ${nums[$j]} ]]; then\n                num=$((\
    \ ${nums[$i]} + ${nums[$j]} ))\n            else\n                num=$(( ${nums[$j]}\
    \ + ${nums[$i]} ))\n            fi\n            if [[ $num -gt $minSum ]]; then\n\
    \                minSum=$num\n                minIndex=$i\n            fi\n  \
    \      done\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptny2qhdx.sh: line 24: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmptny2qhdx.sh: line 27: 2 3 4 1 2 4 + 2 3 4 1 2 4 : syntax error in expression
    (error token is "3 4 1 2 4 + 2 3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i sum\n    local numsArray=($nums)\n    for ((i=0;\
    \ i<${#numsArray[@]}; i++)); do\n        sum=0\n        for ((j=0; j<${#numsArray[@]};\
    \ j++)); do\n            ((j+i)) && sum=$((sum+numsArray[j]))\n        done\n\
    \        ((minSum > sum)) && minSum=$sum\n    done\n    echo \"$minSum\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local n\n  local\
    \ m\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local\
    \ sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n\
    \  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n \
    \ local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local\
    \ sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n\
    \  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n \
    \ local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local\
    \ sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n\
    \  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n \
    \ local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local\
    \ sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n\
    \  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n \
    \ local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local\
    \ sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n\
    \  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n \
    \ local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local\
    \ sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n\
    \  local sum92\n  local sum93\n  local sum94\n  local sum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i sum\n    local numsArray=($nums)\n    local minSumArray=($minSum)\n\
    \    local minSumIndex\n    local minSumArrayIndex\n    local minSumArrayIndexCount\n\
    \    local minSumArrayIndexCountMax\n    local minSumArrayIndexCountMin\n    local\
    \ minSumArrayIndexCountMaxIndex\n    local minSumArrayIndexCountMinIndex\n   \
    \ local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndex\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local len\n  local min\n  local min_index\n\
    \  local min_sum\n  local min_sum_index\n  local min_sum_index2\n  local min_sum_index3\n\
    \  local min_sum_index4\n  local min_sum_index5\n  local min_sum_index6\n  local\
    \ min_sum_index7\n  local min_sum_index8\n  local min_sum_index9\n  local min_sum_index10\n\
    \  local min_sum_index11\n  local min_sum_index12\n  local min_sum_index13\n \
    \ local min_sum_index14\n  local min_sum_index15\n  local min_sum_index16\n  local\
    \ min_sum_index17\n  local min_sum_index18\n  local min_sum_index19\n  local min_sum_index20\n\
    \  local min_sum_index21\n  local min_sum_index22\n  local min_sum_index23\n \
    \ local min_sum_index24\n  local min_sum_index25\n  local min_sum_index26\n  local\
    \ min_sum_index27\n  local min_sum_index28\n  local min_sum_index29\n  local min_sum_index30\n\
    \  local min_sum_index31\n  local min_sum_index32\n  local min_sum_index33\n \
    \ local min_sum_index34\n  local min_sum_index35\n  local min_sum_index36\n  local\
    \ min_sum_index37\n  local min_sum_index38\n  local min_sum_index39\n  local min_sum_index40\n\
    \  local min_sum_index41\n  local min_sum_index42\n  local min_sum_index43\n \
    \ local min_sum_index44\n  local min_sum_index45\n  local min_sum_index46\n  local\
    \ min_sum_index47\n  local min_sum_index48\n  local min_sum_index49\n  local min_sum_index50\n\
    \  local min_sum_index51\n  local min_sum_index52\n  local min_sum_index53\n \
    \ local min_sum_index54\n  local min_sum_index55\n  local min_sum_index56\n  local\
    \ min_sum_index57\n  local min_sum_index58\n  local min_sum_index59\n  local min_sum_index60\n\
    \  local min_sum_index61\n  local min_sum_index62\n  local min_sum_index63\n \
    \ local min_sum_index64\n  local min_sum_index65\n  local min_sum_index66\n  local\
    \ min_sum_index67\n  local min_\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minMaxSum\n    local\
    \ minMaxSumIndex\n    local minMaxSumIndexIndex\n    local minMaxSumIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local minMaxSumIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local minMaxSumIndexIndexIndexIndexIndex\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ minSum=\"$2\"\n  local i sum\n  local numsArray=($nums)\n  local minSumArray=($minSum)\n\
    \  local minSumIndex\n  local minSumIndexArray\n  local minSumIndexArrayLen\n\
    \  local minSumIndexArrayLenLen\n  local minSumIndexArrayLenLenLen\n  local minSumIndexArrayLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLen\n  local minSumIndexArrayLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLen\n  local minSumIndexArrayLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLen\n  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLen\n  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local\
    \ minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \  local minSumIndexArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenMax\n\
    \    local numsArrayLenMin\n    local numsArrayLenSum\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMaxMin\n    local numsArrayLenSumMaxMinMax\n\
    \    local numsArrayLenSumMaxMinMaxMin\n    local numsArrayLenSumMaxMinMaxMinMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMin\n    local numsArrayLenSumMaxMinMaxMinMaxMinMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMax\n    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMax\n    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMax\n    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMax\n    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax\n    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMax\n    local\
    \ numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local numsArrayLenSumMaxMinMaxMinMaxMinMaxMaxMaxMaxMax\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  local j\n  local min\n  local max\n  local minIndex\n  local maxIndex\n\
    \  local minSum\n  local maxSum\n  local num\n  local numsArray\n  local numsArrayLength\n\
    \  local numsArrayLengthMax\n  local numsArrayLengthMin\n  local numsArrayLengthSum\n\
    \  local numsArrayLengthSumMax\n  local numsArrayLengthSumMin\n  local numsArrayLengthSumMinMax\n\
    \  local numsArrayLengthSumMinMaxMax\n  local numsArrayLengthSumMinMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local\
    \ numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local numsArrayLengthSumMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i sum\n    local numsArray\n    local minSumArray\n\
    \    local minSumIndex\n    local minSumArrayIndex\n    local minSumArrayIndexCount\n\
    \    local minSumArrayIndexCountMax\n    local minSumArrayIndexCountMin\n    local\
    \ minSumArrayIndexCountMaxIndex\n    local minSumArrayIndexCountMinIndex\n   \
    \ local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSumArrayIndexCountMaxIndexIndex\n    local minSumArrayIndexCountMinIndexIndex\n\
    \    local minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    \    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local\
    \ minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n\
    \    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n    local\
    \ maxSumIndex\n    local minSumIndex\n    local maxSumIndex\n    local minSumIndex\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n\
    \    local numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local sum=0\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local len\n  local max\n  local\
    \ minlen\n  local minsum\n  local minsumlen\n  local minsumlen2\n  local minsumlen3\n\
    \  local minsumlen4\n  local minsumlen5\n  local minsumlen6\n  local minsumlen7\n\
    \  local minsumlen8\n  local minsumlen9\n  local minsumlen10\n  local minsumlen11\n\
    \  local minsumlen12\n  local minsumlen13\n  local minsumlen14\n  local minsumlen15\n\
    \  local minsumlen16\n  local minsumlen17\n  local minsumlen18\n  local minsumlen19\n\
    \  local minsumlen20\n  local minsumlen21\n  local minsumlen22\n  local minsumlen23\n\
    \  local minsumlen24\n  local minsumlen25\n  local minsumlen26\n  local minsumlen27\n\
    \  local minsumlen28\n  local minsumlen29\n  local minsumlen30\n  local minsumlen31\n\
    \  local minsumlen32\n  local minsumlen33\n  local minsumlen34\n  local minsumlen35\n\
    \  local minsumlen36\n  local minsumlen37\n  local minsumlen38\n  local minsumlen39\n\
    \  local minsumlen40\n  local minsumlen41\n  local minsumlen42\n  local minsumlen43\n\
    \  local minsumlen44\n  local minsumlen45\n  local minsumlen46\n  local minsumlen47\n\
    \  local minsumlen48\n  local minsumlen49\n  local minsumlen50\n  local minsumlen51\n\
    \  local minsumlen52\n  local minsumlen53\n  local minsumlen54\n  local minsumlen55\n\
    \  local minsumlen56\n  local minsumlen57\n  local minsumlen58\n  local minsumlen59\n\
    \  local minsumlen60\n  local minsumlen61\n  local minsumlen62\n  local minsumlen63\n\
    \  local minsumlen64\n  local minsumlen65\n  local minsumlen66\n  local minsumlen67\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    local minIndex\n    local maxIndex\n    local minSum\n    local maxSum\n\
    \    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minSumIndex=0\n    local numsLength=${#nums[@]}\n    for\
    \ (( i=0; i<numsLength; i++ )); do\n        if [ $i -eq 0 ]; then\n          \
    \  minSum=$(( nums[i] + minSum ))\n            minSumIndex=$i\n        else\n\
    \            if [ $nums[$i] -le $minSum ]; then\n                minSum=$(( nums[i]\
    \ + minSum ))\n                minSumIndex=$i\n            fi\n        fi\n  \
    \  done\n    echo \"$minSumIndex\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9t5yogk3.sh: line 18: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min=0\n    local max=0\n    local i\n    local j\n    local\
    \ k\n    local n\n    local m\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n  local\
    \ num\n  local numsStr\n  local numsStrLen\n  local numsStrLenMax\n  local numsStrLenMin\n\
    \  local numsStrLenSum\n  local numsStrLenSumMax\n  local numsStrLenSumMin\n \
    \ local numsStrLenSumMaxMin\n  local numsStrLenSumMaxMinMax\n  local numsStrLenSumMaxMinMaxMin\n\
    \  local numsStrLenSumMaxMinMaxMinMin\n  local numsStrLenSumMaxMinMaxMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n\
    \  local numsStrLenSumMaxMinMaxMinMinMinMinMinMin\n  local numsStrLenSumMaxMinMaxMinMinMinMinMin\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i\n  local j\n  local k\n  local min\n  local max\n  local minSum\n\
    \  local maxSum\n  local minIndex\n  local maxIndex\n  local minSumIndex\n  local\
    \ maxSumIndex\n  local minSumIndex2\n  local maxSumIndex2\n  local minSumIndex3\n\
    \  local maxSumIndex3\n  local minSumIndex4\n  local maxSumIndex4\n  local minSumIndex5\n\
    \  local maxSumIndex5\n  local minSumIndex6\n  local maxSumIndex6\n  local minSumIndex7\n\
    \  local maxSumIndex7\n  local minSumIndex8\n  local maxSumIndex8\n  local minSumIndex9\n\
    \  local maxSumIndex9\n  local minSumIndex10\n  local maxSumIndex10\n  local minSumIndex11\n\
    \  local maxSumIndex11\n  local minSumIndex12\n  local maxSumIndex12\n  local\
    \ minSumIndex13\n  local maxSumIndex13\n  local minSumIndex14\n  local maxSumIndex14\n\
    \  local minSumIndex15\n  local maxSumIndex15\n  local minSumIndex16\n  local\
    \ maxSumIndex16\n  local minSumIndex17\n  local maxSumIndex17\n  local minSumIndex18\n\
    \  local maxSumIndex18\n  local minSumIndex19\n  local maxSumIndex19\n  local\
    \ minSumIndex20\n  local maxSumIndex20\n  local minSumIndex21\n  local maxSumIndex21\n\
    \  local minSumIndex22\n  local maxSumIndex22\n  local minSumIndex23\n  local\
    \ maxSumIndex23\n  local minSumIndex24\n  local maxSumIndex24\n  local minSumIndex25\n\
    \  local maxSumIndex25\n  local minSumIndex26\n  local maxSumIndex26\n  local\
    \ minSumIndex27\n  local maxSumIndex27\n  local minSumIndex28\n  local maxSumIndex28\n\
    \  local minSumIndex29\n  local maxSumIndex29\n  local minSumIndex30\n  local\
    \ maxSumIndex30\n  local minSumIndex31\n  local maxSumIndex31\n  local minSumIndex32\n\
    \  local maxSumIndex32\n  local minSumIndex33\n  local maxSumIndex33\n\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local max\n  local i\n  local j\n  local k\n  local len\n  local\
    \ num\n  local numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n  local\
    \ numsArrayLenMin\n  local numsArrayLenSum\n  local numsArraySum\n  local numsArraySumMax\n\
    \  local numsArraySumMin\n  local numsArraySumSum\n  local numsArraySumSumMax\n\
    \  local numsArraySumSumMin\n  local numsArraySumSumSum\n  local numsArraySumSumSumMax\n\
    \  local numsArraySumSumSumMin\n  local numsArraySumSumSumSum\n  local numsArraySumSumSumSumMax\n\
    \  local numsArraySumSumSumSumMin\n  local numsArraySumSumSumSumSum\n  local numsArraySumSumSumSumSumMax\n\
    \  local numsArraySumSumSumSumSumMin\n  local numsArraySumSumSumSumSumSum\n  local\
    \ numsArraySumSumSumSumSumSumMax\n  local numsArraySumSumSumSumSumSumMin\n  local\
    \ numsArraySumSumSumSumSumSumSum\n  local numsArraySumSumSumSumSumSumSumMax\n\
    \  local numsArraySumSumSumSumSumSumSumMin\n  local numsArraySumSumSumSumSumSumSumSum\n\
    \  local numsArraySumSumSumSumSumSumSumSumMax\n  local numsArraySumSumSumSumSumSumSumSumMin\n\
    \  local numsArraySumSumSumSumSumSumSumSumSum\n  local numsArraySumSumSumSumSumSumSumSumSumMax\n\
    \  local numsArraySumSumSumSumSumSumSumSumSumMin\n  local numsArraySumSumSumSumSumSumSumSumSumSum\n\
    \  local numsArraySumSumSumSumSumSumSumSumSumMax\n  local numsArraySumSumSumSumSumSumSumSumSumMin\n\
    \  local numsArraySumSumSumSumSumSumSumSumSumSum\n  local numsArraySumSumSumSumSumSumSumSumSumSumMax\n\
    \  local numsArraySumSumSumSumSumSumSumSumSumMin\n  local numsArraySumSumSumSumSumSumSumSumSumSum\n\
    \  local numsArraySumSumSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local sum=\"$3\"\n    local i\n    local j\n    local k\n\
    \    local sumOfCurrentSubArray\n    local minSumOfCurrentSubArray\n    local\
    \ currentSum\n    local currentMinSum\n    local currentSubArray\n    local subArraySize\n\
    \    local subArraySum\n    local subArray\n    local subArraySums\n    local\
    \ subArraySumsSize\n    local subArraySumsSum\n    local subArraySumsSumSize\n\
    \    local subArraySumsSumOfCurrentSubArray\n    local subArraySumsSumOfCurrentSubArraySize\n\
    \    local subArraySumsSumOfCurrentSubArraySum\n    local subArraySumsSumOfCurrentSubArraySumSize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArray\n    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySum\n    local\
    \ subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumSize\n    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArray\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySum\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumSize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArray\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySum\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySum\n\
    \    local subArraySumsSumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumOfCurrentSubArraySumSize\n\
    \    local subArraySumsSumOfCurrentSubArraySumOf\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n  local num\n  local\
    \ sum\n  local i\n  local j\n  local len\n  local max\n  local min\n  local minIndex\n\
    \  local minSum\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n  local num\n  local\
    \ sum\n  local i\n  local j\n  local len\n  local max\n  local min\n  local minIndex\n\
    \  local minSum\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n  local num\n  local\
    \ sum\n  local i\n  local j\n  local len\n  local max\n  local min\n  local minIndex\n\
    \  local minSum\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n  local num\n  local\
    \ sum\n  local i\n  local j\n  local len\n  local max\n  local min\n  local minIndex\n\
    \  local minSum\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n  local num\n  local\
    \ sum\n  local i\n  local j\n  local len\n  local max\n  local min\n  local minIndex\n\
    \  local minSum\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n  local num\n  local\
    \ sum\n  local i\n  local j\n  local len\n  local max\n  local min\n  local minIndex\n\
    \  local minSum\n  local num\n  local sum\n  local i\n  local j\n  local len\n\
    \  local max\n  local min\n  local minIndex\n  local minSum\n\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local max\n    local i\n    local j\n    local k\n\
    \    local num\n    local sum\n    local min\n    local max\n    local i\n   \
    \ local j\n    local k\n    local num\n    local sum\n    local min\n    local\
    \ max\n    local i\n    local j\n    local k\n    local num\n    local sum\n \
    \   local min\n    local max\n    local i\n    local j\n    local k\n    local\
    \ num\n    local sum\n    local min\n    local max\n    local i\n    local j\n\
    \    local k\n    local num\n    local sum\n    local min\n    local max\n   \
    \ local i\n    local j\n    local k\n    local num\n    local sum\n    local min\n\
    \    local max\n    local i\n    local j\n    local k\n    local num\n    local\
    \ sum\n    local min\n    local max\n    local i\n    local j\n    local k\n \
    \   local num\n    local sum\n    local min\n    local max\n    local i\n    local\
    \ j\n    local k\n    local num\n    local sum\n    local min\n    local max\n\
    \    local i\n    local j\n    local k\n    local num\n    local sum\n    local\
    \ min\n    local max\n    local i\n    local j\n    local k\n    local num\n \
    \   local sum\n    local min\n    local max\n    local i\n    local j\n    local\
    \ k\n    local num\n    local sum\n    local min\n    local max\n    local i\n\
    \    local j\n    local k\n    local num\n    local sum\n    local min\n    local\
    \ max\n    local i\n    local j\n    local k\n    local num\n    local sum\n \
    \   local min\n    local max\n    local i\n    local j\n    local k\n    local\
    \ num\n    local sum\n    local min\n    local max\n    local i\n    local j\n\
    \    local k\n    local num\n    local sum\n    local min\n    local max\n   \
    \ local i\n    local j\n    local k\n    local num\n    local sum\n    local min\n\
    \    local max\n    local i\n    local j\n    local k\n    local num\n    \n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=$2\n\
    \  local sum=0\n  local i\n  local j\n  local k\n  local min\n  local max\n  local\
    \ minIndex\n  local maxIndex\n  local minVal\n  local maxVal\n  local num\n  local\
    \ numsArray\n  local numsArrayLen\n  local numsArrayLenMax\n  local numsArrayLenMin\n\
    \  local numsArrayLenSum\n  local numsArrayLenSumMax\n  local numsArrayLenSumMin\n\
    \  local numsArrayLenSumMaxMin\n  local numsArrayLenSumMaxMinMin\n  local numsArrayLenSumMaxMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMinMin\n  local numsArrayLenSumMaxMinMinMinMinMinMinMinMinMinMinMin\n\
    \  local numsArray\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=$2\n\
    \  local i sum\n  local numsArray=($nums)\n  local minSumArray=($minSum)\n  local\
    \ minSumIndex\n  local minSumIndexArray\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSumIndex\n  local minSumIndexArrayLength\n  local\
    \ minSumArrayLength\n  local minSum\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local min\n    local i\n    local j\n    local k\n    local num\n\
    \    local numsArray\n    local numsArrayLen\n    local numsArrayLenLen\n    local\
    \ numsArrayLenLenLen\n    local numsArrayLenLenLenLen\n    local numsArrayLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local\
    \ numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    local numsArrayLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local min\n  local i\n  local j\n  local k\n  local len\n  local minlen\n\
    \  local minsum\n  local minsumlen\n  local minsumlen2\n  local minsumlen3\n \
    \ local minsumlen4\n  local minsumlen5\n  local minsumlen6\n  local minsumlen7\n\
    \  local minsumlen8\n  local minsumlen9\n  local minsumlen10\n  local minsumlen11\n\
    \  local minsumlen12\n  local minsumlen13\n  local minsumlen14\n  local minsumlen15\n\
    \  local minsumlen16\n  local minsumlen17\n  local minsumlen18\n  local minsumlen19\n\
    \  local minsumlen20\n  local minsumlen21\n  local minsumlen22\n  local minsumlen23\n\
    \  local minsumlen24\n  local minsumlen25\n  local minsumlen26\n  local minsumlen27\n\
    \  local minsumlen28\n  local minsumlen29\n  local minsumlen30\n  local minsumlen31\n\
    \  local minsumlen32\n  local minsumlen33\n  local minsumlen34\n  local minsumlen35\n\
    \  local minsumlen36\n  local minsumlen37\n  local minsumlen38\n  local minsumlen39\n\
    \  local minsumlen40\n  local minsumlen41\n  local minsumlen42\n  local minsumlen43\n\
    \  local minsumlen44\n  local minsumlen45\n  local minsumlen46\n  local minsumlen47\n\
    \  local minsumlen48\n  local minsumlen49\n  local minsumlen50\n  local minsumlen51\n\
    \  local minsumlen52\n  local minsumlen53\n  local minsumlen54\n  local minsumlen55\n\
    \  local minsumlen56\n  local minsumlen57\n  local minsumlen58\n  local minsumlen59\n\
    \  local minsumlen60\n  local minsumlen61\n  local minsumlen62\n  local minsumlen63\n\
    \  local minsumlen64\n  local minsumlen65\n  local minsumlen66\n  local minsumlen67\n\
    \  local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local len\n  local minLen\n \
    \ local minSum\n  local max\n  local maxLen\n  local maxSum\n  local minSumIndex\n\
    \  local maxSumIndex\n  local minSumIndex2\n  local maxSumIndex2\n  local minSumIndex3\n\
    \  local maxSumIndex3\n  local minSumIndex4\n  local maxSumIndex4\n  local minSumIndex5\n\
    \  local maxSumIndex5\n  local minSumIndex6\n  local maxSumIndex6\n  local minSumIndex7\n\
    \  local maxSumIndex7\n  local minSumIndex8\n  local maxSumIndex8\n  local minSumIndex9\n\
    \  local maxSumIndex9\n  local minSumIndex10\n  local maxSumIndex10\n  local minSumIndex11\n\
    \  local maxSumIndex11\n  local minSumIndex12\n  local maxSumIndex12\n  local\
    \ minSumIndex13\n  local maxSumIndex13\n  local minSumIndex14\n  local maxSumIndex14\n\
    \  local minSumIndex15\n  local maxSumIndex15\n  local minSumIndex16\n  local\
    \ maxSumIndex16\n  local minSumIndex17\n  local maxSumIndex17\n  local minSumIndex18\n\
    \  local maxSumIndex18\n  local minSumIndex19\n  local maxSumIndex19\n  local\
    \ minSumIndex20\n  local maxSumIndex20\n  local minSumIndex21\n  local maxSumIndex21\n\
    \  local minSumIndex22\n  local maxSumIndex22\n  local minSumIndex23\n  local\
    \ maxSumIndex23\n  local minSumIndex24\n  local maxSumIndex24\n  local minSumIndex25\n\
    \  local maxSumIndex25\n  local minSumIndex26\n  local maxSumIndex26\n  local\
    \ minSumIndex27\n  local maxSumIndex27\n  local minSumIndex28\n  local maxSumIndex28\n\
    \  local minSumIndex29\n  local maxSumIndex29\n  local minSumIndex30\n  local\
    \ maxSumIndex30\n  local minSumIndex31\n  local maxSumIndex31\n  local minSumIndex32\n\
    \  local maxSumIndex32\n  local minSumIndex33\n  local maxSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local min\n  local i\n  local j\n  local k\n  local len\n  local minlen\n \
    \ local minsum\n  local minsumlen\n  local minsumlen2\n  local minsumlen3\n  local\
    \ minsumlen4\n  local minsumlen5\n  local minsumlen6\n  local minsumlen7\n  local\
    \ minsumlen8\n  local minsumlen9\n  local minsumlen10\n  local minsumlen11\n \
    \ local minsumlen12\n  local minsumlen13\n  local minsumlen14\n  local minsumlen15\n\
    \  local minsumlen16\n  local minsumlen17\n  local minsumlen18\n  local minsumlen19\n\
    \  local minsumlen20\n  local minsumlen21\n  local minsumlen22\n  local minsumlen23\n\
    \  local minsumlen24\n  local minsumlen25\n  local minsumlen26\n  local minsumlen27\n\
    \  local minsumlen28\n  local minsumlen29\n  local minsumlen30\n  local minsumlen31\n\
    \  local minsumlen32\n  local minsumlen33\n  local minsumlen34\n  local minsumlen35\n\
    \  local minsumlen36\n  local minsumlen37\n  local minsumlen38\n  local minsumlen39\n\
    \  local minsumlen40\n  local minsumlen41\n  local minsumlen42\n  local minsumlen43\n\
    \  local minsumlen44\n  local minsumlen45\n  local minsumlen46\n  local minsumlen47\n\
    \  local minsumlen48\n  local minsumlen49\n  local minsumlen50\n  local minsumlen51\n\
    \  local minsumlen52\n  local minsumlen53\n  local minsumlen54\n  local minsumlen55\n\
    \  local minsumlen56\n  local minsumlen57\n  local minsumlen58\n  local minsumlen59\n\
    \  local minsumlen60\n  local minsumlen61\n  local minsumlen62\n  local minsumlen63\n\
    \  local minsumlen64\n  local minsumlen65\n  local minsumlen66\n  local minsumlen67\n\
    \  local min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local i\n    local j\n    local sum\n  \
    \  local num\n    local numsArray\n    local numsArrayLen\n    local numsArrayLenMax\n\
    \    local numsArrayLenMin\n    local numsArrayLenSum\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n\
    \    local numsArrayLenSumMax\n    local numsArrayLenSumMin\n    local numsArrayLenSumMax\n\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  local i\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local minNum\n    local num\n    local i\n\
    \    local j\n    local sum\n    local numsCount\n    local numsCount2\n    local\
    \ numsCount3\n    local numsCount4\n    local numsCount5\n    local numsCount6\n\
    \    local numsCount7\n    local numsCount8\n    local numsCount9\n    local numsCount10\n\
    \    local numsCount11\n    local numsCount12\n    local numsCount13\n    local\
    \ numsCount14\n    local numsCount15\n    local numsCount16\n    local numsCount17\n\
    \    local numsCount18\n    local numsCount19\n    local numsCount20\n    local\
    \ numsCount21\n    local numsCount22\n    local numsCount23\n    local numsCount24\n\
    \    local numsCount25\n    local numsCount26\n    local numsCount27\n    local\
    \ numsCount28\n    local numsCount29\n    local numsCount30\n    local numsCount31\n\
    \    local numsCount32\n    local numsCount33\n    local numsCount34\n    local\
    \ numsCount35\n    local numsCount36\n    local numsCount37\n    local numsCount38\n\
    \    local numsCount39\n    local numsCount40\n    local numsCount41\n    local\
    \ numsCount42\n    local numsCount43\n    local numsCount44\n    local numsCount45\n\
    \    local numsCount46\n    local numsCount47\n    local numsCount48\n    local\
    \ numsCount49\n    local numsCount50\n    local numsCount51\n    local numsCount52\n\
    \    local numsCount53\n    local numsCount54\n    local numsCount55\n    local\
    \ numsCount56\n    local numsCount57\n    local numsCount58\n    local numsCount59\n\
    \    local numsCount60\n    local numsCount61\n    local numsCount62\n    local\
    \ numsCount63\n    local numsCount64\n    local numsCount65\n    local numsCount66\n\
    \    local numsCount67\n    local numsCount\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local sum=0\n    local\
    \ num\n    local i\n    local j\n    local k\n    local numsArray\n    local minSumArray\n\
    \    local minIndexArray\n    local maxIndexArray\n    local sumArray\n    local\
    \ numsArrayLen\n    local minSumArrayLen\n    local minIndexArrayLen\n    local\
    \ maxIndexArrayLen\n    local sumArrayLen\n    local numsArrayLenLen\n    local\
    \ minSumArrayLenLen\n    local minIndexArrayLenLen\n    local maxIndexArrayLenLen\n\
    \    local sumArrayLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSumArrayLenLenLen\n\
    \    local minIndexArrayLenLenLen\n    local maxIndexArrayLenLenLen\n    local\
    \ sumArrayLenLenLen\n    local numsArrayLenLenLen\n    local minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ minSum=0\n    local minIndex=0\n    local maxIndex=0\n    local sum=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local sumOfCurrentSubArray=0\n    local\
    \ currentSum=0\n    local currentIndex=0\n    local currentMaxIndex=0\n    local\
    \ currentMinIndex=0\n    local currentMaxSum=0\n    local currentMinSum=0\n  \
    \  local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local currentMaxSumOfCurrentSubArray=0\n    local currentMinSumOfCurrentSubArray=0\n\
    \    local \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046953
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local minIndex=0\n  local minNum\n  local num\n  local i\n  local j\n  local\
    \ sum\n\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=0\n    for ((j=0; j<${#nums[@]};\
    \ j++)); do\n      if [[ ${nums[$i]} -gt ${nums[$j]} ]]; then\n        sum=$((sum+${nums[$i]}))\n\
    \      fi\n    done\n    if [[ ${sum} -gt ${minSum} ]]; then\n      minSum=${sum}\n\
    \      minIndex=$i\n      minNum=${nums[$i]}\n    fi\n  done\n  echo \"${minSum}\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8mvaufvk.sh: line 24: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660046953

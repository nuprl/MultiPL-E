language: sh
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local digit=${x:$i:1}\n        if [[ ${digit:0:1} == \"0\" ]];\
    \ then\n            output+=(\"$digit\")\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for i in $(seq 0 $((${#x} - 1))); do\n        if [[\
    \ ${x:$i:1} == *\"0\"* ]]; then\n            output=$(echo \"$output\" | sed 's/'\"\
    $i\"'/\\1/')\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for i in $(seq 0 $((${#x} - 1))); do\n        if [[\
    \ ${x:$i:1} == *\"0\"* ]]; then\n            output=$(echo \"$output\" | sed \"\
    s/$i/\\\"$i\\\"/\")\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a y\n    local -a z\n    local -a w\n    local -a\
    \ x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=0; i<${#output}; i++ )); do\n        if [[\
    \ ${output[$i]} == 0 ]]; then\n            echo \"$output[$i]\"\n        fi\n\
    \    done\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local digit=${x:$i:1}\n        if (( ${digit:0:1} == 0 )) ;\
    \ then\n            output+=(\"$digit\")\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps_zjg256.sh: line 18: ((: == 0 : syntax error: operand expected
    (error token is "== 0 ")

    /tmp/tmps_zjg256.sh: line 18: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    /tmp/tmps_zjg256.sh: line 18: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local digit\n    local j\n\
    \    local count\n    local tmp\n    \n    for i in $x; do\n        digit=$((\
    \ 10#$i ))\n        count=0\n        for j in $x; do\n            if [ $j -ne\
    \ $i ] && [ $j -eq $(( 10#$digit )) ]; then\n                count=$(( count+1\
    \ ))\n            fi\n        done\n        if [ $count -eq 0 ]; then\n      \
    \      tmp=\"\\\"$i\\\"\"\n            echo \"$tmp\"\n        fi\n    done\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [ $i -lt ${#x} ];\
    \ do\n        local j=0\n        while [ $j -lt ${#ret[@]} ]; do\n           \
    \ local k=0\n            while [ $k -lt ${#ret[@]} ]; do\n                if [\
    \ \"${ret[$k]}\" == \"${x[$i]}\" ]; then\n                    ret[$j]=${ret[$j]}\"\
    \ \"${x[$i]}\n                    break\n                fi\n                ((k++))\n\
    \            done\n            ((j++))\n        done\n        ((i++))\n    done\n\
    \    echo \"${ret[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    local k\n  \
    \  local digit\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: -1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr -d '[:digit:]')\n\
    \    local count\n    count=0\n    while [[ $output != \"\" ]]; do\n        ((count++))\n\
    \        output=$(echo \"$output\" | tr -d '[:digit:]')\n    done\n    if [[ $count\
    \ -gt 0 ]]; then\n        echo \"$output\"\n    else\n        echo \"$x\"\n  \
    \  fi\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=11 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660054326
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=1; i<${#x}; i++ )); do\n        if [[ ${x:$i:1}\
    \ == ${x:$i:1} * 0 ]]; then\n            x=$x$i\n        fi\n    done\n    echo\
    \ $x\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpomsrgr0q.sh: line 18: syntax error in conditional expression

    /tmp/tmpomsrgr0q.sh: line 18: syntax error near `*''

    /tmp/tmpomsrgr0q.sh: line 18: `        if [[ ${x:$i:1} == ${x:$i:1} * 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=0; i<${#output}; i++ )); do\n        if [[\
    \ ${output:$i:1} == 0 ]]; then\n            echo \"$output\"\n            break\n\
    \        fi\n    done\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local digit=${x:$i:1}\n        if [[ ${digit:0:1} = 0 ]]; then\n\
    \            output+=(\"${x:$i:1}\")\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ /\\n/g'\
    \ | sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=()\n    for (( i=0;\
    \ i<${#x}; i++ )); do\n        local j\n        for (( j=0; j<${#x}; j++ )); do\n\
    \            if [[ ${x[$i]} -eq ${x[$j]} ]]; then\n                x=${x%$x[$j]}\n\
    \                break\n            fi\n        done\n        output+=(\"$x\"\
    )\n        x=$((${x}+1))\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression
    (error token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 20: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpjn3ph1jo.sh: line 26: 15 33 1422 1+1: syntax error in expression (error
    token is "33 1422 1+1")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [ $i -lt ${#x} ];\
    \ do\n        local j=0\n        while [ $j -le ${#ret[@]} ] && [[ ${x[$i]} -eq\
    \ ${ret[$j]} ]]; do\n            j=$((j+1))\n        done\n        if [ $j -eq\
    \ 0 ]; then\n            ret+=(\"${x[$i]}\")\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"${ret[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression
    (error token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmpd3z37yun.sh: line 18: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ //g' |\
    \ sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    local digit\n    local j\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n    local digits_found\n    local digits\n\
    \    local digits_found\n    local digits\n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local digit\n    for digit in $x; do\n\
    \        if [[ $(( 10#$digit % 2 )) == 0 ]]; then\n            local tmp=()\n\
    \            tmp+=(\"$digit\")\n            tmp+=(\"${tmp[@]/%/}\")\n        \
    \    ret+=(\"${tmp[@]/%/}\")\n        fi\n    done\n    echo \"${ret[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for x in $x; do\n     \
    \   [[ \"$x\" =~ ^[0-9]+$ ]] || continue\n        [[ \"$x\" =~ ^[0-9]+\\([0-9]*\\\
    )$ ]] || continue\n        local digits=${BASH_REMATCH[1]}\n        local digits_count=${#digits}\n\
    \        if (( digits_count % 2 )); then\n            local digit=$(( 10#$digits\
    \ ))\n            [[ \"$digit\" -eq 0 ]] || continue\n            [[ \"$digit\"\
    \ -lt 10 ]] || continue\n            local digit=$(( 10#$digit ))\n          \
    \  [[ \"$digit\" -eq 0 ]] || continue\n            [[ \"$digit\" -lt 10 ]] ||\
    \ continue\n            local digit=$(( 10#$digit ))\n            [[ \"$digit\"\
    \ -eq 0 ]] || continue\n            [[ \"$digit\" -lt 10 ]] || continue\n    \
    \        local digit=$(( 10#$digit ))\n            [[ \"$digit\" -eq 0 ]] || continue\n\
    \            [[ \"$digit\" -lt 10 ]] || continue\n            local digit=$((\
    \ 10#$digit ))\n            [[ \"$digit\" -eq 0 ]] || continue\n            [[\
    \ \"$digit\" -lt 10 ]] || continue\n            local digit=$(( 10#$digit ))\n\
    \            [[ \"$digit\" -eq 0 ]] || continue\n            [[ \"$digit\" -lt\
    \ 10 ]] || continue\n            local digit=$(( 10#$digit ))\n            [[\
    \ \"$digit\" -eq 0 ]] || continue\n            [[ \"$digit\" -lt 10 ]] || continue\n\
    \            local digit=$(( 10#$digit ))\n            [[ \"$digit\" -eq 0 ]]\
    \ || continue\n            [[ \"$digit\" -lt 10 ]] || continue\n            local\
    \ digit=$(( 10#$digit ))\n            [[ \"$digit\" -eq 0 ]] || continue\n   \
    \         [[ \"$digit\" -lt 10 ]] || continue\n            local digit=$(( 10#$digit\
    \ ))\n            [[ \"$digit\" -eq 0 ]] || continue\n            [[ \"$digit\"\
    \ -lt 10 ]] || continue\n            local digit=$(( 10#$digit ))\n          \
    \  [[ \"$digit\" -eq 0 ]] || continue\n            [[ \"$digit\" -lt 10 ]] ||\
    \ continue\n            local digit=$(( 10#$digit ))\n            [[ \"$digit\"\
    \ -eq 0 ]] || continue\n            [[ \"$digit\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpczmfvm02.sh: line 66: conditional binary operator expected

    /tmp/tmpczmfvm02.sh: line 66: syntax error near `15''

    /tmp/tmpczmfvm02.sh: line 66: `    [[ $(candidate "15 33 1422 1") = "1 15 33"
    ]]''

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -u -d | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: -1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a arr\n    arr=( $x )\n    local -a res\n    res=()\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j\n        j=$(( ${arr[i]}+1\
    \ ))\n        while [[ ${arr[j]} -eq 0 ]]; do\n            arr[j]=$(( ${arr[j]}+1\
    \ ))\n            j=$(( ${j}+1 ))\n        done\n        res+=( ${arr[@]:$j:1}\
    \ )\n    done\n    res=($(sort -u <<<\"${res[@]}\"))\n}\n\ncandidate() {\n   \
    \ unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=33 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=25 encoding='utf-8'>
  timestamp: 1660054326
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=0; i<${#output}; i++ )); do\n        if [[\
    \ ${output[$i]} =~ ^[0-9]+$ ]]; then\n            local j\n            for ((\
    \ j=0; j<i; j++ )); do\n                if [[ ${output[$j]} =~ ^[0-9]+$ ]]; then\n\
    \                    output[$j]=${output[$j]}${output[$i]}\n                 \
    \   output[$i]=\n                    break\n                fi\n            done\n\
    \        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for x in $x; do\n     \
    \   local digit\n        digit=$(echo $x | awk '{print $1}')\n        if [[ $digit\
    \ =~ ^[0-9]+$ ]]; then\n            if [[ $digit % 2 == 0 ]]; then\n         \
    \       output+=(\"$x\")\n            fi\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5x9kbhs9.sh: line 20: conditional binary operator expected

    /tmp/tmp5x9kbhs9.sh: line 20: syntax error near `%''

    /tmp/tmp5x9kbhs9.sh: line 20: `            if [[ $digit % 2 == 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a y\n    local -a z\n    local -a a\n    local -a\
    \ b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a y\n    local -a z\n    local -a result\n    local\
    \ -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a\
    \ tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a\
    \ tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local\
    \ -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local\
    \ -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local\
    \ -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local\
    \ -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local\
    \ -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local\
    \ -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local\
    \ -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local\
    \ -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local\
    \ -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local\
    \ -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local\
    \ -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local\
    \ -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local\
    \ -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local\
    \ -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local\
    \ -a tmp69\n    local -a tmp70\n}\n\ncandidate() {\n    unique_digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=1; i<${#output}; i++ )); do\n        if [[\
    \ ${output[$i]} -eq 0 ]]; then\n            output=$(echo \"$output\" | sed 's/\\\
    ([0-9]*\\)$/\\1/')\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    for ((i=0; i<${#x};\
    \ i++)); do\n        j=$((i+1))\n        if [[ ${x[i]} -eq ${x[j]} ]]; then\n\
    \            ret+=(\"${x[i]}\")\n        fi\n    done\n    echo \"${ret[@]}\"\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8q554t5n.sh: line 19: [[: 15 33 1422 1: syntax error in expression
    (error token is "33 1422 1")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [[ $i -lt ${#x} ]];\
    \ do\n        local j=0\n        while [[ $j -lt ${#ret[@]} ]]; do\n         \
    \   local k=0\n            while [[ $k -lt ${#x} ]]; do\n                [[ \"\
    ${x[$k]}\" =~ ^[0-9]$ ]] && break\n                k=$((k+1))\n            done\n\
    \            [[ -z ${ret[$j]} ]] && ret[$j]=\"${x[i]}\"\n            j=$((j+1))\n\
    \        done\n        i=$((i+1))\n    done\n    sort -u <<< \"${ret[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for i in $(seq 0 $((${#x} - 1))); do\n        if [[\
    \ ${x:$i:1} == *\"0\"* ]]; then\n            output=$(echo \"$output\" | sed 's/'\"\
    $i\"'/\\1/')\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr -cd '0-9')\n\
    \    local count\n    count=0\n    for x in $output; do\n        if [ \"$x\" ==\
    \ \"$output\" ]; then \n            count=$((count+1))\n        else\n       \
    \     count=$((count-1))\n        fi\n    done\n    if [ \"$count\" -eq 0 ]; then\n\
    \        echo \"$output\"\n    else\n        echo \"$output\"\n    fi\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -u -d | sort -n)\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -u -d | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local digit=${x:$i:1}\n        if [[ ${digit:0:1} == \"0\" ]];\
    \ then\n            continue\n        fi\n        output+=(\"$digit\")\n    done\n\
    \    echo \"${output[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr -d '[:digit:]')\n\
    \    local i\n    for (( i=1; i<${#output}; i++ )); do\n        if [[ ${output:$i:1}\
    \ == *\"0\"* ]]; then\n            output=$(echo \"$output\" | sed \"s/$output/$((${output:$i:1}))/g\"\
    )\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ /\\n/g'\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort | uniq -d | sort -n)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local digit\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    local k\n  \
    \  local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n    local tmp97\n    local tmp98\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=()\n    for (( i=0;\
    \ i<${#x}; i++ )); do\n        local j\n        j=$(( ${#x} - i - 1 ))\n     \
    \   if (( ${x}[$i]%2 )); then\n            output+=(\"${x}[$j]\")\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[0]%2 : syntax error in expression
    (error token is "33 1422 1[0]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[1]%2 : syntax error in expression
    (error token is "33 1422 1[1]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[2]%2 : syntax error in expression
    (error token is "33 1422 1[2]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[3]%2 : syntax error in expression
    (error token is "33 1422 1[3]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[4]%2 : syntax error in expression
    (error token is "33 1422 1[4]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[5]%2 : syntax error in expression
    (error token is "33 1422 1[5]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[6]%2 : syntax error in expression
    (error token is "33 1422 1[6]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[7]%2 : syntax error in expression
    (error token is "33 1422 1[7]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[8]%2 : syntax error in expression
    (error token is "33 1422 1[8]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[9]%2 : syntax error in expression
    (error token is "33 1422 1[9]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[10]%2 : syntax error in expression
    (error token is "33 1422 1[10]%2 ")

    /tmp/tmp4_28ntr9.sh: line 20: ((: 15 33 1422 1[11]%2 : syntax error in expression
    (error token is "33 1422 1[11]%2 ")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a ret=()\n    local -a tmp=()\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=()\n    for i in $x;\
    \ do\n        [[ \"$i\" =~ ^[0-9]+$ ]] || continue\n        [[ \"$i\" =~ ^[0-9]+\\\
    ([0-9]*\\)$ ]] || continue\n        local j\n        for j in $(echo \"$i\" |\
    \ sed 's/\\([0-9]*\\)$//'); do\n            [[ \"$j\" =~ ^[0-9]+$ ]] || continue\n\
    \            [[ \"$j\" =~ ^[0-9]+\\([0-9]*\\)$ ]] || continue\n            [[\
    \ \"$j\" != \"$i\" ]] && output+=(\"$j\")\n        done\n    done\n    echo \"\
    ${output[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -u -d | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ //g' |\
    \ sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr -d '\\n' | sort\
    \ -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    local digit\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n    local tmp97\n    local tmp98\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    local k\n  \
    \  local len\n    local digit\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    \n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=()\n    for (( i=0;\
    \ i<${#x}; i++ )); do\n        local j\n        for (( j=0; j<${#x}; j++ )); do\n\
    \            if [[ ${x[j]} == ${x[i]} ]]; then\n                x=${x//${x[j]}/${x[i]}}\n\
    \                break\n            fi\n        done\n        if [[ ${#x} -eq\
    \ 0 ]]; then\n            output+=(\"${x}\")\n        fi\n    done\n    echo \"\
    ${output[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ //g' |\
    \ sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [ $i -lt ${#x} ];\
    \ do\n        local j=0\n        while [ $j -le ${#ret[@]} ] && [ \"${x[$i]}\"\
    \ -eq \"${ret[$j]}\" ]; do\n            j=$(( j + 1 ))\n        done\n       \
    \ if [ $j -eq ${#ret[@]} ]; then\n            ret+=(\"$x[$i]\")\n        fi\n\
    \        i=$(( i + 1 ))\n    done\n    echo \"${ret[@]}\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3ai2vbp0.sh: line 18: [: 15 33 1422 1: integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    /tmp/tmp3ai2vbp0.sh: line 18: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a y\n    local -a z\n    local -a w\n    local -a\
    \ a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [[ $i -lt ${#x} ]];\
    \ do\n        local j=0\n        while [[ $j -le ${#ret[@]} ]]; do\n         \
    \   if [[ ${x[i]} -eq ${ret[j]} ]]; then\n                ((j++))\n          \
    \  else\n                ret[${#ret[@]}+1]=\"${x[i]}\"\n                break\n\
    \            fi\n        done\n        ((i++))\n    done\n    echo \"${ret[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression
    (error token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    /tmp/tmp9w69283_.sh: line 19: [[: 15 33 1422 1: syntax error in expression (error
    token is "33 1422 1")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for x in $x; do\n     \
    \   if [[ $x =~ ^[0-9]+$ ]]; then\n            if [[ $x =~ ^[0-9]+\\([0-9]+\\\
    )$ ]]; then\n                output+=(\"$x\")\n            else\n            \
    \    output+=(\"$x\")\n            fi\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr -d '[:digit:]')\n\
    \    local i\n    for (( i=0; i<${#output}; i++ )); do\n        if [[ ${output:$i:1}\
    \ =~ ^[0-4] ]]; then\n            echo \"$output\"\n            break\n      \
    \  fi\n    done\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ //g' |\
    \ sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [ $i -lt ${#x} ];\
    \ do\n        local j=0\n        while [ $j -le ${#ret[@]} ] && \\\n         \
    \   [ ${x[$i]} -eq ${ret[$j]} ]; do\n            j=$(( j + 1 ))\n        done\n\
    \        if [ $j -eq 0 ]; then\n            ret+=(\"$x[$i]\")\n        fi\n  \
    \      i=$(( i + 1 ))\n    done\n    echo \"${ret[@]}\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    /tmp/tmp4bsh_5hb.sh: line 19: [: too many arguments

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=0; i<${#output}; i++ )); do\n        if [[\
    \ ${output[$i]} -eq 0 ]]; then\n            echo \"$output\"\n            break\n\
    \        fi\n    done\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwipu_qnr.sh: line 18: [[: 15 33 1422 1: syntax error in expression
    (error token is "33 1422 1")

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ //g' |\
    \ sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a y\n    local -a z\n    local -a w\n    local -a\
    \ x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local\
    \ -a x\n    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i=0\n    while [ $i -lt ${#x} ];\
    \ do\n        local j=0\n        while [ $j -lt ${#ret[@]} ] && [ ${x[$i]} -eq\
    \ ${ret[$j]} ]; do\n            j=$((j+1))\n        done\n        if [ $j -eq\
    \ 0 ]; then\n            ret+=(\"$x[$i]\")\n        fi\n        i=$((i+1))\n \
    \   done\n    echo \"${ret[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    /tmp/tmpotn27pk5.sh: line 18: [: too many arguments

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local digit=${x:$i:1}\n        if [[ ${digit:0:1} = 0 ]]; then\n\
    \            output+=(\"$digit\")\n        fi\n    done\n    IFS=' ' read -ra\
    \ arr <<< \"${output[*]}\"\n    IFS=' ' read -ra arr2 <<< \"${output[*]}\"\n \
    \   IFS=' ' read -ra arr3 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr4 <<<\
    \ \"${output[*]}\"\n    IFS=' ' read -ra arr5 <<< \"${output[*]}\"\n    IFS='\
    \ ' read -ra arr6 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr7 <<< \"${output[*]}\"\
    \n    IFS=' ' read -ra arr8 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr9 <<<\
    \ \"${output[*]}\"\n    IFS=' ' read -ra arr10 <<< \"${output[*]}\"\n    IFS='\
    \ ' read -ra arr11 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr12 <<< \"${output[*]}\"\
    \n    IFS=' ' read -ra arr13 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr14\
    \ <<< \"${output[*]}\"\n    IFS=' ' read -ra arr15 <<< \"${output[*]}\"\n    IFS='\
    \ ' read -ra arr16 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr17 <<< \"${output[*]}\"\
    \n    IFS=' ' read -ra arr18 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr19\
    \ <<< \"${output[*]}\"\n    IFS=' ' read -ra arr20 <<< \"${output[*]}\"\n    IFS='\
    \ ' read -ra arr21 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr22 <<< \"${output[*]}\"\
    \n    IFS=' ' read -ra arr23 <<< \"${output[*]}\"\n    IFS=' ' read -ra arr24\
    \ <<< \"${\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz0vvcms3.sh: line 57: unexpected EOF while looking for matching
    `"''

    /tmp/tmpz0vvcms3.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ /\\n/g'\
    \ | sort -u | sed 's/^/\"/' | sed 's/$/\"/')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for (( i=1; i<${#output}; i++ )); do\n        if [[\
    \ ${output:$i:1} == *\"0\"* ]]; then\n            output=$(echo \"${output:0:i}${output:$i:1}\"\
    \ | sort -u)\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local j\n        for (( j=0; j<${#x}; j++ )); do\n         \
    \   if [[ ${x[j]} == ${x[i]} ]]; then\n                ret+=(\"${x[j]}\")\n  \
    \              break\n            fi\n        done\n    done\n    echo \"${ret[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local j\n        for (( j=0; j<${#ret[@]}; j++ )); do\n    \
    \        if [[ ${ret[j]} == ${x[i]} ]]; then\n                break\n        \
    \    fi\n        done\n        if [[ ${j} -eq 0 ]]; then\n            ret+=(\"\
    ${x[i]}\")\n        fi\n    done\n    echo \"${ret[@]}\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local count\n    count=0\n    for (( i=0; i<${#output}; i++ ));\
    \ do\n        if [[ ${output:$i:1} == [0-9] ]]; then\n            (( count++ ))\n\
    \        fi\n    done\n    if [[ ${count} -eq 0 ]]; then\n        echo \"$x\"\n\
    \    else\n        echo \"$output\"\n    fi\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]\\\
    )/\"\\1\"/g' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=()\n    for (( i=0;\
    \ i<${#x}; i++ )); do\n        local j\n        for (( j=0; j<${#x}; j++ )); do\n\
    \            if [[ ${x[j]} == ${x[i]} ]]; then\n                break\n      \
    \      fi\n        done\n        if [[ ${j} -eq ${#x} ]]; then\n            output+=(\"\
    ${x[i]}\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]\\\
    )/\"&\"/g' | sort -u)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for x in $x; do\n     \
    \   local digit=\"${x#?}\"\n        if [[ $digit == *[0-9]* ]]; then\n       \
    \     if [[ ${#digit} -eq 0 ]]; then\n                output+=(\"$x\")\n     \
    \       else\n                output+=(\"$digit\")\n            fi\n        fi\n\
    \    done\n    echo \"${output[@]}\" | sort -n | uniq\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a y\n    local -a z\n    local -a w\n    local -a\
    \ a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a w\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a w\n    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for x in $x; do\n     \
    \   local digit\n        digit=$(echo \"$x\" | awk '{print $1}')\n        if [[\
    \ $digit =~ ^[0-9]+$ ]]; then\n            if [[ $digit % 2 -eq 0 ]]; then\n \
    \               output+=(\"$x\")\n            fi\n        fi\n    done\n    echo\
    \ ${output[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxfub7k_z.sh: line 20: conditional binary operator expected

    /tmp/tmpxfub7k_z.sh: line 20: syntax error near `%''

    /tmp/tmpxfub7k_z.sh: line 20: `            if [[ $digit % 2 -eq 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ /\\n/g'\
    \ | sort -n | uniq -d | sort -n)\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local -a arr\n    arr=( $x )\n    local -a result\n    result=()\n\
    \    local -i i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j\n \
    \       for (( j=0; j<${#arr[@]}; j++ )); do\n            if [[ ${arr[j]} -eq\
    \ ${arr[i]} ]]; then\n                arr[j]=0\n                break\n      \
    \      fi\n        done\n        if [[ ${#arr[@]} -eq ${#arr[@]} ]]; then\n  \
    \          result+=( ${arr[@]} )\n        fi\n    done\n    IFS=$'\\n'\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=$(echo \"$x\" | sed\
    \ 's/\\([0-9]*\\)$/\\1/')\n    for (( i=1; i<${#output}; i++ )); do\n        if\
    \ [[ ${output[$i]} -eq 0 ]]; then\n            output[$i]=\"\\\"${output[$i]}\\\
    \"\"\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/ //g' |\
    \ sort -u | sed 's/^\"//g' | sed 's/\"$//g')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    local digit\n    local count\n\
    \    local digitCount\n    local digitCount2\n    local digitCount3\n    local\
    \ digitCount4\n    local digitCount5\n    local digitCount6\n    local digitCount7\n\
    \    local digitCount8\n    local digitCount9\n    local digitCount10\n    local\
    \ digitCount11\n    local digitCount12\n    local digitCount13\n    local digitCount14\n\
    \    local digitCount15\n    local digitCount16\n    local digitCount17\n    local\
    \ digitCount18\n    local digitCount19\n    local digitCount20\n    local digitCount21\n\
    \    local digitCount22\n    local digitCount23\n    local digitCount24\n    local\
    \ digitCount25\n    local digitCount26\n    local digitCount27\n    local digitCount28\n\
    \    local digitCount29\n    local digitCount30\n    local digitCount31\n    local\
    \ digitCount32\n    local digitCount33\n    local digitCount34\n    local digitCount35\n\
    \    local digitCount36\n    local digitCount37\n    local digitCount38\n    local\
    \ digitCount39\n    local digitCount40\n    local digitCount41\n    local digitCount42\n\
    \    local digitCount43\n    local digitCount44\n    local digitCount45\n    local\
    \ digitCount46\n    local digitCount47\n    local digitCount48\n    local digitCount49\n\
    \    local digitCount50\n    local digitCount51\n    local digitCount52\n    local\
    \ digitCount53\n    local digitCount54\n    local digitCount55\n    local digitCount56\n\
    \    local digitCount57\n    local digitCount58\n    local digitCount59\n    local\
    \ digitCount60\n    local digitCount61\n    local digitCount62\n    local digitCount63\n\
    \    local digitCount64\n    local digitCount65\n    local digitCount66\n    local\
    \ digitCount67\n    local digitCount68\n    local digitCount69\n    local digitCount70\n\
    \    local digitCount71\n    local digitCount72\n    local digitCount73\n    local\
    \ digitCount74\n    local digitCount75\n    local digitCount76\n    local digitCount77\n\
    \    local digitCount78\n    local digitCount79\n    local digitCount80\n    local\
    \ digitCount81\n    local digitCount82\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for i in $(seq 1 $((${#x} - 1))); do\n        if [[\
    \ ${x:$i:1} == *\"0\"* ]]; then\n            x=${x:0:$i}\n            output+=\"\
    \ $x\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    output=()\n    for (( i=0;\
    \ i<${#x}; i++ )); do\n        local j\n        j=$(( ${#x} - i ))\n        if\
    \ [[ ${x} == *\"${j:0:1}\"* ]]; then\n            output+=(\"${x}\")\n       \
    \ fi\n    done\n    IFS=$'\\n' output=($(sort <<<\"${output[*]}\"))\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local ret=()\n    local i\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n    local tmp98\n    local tmp\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    local j\n    local k\n  \
    \  local digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr -d '[:digit:]')\n\
    \    local i\n    for (( i=1; i<${#output}; i++ )); do\n        if [[ \"$output\"\
    \ == \"$((10#$i))\" ]]; then\n            output=$(echo \"$output\" | sed \"s/$i/\\\
    \"$i\\\"/\")\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054322
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    local i\n    local j\n    local digit\n\
    \    local digitCount\n    local digitCount2\n    local digitCount3\n    local\
    \ digitCount4\n    local digitCount5\n    local digitCount6\n    local digitCount7\n\
    \    local digitCount8\n    local digitCount9\n    local digitCount10\n    local\
    \ digitCount11\n    local digitCount12\n    local digitCount13\n    local digitCount14\n\
    \    local digitCount15\n    local digitCount16\n    local digitCount17\n    local\
    \ digitCount18\n    local digitCount19\n    local digitCount20\n    local digitCount21\n\
    \    local digitCount22\n    local digitCount23\n    local digitCount24\n    local\
    \ digitCount25\n    local digitCount26\n    local digitCount27\n    local digitCount28\n\
    \    local digitCount29\n    local digitCount30\n    local digitCount31\n    local\
    \ digitCount32\n    local digitCount33\n    local digitCount34\n    local digitCount35\n\
    \    local digitCount36\n    local digitCount37\n    local digitCount38\n    local\
    \ digitCount39\n    local digitCount40\n    local digitCount41\n    local digitCount42\n\
    \    local digitCount43\n    local digitCount44\n    local digitCount45\n    local\
    \ digitCount46\n    local digitCount47\n    local digitCount48\n    local digitCount49\n\
    \    local digitCount50\n    local digitCount51\n    local digitCount52\n    local\
    \ digitCount53\n    local digitCount54\n    local digitCount55\n    local digitCount56\n\
    \    local digitCount57\n    local digitCount58\n    local digitCount59\n    local\
    \ digitCount60\n    local digitCount61\n    local digitCount62\n    local digitCount63\n\
    \    local digitCount64\n    local digitCount65\n    local digitCount66\n    local\
    \ digitCount67\n    local digitCount68\n    local digitCount69\n    local digitCount70\n\
    \    local digitCount71\n    local digitCount72\n    local digitCount73\n    local\
    \ digitCount74\n    local digitCount75\n    local digitCount76\n    local digitCount77\n\
    \    local digitCount78\n    local digitCount79\n    local digitCount80\n    local\
    \ digitCount81\n    local digitCount82\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for x in $x; do\n     \
    \   local digit=${x#*}\n        if [[ $digit == 0 ]]; then\n            continue\n\
    \        fi\n        if [[ $digit == 1 ]]; then\n            output+=($digit)\n\
    \            continue\n        fi\n        if [[ $digit == 2 ]]; then\n      \
    \      output+=($digit)\n            continue\n        fi\n        if [[ $digit\
    \ == 3 ]]; then\n            output+=($digit)\n            continue\n        fi\n\
    \        if [[ $digit == 4 ]]; then\n            output+=($digit)\n          \
    \  continue\n        fi\n        if [[ $digit == 5 ]]; then\n            output+=($digit)\n\
    \            continue\n        fi\n        if [[ $digit == 6 ]]; then\n      \
    \      output+=($digit)\n            continue\n        fi\n        if [[ $digit\
    \ == 7 ]]; then\n            output+=($digit)\n            continue\n        fi\n\
    \        if [[ $digit == 8 ]]; then\n            output+=($digit)\n          \
    \  continue\n        fi\n        if [[ $digit == 9 ]]; then\n            output+=($digit)\n\
    \            continue\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054322
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr \" \" \"\\n\"\
    \ | sort -u | tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054321
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x=\"$1\"\n    local output\n    output=()\n    for (( i=0; i<${#x}; i++\
    \ )); do\n        local digit=${x:$i:1}\n        if [[ ${digit:0:1} == \"0\" ]];\
    \ then\n            local j=0\n            for (( j=0; j<i; j++ )); do\n     \
    \           if [[ ${x:$j:1} == \"0\" ]]; then\n                    output+=(\"\
    ${x:$j:1}\")\n                    break\n                fi\n            done\n\
    \        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054322

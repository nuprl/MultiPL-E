name: HumanEval_56_correct_bracketing
language: sh
prompt: "#!/bin/bash\n# brackets is a string of \"<\" and \">\".\n# return True if\
  \ every opening bracket has a corresponding closing bracket.\n# >>> $(correct_bracketing\
  \ \"<\")\n# \"false\"\n# >>> $(correct_bracketing \"<>\")\n# \"true\"\n# >>> $(correct_bracketing\
  \ \"<<><>>\")\n# \"true\"\n# >>> $(correct_bracketing \"><<>\")\n# \"false\"\n#\n\
  # $1 is a string\ncorrect_bracketing() {\n"
tests: "}\n\ncandidate() {\n    correct_bracketing \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"<>\") = \"true\" ]]\n    [[ $(candidate \"<<><>>\") =\
  \ \"true\" ]]\n    [[ $(candidate \"<><><<><>><>\") = \"true\" ]]\n    [[ $(candidate\
  \ \"<><><<<><><>><>><<><><<>>>\") = \"true\" ]]\n    [[ $(candidate \"<<<><>>>>\"\
  ) = \"false\" ]]\n    [[ $(candidate \"><<>\") = \"false\" ]]\n    [[ $(candidate\
  \ \"<\") = \"false\" ]]\n    [[ $(candidate \"<<<<\") = \"false\" ]]\n    [[ $(candidate\
  \ \">\") = \"false\" ]]\n    [[ $(candidate \"<<>\") = \"false\" ]]\n    [[ $(candidate\
  \ \"<><><<><>><>><<>\") = \"false\" ]]\n    [[ $(candidate \"<><><<><>><>>><>\"\
  ) = \"false\" ]]\n}\n\nrun_test"
completions: ["    local brackets=\"$1\"\n    local opening_brackets=$(echo \"$brackets\"\
    \ | sed 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo \"$brackets\"\
    \ | sed 's/>//g' | sed 's/<//g')\n    local result=$(echo \"$opening_brackets\"\
    \ | sed 's/\\(.*\\)<\\(.*\\)>/\\1<\\2>/')\n    if [ \"$result\" != \"$brackets\"\
    \ ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", " \
    \   local brackets=$1\n    local open_brackets=$(echo $brackets | sed -e 's/<//g'\
    \ -e 's/>//g')\n    local close_brackets=$(echo $brackets | sed -e 's/>//g' -e\
    \ 's/<//g')\n    local open_brackets_count=$(echo $open_brackets | wc -w)\n  \
    \  local close_brackets_count=$(echo $close_brackets | wc -w)\n    local correct_brackets=false\n\
    \    if [ $open_brackets_count -eq $close_brackets_count ]; then\n        correct_brackets=true\n\
    \    fi\n    echo $correct_brackets", "    local brackets=\"$1\"\n    local opening_brackets=\"\
    $(echo \"$brackets\" | sed -e 's/<//g' -e 's/>//g')\"\n    local closing_brackets=\"\
    $(echo \"$brackets\" | sed -e 's/>//g' -e 's/<//g')\"\n    local result=\"$(echo\
    \ \"$opening_brackets\" | grep -v \"^$closing_brackets\" | wc -l)\"\n    if [\
    \ \"$result\" -eq 0 ]; then\n        echo \"false\"\n    else\n        echo \"\
    true\"\n    fi", "    local brackets=$1\n    local opening_brackets=$(echo $brackets\
    \ | sed 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo $brackets\
    \ | sed 's/>//g' | sed 's/<//g')\n    local result=$(echo $opening_brackets |\
    \ grep -F -v -e $closing_brackets)\n    echo $result", "    local brackets=$1\n\
    \    local opening_brackets=$(echo $brackets | sed 's/<//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed 's/>//g')\n    local result=$(echo $brackets | sed 's/<\\([^>]\\\
    )>/\\1/g')\n    echo $result\n    echo $opening_brackets\n    echo $closing_brackets\n\
    \    echo $brackets\n    echo $result\n    echo $opening_brackets $closing_brackets\n\
    \    echo $opening_brackets $closing_brackets $brackets\n    echo $opening_brackets\
    \ $closing_brackets $brackets $result\n    echo $opening_brackets $closing_brackets\
    \ $brackets $result $opening_brackets $closing_brackets $brackets $result\n  \
    \  echo $opening_brackets $closing_brackets $brackets $result $opening_brackets\
    \ $closing_brackets $brackets $result $opening_brackets $closing_brackets $brackets\
    \ $result $opening_brackets $closing_brackets $brackets $result $opening_brackets\
    \ $closing_brackets $brackets $result $opening_brackets $closing_brackets $brackets\
    \ $result $opening_brackets $closing_brackets $brackets $result $opening_brackets\
    \ $closing_brackets $brackets $result $opening_brackets $closing_brackets $brackets\
    \ $result $opening_brackets $closing_brackets $brackets $result $opening_brackets\
    \ $closing_brackets $brackets $result $opening_brackets $closing_brackets $brackets\
    \ $result $opening_brackets $closing_brackets $brackets $result $opening_brackets\
    \ $closing_brackets $brackets $result $opening_brackets $closing_brackets $brackets\
    \ $result $opening_brackets $closing_brackets $brackets $result $opening_brackets\
    \ $closing_brackets $brackets $result $opening_brackets $closing_brackets $brackets ",
  "    local brackets=\"$1\"\n    local opening_brackets=$(echo \"$brackets\" | sed\
    \ 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo \"$brackets\" |\
    \ sed 's/>//g' | sed 's/<//g')\n    local result=$(echo \"$opening_brackets\"\
    \ | sort | uniq -c | sort -n | tail -1)\n    local correct=$(echo \"$closing_brackets\"\
    \ | sort | uniq -c | sort -n | head -1)\n    if [ \"$result\" != \"$correct\"\
    \ ]; then\n        echo \"$brackets\" | sed 's/<//g' | sed 's/>//g'\n        echo\
    \ \"$result\"\n        echo \"$correct\"\n        false\n    else\n        true\n\
    \    fi", "    local brackets=\"${1}\"\n    local opening_brackets=$(grep -Eo\
    \ \"[${brackets}]+\" <<< \"$1\")\n    local closing_brackets=$(grep -Eo \"[${brackets}]+\"\
    \ <<< \"$1\")\n    local result=$(echo \"$opening_brackets\" | sort | uniq -c\
    \ | sort -n | tail -1)\n    local count=$((${result}+1))\n    if [[ ${count} -eq\
    \ 0 ]]; then\n        return 0\n    else\n        return 1\n    fi", "  local\
    \ brackets=$1\n  local opening_brackets=$(echo $brackets | sed -e 's/<//g' -e\
    \ 's/>//g')\n  local closing_brackets=$(echo $brackets | sed -e 's/>//g' -e 's/<//g')\n\
    \  local result=$(echo $opening_brackets | grep -F -v -e $closing_brackets)\n\
    \  echo $result", "  local brackets=\"$1\"\n  local opening_brackets=\"$(echo\
    \ \"$brackets\" | sed 's/<//g' | sed 's/>//g')\"\n  local closing_brackets=\"\
    $(echo \"$brackets\" | sed 's/>//g' | sed 's/<//g')\"\n  local result=\"$(echo\
    \ \"$opening_brackets\" | sort | uniq -d | wc -l)\"\n  echo \"$result\"\n  echo\
    \ \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$result\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\
    \n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\
    \n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\
    \n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\
    \n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\
    \n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\
    \n  echo \"$closing_brackets\"\n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\
    \n  echo \"$opening_brackets\"\n  echo \"$closing_brackets\"\n  ", "    local\
    \ brackets=\"$1\"\n    local opening_brackets=\"$(echo \"$brackets\" | sed 's/<//g'\
    \ | sed 's/>//g')\"\n    local closing_brackets=\"$(echo \"$brackets\" | sed 's/>//g'\
    \ | sed 's/<//g')\"\n    local result=\"$(echo \"$opening_brackets\" | sed 's/\\\
    (.*\\)<\\(.*\\)>/\\1<\\2>/')\"\n    if [ \"$result\" != \"$brackets\" ]; then\n\
    \        echo \"$brackets\" | sed 's/\\(.*\\)<\\(.*\\)>/\\1<\\2>/'\n    fi", " \
    \   local brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/<//g'\
    \ | sed 's/>//g')\n    local closing_brackets=$(echo $brackets | sed 's/>//g'\
    \ | sed 's/<//g')\n    local result=$(echo $opening_brackets | grep -F -v -e $closing_brackets)\n\
    \    echo $result", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/<//g')\n    local closing_brackets=$(echo $brackets | sed\
    \ 's/>//g')\n    local result=$(echo $opening_brackets | grep -F -v -e $closing_brackets)\n\
    \    echo $result", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed -e 's/<//g' -e 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed -e 's/>//g' -e 's/<//g')\n    local result=$(echo $opening_brackets\
    \ | grep -F -v -e $closing_brackets)\n    echo $result", "    local brackets=\"\
    $1\"\n    local opening_brackets=$(grep -E \"^<.*>$\" <<< \"$brackets\")\n   \
    \ local closing_brackets=$(grep -E \"^>.*<$\" <<< \"$brackets\")\n    local result=$(echo\
    \ \"$opening_brackets\" | grep -E -v \"^<$\" | grep -E -v \"^>$\" | grep -E -v\
    \ \"^<.*>$\" | grep -E -v \"^>.*<$\")\n    [[ \"$result\" == \"\" ]] && return\
    \ 0\n    [[ \"$result\" != \"\" ]] && return 1", "    local brackets=$1\n    local\
    \ opening_brackets=$(echo $brackets | sed 's/<//g' | sed 's/>//g')\n    local\
    \ closing_brackets=$(echo $brackets | sed 's/>//g' | sed 's/<//g')\n    local\
    \ result=$(echo $brackets | sed 's/<//g' | sed 's/>//g' | sed 's/<<//g' | sed\
    \ 's/>>//g')\n    local opening_brackets_count=$(echo $opening_brackets | wc -w)\n\
    \    local closing_brackets_count=$(echo $closing_brackets | wc -w)\n    local\
    \ result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n    local opening_brackets_count=$(echo\
    \ $opening_brackets_count | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets_count\
    \ | wc -w)\n    if [ $opening_brackets_count -ne $closing_brackets_count ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/<//g' | sed\
    \ 's/>//g')\n    local closing_brackets=$(echo $brackets | sed 's/>//g' | sed\
    \ 's/<//g')\n    local opening_count=0\n    local closing_count=0\n    for opening_bracket\
    \ in $opening_brackets; do\n        opening_count=$(($opening_count + 1))\n  \
    \  done\n    for closing_bracket in $closing_brackets; do\n        closing_count=$(($closing_count\
    \ + 1))\n    done\n    if [ $opening_count -eq $closing_count ]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local brackets=$1\n\
    \    local opening_brackets=$(echo $brackets | sed 's/<//g' | sed 's/>//g')\n\
    \    local closing_brackets=$(echo $brackets | sed 's/>//g' | sed 's/<//g')\n\
    \    local result=$(echo $opening_brackets | grep -F -v -e $closing_brackets)\n\
    \    if [ -z \"$result\" ]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed 's/>//g' | sed 's/<//g')\n    local result=$(echo $opening_brackets\
    \ | grep -F -v -e $closing_brackets)\n    echo $result", "    local brackets=$1\n\
    \    local opening_brackets=$(echo $brackets | sed 's/<//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed 's/>//g')\n    local opening_count=0\n    local closing_count=0\n\
    \    local opening_count2=0\n    local closing_count2=0\n    local opening_count3=0\n\
    \    local closing_count3=0\n    local opening_count4=0\n    local closing_count4=0\n\
    \    local opening_count5=0\n    local closing_count5=0\n    local opening_count6=0\n\
    \    local closing_count6=0\n    local opening_count7=0\n    local closing_count7=0\n\
    \    local opening_count8=0\n    local closing_count8=0\n    local opening_count9=0\n\
    \    local closing_count9=0\n    local opening_count10=0\n    local closing_count10=0\n\
    \    local opening_count11=0\n    local closing_count11=0\n    local opening_count12=0\n\
    \    local closing_count12=0\n    local opening_count13=0\n    local closing_count13=0\n\
    \    local opening_count14=0\n    local closing_count14=0\n    local opening_count15=0\n\
    \    local closing_count15=0\n    local opening_count16=0\n    local closing_count16=0\n\
    \    local opening_count17=0\n    local closing_count17=0\n    local opening_count18=0\n\
    \    local closing_count18=0\n    local opening_count19=0\n    local closing_count19=0\n\
    \    local opening_count20=0\n    local closing_count20=0\n    local opening_count21=0\n\
    \    local closing_count21=0\n    local opening_count22=0\n    local closing_count22=0\n\
    \    local opening_count23=0\n    local closing_count23=0\n    local opening_count24=0\n\
    \    local closing_count24=0\n    local opening_count25=0\n    local closing_count25=0\n\
    \    local opening_count26=0\n    local closing_count26=0\n    local opening_count27=0\n\
    \    local closing_count27=0\n    local opening_count28=0\n    local closing_count28=0\n\
    \    local opening_count29=0\n    local closing_count29=0\n    local opening_count",
  "    local brackets=$1\n    local open_brackets=$(echo $brackets | sed 's/<//g'\
    \ | sed 's/>//g')\n    local close_brackets=$(echo $brackets | sed 's/>//g' |\
    \ sed 's/<//g')\n    local open_brackets_count=$(echo $open_brackets | wc -w)\n\
    \    local close_brackets_count=$(echo $close_brackets | wc -w)\n    if [ $open_brackets_count\
    \ -eq 0 ]; then\n        echo \"false\"\n    elif [ $close_brackets_count -eq\
    \ 0 ]; then\n        echo \"true\"\n    else\n        echo \"true\"\n    fi"]
stop_tokens:
- "\n}"

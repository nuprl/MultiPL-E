language: sh
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${scores[$i]} == ${guesses[$i]} ]]; then\n       \
    \     result[i]=0\n        else\n            result[i]=${scores[$i]}-${guesses[$i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ $guess == $score ]]; then\n            diff=0\n        else\n \
    \           diff=$(( guess - score ))\n        fi\n        echo \"$diff\"\n  \
    \  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n  \
    \  [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2\
    \ 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmn4p7sfb.sh: line 29: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n\
    \            result[i]=0\n        else\n            result[i]=${guesses[i]} -\
    \ ${scores[i]}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy15e0r5o.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpy15e0r5o.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n\
    \            result[i]=0\n        else\n            result[i]=${guesses[i]} -\
    \ ${scores[i]}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy15e0r5o.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpy15e0r5o.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb8dzy11w.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score\n        score=${scores[i]}\n\
    \        local guess\n        guess=${guesses[i]}\n        if [[ ${guess} == ${score}\
    \ ]]; then\n            result[i]=\"0\"\n        else\n            result[i]=${guess}-${score}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local k\n    local diff\n    local diffs\n    local diff\n \
    \   local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx_aw_noh.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpx_aw_noh.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [ ${guesses[i]} == ${scores[i]} ]; then\n           \
    \ result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd2lou8n0.sh: line 23: [: too many arguments

    /tmp/tmpd2lou8n0.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp656g7sn5.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmp656g7sn5.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score\n        score=${scores[i]}\n\
    \        local guess\n        guess=${guesses[i]}\n        if [[ ${score} == ${guess}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${score}-${guess}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} -eq ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$((${diff}+${guess}-${score}))\n        fi\n    done\n    echo\
    \ ${diff}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiw2f0u4t.sh: line 26: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpiw2f0u4t.sh: line 29: 0+1 2 3 4 2 -2-1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 2 -2-1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} -eq ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(echo \"${guess} - ${score}\" | bc)\n        fi\n        guesses[i]=${diff}\n\
    \    done\n    echo \"${guesses}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6hff0pjh.sh: line 26: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score=${scores[i]}\n        local\
    \ guess=${guesses[i]}\n        if [[ $guess == $score ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guess}-${score}\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local score\n    local guess\n    local diff\n\
    \    local result\n    local i\n    local j\n    local k\n    local len\n    local\
    \ max\n    local min\n    local len2\n    local max2\n    local min2\n    local\
    \ diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n    local diff\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diff2\n\
    \    local diff3\n    local diff4\n    local diff5\n    local diff6\n    local\
    \ diff7\n    local diff8\n    local diff9\n    local diff10\n    local diff11\n\
    \    local diff12\n    local diff13\n    local diff14\n    local diff15\n    local\
    \ diff16\n    local diff17\n    local diff18\n    local diff19\n    local diff20\n\
    \    local diff21\n    local diff22\n    local diff23\n    local diff24\n    local\
    \ diff25\n    local diff26\n    local diff27\n    local diff28\n    local diff29\n\
    \    local diff30\n    local diff31\n    local diff32\n    local diff33\n    local\
    \ diff34\n    local diff35\n    local diff36\n    local diff37\n    local diff38\n\
    \    local diff39\n    local diff40\n    local diff41\n    local diff42\n    local\
    \ diff43\n    local diff44\n    local diff45\n    local diff46\n    local diff47\n\
    \    local diff48\n    local diff49\n    local diff50\n    local diff51\n    local\
    \ diff52\n    local diff53\n    local diff54\n    local diff55\n    local diff56\n\
    \    local diff57\n    local diff58\n    local diff59\n    local diff60\n    local\
    \ diff61\n    local diff62\n    local diff63\n    local diff64\n    local diff65\n\
    \    local diff66\n    local diff67\n    local diff68\n    local diff69\n    local\
    \ diff70\n    local diff71\n    local diff72\n    local diff73\n    local diff74\n\
    \    local diff75\n    local diff76\n    local diff77\n    local diff78\n    local\
    \ diff79\n    local diff80\n    local diff81\n    local diff82\n    local diff83\n\
    \    local diff84\n    local diff85\n    local diff86\n    local diff87\n    local\
    \ diff88\n    local diff89\n    local diff90\n    local diff91\n    local diff92\n\
    \    local diff93\n    local diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(( ${diff} + abs( ${guess} - ${score} ) ))\n        fi\n  \
    \  done\n    echo ${diff}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu72u1uw1.sh: line 29: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score\n        score=${scores[i]}\n\
    \        local guess\n        guess=${guesses[i]}\n        if [[ ${score} == ${guess}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${score}-${guess}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result[i]=$(( ${guesses[i]} - ${scores[i]} ))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkmsh2qii.sh: line 23: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkpt9jx56.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${scores[i]} == ${guesses[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${scores[i]} - ${guesses[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6qt0_9e2.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmp6qt0_9e2.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result[i]=$(echo \"${guesses[i]} - ${scores[i]}\" | bc)\n\
    \        if [[ ${result[i]} -eq 0 ]]; then\n            result[i]=0\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j k l m n\
    \ o p q r s t u v w x y z\n    i=0\n    j=0\n    k=0\n    l=0\n    m=0\n    n=0\n\
    \    o=0\n    p=0\n    q=0\n    r=0\n    s=0\n    t=0\n    u=0\n    v=0\n    w=0\n\
    \    x=0\n    y=0\n    z=0\n    while [ $i -lt ${#scores[@]} ]; do\n        if\
    \ [ $i -eq 0 ]; then\n            if [ \"${guesses[$i]}\" == \"${scores[$i]}\"\
    \ ]; then\n                result[$i]=0\n            else\n                result[$i]=$((\
    \ ${guesses[$i]} - ${scores[$i]} ))\n            fi\n            i=$(( i + 1 ))\n\
    \        fi\n        if [ $i -eq 1 ]; then\n            if [ \"${guesses[$i]}\"\
    \ == \"${scores[$i]}\" ]; then\n                result[$i]=0\n            else\n\
    \                result[$i]=$(( ${guesses[$i]} - ${scores[$i]} ))\n          \
    \  fi\n            i=$(( i + 1 ))\n        fi\n        if [ $i -eq 2 ]; then\n\
    \            if [ \"${guesses[$i]}\" == \"${scores[$i]}\" ]; then\n          \
    \      result[$i]=0\n            else\n                result[$i]=$(( ${guesses[$i]}\
    \ - ${scores[$i]} ))\n            fi\n            i=$(( i + 1 ))\n        fi\n\
    \        if [ $i -eq 3 ]; then\n            if [ \"${guesses[$i]}\" == \"${scores[$i]}\"\
    \ ]; then\n                result[$i]=0\n            else\n                result[$i]=$((\
    \ ${guesses[$i]} - ${scores[$i]} ))\n            fi\n            i=$(( i + 1 ))\n\
    \        fi\n        if [ $i -eq 4 ]; then\n            if [ \"${guesses[$i]}\"\
    \ == \"${scores[$i]}\" ]; then\n                result[$i]=0\n            else\n\
    \                result[$i]=$(( ${guesses[$i]} - ${scores[$i]} ))\n          \
    \  fi\n            i=$(( i + 1 ))\n        fi\n        if [ $i -eq 5 ]; then\n\
    \            if [ \"${guesses[$i]}\" == \"${scores[$i]}\" ]; then\n          \
    \      result[$i]=0\n            else\n                result[$i]=$(( ${guesses[$i]}\
    \ - ${scores[$i]} \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmnmi2nw7.sh: line 86: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmnmi2nw7.sh: line 102: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ score\n    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for\
    \ score in $scores; do\n        local guess\n        guess=$guesses[$((${#guesses}-1))]\n\
    \        if [ \"$guess\" = \"$score\" ]; then \n            result+=(0)\n    \
    \    else\n            result+=($(echo \"$guess - $score\" | bc -l))\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local score\n    local guess\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${score}-${guess}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diffsCount\n    local diffsCountMax\n\
    \    local diffsCountMaxIndex\n    local diffsCountMaxIndexIndex\n    local diffsCountMaxIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndex\n    local diffsCountMaxIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndex\n    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndex\n    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local\
    \ diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndex\n    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n \
    \   local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n  \
    \  local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    local diffsCountMaxIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [[ ${score:0:1} == \"-\" ]]; then\n            score=${score:1}\n\
    \            guess=${guess:1}\n        fi\n        result[i]=$(( ${guess} - ${score}\
    \ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaw65dlt5.sh: line 29: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local score\n    local guess\n    local diff\n\
    \    local result\n    local i\n    local j\n    local k\n    local len\n    local\
    \ diffs\n    local diff\n    local difflen\n    local diffslen\n    local difflens\n\
    \    local difflen\n    local difflenslen\n    local difflenslens\n    local difflenslenslen\n\
    \    local difflenslenslens\n    local difflenslenslenslen\n    local difflenslenslenslens\n\
    \    local difflenslenslenslenslen\n    local difflenslenslenslenslens\n    local\
    \ difflenslenslenslenslenslen\n    local difflenslenslenslenslenslens\n    local\
    \ difflenslenslenslenslenslenslen\n    local difflenslenslenslenslenslenslenslen\n\
    \    local difflenslenslenslenslenslenslenslens\n    local difflenslenslenslenslenslenslenslenslens\n\
    \    local difflenslenslenslenslenslenslenslenslenslens\n    local difflenslenslenslenslenslenslenslenslenslenslens\n\
    \    local difflenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ difflenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ difflenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n \
    \   local difflenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local difflenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diff\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [ ${guesses[i]} == ${scores[i]} ]; then\n           \
    \ result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd2lou8n0.sh: line 23: [: too many arguments

    /tmp/tmpd2lou8n0.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local diff\n    local score\n    local guess\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu4yqj8y_.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpu4yqj8y_.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ diff i j k l m n o p q r s t u v w x y z\n    scores=$1\n    guesses=$2\n  \
    \  diff=()\n    for ((i=0; i<${#scores[@]}; i++)); do\n        diff+=(0)\n   \
    \     for ((j=0; j<${#guesses[@]}; j++)); do\n            if [[ ${guesses[j]}\
    \ == ${scores[i]} ]]; then\n                diff+=(0)\n            else\n    \
    \            diff+=(${abs(${guesses[j]} - ${scores[i]})})\n            fi\n  \
    \      done\n    done\n    echo ${diff[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmp3p5sqyfy.sh: line 28: ${abs(${guesses[j]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diff2\n\
    \    local diff3\n    local diff4\n    local diff5\n    local diff6\n    local\
    \ diff7\n    local diff8\n    local diff9\n    local diff10\n    local diff11\n\
    \    local diff12\n    local diff13\n    local diff14\n    local diff15\n    local\
    \ diff16\n    local diff17\n    local diff18\n    local diff19\n    local diff20\n\
    \    local diff21\n    local diff22\n    local diff23\n    local diff24\n    local\
    \ diff25\n    local diff26\n    local diff27\n    local diff28\n    local diff29\n\
    \    local diff30\n    local diff31\n    local diff32\n    local diff33\n    local\
    \ diff34\n    local diff35\n    local diff36\n    local diff37\n    local diff38\n\
    \    local diff39\n    local diff40\n    local diff41\n    local diff42\n    local\
    \ diff43\n    local diff44\n    local diff45\n    local diff46\n    local diff47\n\
    \    local diff48\n    local diff49\n    local diff50\n    local diff51\n    local\
    \ diff52\n    local diff53\n    local diff54\n    local diff55\n    local diff56\n\
    \    local diff57\n    local diff58\n    local diff59\n    local diff60\n    local\
    \ diff61\n    local diff62\n    local diff63\n    local diff64\n    local diff65\n\
    \    local diff66\n    local diff67\n    local diff68\n    local diff69\n    local\
    \ diff70\n    local diff71\n    local diff72\n    local diff73\n    local diff74\n\
    \    local diff75\n    local diff76\n    local diff77\n    local diff78\n    local\
    \ diff79\n    local diff80\n    local diff81\n    local diff82\n    local diff83\n\
    \    local diff84\n    local diff85\n    local diff86\n    local diff87\n    local\
    \ diff88\n    local diff89\n    local diff90\n    local diff91\n    local diff92\n\
    \    local diff93\n    local diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i\
    \ = 0; i < ${#scores}; i++ )); do\n        score=${scores:$i:1}\n        guess=${guesses:$i:1}\n\
    \        if [ \"$guess\" == \"$score\" ]; then\n            diff=0\n        else\n\
    \            diff=$(( diff + abs( $guess - $score ) ))\n        fi\n    done\n\
    \    echo \"$diff\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn8367bf7.sh: line 29: diff + abs( 2 - 5 ) : syntax error in expression
    (error token is "( 2 - 5 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffabs\n\
    \    local diffabsmax\n    local diffabsmaxindex\n    local diffabsmaxvalue\n\
    \    local diffabsmaxindexvalue\n    local diffabsmaxindexvalue2\n    local diffabsmaxindexvalue3\n\
    \    local diffabsmaxindexvalue4\n    local diffabsmaxindexvalue5\n    local diffabsmaxindexvalue6\n\
    \    local diffabsmaxindexvalue7\n    local diffabsmaxindexvalue8\n    local diffabsmaxindexvalue9\n\
    \    local diffabsmaxindexvalue10\n    local diffabsmaxindexvalue11\n    local\
    \ diffabsmaxindexvalue12\n    local diffabsmaxindexvalue13\n    local diffabsmaxindexvalue14\n\
    \    local diffabsmaxindexvalue15\n    local diffabsmaxindexvalue16\n    local\
    \ diffabsmaxindexvalue17\n    local diffabsmaxindexvalue18\n    local diffabsmaxindexvalue19\n\
    \    local diffabsmaxindexvalue20\n    local diffabsmaxindexvalue21\n    local\
    \ diffabsmaxindexvalue22\n    local diffabsmaxindexvalue23\n    local diffabsmaxindexvalue24\n\
    \    local diffabsmaxindexvalue25\n    local diffabsmaxindexvalue26\n    local\
    \ diffabsmaxindexvalue27\n    local diffabsmaxindexvalue28\n    local diffabsmaxindexvalue29\n\
    \    local diffabsmaxindexvalue30\n    local diffabsmaxindexvalue31\n    local\
    \ diffabsmaxindexvalue32\n    local diffabsmaxindexvalue33\n    local diffabsmaxindexvalue34\n\
    \    local diffabsmaxindexvalue35\n    local diffabsmaxindexvalue36\n    local\
    \ diffabsmaxindexvalue37\n    local diffabsmaxindexvalue38\n    local diffabsmaxindexvalue39\n\
    \    local diffabsmaxindexvalue40\n    local diffabsmaxindexvalue41\n    local\
    \ diffabsmaxindexvalue42\n    local diffabsmaxindexvalue43\n    local diffabsmaxindexvalue44\n\
    \    local diffabsmaxindexvalue45\n    local diffabsmaxindexvalue46\n    local\
    \ diffabsmaxindexvalue47\n    local diffabsmaxindexvalue48\n    local diffabsmaxindexvalue49\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess}-${score}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j k l m n\
    \ o p q r s t u v w x y z\n    local -a scores\n    local -a guesses\n    local\
    \ -a result\n    scores=( $( echo $scores | tr ' ' '\\n' ) )\n    guesses=( $(\
    \ echo $guesses | tr ' ' '\\n' ) )\n    for ((i=0; i<${#scores[@]}; i++)); do\n\
    \        for ((j=0; j<${#guesses[@]}; j++)); do\n            k=$(echo $i | bc)\n\
    \            l=$(echo $j | bc)\n            m=$((k+l))\n            n=$((k-l))\n\
    \            o=$((k*l))\n            p=$((k+l+m))\n            q=$((k+l+m+n))\n\
    \            r=$((k+l+m+n+o))\n            s=$((k+l+m+n+o+p))\n            t=$((k+l+m+n+o+p+q))\n\
    \            u=$((k+l+m+n+o+p+q+r))\n            v=$((k+l+m+n+o+p+q+r+s))\n  \
    \          w=$((k+l+m+n+o+p+q+r+s+t))\n            x=$((k+l+m+n+o+p+q+r+s+t+u))\n\
    \            y=$((k+l+m+n+o+p+q+r+s+t+u+v))\n            z=$((k+l+m+n+o+p+q+r+s+t+u+v+w))\n\
    \            if [ $m -eq 0 ]; then\n                result+=( $(( abs( $guesses[$j]\
    \ - $scores[$i] ) )) )\n            elif [ $n -eq 0 ]; then\n                result+=(\
    \ $(( abs( $guesses[$j] - $scores[$i] ) )) )\n            elif [ $o -eq 0 ]; then\n\
    \                result+=( $(( abs( $guesses[$j] - $scores[$i] ) )) )\n      \
    \      elif [ $p -eq 0 ]; then\n                result+=( $(( abs( $guesses[$j]\
    \ - $scores[$i] ) )) )\n            elif [ $q -\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpczmim7lg.sh: line 55: syntax error near unexpected token `}''

    /tmp/tmpczmim7lg.sh: line 55: `}''

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i\
    \ = 0; i < ${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ \"$score\" == \"$guess\" ]]; then\n            diff=0\n       \
    \ else\n            diff=$(( abs($guess - $score) ))\n        fi\n        guesses[i]=$diff\n\
    \    done\n    echo \"${guesses[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2b2o0_6c.sh: line 29: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local score\n    local guess\n    local diff\n\
    \    local result\n    local i\n    local j\n    local k\n    local len\n    local\
    \ len2\n    local len3\n    local len4\n    local len5\n    local len6\n    local\
    \ len7\n    local len8\n    local len9\n    local len10\n    local len11\n   \
    \ local len12\n    local len13\n    local len14\n    local len15\n    local len16\n\
    \    local len17\n    local len18\n    local len19\n    local len20\n    local\
    \ len21\n    local len22\n    local len23\n    local len24\n    local len25\n\
    \    local len26\n    local len27\n    local len28\n    local len29\n    local\
    \ len30\n    local len31\n    local len32\n    local len33\n    local len34\n\
    \    local len35\n    local len36\n    local len37\n    local len38\n    local\
    \ len39\n    local len40\n    local len41\n    local len42\n    local len43\n\
    \    local len44\n    local len45\n    local len46\n    local len47\n    local\
    \ len48\n    local len49\n    local len50\n    local len51\n    local len52\n\
    \    local len53\n    local len54\n    local len55\n    local len56\n    local\
    \ len57\n    local len58\n    local len59\n    local len60\n    local len61\n\
    \    local len62\n    local len63\n    local len64\n    local len65\n    local\
    \ len66\n    local len67\n    local len68\n    local len69\n    local len70\n\
    \    local len71\n    local len72\n    local len73\n    local len74\n    local\
    \ len75\n    local len76\n    local len77\n    local len78\n    local len79\n\
    \    local len80\n    local len81\n    local len82\n    local len83\n    local\
    \ len84\n    local len85\n    local len86\n    local len87\n    local len88\n\
    \    local len89\n    local len90\n    local len91\n    local len92\n    local\
    \ len93\n    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i\
    \ = 0; i < ${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [ \"$guess\" == \"$score\" ]; then\n            diff=0\n        else\n\
    \            diff=$(( abs($guess - $score) ))\n        fi\n        guesses[i]=$diff\n\
    \    done\n    echo $guesses\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9s2mnw8i.sh: line 29: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp656g7sn5.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmp656g7sn5.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [[ $score == $guess ]]; then\n            result[i]=0\n        else\n\
    \            result[i]=${score}-${guess}\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j k l m n\
    \ o p q r s t u v w x y z\n    i=${#scores[@]}\n    j=${#guesses[@]}\n    for\
    \ ((k=0; k<i; k++))\n    do\n        for ((l=0; l<j; l++))\n        do\n     \
    \       if [[ $guesses[l] == ${scores[k]} ]]; then\n                result+=(\"\
    0\")\n            else\n                result+=(\"$(echo \"${guesses[l]} - ${scores[k]}\"\
    \ | bc)\")\n            fi\n        done\n    done\n    for ((m=0; m<i; m++))\n\
    \    do\n        for ((n=0; n<j; n++))\n        do\n            if [[ $guesses[m]\
    \ == ${scores[n]} ]]; then\n                result+=(\"0\")\n            else\n\
    \                result+=(\"$(echo \"${guesses[m]} - ${scores[n]}\" | bc)\")\n\
    \            fi\n        done\n    done\n    for ((o=0; o<i; o++))\n    do\n \
    \       for ((p=0; p<j; p++))\n        do\n            if [[ $guesses[o] == ${scores[p]}\
    \ ]]; then\n                result+=(\"0\")\n            else\n              \
    \  result+=(\"$(echo \"${guesses[o]} - ${scores[p]}\" | bc)\")\n            fi\n\
    \        done\n    done\n    for ((q=0; q<i; q++))\n    do\n        for ((r=0;\
    \ r<j; r++))\n        do\n            if [[ $guesses[q] == ${scores[r]} ]]; then\n\
    \                result+=(\"0\")\n            else\n                result+=(\"\
    $(echo \"${guesses[q]} - ${scores[r]}\" | bc)\")\n            fi\n        done\n\
    \    done\n    for ((s=0; s<i; s++))\n    do\n        for ((t=0; t<j; t++))\n\
    \        do\n            if [[ $guesses[s] == ${scores[t]} ]]; then\n        \
    \        result+=(\"0\")\n            else\n                result+=(\"$(echo\
    \ \"${guesses[s]} - ${scores[t]}\" | bc)\")\n            fi\n        done\n  \
    \  done\n    for ((u=0; u<i; u++))\n    do\n        for ((v=0; v<j; v++))\n  \
    \      do\n            if [[ $guesses[\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpok9k73ah.sh: line 84: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpok9k73ah.sh: line 84: syntax error near `$guesses[''

    /tmp/tmpok9k73ah.sh: line 84: `            if [[ $guesses[''

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score\n        score=${scores[i]}\n\
    \        local guess\n        guess=${guesses[i]}\n        if [[ ${guess} == ${score}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${guess}\
    \ - ${score}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp40iapyvk.sh: line 31: `result[i]'': not a valid identifier

    /tmp/tmp40iapyvk.sh: line 31: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbmnfwhvu.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]} == ${scores[i]} ]; then\n\
    \            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk8q19dst.sh: line 24: [: too many arguments

    /tmp/tmpk8q19dst.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt1beso8y.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu4yqj8y_.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpu4yqj8y_.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score guess\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} -eq ${guess} ]]; then\n            result[i]=${score}\n\
    \        else\n            result[i]=${score}-${guess}\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1s82r094.sh: line 26: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=\"0\"\n  \
    \      else\n            result[i]=${abs(${guess} - ${score})}\n        fi\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpohhh3cl_.sh: line 28: ${abs(${guess} - ${score})}: bad substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diffslen\n    local diffslens\n   \
    \ local diffslenslen\n    local diffslenslens\n    local diffslenslenslen\n  \
    \  local diffslenslenslens\n    local diffslenslenslenslen\n    local diffslenslenslenslens\n\
    \    local diffslenslenslenslenslen\n    local diffslenslenslenslenslens\n   \
    \ local diffslenslenslenslenslenslen\n    local diffslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslen\n    local diffslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslens\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score=${scores[i]}\n        local\
    \ guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guess}\n        fi\n  \
    \  done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb8dzy11w.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        for ((j=0; j<${#guesses[@]}; j++));\
    \ do\n            if [[ ${guesses[$j]} -eq ${scores[$i]} ]]; then\n          \
    \      result[$i]=$((${result[$i]} + 0))\n            else\n                result[$i]=$((${result[$i]}\
    \ + (${guesses[$j]} - ${scores[$i]})))\n            fi\n        done\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc2t_ola9.sh: line 25: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmpc2t_ola9.sh: line 28: + (1 2 3 4 2 -2 - 1 2 3 4 5 1): missing `)'' (error
    token is "2 3 4 2 -2 - 1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [ \"$score\" -eq \"$guess\" ]; then\n            result[i]=0\n   \
    \     else\n            result[i]=$(( abs($guess - $score)))\n        fi\n   \
    \ done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2v2zjl6w.sh: line 25: [: 1 2 3 4 5 1: integer expression expected

    /tmp/tmp2v2zjl6w.sh: line 28: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1): syntax error in
    expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ score\n    scores=$1\n    guesses=$2\n    local result\n    local i\n    local\
    \ j\n    local diff\n    local diffs\n    local diff\n    local diffs\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ diff i j k l m n o p q r s t u v w x y z\n    scores=$1\n    guesses=$2\n  \
    \  diff=()\n    for (( i = 0; i < ${#scores[@]}; i++ )); do\n        for (( j\
    \ = 0; i < ${#guesses[@]}; j++ )); do\n            k=$(expr $i + $j)\n       \
    \     if [[ ${guesses[$k]} -eq ${scores[$i]} ]]; then\n                diff[$k]=0\n\
    \            else\n                diff[$k]=$(( ${guesses[$k]} - ${scores[$i]}\
    \ ))\n            fi\n        done\n    done\n    for (( i = 0; i < ${#diff[@]};\
    \ i++ )); do\n        if [[ ${diff[$i]} -gt 0 ]]; then\n            diff[$i]=\"\
    \\\"${diff[$i]}\\\"\"\n        else\n            diff[$i]=\"\\\"${diff[$i]}\\\"\
    \"\n        fi\n    done\n    echo \"${diff[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeubdhrqi.sh: line 25: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmpeubdhrqi.sh: line 28: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error in expression
    (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ score\n    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for\
    \ (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            result[i]=${score}\n\
    \        else\n            result[i]=${score}-${guess}\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${scores[$i]} == ${guesses[$i]} ]]; then\n       \
    \     result[i]=0\n        else\n            result[i]=${scores[$i]}-${guesses[$i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(( abs( ${guess} - ${score} ) ))\n        fi\n        guesses[i]=${diff}\n\
    \    done\n    echo \"${guesses}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4j5fz0wk.sh: line 29: abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diff2\n\
    \    local diff3\n    local diff4\n    local diff5\n    local diff6\n    local\
    \ diff7\n    local diff8\n    local diff9\n    local diff10\n    local diff11\n\
    \    local diff12\n    local diff13\n    local diff14\n    local diff15\n    local\
    \ diff16\n    local diff17\n    local diff18\n    local diff19\n    local diff20\n\
    \    local diff21\n    local diff22\n    local diff23\n    local diff24\n    local\
    \ diff25\n    local diff26\n    local diff27\n    local diff28\n    local diff29\n\
    \    local diff30\n    local diff31\n    local diff32\n    local diff33\n    local\
    \ diff34\n    local diff35\n    local diff36\n    local diff37\n    local diff38\n\
    \    local diff39\n    local diff40\n    local diff41\n    local diff42\n    local\
    \ diff43\n    local diff44\n    local diff45\n    local diff46\n    local diff47\n\
    \    local diff48\n    local diff49\n    local diff50\n    local diff51\n    local\
    \ diff52\n    local diff53\n    local diff54\n    local diff55\n    local diff56\n\
    \    local diff57\n    local diff58\n    local diff59\n    local diff60\n    local\
    \ diff61\n    local diff62\n    local diff63\n    local diff64\n    local diff65\n\
    \    local diff66\n    local diff67\n    local diff68\n    local diff69\n    local\
    \ diff70\n    local diff71\n    local diff72\n    local diff73\n    local diff74\n\
    \    local diff75\n    local diff76\n    local diff77\n    local diff78\n    local\
    \ diff79\n    local diff80\n    local diff81\n    local diff82\n    local diff83\n\
    \    local diff84\n    local diff85\n    local diff86\n    local diff87\n    local\
    \ diff88\n    local diff89\n    local diff90\n    local diff91\n    local diff92\n\
    \    local diff93\n    local diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local k\n    local score\n    local guess\n    local diff\n\
    \    local diff2\n    local diff3\n    local diff4\n    local diff5\n    local\
    \ diff6\n    local diff7\n    local diff8\n    local diff9\n    local diff10\n\
    \    local diff11\n    local diff12\n    local diff13\n    local diff14\n    local\
    \ diff15\n    local diff16\n    local diff17\n    local diff18\n    local diff19\n\
    \    local diff20\n    local diff21\n    local diff22\n    local diff23\n    local\
    \ diff24\n    local diff25\n    local diff26\n    local diff27\n    local diff28\n\
    \    local diff29\n    local diff30\n    local diff31\n    local diff32\n    local\
    \ diff33\n    local diff34\n    local diff35\n    local diff36\n    local diff37\n\
    \    local diff38\n    local diff39\n    local diff40\n    local diff41\n    local\
    \ diff42\n    local diff43\n    local diff44\n    local diff45\n    local diff46\n\
    \    local diff47\n    local diff48\n    local diff49\n    local diff50\n    local\
    \ diff51\n    local diff52\n    local diff53\n    local diff54\n    local diff55\n\
    \    local diff56\n    local diff57\n    local diff58\n    local diff59\n    local\
    \ diff60\n    local diff61\n    local diff62\n    local diff63\n    local diff64\n\
    \    local diff65\n    local diff66\n    local diff67\n    local diff68\n    local\
    \ diff69\n    local diff70\n    local diff71\n    local diff72\n    local diff73\n\
    \    local diff74\n    local diff75\n    local diff76\n    local diff77\n    local\
    \ diff78\n    local diff79\n    local diff80\n    local diff81\n    local diff82\n\
    \    local diff83\n    local diff84\n    local diff85\n    local diff86\n    local\
    \ diff87\n    local diff88\n    local diff89\n    local diff90\n    local diff91\n\
    \    local diff92\n    local diff93\n    \n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [ ${guesses[i]} == ${scores[i]} ]; then\n           \
    \ result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbsp4i0no.sh: line 23: [: too many arguments

    /tmp/tmpbsp4i0no.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpbsp4i0no.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score=${scores[i]}\n        local\
    \ guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guess}\n        fi\n  \
    \  done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(( abs( ${guess} - ${score} ) ))\n        fi\n        guesses[i]=${diff}\n\
    \    done\n    echo \"${guesses}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4j5fz0wk.sh: line 29: abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt1beso8y.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ score\n    scores=$1\n    guesses=$2\n    local result\n    local i\n    local\
    \ j\n    local k\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[$i]} == ${scores[$i]} ]]; then\n       \
    \     result[$i]=0\n        else\n            result[$i]=$(( ${guesses[$i]} -\
    \ ${scores[$i]} ))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpurlgcujy.sh: line 26: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i score guess diff result\n    diff=0\n\
    \    result=()\n    for ((i=0; i < ${#scores}; i++)); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${score} -eq ${guess} ]]; then\n \
    \           result[i]=${score}\n        elif [[ ${score} -gt ${guess} ]]; then\n\
    \            diff=$((${diff} + ${guess} - ${score}))\n            result[i]=${diff}\n\
    \        else\n            diff=$((${diff} + ${score} - ${guess}))\n         \
    \   result[i]=${diff}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6x8sfigp.sh: line 27: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmp6x8sfigp.sh: line 29: [[: 1 2 3 4 5 1: syntax error in expression (error
    token is "2 3 4 5 1")

    /tmp/tmp6x8sfigp.sh: line 33: 0 + 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error in
    expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores}; i++ )); do\n        local score guess\n        score=${scores:$i:1}\n\
    \        guess=${guesses:$i:1}\n        if [ \"$guess\" == \"$score\" ]; then\n\
    \            result[i]=0\n        else\n            result[i]=${score}-${guess}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score=${scores[i]}\n        local\
    \ guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guess}-${score}\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnh615b8v.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i score guess diff result\n    i=0\n\
    \    diff =0\n    result=()\n    while [ $i -lt ${#scores} ]; do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [ \"$score\" -eq \"$guess\" ]; then\n\
    \            diff=0\n        else\n            diff=$(( abs( score - guess ) ))\n\
    \        fi\n        result[$i]=\"$diff\"\n        i=$(( i + 1 ))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'diff: missing operand after ''=0''

    diff: Try ''diff --help'' for more information.

    /tmp/tmpx0n_rz6o.sh: line 28: [: 1 2 3 4 5 1: integer expression expected

    /tmp/tmpx0n_rz6o.sh: line 31: abs( score - guess ) : syntax error in expression
    (error token is "( score - guess ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(( ${diff} + abs( ${guess} - ${score} ) ))\n        fi\n  \
    \  done\n    echo \"${guesses}\"\n    echo \"${diff}\"\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprg800bfa.sh: line 29: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffabs\n\
    \    local diffsign\n    local diffabssign\n    local diffsignsign\n    local\
    \ diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n   \
    \ local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local diffsignsignsign\n    local diffabssignsign\n    local diffsignsignsign\n\
    \    local diffabssignsign\n    local diffsignsignsign\n    local diffabssignsign\n\
    \    local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx_aw_noh.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpx_aw_noh.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score guess\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ $guess == $score ]]; then\n            result[i]=0\n        else\n\
    \            result[i]=${score-$guess}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb8dzy11w.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb8dzy11w.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0apfdr9s.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffabs\n\
    \    local diffabsmax\n    local diffabsmaxindex\n    local diffabsmaxindex2\n\
    \    local diffabsmaxindex3\n    local diffabsmaxindex4\n    local diffabsmaxindex5\n\
    \    local diffabsmaxindex6\n    local diffabsmaxindex7\n    local diffabsmaxindex8\n\
    \    local diffabsmaxindex9\n    local diffabsmaxindex10\n    local diffabsmaxindex11\n\
    \    local diffabsmaxindex12\n    local diffabsmaxindex13\n    local diffabsmaxindex14\n\
    \    local diffabsmaxindex15\n    local diffabsmaxindex16\n    local diffabsmaxindex17\n\
    \    local diffabsmaxindex18\n    local diffabsmaxindex19\n    local diffabsmaxindex20\n\
    \    local diffabsmaxindex21\n    local diffabsmaxindex22\n    local diffabsmaxindex23\n\
    \    local diffabsmaxindex24\n    local diffabsmaxindex25\n    local diffabsmaxindex26\n\
    \    local diffabsmaxindex27\n    local diffabsmaxindex28\n    local diffabsmaxindex29\n\
    \    local diffabsmaxindex30\n    local diffabsmaxindex31\n    local diffabsmaxindex32\n\
    \    local diffabsmaxindex33\n    local diffabsmaxindex34\n    local diffabsmaxindex35\n\
    \    local diffabsmaxindex36\n    local diffabsmaxindex37\n    local diffabsmaxindex38\n\
    \    local diffabsmaxindex39\n    local diffabsmaxindex40\n    local diffabsmaxindex41\n\
    \    local diffabsmaxindex42\n    local diffabsmaxindex43\n    local diffabsmaxindex44\n\
    \    local diffabsmaxindex45\n    local diffabsmaxindex46\n    local diffabsmaxindex47\n\
    \    local diffabsmaxindex48\n    local diffabsmaxindex49\n    local diffabsmaxindex50\n\
    \    local diffabsmaxindex51\n    local diffabsmaxindex52\n    local diffabsmaxindex53\n\
    \    local diffabsmaxindex54\n    local diffabsmaxindex55\n    local diffabsmaxindex56\n\
    \    local diffabsmaxindex57\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${scores[$i]} == ${guesses[$i]} ]]; then\n       \
    \     result[$i]=0\n        else\n            result[$i]=${scores[$i]}-${guesses[$i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb8dzy11w.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n\
    \            result[i]=0\n        else\n            result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbpyyyypx.sh: line 26: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [[ ${score} -eq ${guess} ]]; then\n            result[i]=0\n     \
    \   else\n            result[i]=${score}-${guess}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcs8ku0g6.sh: line 25: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} -eq ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(( ${diff} + abs( ${guess} - ${score} ) ))\n        fi\n  \
    \  done\n    echo ${diff}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwmhw6s7o.sh: line 26: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpwmhw6s7o.sh: line 29: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax error
    in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]];\
    \ then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkpt9jx56.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local score\n    local guess\n    local diff\n\
    \    local result\n    local i\n    local j\n    local k\n    local len\n    local\
    \ len2\n    local len3\n    local len4\n    local len5\n    local len6\n    local\
    \ len7\n    local len8\n    local len9\n    local len10\n    local len11\n   \
    \ local len12\n    local len13\n    local len14\n    local len15\n    local len16\n\
    \    local len17\n    local len18\n    local len19\n    local len20\n    local\
    \ len21\n    local len22\n    local len23\n    local len24\n    local len25\n\
    \    local len26\n    local len27\n    local len28\n    local len29\n    local\
    \ len30\n    local len31\n    local len32\n    local len33\n    local len34\n\
    \    local len35\n    local len36\n    local len37\n    local len38\n    local\
    \ len39\n    local len40\n    local len41\n    local len42\n    local len43\n\
    \    local len44\n    local len45\n    local len46\n    local len47\n    local\
    \ len48\n    local len49\n    local len50\n    local len51\n    local len52\n\
    \    local len53\n    local len54\n    local len55\n    local len56\n    local\
    \ len57\n    local len58\n    local len59\n    local len60\n    local len61\n\
    \    local len62\n    local len63\n    local len64\n    local len65\n    local\
    \ len66\n    local len67\n    local len68\n    local len69\n    local len70\n\
    \    local len71\n    local len72\n    local len73\n    local len74\n    local\
    \ len75\n    local len76\n    local len77\n    local len78\n    local len79\n\
    \    local len80\n    local len81\n    local len82\n    local len83\n    local\
    \ len84\n    local len85\n    local len86\n    local len87\n    local len88\n\
    \    local len89\n    local len90\n    local len91\n    local len92\n    local\
    \ len93\n    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local diff score\n    diff=0\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n\
    \        if [[ ${score} == ${guess} ]]; then\n            diff=0\n        else\n\
    \            diff=$(( ${diff} + abs( ${guess} - ${score} ) ))\n        fi\n  \
    \  done\n    echo ${diff}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu72u1uw1.sh: line 29: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffabs\n\
    \    local diffdiff\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n\
    \    local diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores}; i++ )); do\n        local score=${scores:$i:1}\n        local guess=${guesses:$i:1}\n\
    \        if [[ ${score} -eq ${guess} ]]; then\n            result+=(0)\n     \
    \   else\n            result+=($(echo \"${guess} - ${score}\" | bc -l))\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnmso7qje.sh: line 25: [[: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local i j diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n\
    \            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxtm7w_cr.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j k l m\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        for ((j=0; j<${#guesses[@]};\
    \ j++)); do\n            if [[ ${guesses[j]} == ${scores[i]} ]]; then\n      \
    \          k=$(expr $j + 1)\n                l=$(expr $i + 1)\n              \
    \  ((m=$((k - l)))\n                if [[ ${guesses[l]} == ${scores[k]} ]]; then\n\
    \                    result[i]=$((0))\n                else\n                \
    \    result[i]=$((abs(${guesses[l]} - ${scores[k]})))\n                fi\n  \
    \          else\n                result[i]=$((abs(${guesses[j]} - ${scores[i]})))\n\
    \            fi\n        done\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpchoz9vfc.sh: line 29: syntax error near unexpected token `then''

    /tmp/tmpchoz9vfc.sh: line 29: `                if [[ ${guesses[l]} == ${scores[k]}
    ]]; then''

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score\n        score=${scores[i]}\n\
    \        local guess\n        guess=${guesses[i]}\n        if [[ ${guess} == ${score}\
    \ ]]; then\n            result[i]=\"0\"\n        else\n            result[i]=${guess}\
    \ - ${score}\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptz9nnb1n.sh: line 31: `result[i]'': not a valid identifier

    /tmp/tmptz9nnb1n.sh: line 31: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt1beso8y.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnh615b8v.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diff2\n\
    \    local diff3\n    local diff4\n    local diff5\n    local diff6\n    local\
    \ diff7\n    local diff8\n    local diff9\n    local diff10\n    local diff11\n\
    \    local diff12\n    local diff13\n    local diff14\n    local diff15\n    local\
    \ diff16\n    local diff17\n    local diff18\n    local diff19\n    local diff20\n\
    \    local diff21\n    local diff22\n    local diff23\n    local diff24\n    local\
    \ diff25\n    local diff26\n    local diff27\n    local diff28\n    local diff29\n\
    \    local diff30\n    local diff31\n    local diff32\n    local diff33\n    local\
    \ diff34\n    local diff35\n    local diff36\n    local diff37\n    local diff38\n\
    \    local diff39\n    local diff40\n    local diff41\n    local diff42\n    local\
    \ diff43\n    local diff44\n    local diff45\n    local diff46\n    local diff47\n\
    \    local diff48\n    local diff49\n    local diff50\n    local diff51\n    local\
    \ diff52\n    local diff53\n    local diff54\n    local diff55\n    local diff56\n\
    \    local diff57\n    local diff58\n    local diff59\n    local diff60\n    local\
    \ diff61\n    local diff62\n    local diff63\n    local diff64\n    local diff65\n\
    \    local diff66\n    local diff67\n    local diff68\n    local diff69\n    local\
    \ diff70\n    local diff71\n    local diff72\n    local diff73\n    local diff74\n\
    \    local diff75\n    local diff76\n    local diff77\n    local diff78\n    local\
    \ diff79\n    local diff80\n    local diff81\n    local diff82\n    local diff83\n\
    \    local diff84\n    local diff85\n    local diff86\n    local diff87\n    local\
    \ diff88\n    local diff89\n    local diff90\n    local diff91\n    local diff92\n\
    \    local diff93\n    local diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        local score=${scores[i]}\n        local guess=${guesses[i]}\n\
    \        if [ \"$score\" -eq \"$guess\" ]; then\n            result[i]=0\n   \
    \     else\n            result[i]=${score}-${guess}\n        fi\n    done\n  \
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcdi1yp7g.sh: line 25: [: 1 2 3 4 5 1: integer expression expected

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score=${scores[i]}\n        local\
    \ guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n         \
    \   result[i]=${guess}\n        else\n            result[i]=${score}\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        local score\n        score=${scores[i]}\n\
    \        local guess\n        guess=${guesses[i]}\n        if [[ ${guess} == ${score}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${guess}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i = 0; i <\
    \ ${#scores}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n\
    \            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzw8_dnnw.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for ((i = 0; i < ${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2e9978f9.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu4yqj8y_.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpu4yqj8y_.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local score\n    local guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    result=()\n    local i\n\
    \    local j\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\n\
    \    scores=$1\n    guesses=$2\n    local result\n    local i\n    local j\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxh7rmi6p.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    local i j k l m n\n\
    \    local score\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diff\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051582
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores guesses\
    \ result\n    scores=$1\n    guesses=$2\n    result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result[i]=$(echo \"${guesses[i]} - ${scores[i]}\" | bc)\n\
    \        if [[ ${result[i]} == 0 ]]; then\n            result[i]=\"0\"\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660051582

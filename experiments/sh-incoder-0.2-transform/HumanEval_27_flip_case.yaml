name: HumanEval_27_flip_case
language: sh
prompt: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n# $1\
  \ is a string\nflip_case() {\n"
tests: "}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n\
  \    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
  \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
completions: ["  local string=\"$1\"\n  echo \"${string^}\"", "    local string=$1\n\
    \    local output\n    output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"",
  "    local string=$1\n    local output\n    output=$(echo $string | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\U\\(.\\)/\\L\\1/')\n\
    \    echo \"$output\"", "    local string=\"$1\"\n    local result=\"\"\n    local\
    \ i\n    for (( i=0; i<${#string}; i++ )); do\n        result+=\"${string[i]^^}\"\
    \n    done\n    echo \"$result\"", "    local string=\"$1\"\n    local output\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i=1; i<${#string}; i++ ));\
    \ do\n        local c=\"${string:$i:1}\"\n        case $c in\n            [a-z])\n\
    \                output+=\"[A-Z]${string:$i:1}\"\n                ;;\n       \
    \     *)\n                output+=\"$c\"\n                ;;\n        esac\n \
    \   done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case \"$c\" in\n            [a-z])\n                output+=\"[A-Z]${string:$((i+1)):1}\"\
    \n                ;;\n            *)\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case $c in\n           \
    \ [:lower:])\n                output+=\"\\U$c\"\n                ;;\n        \
    \    [:upper:])\n                output+=\"\\L$c\"\n                ;;\n     \
    \       *)\n                output+=\"$c\"\n                ;;\n        esac\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i+1:1}\"\
    \n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local newstring=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     newstring=\"${newstring}$c\"\n                ;;\n            [:upper:])\n\
    \                newstring=\"${newstring}${c:0:1}\"\n                ;;\n    \
    \        *)\n                newstring=\"${newstring}${c}\"\n                ;;\n\
    \        esac\n    done\n    echo \"$newstring\"", "    local string=\"$1\"\n\
    \    local output=\"\"\n    local i\n    for (( i=1; i<${#string}; i++ )); do\n\
    \        local c=\"${string:$i:1}\"\n        case \"$c\" in\n            [:lower:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n\
    \                ;;\n            [:upper:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=$1\n    local newstring=\"\"\n    local\
    \ i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"${letter}\" in\n            A) newstring+=\"a\"\n            B)\
    \ newstring+=\"b\"\n            C) newstring+=\"c\"\n            D) newstring+=\"\
    d\"\n            E) newstring+=\"e\"\n            F) newstring+=\"f\"\n      \
    \      G) newstring+=\"g\"\n            H) newstring+=\"h\"\n            I) newstring+=\"\
    i\"\n            J) newstring+=\"j\"\n            K) newstring+=\"k\"\n      \
    \      L) newstring+=\"l\"\n            M) newstring+=\"m\"\n            N) newstring+=\"\
    n\"\n            O) newstring+=\"o\"\n            P) newstring+=\"p\"\n      \
    \      Q) newstring+=\"q\"\n            R) newstring+=\"r\"\n            S) newstring+=\"\
    s\"\n            T) newstring+=\"t\"\n            U) newstring+=\"u\"\n      \
    \      V) newstring+=\"v\"\n            W) newstring+=\"w\"\n            X) newstring+=\"\
    x\"\n            Y) newstring+=\"y\"\n            Z) newstring+=\"z\"\n      \
    \  esac\n    done\n    echo \"${newstring}\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     local c=\"${string:$i:1}\"\n        if [[ $c =~ [a-z] ]]; then\n       \
    \     c=\"${c^^}\"\n        fi\n        output+=\"$c\"\n    done\n    echo \"\
    $output\"", "    local string=\"$1\"\n    local newString=\"\"\n    for (( i =\
    \ 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n     \
    \   case \"$char\" in\n            [:lower:] )\n                newString+=\"\
    $(echo \"$char\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n       \
    \     [:upper:] )\n                newString+=\"$(echo \"$char\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            * )\n                newString+=\"\
    $char\"\n                ;;\n        esac\n    done\n    echo \"$newString\"",
  "    local string=$1\n    local output\n    output=$(echo \"${string}\" | sed 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"${output}\" | sed 's/\\(.\\)/\\L\\1/')\n\
    \    echo \"${output}\"", "    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"${letter}\" in\n            [a-z]) output+=\"[A-Z]\" ;;\n    \
    \        [A-Z]) output+=\"[a-z]\" ;;\n        esac\n    done\n    echo \"${output}\"",
  "  local string=$1\n  local result=\"\"\n  local i\n  for i in $(seq 0 $((${#string}\
    \ - 1)))\n  do\n    local c=${string:$i:1}\n    case \"$c\" in\n      [a-z])\n\
    \        result+=\"[A-Z]${string:$((i + 1)):1}\"\n        ;;\n      [A-Z])\n \
    \       result+=\"[a-z]${string:$((i + 1)):1}\"\n        ;;\n      *)\n      \
    \  result+=\"$c\"\n        ;;\n    esac\n  done\n  echo \"$result\"", "    local\
    \ string=\"$1\"\n    local output\n    output=$(echo \"$string\" | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n\
    \    echo \"$output\"", "    local string=$1\n    local new_string=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n    \
    \    local upper_letter=${letter^^}\n        local lower_letter=${letter^^}\n\
    \        new_string+=\"${upper_letter}\"\n        new_string+=\"${lower_letter}\"\
    \n    done\n    echo \"$new_string\"", "    local string=$1\n    local output\n\
    \    output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\\
    1/')\n    echo \"$output\"", '  echo "${1,,}"', "  local string=\"$1\"\n  local\
    \ output=\"\"\n  local i\n  for i in \"${string}\"; do\n    case $i in\n     \
    \ [a-z])\n        output=\"${i^^}\"\n        ;;\n      [A-Z])\n        output=\"\
    ${i^^}\"\n        ;;\n      *)\n        output=\"${i}\"\n        ;;\n    esac\n\
    \  done\n  echo \"$output\"", "    local string=$1\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n    \
    \    case \"$c\" in\n            A) output+=\"a\" ;;\n            B) output+=\"\
    b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"d\" ;;\n   \
    \         E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n            G)\
    \ output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I) output+=\"\
    i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"k\" ;;\n   \
    \         L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n            N)\
    \ output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P) output+=\"\
    p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"r\" ;;\n   \
    \         S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n            U)\
    \ output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W) output+=\"\
    w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"y\" ;;\n   \
    \         Z) output+=\"z\" ;;\n            *) output+=\"$c\" ;;\n        esac\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local result=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        result+=\"\
    ${string[i]^}\"\n    done\n    echo \"$result\"", "    local string=\"$1\"\n \
    \   local output=\"\"\n    local i\n    for (( i=1; i<${#string}; i++ )); do\n\
    \        local c=\"${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n   \
    \             ;;\n            [:upper:])\n                output+=\"$(echo \"\
    $c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            *)\n   \
    \             output+=\"$c\"\n                ;;\n        esac\n    done\n   \
    \ echo \"$output\"", "    local string=\"$1\"\n    local newstring=\"\"\n    local\
    \ i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        if [ \"$c\" == \"A\" -o \"$c\" == \"a\" ]; then\n            c=\"a\"\n\
    \        elif [ \"$c\" == \"B\" -o \"$c\" == \"b\" ]; then\n            c=\"b\"\
    \n        elif [ \"$c\" == \"C\" -o \"$c\" == \"c\" ]; then\n            c=\"\
    c\"\n        elif [ \"$c\" == \"D\" -o \"$c\" == \"d\" ]; then\n            c=\"\
    d\"\n        elif [ \"$c\" == \"E\" -o \"$c\" == \"e\" ]; then\n            c=\"\
    e\"\n        elif [ \"$c\" == \"F\" -o \"$c\" == \"f\" ]; then\n            c=\"\
    f\"\n        elif [ \"$c\" == \"G\" -o \"$c\" == \"g\" ]; then\n            c=\"\
    g\"\n        elif [ \"$c\" == \"H\" -o \"$c\" == \"h\" ]; then\n            c=\"\
    h\"\n        elif [ \"$c\" == \"I\" -o \"$c\" == \"i\" ]; then\n            c=\"\
    i\"\n        elif [ \"$c\" == \"J\" -o \"$c\" == \"j\" ]; then\n            c=\"\
    j\"\n        elif [ \"$c\" == \"K\" -o \"$c\" == \"k\" ]; then\n            c=\"\
    k\"\n        elif [ \"$c\" == \"L\" -o \"$c\" == \"l\" ]; then\n            c=\"\
    l\"\n        elif [ \"$c\" == \"M\" -o \"$c\" == \"m\" ]; then\n            c=\"\
    m\"\n        elif [ \"$c\" == \"N\" -o \"$c\" == \"n\" ]; then\n            c=\"\
    n\"\n        elif [ \"$c\" == \"O\" -o \"$c\" == \"o\" ]; then\n            c=\"\
    o\"\n        elif [ \"$c\" == \"P\" -o \"$c\" == \"p\" ]; then\n            c=\"\
    p\"\n        elif [ \"$c\" == \"Q\" -o \"$c\" == \"q\" ]; then\n            c=\"\
    q\"\n        elif [ \"$c\" == \"R\" -o \"$c\" == \"r\" ]; then\n            c=\"\
    r\"\n        elif [ \"$c\" == \"S\" -o \"$c\" == \"s\" ]; then\n            c=\"\
    s\"\n        elif [ \"$c\" == \"T\" -o \"$c\" == \"t\" ]; then\n            c=\"\
    t\"\n        elif [ \"$c\" == \"U\" -o \"$c\" == \"u\" ]; then\n            c=\"\
    u\"\n        elif [ \"$c\" == \"V\" -o \"$c\" == \"v\" ]; then\n            c=\"\
    v\"\n        elif [ \"$c\" == \"W\" -o \"$c\" == \"w\" ]; then\n            c=\"\
    w\"\n        elif [ \"$c\" == \"X\" -o \"$c\" == \"x\" ]; then\n            c=\"\
    x\"\n        elif [ \"$c\" ", "  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for (( i=0; i<${#string}; i++ )); do\n    local c=\"${string:$i:1}\"\n\
    \    case \"$c\" in\n      [a-z]) output+=\"[A-Z]\";;\n      [A-Z]) output+=\"\
    [a-z]\";;\n      *) output+=\"$c\";;\n    esac\n  done\n  echo \"$output\"", " \
    \   local string=\"$1\"\n    local lower\n    local upper\n    lower=$(echo \"\
    $string\" | sed 's/[a-z]/[&]/g')\n    upper=$(echo \"$string\" | sed 's/[A-Z]/[&]/g')\n\
    \    echo \"$upper$lower\"", "    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    local\
    \ i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [:lower:] ) output+=\"\\U$char\";;\n \
    \           [:upper:] ) output+=\"\\L$char\";;\n        esac\n    done\n    echo\
    \ \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i\
    \ = 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n   \
    \     case \"$char\" in\n            [a-z]) char=\"[A-Z]\" ;;\n            [A-Z])\
    \ char=\"[a-z]\" ;;\n            *) char=\"${char}\" ;;\n        esac\n      \
    \  output+=\"${char}\"\n    done\n    echo \"$output\"", "    local string=$1\n\
    \    local newString\n    newString=$(echo $string | tr '[:upper:]' '[:lower:]')\n\
    \    newString=$(echo $newString | tr '[:lower:]' '[:upper:]')\n    echo $newString",
  "    local string=\"$1\"\n    local output=\"\"\n    local i\n    for (( i = 0;\
    \ i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n        case\
    \ \"$c\" in\n            [a-z]) output+=\"[A-Z]\" ;;\n            [A-Z]) output+=\"\
    [a-z]\" ;;\n            *) output+=\"$c\" ;;\n        esac\n    done\n    echo\
    \ \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n        case $c\
    \ in\n            [:lower:])\n                output+=\"$(printf '%s' \"${c:0:1}\"\
    \ | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(printf '%s' \"${c:0:1}\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"", "    local\
    \ string=\"$1\"\n    local new_string=\"\"\n    local i\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n   \
    \         [:lower:])\n                new_string+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            [:upper:])\n               \
    \ new_string+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            *)\n                new_string+=\"$c\"\n                ;;\n\
    \        esac\n    done\n    echo \"$new_string\"", "    local string=$1\n   \
    \ local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n\
    \        local c=${string:$i:1}\n        case \"$c\" in\n            A) output+=\"\
    a\" ;;\n            B) output+=\"b\" ;;\n            C) output+=\"c\" ;;\n   \
    \         D) output+=\"d\" ;;\n            E) output+=\"e\" ;;\n            F)\
    \ output+=\"f\" ;;\n            G) output+=\"g\" ;;\n            H) output+=\"\
    h\" ;;\n            I) output+=\"i\" ;;\n            J) output+=\"j\" ;;\n   \
    \         K) output+=\"k\" ;;\n            L) output+=\"l\" ;;\n            M)\
    \ output+=\"m\" ;;\n            N) output+=\"n\" ;;\n            O) output+=\"\
    o\" ;;\n            P) output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n   \
    \         R) output+=\"r\" ;;\n            S) output+=\"s\" ;;\n            T)\
    \ output+=\"t\" ;;\n            U) output+=\"u\" ;;\n            V) output+=\"\
    v\" ;;\n            W) output+=\"w\" ;;\n            X) output+=\"x\" ;;\n   \
    \         Y) output+=\"y\" ;;\n            Z) output+=\"z\" ;;\n            *)\
    \ output+=\"$c\" ;;\n        esac\n    done\n    echo \"$output\"", '  echo "${1,,}"',
  "  local string=\"$1\"\n  echo \"${string^}\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"\\U$c\"\n                ;;\n            [:upper:])\n        \
    \        output+=\"\\L$c\"\n                ;;\n            *)\n             \
    \   output+=\"$c\"\n                ;;\n        esac\n    done\n    echo \"$output\"",
  '  echo "${1,,}"', "    local string=$1\n    local new_string=\"\"\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n        case\
    \ ${letter} in\n            a)\n                new_string+=\"A\"\n          \
    \      ;;\n            b)\n                new_string+=\"B\"\n               \
    \ ;;\n            c)\n                new_string+=\"C\"\n                ;;\n\
    \            d)\n                new_string+=\"D\"\n                ;;\n     \
    \       e)\n                new_string+=\"E\"\n                ;;\n          \
    \  f)\n                new_string+=\"F\"\n                ;;\n            g)\n\
    \                new_string+=\"G\"\n                ;;\n            h)\n     \
    \           new_string+=\"H\"\n                ;;\n            i)\n          \
    \      new_string+=\"I\"\n                ;;\n            j)\n               \
    \ new_string+=\"J\"\n                ;;\n            k)\n                new_string+=\"\
    K\"\n                ;;\n            l)\n                new_string+=\"L\"\n \
    \               ;;\n            m)\n                new_string+=\"M\"\n      \
    \          ;;\n            n)\n                new_string+=\"N\"\n           \
    \     ;;\n            o)\n                new_string+=\"O\"\n                ;;\n\
    \            p)\n                new_string+=\"P\"\n                ;;\n     \
    \       q)\n                new_string+=\"Q\"\n                ;;\n          \
    \  r)\n                new_string+=\"R\"\n                ;;\n            s)\n\
    \                new_string+=\"S\"\n                ;;\n            t)\n     \
    \           new_string+=\"T\"\n                ;;\n            u)\n          \
    \      new_string+=\"U\"\n                ;;\n            v)\n               \
    \ new_string+=\"V\"\n                ;;\n            w)\n                new_string+=\"\
    W\"\n                ;;\n            x)\n                new_string+=\"X\"\n \
    \               ;;\n            y)\n                new_string+=\"Y\"\n      \
    \          ;;\n            z)\n                new_string+=\"Z\"\n           \
    \     ;;\n            *)\n                new_string+=${letter}\n            \
    \    ;;\n        esac\n    done\n    echo \"${new_string}\"", '  echo "${1,,}"',
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n       \
    \     [:lower:])\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            [:upper:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            *)\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=\"$1\"\n    local lower\n    local upper\n\
    \    lower=$(echo \"$string\" | sed 's/[a-z]/[&]/g')\n    upper=$(echo \"$string\"\
    \ | sed 's/[A-Z]/[&]/g')\n    echo ${string/$lower/$upper}", '  echo "${1,,}"',
  "    local string=$1\n    local output\n    output=$(echo \"$string\" | sed 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  \
    \  echo \"$output\"", '  echo "${1,,}"', "    local string=$1\n    local newString\n\
    \    newString=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    echo \"$newString\"",
  "    local string=\"$1\"\n    local output\n    output=$(echo \"$string\" | sed\
    \ 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n\
    \    echo \"$output\"", "  local string=\"$1\"\n  local output=\"\"\n  local i\n\
    \  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z]) output+=\"[A-Z]\"\
    ;;\n      [A-Z]) output+=\"[a-z]\";;\n      *) output+=\"$i\";;\n    esac\n  done\n\
    \  echo \"$output\"", "    local string=\"$1\"\n    local new_string=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n \
    \       case \"$char\" in\n            [:lower:] ) new_string+=\"$(echo \"$char\"\
    \ | tr '[:lower:]' '[:upper:]')\";;\n            [:upper:] ) new_string+=\"$(echo\
    \ \"$char\" | tr '[:upper:]' '[:lower:]')\";;\n        esac\n    done\n    echo\
    \ \"$new_string\"", "  local string=\"$1\"\n  echo \"${string^}\"", "  local string=\"\
    $1\"\n  local output=\"\"\n  local i\n  for (( i=0; i<${#string}; i++ )); do\n\
    \    local c=\"${string:$i:1}\"\n    case \"$c\" in\n      [a-z]) output+=\"[A-Z]\"\
    \ ;;\n      [A-Z]) output+=\"[a-z]\" ;;\n      *) output+=\"$c\" ;;\n    esac\n\
    \  done\n  echo \"$output\"", "    local string=$1\n    local newString\n    newString=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    echo \"\
    $newString\"", "  local string=\"$1\"\n  echo \"${string^^}\"", "  local string=\"\
    $1\"\n  echo \"${string^^}\"", "  local string=\"$1\"\n  echo \"${string^}\"",
  "    local string=\"$1\"\n    local newstring=\"\"\n    local i\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n        case \"\
    $c\" in\n            [:lower:] )\n                newstring=\"${newstring}$c\"\
    \n                ;;\n            [:upper:] )\n                newstring=\"${newstring}$c\"\
    \n                ;;\n            * )\n                newstring=\"${newstring}$c\"\
    \n                ;;\n        esac\n    done\n    echo \"$newstring\"", "    local\
    \ string=$1\n    local lower=${string:0:1}\n    local upper=${string:1:1}\n  \
    \  local result=${lower,,}${upper,,}\n    echo \"$result\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i=1; i<${#string}; i++ ));\
    \ do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n           \
    \ [:lower:] ) output+=\"\\U$c\";;\n            [:upper:] ) output+=\"\\L$c\";;\n\
    \            *)               output+=\"$c\";;\n        esac\n    done\n    echo\
    \ \"$output\"", "    local string=\"$1\"\n    local lower=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n     \
    \   result+=\"${lower:$i:1}${upper:${#c}:1}\"\n    done\n    echo \"$result\"",
  "  local string=\"$1\"\n  echo \"${string^^}\"", '  echo "${1,,}"', "    local string=\"\
    $1\"\n    local output\n    for (( i = 0; i < ${#string}; i++ )); do\n       \
    \ output=\"${string:i:1}${string:i:1}\"\n    done\n    echo \"$output\"", "  \
    \  local string=\"$1\"\n    local lower\n    local upper\n    lower=$(echo \"\
    $string\" | sed 's/[a-z]/[&]/g')\n    upper=$(echo \"$string\" | sed 's/[A-Z]/[&]/g')\n\
    \    echo \"$upper$lower\"", "    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    echo \"\
    $newstring\"", "    local string=\"$1\"\n    local newstring\n    newstring=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"$newstring\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local A\n    local B\n    local C\n    local\
    \ D\n    local E\n    local F\n    local G\n    local H\n    local I\n    local\
    \ J\n    local K\n    local L\n    local M\n    local N\n    local O\n    local\
    \ P\n    local Q\n    local R\n    local S\n    local T\n    local U\n    local\
    \ V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local A\n    local B\n    local C\n    local D\n    local E\n    local\
    \ F\n    local G\n    local H\n    local I\n    local J\n    local K\n    local\
    \ L\n    local M\n    local N\n    local O\n    local P\n    local Q\n    local\
    \ R\n    local S\n    local T\n    local U\n    local V\n    local W\n    local\
    \ X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    ", "    local string=\"$1\"\n    local output=\"\"\n   \
    \ for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                letter=A\n     \
    \           ;;\n            b)\n                letter=B\n                ;;\n\
    \            c)\n                letter=C\n                ;;\n            d)\n\
    \                letter=D\n                ;;\n            e)\n              \
    \  letter=E\n                ;;\n            f) letter=F\n                ;;\n\
    \            g) letter=G\n                ;;\n            h) letter=H\n      \
    \          ;;\n            i) letter=I\n                ;;\n            j) letter=J\n\
    \                ;;\n            k) letter=K\n                ;;\n           \
    \ l) letter=L\n                ;;\n            m) letter=M\n                ;;\n\
    \            n) letter=N\n                ;;\n            o) letter=O\n      \
    \          ;;\n            p) letter=P\n                ;;\n            q) letter=Q\n\
    \                ;;\n            r) letter=R\n                ;;\n           \
    \ s) letter=S\n                ;;\n            t) letter=T\n                ;;\n\
    \            u) letter=U\n                ;;\n            v) letter=V\n      \
    \          ;;\n            w) letter=W\n                ;;\n            x) letter=X\n\
    \                ;;\n            y) letter=Y\n                ;;\n           \
    \ z) letter=Z\n                ;;\n            *)\n                letter=${letter:0:1}\n\
    \                ;;\n        esac\n        output+=\"${letter}\"\n    done\n \
    \   echo \"$output\"", "    local string=$1\n    local newstring=\"\"\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        local char=${string:$i:1}\n  \
    \      if [[ $char == [a-z] ]]; then\n            newstring+=\"${char^^}\"\n \
    \       else\n            newstring+=\"${char}\"\n        fi\n    done\n    echo\
    \ \"$newstring\"", '  echo "${1,,}"', "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n                ;;\n    \
    \        [:upper:])\n                c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n\
    \                ;;\n            *)\n                c=$(echo \"$c\")\n      \
    \          ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"",
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local char=\"${string:$i:1}\"\n        case \"$char\" in\n \
    \           [:lower:] ) output+=\"$(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\
    ;;\n            [:upper:] ) output+=\"$(echo \"$char\" | tr '[:upper:]' '[:lower:]')\"\
    ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"$1\"\n\
    \    local result=\"\"\n    local i\n    for (( i = 0; i <= ${#string}; i++ ));\
    \ do\n        result+=\"${string:$i:1}${string:$i:1}\"\n    done\n    echo \"\
    $result\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local char=\"${string:$i:1}\"\n        if [[ \"$char\" ==\
    \ [a-z] ]]; then\n            char=\"[A-Z]\"\n        elif [[ \"$char\" == [A-Z]\
    \ ]]; then\n            char=\"[a-z]\"\n        fi\n        output+=\"${char}\"\
    \n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output\n\
    \    output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"", '  echo "${1,,}"',
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local letter=${string:$i:1}\n        case \"$letter\" in\n \
    \           A) output+=\"a\" ;;\n            B) output+=\"b\" ;;\n           \
    \ C) output+=\"c\" ;;\n            D) output+=\"d\" ;;\n            E) output+=\"\
    e\" ;;\n            F) output+=\"f\" ;;\n            G) output+=\"g\" ;;\n   \
    \         H) output+=\"h\" ;;\n            I) output+=\"i\" ;;\n            J)\
    \ output+=\"j\" ;;\n            K) output+=\"k\" ;;\n            L) output+=\"\
    l\" ;;\n            M) output+=\"m\" ;;\n            N) output+=\"n\" ;;\n   \
    \         O) output+=\"o\" ;;\n            P) output+=\"p\" ;;\n            Q)\
    \ output+=\"q\" ;;\n            R) output+=\"r\" ;;\n            S) output+=\"\
    s\" ;;\n            T) output+=\"t\" ;;\n            U) output+=\"u\" ;;\n   \
    \         V) output+=\"v\" ;;\n            W) output+=\"w\" ;;\n            X)\
    \ output+=\"x\" ;;\n            Y) output+=\"y\" ;;\n            Z) output+=\"\
    z\" ;;\n            *) output+=\"$letter\" ;;\n        esac\n    done\n    echo\
    \ \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    local i\n\
    \    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n        j=${i}\n \
    \       if [[ \"${string:$j:1}\" == \"-\" ]]; then\n            j=$(( j - 1 ))\n\
    \        fi\n        output+=\"${string:$j:1}${string:$j:1}\"\n    done\n    echo\
    \ \"$output\"", "    local string=$1\n    local new_string=\"\"\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n", "    local string=\"$1\"\
    \n    local output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        local\
    \ c=\"${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n     \
    \           output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n        \
    \        ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" |\
    \ tr '[:lower:]' '[:upper:]')\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    local\
    \ i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n       \
    \     [:lower:])\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            [:upper:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            *)\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=$1\n    local upper\n    upper=$(echo\
    \ \"${string}\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo \"${string}\"\
    \ | tr '[:lower:]' '[:upper:]')\n    echo \"${upper}\"", "    local string=$1\n\
    \    local output\n    output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"",
  "  local string=\"$1\"\n  echo \"${string^}\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"", "    local\
    \ string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++ ));\
    \ do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n           \
    \ [:lower:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            [:upper:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            * )\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=$1\n    local newstring=\"\"\n    local\
    \ i\n    local j\n    for (( i = 0; i <= ${#string}; i++ )); do\n        j=${#string}-1\n\
    \        newstring+=\"${string:$i:1}${string:j:1}\"\n    done\n    echo $newstring",
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case $c in\n           \
    \ A|a) output+=\"a\" ;;\n            B|b) output+=\"b\" ;;\n            C|c) output+=\"\
    c\" ;;\n            D|d) output+=\"d\" ;;\n            E|e) output+=\"e\" ;;\n\
    \            F|f) output+=\"f\" ;;\n            G|g) output+=\"g\" ;;\n      \
    \      H|h) output+=\"h\" ;;\n            I|i) output+=\"i\" ;;\n            J|j)\
    \ output+=\"j\" ;;\n            K|k) output+=\"k\" ;;\n            L|l) output+=\"\
    l\" ;;\n            M|m) output+=\"m\" ;;\n            N|n) output+=\"n\" ;;\n\
    \            O|o) output+=\"o\" ;;\n            P|p) output+=\"p\" ;;\n      \
    \      Q|q) output+=\"q\" ;;\n            R|r) output+=\"r\" ;;\n            S|s)\
    \ output+=\"s\" ;;\n            T|t) output+=\"t\" ;;\n            U|u) output+=\"\
    u\" ;;\n            V|v) output+=\"v\" ;;\n            W|w) output+=\"w\" ;;\n\
    \            X|x) output+=\"x\" ;;\n            Y|y) output+=\"y\" ;;\n      \
    \      Z|z) output+=\"z\" ;;\n            *)    output+=\"$c\" ;;\n        esac\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case $c in\n            [:lower:] )\n              \
    \  output+=\"$(printf '%s' \"${c:0:1}\" | tr '[:upper:]' '[:lower:]')\"\n    \
    \            ;;\n            [:upper:] )\n                output+=\"$(printf '%s'\
    \ \"${c:0:1}\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n         \
    \   * )\n                output+=\"$c\"\n                ;;\n        esac\n  \
    \  done\n    echo \"$output\"", "    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n       \
    \     [:lower:])\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            [:upper:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            *)\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=$1\n    local newstring=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n      \
    \  if [[ $char == [a-z] ]]; then\n            newstring+=\"${char^^}\"\n     \
    \   else\n            newstring+=\"${char}\"\n        fi\n    done\n    echo \"\
    $newstring\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i =\
    \ 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n     \
    \   case \"$char\" in\n            [a-z]) char=\"[A-Z]\" ;;\n            [A-Z])\
    \ char=\"[a-z]\" ;;\n            *) char=\"${char}\" ;;\n        esac\n      \
    \  output+=\"$char\"\n    done\n    echo \"$output\"", "  echo \"$1\" | sed -e\
    \ 's/\\(.\\)/\\U\\1/'", "    local string=\"$1\"\n    local newstring=\"\"\n \
    \   for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n\
    \        case $c in\n            [:lower:] ) newstring+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\";;\n            [:upper:] ) newstring+=\"$(echo \"$c\" | tr '[:upper:]'\
    \ '[:lower:]')\";;\n            * ) newstring+=\"$c\";;\n        esac\n    done\n\
    \    echo \"$newstring\"", "    local string=\"$1\"\n    local output=\"\"\n \
    \   local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case \"$c\" in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"c\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"", '  echo "${1,,}"', "  \
    \  local string=\"$1\"\n    local newstring=\"\"\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local char=\"${string:$i:1}\"\n        case \"$char\" in\n\
    \            [:lower:])\n                newstring+=\"$(echo \"$char\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            [:upper:])\n               \
    \ newstring+=\"$(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n            \
    \    ;;\n            *)\n                newstring+=\"$char\"\n              \
    \  ;;\n        esac\n    done\n    echo \"$newstring\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n      \
    \  case \"${string:$i:1}\" in\n            [:lower:]) output+=\"[${string:$i:1}]\"\
    ;;\n            [:upper:]) output+=\"[${string:$i:1}]\";;\n            *) output+=\"\
    ${string:$i:1}\";;\n        esac\n    done\n    echo \"$output\"", "    local\
    \ string=\"$1\"\n    local output\n    output=$(echo \"$string\" | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n\
    \    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"", "    local\
    \ string=\"$1\"\n    local newstring=\"\"\n    for (( i=0; i<${#string}; i++ ));\
    \ do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n           \
    \ [:lower:])\n                newstring+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            [:upper:])\n                newstring+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            *)\n\
    \                newstring+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$newstring\"", "    local string=$1\n    local output=\"\"\n    local\
    \ i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            a)\n                c=A\n                ;;\n\
    \            b)\n                c=B\n                ;;\n            c)\n   \
    \             c=C\n                ;;\n            d)\n                c=D\n \
    \               ;;\n            e)\n                c=E\n                ;;\n\
    \            f) c=F\n                ;;\n            g) c=G\n                ;;\n\
    \            h) c=H\n                ;;\n            i) c=I\n                ;;\n\
    \            j) c=J\n                ;;\n            k) c=K\n                ;;\n\
    \            l) c=L\n                ;;\n            m) c=M\n                ;;\n\
    \            n) c=N\n                ;;\n            o) c=O\n                ;;\n\
    \            p) c=P\n                ;;\n            q) c=Q\n                ;;\n\
    \            r) c=R\n                ;;\n            s) c=S\n                ;;\n\
    \            t) c=T\n                ;;\n            u) c=U\n                ;;\n\
    \            v) c=V\n                ;;\n            w) c=W\n                ;;\n\
    \            x) c=X\n                ;;\n            y) c=Y\n                ;;\n\
    \            z) c=Z\n                ;;\n            *)\n                c=${c:0:1}\n\
    \                ;;\n        esac\n        output+=\"${c}\"\n    done\n    echo\
    \ \"$output\"", '  echo "${1,,}"', "    local string=\"$1\"\n    local output=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=\"U$c\"\n\
    \                ;;\n            [:upper:])\n                c=\"l$c\"\n     \
    \           ;;\n            *)\n                c=\"U$c\"\n                ;;\n\
    \        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"", "  echo\
    \ \"${1,,}\" | sed -e \"y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\"\
    \ \\\n    -e \"y/abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/ABCDEFGHIJKLMNOPQRSTUVWXYZ/\"",
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i = 0; i < ${#string};\
    \ i++ )); do\n        local c=\"${string:$i:1}\"\n        case $c in\n       \
    \     [a-z]) output+=\"[A-Z]\";;\n            [A-Z]) output+=\"[a-z]\";;\n   \
    \     esac\n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n       \
    \ local c=\"${string:$i:1}\"\n        if [[ \"$c\" =~ [a-z] ]]; then\n       \
    \     c=\"${c^^}\"\n        fi\n        output+=\"$c\"\n    done\n    echo \"\
    $output\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n   \
    \         [:lower:])\n                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n\
    \                ;;\n            [:upper:])\n                c=$(echo \"$c\" |\
    \ tr '[:lower:]' '[:upper:]')\n                ;;\n            *)\n          \
    \      c=$(echo \"$c\")\n                ;;\n        esac\n        output+=\"\
    $c\"\n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case $c in\n            [:lower:])\n               \
    \ output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n\
    \            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"", "   \
    \ local string=\"$1\"\n    local lower\n    local upper\n    lower=$(echo \"$string\"\
    \ | sed 's/[a-z]/[&]/g')\n    upper=$(echo \"$string\" | sed 's/[A-Z]/[&]/g')\n\
    \    echo ${lower^^} ${upper^^}", "  local string=\"$1\"\n  echo \"${string^^}\"",
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i = 0; i < ${#string};\
    \ i++ )); do\n        local char=\"${string:$i:1}\"\n        if [[ \"$char\" ==\
    \ [a-z] ]]; then\n            char=\"[A-Z]\"\n        elif [[ \"$char\" == [A-Z]\
    \ ]]; then\n            char=\"[a-z]\"\n        fi\n        output+=\"$char\"\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"", '  echo
    "${1,,}"', "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n   \
    \         [:lower:] ) output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    ;;\n            [:upper:] ) output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"$1\"\n\
    \    local newstring=\"\"\n    local i\n    local j\n    for ((i=0; i<${#string};\
    \ i++)); do\n        j=\"${i:i:1}\"\n        if [[ \"$j\" == \"a\" ]]; then\n\
    \            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"b\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"c\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"d\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"e\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"f\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"g\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"h\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"i\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"j\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"k\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"l\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"m\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"\
    \n        elif [[ \"$j\" == \"n\" ]]; then\n            newstring=\"${newstring:0:1}${newstring:1:1}${newstring:2:1}${newstring:3:1}\"",
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n       \
    \     [:lower:] ) output+=\"\\U$c\";;\n            [:upper:] ) output+=\"\\L$c\"\
    ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"$1\"\n\
    \    local result=\"\"\n    for (( i = 0; i < ${#string}; i++ )); do\n       \
    \ local char=\"${string:$i:1}\"\n        if [[ \"$char\" == [a-z] ]]; then\n \
    \           char=\"[A-Z]\"\n        elif [[ \"$char\" == [A-Z] ]]; then\n    \
    \        char=\"[a-z]\"\n        fi\n        result+=\"$char\"\n    done\n   \
    \ echo \"$result\"", '  echo "${1,,}"', "    local string=\"$1\"\n    local output=\"\
    \"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=\"${string:$i:1}\"\
    \n        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n            *) output+=\"$letter\" ;;\n\
    \        esac\n    done\n    echo \"$output\"", "    local string=$1\n    local\
    \ output=\"\"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n        esac\n    done\n    echo \"$output\"",
  "    local string=\"$1\"\n    local result=\"\"\n    local i\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        result+=\"${string[i]^^}\"\n    done\n    echo \"$result\"",
  "    local string=$1\n    local new_string=\"\"\n    local i\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local c=${string:$i:1}\n        case \"$c\" in\n       \
    \     [:lower:])\n                new_string+=\"$(printf '%s' \"${c:0:1}\" |tr\
    \ [a-z] [A-Z])\"\n                ;;\n            [:upper:])\n               \
    \ new_string+=\"$(printf '%s' \"${c:0:1}\" |tr [A-Z] [a-z])\"\n              \
    \  ;;\n            *)\n                new_string+=\"$c\"\n                ;;\n\
    \        esac\n    done\n    echo \"$new_string\"", "  local string=\"$1\"\n \
    \ local output=\"\"\n  local i\n  for i in \"${string}\"; do\n    case \"$i\"\
    \ in\n      [a-z]) output+=\"[A-Z]\";;\n      [A-Z]) output+=\"[a-z]\";;\n   \
    \   *) output+=\"$i\";;\n    esac\n  done\n  echo \"$output\"", "    local string=\"\
    $1\"\n    local output\n    output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"",
  "    local string=\"$1\"\n    local lower\n    local upper\n    lower=$(echo \"\
    $string\" | sed 's/[a-z]/[&]/g')\n    upper=$(echo \"$string\" | sed 's/[A-Z]/[&]/g')\n\
    \    echo ${string/${lower}/${upper}}", "  local string=\"$1\"\n  echo \"${string^^}\"",
  "    local string=\"$1\"\n    local output=\"\"\n    local i\n    for (( i = 0;\
    \ i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n        if [[\
    \ \"$c\" == [a-z] ]]; then\n            c=\"[A-Z]\"\n        elif [[ \"$c\" ==\
    \ [A-Z] ]]; then\n            c=\"[a-z]\"\n        fi\n        output+=\"$c\"\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n    done\n    echo \"$output\"", '  echo "${1,,}"', "    local string=$1\n \
    \   local output\n    output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     local c=\"${string:$i:1}\"\n        case \"$c\" in\n            [:lower:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n\
    \                ;;\n            [:upper:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n     \
    \   case \"$c\" in\n            [:lower:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n\
    \                ;;\n            * )\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n       \
    \     [:lower:])\n                c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n\
    \                ;;\n            [:upper:])\n                c=$(echo \"$c\" |\
    \ tr '[:upper:]' '[:lower:]')\n                ;;\n            *)\n          \
    \      c=$(echo \"$c\")\n                ;;\n        esac\n        output+=\"\
    $c\"\n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local new_string=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"\
    ${string:$i:1}\"\n        if [[ \"$char\" == [a-z] ]]; then\n            new_string+=\"\
    [A-Z]\"\n        else\n            new_string+=\"$char\"\n        fi\n    done\n\
    \    echo \"$new_string\"", "    local string=$1\n    local output=\"\"\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"${letter}\" in\n            a)\n                letter=A\n   \
    \             ;;\n            b)\n                letter=B\n                ;;\n\
    \            c)\n                letter=C\n                ;;\n            d)\n\
    \                letter=D\n                ;;\n            e)\n              \
    \  letter=E\n                ;;\n            f) letter=F\n                ;;\n\
    \            g) letter=G\n                ;;\n            h) letter=H\n      \
    \          ;;\n            i) letter=I\n                ;;\n            j)\n \
    \               letter=J\n                ;;\n            k) letter=K\n      \
    \          ;;\n            l) letter=L\n                ;;\n            m) letter=M\n\
    \                ;;\n            n) letter=N\n                ;;\n           \
    \ o) letter=O\n                ;;\n            p) letter=P\n                ;;\n\
    \            q) letter=Q\n                ;;\n            r) letter=R\n      \
    \          ;;\n            s) letter=S\n                ;;\n            t) letter=T\n\
    \                ;;\n            u) letter=U\n                ;;\n           \
    \ v) letter=V\n                ;;\n            w) letter=W\n                ;;\n\
    \            x) letter=X\n                ;;\n            y) letter=Y\n      \
    \          ;;\n            z) letter=Z\n                ;;\n            *)\n \
    \               letter=${letter:0:1}\n                ;;\n        esac\n     \
    \   output+=\"${letter}\"\n    done\n    echo \"$output\"", "    local string=$1\n\
    \    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ ));\
    \ do\n        local c=${string:$i:1}\n        if [ \"$c\" == \"a\" ] || [ \"$c\"\
    \ == \"A\" ] || [ \"$c\" == \"e\" ] || [ \"$c\" == \"E\" ] || [ \"$c\" == \"i\"\
    \ ] || [ \"$c\" == \"I\" ] || [ \"$c\" == \"o\" ] || [ \"$c\" == \"O\" ] || [\
    \ \"$c\" == \"u\" ] || [ \"$c\" == \"U\" ]; then\n            output+=\"${c^^}\"\
    \n        else\n            output+=\"${c}\"\n        fi\n    done\n    echo \"\
    $output\"", "    local string=\"$1\"\n    local output=\"\"\n    local i\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n \
    \       case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n      \
    \  local letter=\"${string:$i:1}\"\n        case \"$letter\" in\n            [a-z])\
    \ output+=\"[A-Z]\" ;;\n            [A-Z]) output+=\"[a-z]\" ;;\n        esac\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"", "   \
    \ local string=$1\n    local output\n    output=$(echo \"$string\" | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n\
    \    echo \"$output\"", "    local string=$1\n    local lower=${string:0:1}\n\
    \    local upper=${string:1:1}\n    local flipped=\"\"\n    local i\n    for ((\
    \ i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${lower} ]];\
    \ then\n            flipped=\"${flipped}${upper}\"\n        else\n           \
    \ flipped=\"${flipped}${lower}\"\n        fi\n    done\n    echo \"${flipped}\"",
  "    local string=\"$1\"\n    local result=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case $c in\n           \
    \ [:lower:] ) c=\"a\"; break;;\n            [:upper:] ) c=\"A\"; break;;\n   \
    \     esac\n        result+=\"$c\"\n    done\n    echo \"$result\"", "    local\
    \ string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++ ));\
    \ do\n        local char=\"${string:$i:1}\"\n        case \"$char\" in\n     \
    \       [:lower:])\n                char=\"$(echo \"$char\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            [:upper:])\n                char=\"$(echo \"\
    $char\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n        esac\n  \
    \      output+=\"$char\"\n    done\n    echo \"$output\"", "  local string=\"\
    $1\"\n  echo \"${string^^}\"", "    local string=$1\n    local newstring=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) newstring+=\"a\" ;;\n           \
    \ B) newstring+=\"b\" ;;\n            C) newstring+=\"c\" ;;\n            D) newstring+=\"\
    d\" ;;\n            E) newstring+=\"e\" ;;\n            F) newstring+=\"f\" ;;\n\
    \            G) newstring+=\"g\" ;;\n            H) newstring+=\"h\" ;;\n    \
    \        I) newstring+=\"i\" ;;\n            J) newstring+=\"j\" ;;\n        \
    \    K) newstring+=\"k\" ;;\n            L) newstring+=\"l\" ;;\n            M)\
    \ newstring+=\"m\" ;;\n            N) newstring+=\"n\" ;;\n            O) newstring+=\"\
    o\" ;;\n            P) newstring+=\"p\" ;;\n            Q) newstring+=\"q\" ;;\n\
    \            R) newstring+=\"r\" ;;\n            S) newstring+=\"s\" ;;\n    \
    \        T) newstring+=\"t\" ;;\n            U) newstring+=\"u\" ;;\n        \
    \    V) newstring+=\"v\" ;;\n            W) newstring+=\"w\" ;;\n            X)\
    \ newstring+=\"x\" ;;\n            Y) newstring+=\"y\" ;;\n            Z) newstring+=\"\
    z\" ;;\n        esac\n    done\n    echo \"$newstring\"", "  local string=\"$1\"\
    \n  local upper\n  upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n  echo\
    \ \"$upper\" | tr '[:lower:]' '[:upper:]'", "    local string=\"$1\"\n    local\
    \ newstring=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n\
    \        local c=\"${string:$i:1}\"\n        case $c in\n            [:lower:])\n\
    \                newstring=\"${newstring}${c:upper:}\"\n                ;;\n \
    \           [:upper:])\n                newstring=\"${newstring}${c:lower:}\"\n\
    \                ;;\n            *)\n                newstring=\"${newstring}${c}\"\
    \n                ;;\n        esac\n    done\n    echo \"$newstring\"", "    local\
    \ string=$1\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string};\
    \ i++ )); do\n        local c=$(echo $string | sed \"s/.\\(.\\)/\\U\\1/\")\n \
    \       output+=\"${c}\"\n    done\n    echo \"$output\"", "    local string=$1\n\
    \    local output=\"\"\n    for (( i = 0; i < ${#string}; i++ )); do\n       \
    \ local char=${string:$i:1}\n        case \"${char}\" in\n            \\?) char=\"\
    ?\" ;;\n            \\*) char=\"*\" ;;\n            \\|) char=\"|\" ;;\n     \
    \       \\^) char=\"^\" ;;\n            \\~) char=\"~\" ;;\n            \\!) char=\"\
    !\" ;;\n            \\&) char=\"&\" ;;\n            \\@) char=\"@\" ;;\n     \
    \       \\#) char=\"#\" ;;\n            \\%) char=\"%\" ;;\n            \\^) char=\"\
    ^\" ;;\n            \\&) char=\"&\" ;;\n            \\*) char=\"*\" ;;\n     \
    \       \\?) char=\"?\" ;;\n            \\|) char=\"|\" ;;\n            \\^) char=\"\
    ^\" ;;\n            \\~) char=\"~\" ;;\n            \\!) char=\"!\" ;;\n     \
    \       \\&) char=\"&\" ;;\n            \\@) char=\"@\" ;;\n            \\#) char=\"\
    #\" ;;\n            \\%) char=\"%\" ;;\n            \\^) char=\"^\" ;;\n     \
    \       \\&) char=\"&\" ;;\n            \\*) char=\"*\" ;;\n            \\?) char=\"\
    ?\" ;;\n            \\|) char=\"|\" ;;\n            \\^) char=\"^\" ;;\n     \
    \       \\~) char=\"~\" ;;\n            \\!) char=\"!\" ;;\n            \\&) char=\"\
    &\" ;;\n            \\@) char=\"@\" ;;\n            \\#) char=\"#\" ;;\n     \
    \       \\%) char=\"%\" ;;\n            \\^) char=\"^\" ;;\n            \\&) char=\"\
    &\" ;;\n            \\*) char=\"*\" ;;\n            \\?) char=\"?\" ;;\n     \
    \       \\|) char=\"|\" ;;\n            \\^) char=\"^\" ;;\n            \\~) char=\"\
    ~\" ;;\n            \\!) char=\"!\" ;;\n            \\&) char=\"&\" ;;\n     \
    \       \\@) char=\"@\" ;;\n            \\#) char=\"#\" ;;\n            \\%) char=\"\
    %\" ;;\n            \\^) char=\"^\" ;;\n            \\&) char=\"&\" ;;\n     \
    \       \\*) char=\"*\" ;;\n            \\?", "    local string=$1\n    local\
    \ output=\"\"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n       \
    \ local c=${string:$i:1}\n        case $c in\n            A|a) output+=\"a\"\n\
    \            ;;\n            B|b) output+=\"b\"\n            ;;\n            C|c)\
    \ output+=\"c\"\n            ;;\n            D|d) output+=\"d\"\n            ;;\n\
    \            E|e) output+=\"e\"\n            ;;\n            F|f) output+=\"f\"\
    \n            ;;\n            G|g) output+=\"g\"\n            ;;\n           \
    \ H|h) output+=\"h\"\n            ;;\n            I|i) output+=\"i\"\n       \
    \     ;;\n            J|j) output+=\"j\"\n            ;;\n            K|k) output+=\"\
    k\"\n            ;;\n            L|l) output+=\"l\"\n            ;;\n        \
    \    M|m) output+=\"m\"\n            ;;\n            N|n) output+=\"n\"\n    \
    \        ;;\n            O|o) output+=\"o\"\n            ;;\n            P|p)\
    \ output+=\"p\"\n            ;;\n            Q|q) output+=\"q\"\n            ;;\n\
    \            R|r) output+=\"r\"\n            ;;\n            S|s) output+=\"s\"\
    \n            ;;\n            T|t) output+=\"t\"\n            ;;\n           \
    \ U|u) output+=\"u\"\n            ;;\n            V|v) output+=\"v\"\n       \
    \     ;;\n            W|w) output+=\"w\"\n            ;;\n            X|x) output+=\"\
    x\"\n            ;;\n            Y|y) output+=\"y\"\n            ;;\n        \
    \    Z|z) output+=\"z\"\n            ;;\n            *)    output+=$c\n      \
    \      ;;\n        esac\n    done\n    echo \"$output\"", "  local string=\"$1\"\
    \n  local output=\"\"\n  local i\n  for (( i=0; i<${#string}; i++ )); do\n   \
    \ local c=\"${string:$i:1}\"\n    case \"$c\" in\n      [a-z]) output+=\"[A-Z]\"\
    \ ;;\n      [A-Z]) output+=\"[a-z]\" ;;\n      *) output+=\"$c\" ;;\n    esac\n\
    \  done\n  echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n\
    \    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case \"$c\" in\n            [:lower:])\n                c=$(echo \"$c\"\
    \ | tr '[:upper:]' '[:lower:]')\n                ;;\n            [:upper:])\n\
    \                c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n             \
    \   ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"",
  "    local string=$1\n    local output\n    output=$(echo \"$string\" | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n\
    \    echo \"$output\"", "    local string=$1\n    local newstring=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n    \
    \    local upper=${letter:0:1}\n        local lower=${letter:1}\n        newstring+=\"\
    ${upper}${lower}\"\n    done\n    echo \"${newstring}\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i=0; i<${#string}; i++ ));\
    \ do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n           \
    \ [:lower:])\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            [:upper:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            *)\n\
    \                output+=\"$c\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "  local string=\"$1\"\n  echo \"${string^}\"", "    local\
    \ string=\"$1\"\n    local output\n    output=$(echo \"$string\" | sed 's/\\(.\\\
    )/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo\
    \ \"$output\"", "    local string=$1\n    local output=\"\"\n    local i\n   \
    \ local j\n    for (( i = 0; i < ${#string}; i++ )); do\n        j=${i}\n    \
    \    while (( j > 0 )) ; do\n            if [[ ${string:$j:1} == [a-z] ]]; then\n\
    \                string=${string:0:$j}${string:$j:1}${string:$j:2}\n         \
    \   else\n                string=${string:0:$j}${string:$j:1}\n            fi\n\
    \            j=$(( j - 1 ))\n        done\n        output+=\"${string:$i:1}\"\n\
    \    done\n    echo \"$output\"", "  local string=\"$1\"\n  local output\n  output=\"\
    $(tr '[:lower:]' '[:upper:]' <<< \"$string\" \\\n    | tr '[:upper:]' '[:lower:]'\
    \ <<< \"$string\" \\\n    | tr '[:upper:]' '[:upper:]' <<< \"$string\")\"\n  echo\
    \ \"$output\"", "  local string=$1\n  local new_string=\"\"\n  local i\n  for\
    \ i in $(seq 0 $((${#string}-1))); do\n    local c=$(expr ${string:$i:1})\n  \
    \  local uc=$(expr ${c^^})\n    local lc=$(expr ${uc^^})\n    local ul=$(expr\
    \ ${lc^^})\n    new_string+=\"${ul}\"\n  done\n  echo \"${new_string}\"", "  \
    \  local string=\"$1\"\n    local output=\"\"\n    for (( i = 0; i < ${#string};\
    \ i++ )); do\n        local char=\"${string:$i:1}\"\n        case \"$char\" in\n\
    \            [:lower:])\n                output+=\"$(echo \"$char\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            [:upper:])\n               \
    \ output+=\"$(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n               \
    \ ;;\n            *)\n                output+=\"$char\"\n                ;;\n\
    \        esac\n    done\n    echo \"$output\"", "    local string=$1\n    local\
    \ newstring=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [a-z]) char=${char^^} ;;\n           \
    \ [A-Z]) char=${char^^} ;;\n        esac\n        newstring+=$char\n    done\n\
    \    echo \"$newstring\"", "    local string=\"$1\"\n    local lower=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local output=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n     \
    \   case \"$c\" in\n            ${lower:0:1})\n                c=$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\n                ;;\n            ${upper:0:1})\n\
    \                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n             \
    \   ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"",
  "    local string=\"$1\"\n    local output=\"\"\n    for (( i = 0; i < ${#string};\
    \ i++ )); do\n        local char=\"${string:$i:1}\"\n        if [[ \"$char\" ==\
    \ [a-z] ]]; then\n            char=\"[A-Z]\"\n        elif [[ \"$char\" == [A-Z]\
    \ ]]; then\n            char=\"[a-z]\"\n        fi\n        output+=\"$char\"\n\
    \    done\n    echo \"$output\"", "  local string=\"$1\"\n  echo \"${string^}\"",
  "    local string=\"$1\"\n    local result=\"\"\n    local i\n    for (( i = 0;\
    \ i < ${#string}; i++ )); do\n        result+=\"${string[i]^^}\"\n    done\n \
    \   echo \"$result\"", "  local string=\"$1\"\n  local output=\"\"\n  local i\n\
    \  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z]) output+=\"[A-Z]\"\
    ;;\n      [A-Z]) output+=\"[a-z]\";;\n      *) output+=\"$i\";;\n    esac\n  done\n\
    \  echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    local\
    \ i\n    for (( i=0; i<${#string}; i++ )); do\n        output+=\"${string[i]^^}\"\
    \n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=\"${c:0:1}${c:1:1}\"\
    \n                ;;\n            [:upper:])\n                c=\"${c:0:1}${c:1:1}\"\
    \n                ;;\n            *)\n                c=\"${c:0:1}${c:1:1}\"\n\
    \                ;;\n        esac\n        output+=\"$c\"\n    done\n    echo\
    \ \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i\
    \ = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n      \
    \  case $c in\n            [:lower:] )\n                output+=\"$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            [:upper:] )\n\
    \                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n   \
    \             ;;\n            * )\n                output+=\"$c\"\n          \
    \      ;;\n        esac\n    done\n    echo \"$output\"", "  local string=\"$1\"\
    \n  echo \"${string^^}\"", "    local string=\"$1\"\n    local output=\"\"\n \
    \   for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [:lower:] )\n                output+=\"\\U${string:$i:1}\"\n    \
    \            ;;\n            [:upper:] )\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            * )\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"", '  echo "${1,,}"',
  "  local string=\"$1\"\n  echo \"${string^^}\"", "    local string=\"$1\"\n    local\
    \ output\n    output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\\
    (.\\)/\\L\\1/')\n    echo \"$output\"", '  echo "${1,,}"', "  local string=\"\
    $1\"\n  echo \"${string^^}\"", "    local string=\"$1\"\n    local new_string=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        if [[ \"$char\" == [a-z] ]]; then\n            new_string+=\"[A-Z]\"\n\
    \        else\n            new_string+=\"$char\"\n        fi\n    done\n    echo\
    \ \"$new_string\"", "  local string=\"$1\"\n  echo \"${string^^}\"", "  local\
    \ string=\"$1\"\n  echo \"${string^}\"", "  local string=$1\n  local new_string=\"\
    \"\n  local i\n  for i in $(seq 0 ${#string}); do\n    local c=$(echo \"${string:$i:1}\"\
    \ | tr '[:lower:]' '[:upper:]')\n    local uc=$(echo \"${string:$i:1}\" | tr '[:upper:]'\
    \ '[:lower:]')\n    new_string+=\"${c}\"\n    new_string+=\"${uc}\"\n  done\n\
    \  echo \"${new_string}\"", "    local string=$1\n    local lower=${string:0:1}\n\
    \    local upper=${string:1:1}\n    local flipped=\"\"\n    local i\n    for ((\
    \ i = 0; i < ${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${lower}\
    \ ]]; then\n            flipped=\"${flipped}${upper}\"\n        else\n       \
    \     flipped=\"${flipped}${lower}\"\n        fi\n    done\n    echo \"${flipped}\"",
  "    local string=$1\n    local result=\"\"\n    local i\n    local j\n    for ((i=0;\
    \ i<${#string}; i++)); do\n        j=${string:i:1}\n        result+=\"${j:0:1}${j:1:1}${j:2:1}\"\
    \n    done\n    echo \"$result\"", "    local string=$1\n    local output\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        output=\"${string:i:1}${string:i+1:1}\"\
    \n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"", "    local\
    \ string=\"$1\"\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string};\
    \ i++ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n   \
    \         [:lower:])\n                output+=\"$(echo \"$c\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            [:upper:])\n               \
    \ output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n\
    \            *)\n                output+=\"$c\"\n                ;;\n        esac\n\
    \    done\n    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"", "   \
    \ local string=\"$1\"\n    local output=\"\"\n    for (( i=0; i<${#string}; i++\
    \ )); do\n        local c=\"${string:$i:1}\"\n        case \"$c\" in\n       \
    \     [a-z]) output+=\"[A-Z]\";;\n            [A-Z]) output+=\"[a-z]\";;\n   \
    \     esac\n    done\n    echo \"$output\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    local i\n    for (( i=1; i<${#string}; i++ )); do\n       \
    \ output=\"${output}${string[i]^^}\"\n    done\n    echo \"$output\"", '  echo
    "${1,,}"', "    local string=$1\n    local new_string=\"\"\n    local i\n    local\
    \ j\n    for (( i = 0; i < ${#string}; i++ )); do\n        j=${string:i:1}\n \
    \       [[ \"$j\" =~ [a-z] ]] && new_string+=\"${j:0:1}${j:1}\" || new_string+=\"\
    ${j}\"\n    done\n    echo \"$new_string\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n            *) output+=\"$letter\" ;;\n\
    \        esac\n    done\n    echo \"$output\"", "    local string=\"$1\"\n   \
    \ local output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        case \"\
    ${string:$i:1}\" in\n            [:lower:]) output+=\"\\U${string:$i:1}\";;\n\
    \            [:upper:]) output+=\"${string:$i:1}\";;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    local\
    \ i\n    for (( i = 0; i <= ${#string}; i++ )); do\n        output=\"${output}${string:i:1}${string:i:1}\"\
    \n    done\n    echo \"$output\"", '  echo "${1,,}"']
stop_tokens:
- "\n}"

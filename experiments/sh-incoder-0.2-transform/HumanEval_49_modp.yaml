name: HumanEval_49_modp
language: sh
prompt: "#!/bin/bash\n# Return 2^n modulo p (be aware of numerics).\n# >>> $(modp\
  \ \"3\" \"5\")\n# \"3\"\n# >>> $(modp \"1101\" \"101\")\n# \"2\"\n# >>> $(modp \"\
  0\" \"101\")\n# \"1\"\n# >>> $(modp \"3\" \"11\")\n# \"8\"\n# >>> $(modp \"100\"\
  \ \"101\")\n# \"1\"\n#\n# $1 is an integer\n# $2 is an integer\nmodp() {\n"
tests: "}\n\ncandidate() {\n    modp \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3\" \"5\") = \"3\" ]]\n    [[ $(candidate \"1101\" \"101\") = \"2\" ]]\n   \
  \ [[ $(candidate \"0\" \"101\") = \"1\" ]]\n    [[ $(candidate \"3\" \"11\") = \"\
  8\" ]]\n    [[ $(candidate \"100\" \"101\") = \"1\" ]]\n    [[ $(candidate \"30\"\
  \ \"5\") = \"4\" ]]\n    [[ $(candidate \"31\" \"5\") = \"3\" ]]\n}\n\nrun_test"
completions: ["  local n=$1\n  local p=$2\n  local r=$(( (n % p) + p ))\n  echo $r",
  "\tlocal i j\n\ti=$1\n\tj=$2\n\twhile (( i < j )); do\n\t\ti=$(( i + 1 ))\n\tdone\n\
    \techo $(( i % $2 ))", "\tlocal n=$1\n\tlocal p=$2\n\tlocal mod=$(( n % p ))\n\
    \techo $mod", "    local i j\n    local p=$1\n    local q=$2\n    local n=$((\
    \ $q % $p ))\n    local r=$(( $n % $p ))\n    local s=$(( $q - $r * $p ))\n  \
    \  local t=$(( $q + $r * $p ))\n    local u=$(( $q + $r * $p ))\n    local v=$((\
    \ $q + $r * $p ))\n    local w=$(( $q + $r * $p ))\n    local x=$(( $q + $r *\
    \ $p ))\n    local y=$(( $q + $r * $p ))\n    local z=$(( $q + $r * $p ))\n  \
    \  local A=$(( $q + $r * $p ))\n    local B=$(( $q + $r * $p ))\n    local C=$((\
    \ $q + $r * $p ))\n    local D=$(( $q + $r * $p ))\n    local E=$(( $q + $r *\
    \ $p ))\n    local F=$(( $q + $r * $p ))\n    local G=$(( $q + $r * $p ))\n  \
    \  local H=$(( $q + $r * $p ))\n    local I=$(( $q + $r * $p ))\n    local J=$((\
    \ $q + $r * $p ))\n    local K=$(( $q + $r * $p ))\n    local L=$(( $q + $r *\
    \ $p ))\n    local M=$(( $q + $r * $p ))\n    local N=$(( $q + $r * $p ))\n  \
    \  local O=$(( $q + $r * $p ))\n    local P=$(( $q + $r * $p ))\n    local Q=$((\
    \ $q + $r * $p ))\n    local R=$(( $q + $r * $p ))\n    local S=$(( $q + $r *\
    \ $p ))\n    local T=$(( $q + $r * $p ))\n    local U=$(( $q + $r * $p ))\n  \
    \  local V=$(( $q + $r * $p ))\n    local W=$(( $q + $r * $p ))\n    local X=$((\
    \ $q", "    local n=$1\n    local p=$2\n    local res\n    local i\n    local\
    \ j\n    local k\n    local m\n    local nmodp\n    local pmodp\n    local pmodp2\n\
    \    local pmodp3\n    local pmodp4\n    local pmodp5\n    local pmodp6\n    local\
    \ pmodp7\n    local pmodp8\n    local pmodp9\n    local pmodp10\n    local pmodp11\n\
    \    local pmodp12\n    local pmodp13\n    local pmodp14\n    local pmodp15\n\
    \    local pmodp16\n    local pmodp17\n    local pmodp18\n    local pmodp19\n\
    \    local pmodp20\n    local pmodp21\n    local pmodp22\n    local pmodp23\n\
    \    local pmodp24\n    local pmodp25\n    local pmodp26\n    local pmodp27\n\
    \    local pmodp28\n    local pmodp29\n    local pmodp30\n    local pmodp31\n\
    \    local pmodp32\n    local pmodp33\n    local pmodp34\n    local pmodp35\n\
    \    local pmodp36\n    local pmodp37\n    local pmodp38\n    local pmodp39\n\
    \    local pmodp40\n    local pmodp41\n    local pmodp42\n    local pmodp43\n\
    \    local pmodp44\n    local pmodp45\n    local pmodp46\n    local pmodp47\n\
    \    local pmodp48\n    local pmodp49\n    local pmodp50\n    local pmodp51\n\
    \    local pmodp52\n    local pmodp53\n    local pmodp54\n    local pmodp55\n\
    \    local pmodp56\n    local pmodp57\n    local pmodp58\n    local pmodp59\n\
    \    local pmodp60\n    local pmodp61\n    local pmodp62\n    local pmodp63\n\
    \    local pmodp64\n    local pmodp65\n    local pmodp66\n    local pmodp67\n\
    \    local pmodp68\n", "\tlocal i j\n\tlocal n=$1\n\tlocal p=$2\n\tlocal mod=$((\
    \ p + 1 ))\n\tlocal modp=$(( mod ))\n\tlocal modp2=$(( mod * 2 ))\n\tlocal modp4=$((\
    \ mod * 4 ))\n\tlocal modp8=$(( mod * 8 ))\n\tlocal modp16=$(( mod * 16 ))\n\t\
    local modp32=$(( mod * 32 ))\n\tlocal modp64=$(( mod * 64 ))\n\tlocal modp128=$((\
    \ mod * 128 ))\n\tlocal modp256=$(( mod * 256 ))\n\tlocal modp512=$(( mod * 512\
    \ ))\n\tlocal modp1024=$(( mod * 1024 ))\n\tlocal modp2048=$(( mod * 2048 ))\n\
    \tlocal modp4096=$(( mod * 4096 ))\n\tlocal modp8192=$(( mod * 8192 ))\n\tlocal\
    \ modp16384=$(( mod * 16384 ))\n\tlocal modp32768=$(( mod * 32768 ))\n\tlocal\
    \ modp65536=$(( mod * 65536 ))\n\tlocal modp131072=$(( mod * 131072 ))\n\tlocal\
    \ modp262144=$(( mod * 262144 ))\n\tlocal modp524288=$(( mod * 524288 ))\n\tlocal\
    \ modp1048576=$(( mod * 1048576 ))\n\tlocal modp2097152=$(( mod * 2097152 ))\n\
    \tlocal modp4194304=$(( mod * 4194304 ))\n\tlocal modp8388608=$(( mod * 8388608\
    \ ))\n\tlocal modp16777216=$(( mod * 16777216 ))\n\tlocal modp33554432=$(( mod\
    \ * 33554432 ))\n\tlocal modp67108864=$(( mod * 67108864 ))\n\tlocal modp134217728=$((\
    \ mod * 134217728 ))\n\tlocal modp268435456=$(( mod * 268435456 ))\n\tlocal modp536870912=$((\
    \ mod * 536870912 ))\n\tlocal modp1073741824=$(( mod * 10737418", "    local n=$1\n\
    \    local p=$2\n    local res\n    local i\n    local j\n    local k\n    local\
    \ m\n    local nmodp\n    local nmodpmodp\n    local nmodpmodpmodp\n    local\
    \ nmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n    local\
    \ nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local nmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \    local ", "\tlocal n=$1\n\tlocal p=$2\n\tlocal m=$(( p - n ))\n\tlocal r=$((\
    \ n % p ))\n\t[ \"$r\" -eq 0 ] && return $m\n\t[ \"$r\" -eq 1 ] && return $((\
    \ m + p ))\n\t[ \"$r\" -eq 2 ] && return $(( m + 2 * p ))\n\t[ \"$r\" -eq 3 ]\
    \ && return $(( m + 3 * p ))\n\t[ \"$r\" -eq 4 ] && return $(( m + 4 * p ))\n\t\
    [ \"$r\" -eq 5 ] && return $(( m + 5 * p ))\n\t[ \"$r\" -eq 6 ] && return $((\
    \ m + 6 * p ))\n\t[ \"$r\" -eq 7 ] && return $(( m + 7 * p ))\n\t[ \"$r\" -eq\
    \ 8 ] && return $(( m + 8 * p ))\n\t[ \"$r\" -eq 9 ] && return $(( m + 9 * p ))\n\
    \t[ \"$r\" -eq 10 ] && return $(( m + 10 * p ))\n\t[ \"$r\" -eq 11 ] && return\
    \ $(( m + 11 * p ))\n\t[ \"$r\" -eq 12 ] && return $(( m + 12 * p ))\n\t[ \"$r\"\
    \ -eq 13 ] && return $(( m + 13 * p ))\n\t[ \"$r\" -eq 14 ] && return $(( m +\
    \ 14 * p ))\n\t[ \"$r\" -eq 15 ] && return $(( m + 15 * p ))\n\t[ \"$r\" -eq 16\
    \ ] && return $(( m + 16 * p ))\n\t[ \"$r\" -eq 17 ] && return $(( m + 17 * p\
    \ ))\n\t[ \"$r\" -eq 18 ] && return $(( m + 18 * p ))\n\t[ \"$r\" -eq 19 ] &&\
    \ return $(( m + 19 * p ))\n\t[ \"$r\" -eq 20 ] && return $(( m + 20 * p ))\n\t\
    [ \"$r\" -eq 21 ] && return $(( m + 21 * p ))\n\t[ \"$r\" -eq 22 ] && return $((\
    \ m + 22 * p ))\n\t[ \"$r\" -eq 23 ] && return $(( m + 23 * p ))\n\t[ \"$r\" -eq\
    \ 24 ] && return $(( m + 24 * p ))\n\t[ \"$r\" -eq 25 ] && return $(( m + 25 *\
    \ p ))\n", "\tlocal n=$1\n\tlocal p=$2\n\tlocal mod=$((p-1))\n\tlocal res=$(echo\
    \ \"$n / $p\" | bc)\n\tlocal modres=$(echo \"$mod * $p\" | bc)\n\techo \"$(( $res\
    \ + $modres ))\"", "  local n=$1\n  local p=$2\n  local mod=$(( n % p ))\n  echo\
    \ $mod", "    local i j\n    local p=$1\n    local q=$2\n    local n=$(( ($p +\
    \ $q - 1) % $q ))\n    i=$(( $p - $n % $p ))\n    j=$(( $q - $n % $q ))\n    echo\
    \ $(( $i * $j / $p ))", "\tlocal i j\n\tlocal p=$1\n\tlocal q=$2\n\tlocal n=$((\
    \ $1 % $2 ))\n\tlocal r=$(( $1 % $p ))\n\tlocal s=$(( $1 % $q ))\n\tlocal u=$((\
    \ $1 ))\n\tlocal v=$(( $2 ))\n\tlocal w=$(( $p ))\n\tlocal x=$(( $q ))\n\tlocal\
    \ y=$(( $n ))\n\tlocal z=$(( $r ))\n\tlocal A=$(( $s ))\n\tlocal B=$(( $u ))\n\
    \tlocal C=$(( $v ))\n\tlocal D=$(( $w ))\n\tlocal E=$(( $x ))\n\tlocal F=$(( $y\
    \ ))\n\tlocal G=$(( $z ))\n\tlocal H=$(( $A ))\n\tlocal I=$(( $B ))\n\tlocal J=$((\
    \ $C ))\n\tlocal K=$(( $D ))\n\tlocal L=$(( $E ))\n\tlocal M=$(( $F ))\n\tlocal\
    \ N=$(( $G ))\n\tlocal O=$(( $H ))\n\tlocal P=$(( $I ))\n\tlocal Q=$(( $J ))\n\
    \tlocal R=$(( $K ))\n\tlocal S=$(( $L ))\n\tlocal T=$(( $M ))\n\tlocal U=$(( $N\
    \ ))\n\tlocal V=$(( $O ))\n\tlocal W=$(( $P ))\n\tlocal X=$(( $Q ))\n\tlocal Y=$((\
    \ $R ))\n\tlocal Z=$(( $S ))\n\tlocal AA=$(( $T ))\n\tlocal AB=$(( $U ))\n\tlocal\
    \ AC=$(( $V ))\n\tlocal AD=$(( $W ))\n\tlocal AE=$(( $X ))\n\tlocal AF=$(( $Y\
    \ ))\n\tlocal AG=$(( $Z ))\n\tlocal AH=$(( $AA ))\n\tlocal AI=$(( $AB ))\n\tlocal\
    \ AJ=$(( $AC ))\n\tlocal AK=$(( $AD ))\n\tlocal AL=$(( $AE ))\n\tlocal AM=$((\
    \ $AF ))\n\tlocal AN=$(( $AG ))\n\tlocal AO=$(( $AH ))\n\tlocal AP=$(( $AI ))\n\
    \tlocal AQ=$(( $AJ ))\n\tlocal AR=$(( $AK ))\n\t", "  local n=$1\n  local p=$2\n\
    \  local s=$(( n % p ))\n  (( n % p )) && s++ || s\n  echo $s", "    local i j\n\
    \    local p=$1\n    local q=$2\n    local n=$(( $q % $p ))\n    local r=$(( $q\
    \ / $p ))\n    local m=$(( $q - $n * $p ))\n    local s=$(( $q - $n * $p - $m\
    \ * $r ))\n    local u=$(( $q - $n * $p - $m * $r - $s * $p ))\n    local v=$((\
    \ $q - $n * $p - $m * $r - $s * $p - $u * $r ))\n    echo $(( $n * $p ))\n   \
    \ echo $(( $m * $r ))\n    echo $(( $s * $p ))\n    echo $(( $u * $r ))\n    echo\
    \ $(( $v * $p ))", "\tlocal n=$1\n\tlocal p=$2\n\tlocal res\n\tlocal i\n\tlocal\
    \ j\n\tlocal k\n\tlocal m\n\tlocal nmodp\n\tlocal pmodp\n\tlocal pmodpmod\n\t\
    local pmodpmodp\n\tlocal pmodpmodpmod\n\tlocal pmodpmodpmodp\n\tlocal pmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmod\n\tlocal pmodpmodpmodpmodpmodp\n\
    \tlocal pmodpmodpmodpmodpmodpmod\n\tlocal pmodpmodpmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmod\n\tlocal pmodpmodpmodpmodpmodpmodpmodp\n\t\
    local pmodpmodpmodpmodpmodpmodpmodpmod\n\tlocal pmodpmodpmodpmodpmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmod\n\tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmod\n\
    \tlocal pmodpmodpmodpmodpmodpmodpmodpmodpmodpmodpmodp\n\tlocal pmodpmodpmodpmodpmod",
  "    local i j\n    local p=$1\n    local q=$2\n    local mod=$(( p * q % p ))\n\
    \    i=$(( p + 1 ))\n    j=$(( q + 1 ))\n    while [ $i -le $j ]; do\n       \
    \ [ $(( i * q % p )) -eq $mod ] && return $i\n        i=$(( i + 1 ))\n    done\n\
    \    return $j", "\tlocal n=$1\n\tlocal p=$2\n\tlocal mod=$(( n % p ))\n\techo\
    \ $mod", "    local i j\n    i=$1\n    j=$2\n    local mod\n    mod=$(( (j % i)\
    \ + i ))\n    echo $mod", "    local i j\n    local p=$1\n    local q=$2\n   \
    \ local n=$(( $q % $p ))\n    local r=$(( $n % $p ))\n    i=$(( $q / $p ))\n \
    \   j=$(( $i % $p ))\n    echo $(( $r + $j * $p ))", "\tlocal i j\n\ti=\"$1\"\n\
    \tj=\"$2\"\n\tlocal p=\"$3\"\n\tlocal q\n\tq=\"$(( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ("]
stop_tokens:
- "\n}"

name: HumanEval_151_double_the_difference
language: sh
prompt: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
  \ numbers\n# in the list that are odd. Ignore numbers that are negative or not integers.\n\
  # >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
  \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n# >>>\
  \ $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
  \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n"
tests: "}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
  \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
  \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
  \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
  \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
completions: ["  local numbers=$1\n  local sum=0\n  local count=0\n  local number\n\
    \  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n   \
    \   ((count++))\n      if (( count > 1 )); then\n        ((sum+=i))\n      fi\n\
    \    else\n      ((sum+=i))\n    fi\n  done\n  echo $((sum))", "  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  while read number;\
    \ do\n    (( count++ ))\n    (( sum += number * number ))\n    (( odd += ( number\
    \ % 2 ) ))\n  done <<< \"$numbers\"\n  echo \"$sum\"", "  local numbers=$1\n \
    \ local sum=0\n  local count=0\n  local odd=0\n  local num\n  for num in $numbers;\
    \ do\n    (( count++ ))\n    if [[ $num -gt 0 ]]; then\n      (( sum += num *\
    \ num ))\n    elif [[ $num -eq 0 ]]; then\n      (( sum += num ))\n    else\n\
    \      (( odd++ ))\n    fi\n  done\n  if [[ $odd -eq 0 ]]; then\n    (( sum +=\
    \ $sum ))\n  fi\n  echo $sum", "  local numbers=$1\n  local sum=0\n  local count=0\n\
    \  local odd=0\n  local negative=0\n  local integer=0\n  local non_zero=0\n  local\
    \ non_negative=0\n  local non_integer=0\n  local non_non_zero=0\n  local non_non_negative=0\n\
    \  local non_non_integer=0\n  local non_non_non_zero=0\n  local non_non_non_negative=0\n\
    \  local non_non_non_integer=0\n  local non_non_non_non_zero=0\n  local non_non_non_non_negative=0\n\
    \  local non_non_non_non_integer=0\n  local non_non_non_non_non_zero=0\n  local\
    \ non_non_non_non_non_negative=0\n  local non_non_non_non_non_integer=0\n  local\
    \ non_non_non_non_non_zero=0\n  local non_non_non_non_non_negative=0\n  local\
    \ non_non_non_non_non_integer=0\n  local non_non_non_non_non_zero=0\n  local non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_", "    local numbers=$1\n    local sum=0\n    local\
    \ count=0\n    local odd=0\n    local num\n    for num in $numbers; do\n     \
    \   if [[ $num -gt 0 ]]; then\n            ((count++))\n            if [[ $num\
    \ -gt 1 ]]; then\n                ((odd++))\n            fi\n        fi\n    \
    \    ((sum+=num))\n    done\n    if [[ $odd -eq 0 ]]; then\n        echo \"0\"\
    \n    else\n        echo \"$((sum*sum))\"\n    fi", "  local numbers=$1\n  local\
    \ sum=0\n  local count=0\n  local number\n  local i\n  local j\n\n  for ((i=0;\
    \ i<${#numbers}; i++)); do\n    number=${numbers:$i:1}\n    if [[ ${number} -lt\
    \ 0 ]]; then\n      continue\n    elif [[ ${number} -eq 0 ]]; then\n      continue\n\
    \    elif [[ ${number} -eq 1 ]]; then\n      sum=$((sum+number))\n      count=$((count+1))\n\
    \      continue\n    fi\n    for ((j=0; j<${#number}; j++)); do\n      if [[ ${number:$j:1}\
    \ -eq 0 ]]; then\n        continue\n      fi\n      if (( ${number:$j:1} % 2 ));\
    \ then\n        sum=$((sum+${number:$j:1}))\n        count=$((count+1))\n    \
    \  fi\n    done\n  done\n  if [[ ${count} -gt 0 ]]; then\n    sum=$((sum*2))\n\
    \  fi\n  echo \"${sum}\"", "  local list=\"$1\"\n  local sum=0\n  local i\n  for\
    \ i in $list; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum+i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n \
    \     sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif\
    \ [[ $i =~ ^", "  local numbers=$1\n  local sum=0\n  local count=0\n  local number\n\
    \  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n   \
    \   (( sum += i ))\n      (( count++ ))\n    fi\n  done\n  if [[ $count -eq 0\
    \ ]]; then\n    return 0\n  fi\n  echo \"$sum\"", "  local numbers=$1\n  local\
    \ sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n   \
    \   sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum", "  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+", "  local numbers=$1\n  local sum=0\n  local count=0\n\
    \  local odd=0\n  local i\n\n  for i in $numbers; do\n    (( count++ ))\n    ((\
    \ sum += i * i ))\n  done\n\n  if (( count > 0 )); then\n    for i in $numbers;\
    \ do\n      if (( i % 2 )); then\n        odd=$(( odd + i ))\n      fi\n    done\n\
    \  fi\n\n  echo $(( sum - odd ))", "  local numbers=$1\n  local sum=0\n  local\
    \ i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i\
    \ * $i))\n    fi\n  done\n  echo $sum", "  local numbers=$1\n  local sum=0\n \
    \ local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n    \
    \  sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i))\n    fi\n  done\n  echo $sum", "  local numbers=$1\n  local sum=0\n\
    \  local count=0\n  local number\n  local odd\n  local i\n  for i in $numbers;\
    \ do\n    number=`echo $i | sed 's/^ *//g'`\n    if [[ $number =~ ^-?[0-9]+$ ]];\
    \ then\n      odd=`echo $number | sed 's/^-?//g'`\n      if [[ $odd -eq 0 ]];\
    \ then\n        sum=$((sum+number))\n        count=$((count+1))\n      fi\n  \
    \  fi\n  done\n  if [[ $count -eq 0 ]]; then\n    echo $sum\n  else\n    echo\
    \ $sum\n  fi", "  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    fi\n \
    \ done\n  echo $((sum * sum))", "  local numbers=$1\n  local sum=0\n  local number\n\
    \  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n   \
    \   number=$i\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      number=$((\
    \ ${i%%.*} + ${i#*.} ))\n    else\n      number=0\n    fi\n    if [[ $number -eq\
    \ 0 ]]; then\n      continue\n    fi\n    sum=$(( sum + $number * $number ))\n\
    \  done\n  echo $sum", "  local numbers=$1\n  local sum=0\n  local count=0\n \
    \ local number\n  local odd\n  while read -r number; do\n    ((count++))\n   \
    \ if [[ $number =~ ^-?[0-9]+$ ]]; then\n      ((sum += number))\n    elif ((count\
    \ > 0)); then\n      ((odd=1))\n    fi\n  done <<< \"$numbers\"\n  if ((count\
    \ > 0)); then\n    ((sum *= 2))\n  fi\n  if ((odd)); then\n    ((sum -= 1))\n\
    \  fi\n  echo \"$sum\"", "  local numbers=$1\n  local sum=0\n  local i\n  for\
    \ i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i))\n\
    \    fi\n  done\n  echo $sum", "  local numbers=$1\n  local sum=0\n  local i\n\
    \  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i\
    \ * $i))\n    fi\n  done\n  echo $sum", "  local numbers=$1\n  local sum=0\n \
    \ local i=0\n  while [ $i -lt ${#numbers} ]; do\n    if [[ ${numbers[$i]} -gt\
    \ 0 ]]; then\n      sum=$(( ${sum} + ${numbers[$i]} ))\n    fi\n    (( i++ ))\n\
    \  done\n  echo $(( ${sum} ))"]
stop_tokens:
- "\n}"
